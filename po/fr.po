msgid ""
msgstr ""
"Project-Id-Version: Comprehensive Rust ü¶Ä\n"
"POT-Creation-Date: 2024-01-24T13:24:49+01:00\n"
"PO-Revision-Date: 2023-10-20 18:46-0400\n"
"Last-Translator: Olivier Charrez <olivier.charrez@hotmail.com>\n"
"Language-Team: French <traduc@traduc.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Poedit 3.3.2\n"

#: src/SUMMARY.md src/index.md
msgid "Welcome to Comprehensive Rust ü¶Ä"
msgstr "Bienvenue √† Comprehensive Rust (le guide complet de Rust) ü¶Ä"

#: src/SUMMARY.md src/running-the-course.md
msgid "Running the Course"
msgstr "Comment pr√©senter le cours"

#: src/SUMMARY.md src/running-the-course/course-structure.md
msgid "Course Structure"
msgstr "Structure du cours"

#: src/SUMMARY.md src/running-the-course/keyboard-shortcuts.md
msgid "Keyboard Shortcuts"
msgstr "Raccourcis clavier"

#: src/SUMMARY.md src/running-the-course/translations.md
msgid "Translations"
msgstr "Traductions"

#: src/SUMMARY.md src/cargo.md
msgid "Using Cargo"
msgstr "Utiliser Cargo"

#: src/SUMMARY.md
msgid "Rust Ecosystem"
msgstr "√âcosyst√®me de Rust"

#: src/SUMMARY.md
msgid "Code Samples"
msgstr "Exemples de code"

#: src/SUMMARY.md
msgid "Running Cargo Locally"
msgstr "Ex√©cuter Cargo localement"

#: src/SUMMARY.md
msgid "Day 1: Morning"
msgstr "Jour 1 : Matin"

#: src/SUMMARY.md
msgid "Welcome"
msgstr "Bienvenue"

#: src/SUMMARY.md src/hello-world.md src/hello-world/hello-world.md
#, fuzzy
msgid "Hello, World"
msgstr "Bonjour le monde!"

#: src/SUMMARY.md src/hello-world/what-is-rust.md
msgid "What is Rust?"
msgstr "Qu'est-ce que Rust ?"

#: src/SUMMARY.md src/hello-world/benefits.md
msgid "Benefits of Rust"
msgstr ""

#: src/SUMMARY.md src/hello-world/playground.md
msgid "Playground"
msgstr ""

#: src/SUMMARY.md src/types-and-values.md
msgid "Types and Values"
msgstr ""

#: src/SUMMARY.md src/types-and-values/variables.md
msgid "Variables"
msgstr "Variables"

#: src/SUMMARY.md src/types-and-values/values.md
msgid "Values"
msgstr ""

#: src/SUMMARY.md src/types-and-values/arithmetic.md
msgid "Arithmetic"
msgstr ""

#: src/SUMMARY.md src/types-and-values/strings.md
#, fuzzy
msgid "Strings"
msgstr "Cordes"

#: src/SUMMARY.md src/types-and-values/inference.md
msgid "Type Inference"
msgstr "Inf√©rence de type"

#: src/SUMMARY.md src/types-and-values/exercise.md
msgid "Exercise: Fibonacci"
msgstr ""

#: src/SUMMARY.md src/types-and-values/solution.md
#: src/control-flow-basics/solution.md src/tuples-and-arrays/solution.md
#: src/references/solution.md src/user-defined-types/solution.md
#: src/pattern-matching/solution.md src/methods-and-traits/solution.md
#: src/generics/solution.md src/std-types/solution.md
#: src/std-traits/solution.md src/memory-management/solution.md
#: src/smart-pointers/solution.md src/borrowing/solution.md
#: src/slices-and-lifetimes/solution.md src/iterators/solution.md
#: src/modules/solution.md src/testing/solution.md
#: src/error-handling/solution.md src/unsafe-rust/solution.md
#, fuzzy
msgid "Solution"
msgstr "Solutions"

#: src/SUMMARY.md src/control-flow-basics.md
#, fuzzy
msgid "Control Flow Basics"
msgstr "Flux de contr√¥le"

#: src/SUMMARY.md src/control-flow-basics/conditionals.md
msgid "Conditionals"
msgstr ""

#: src/SUMMARY.md src/control-flow-basics/loops.md
#, fuzzy
msgid "Loops"
msgstr "Boucles `for`"

#: src/SUMMARY.md src/control-flow-basics/break-continue.md
#, fuzzy
msgid "`break` and `continue`"
msgstr "`pause` et `continue`"

#: src/SUMMARY.md src/control-flow-basics/blocks-and-scopes.md
msgid "Blocks and Scopes"
msgstr ""

#: src/SUMMARY.md src/control-flow-basics/functions.md
msgid "Functions"
msgstr "Fonctions"

#: src/SUMMARY.md src/control-flow-basics/macros.md
msgid "Macros"
msgstr ""

#: src/SUMMARY.md src/control-flow-basics/exercise.md
msgid "Exercise: Collatz Sequence"
msgstr ""

#: src/SUMMARY.md
msgid "Day 1: Afternoon"
msgstr "Jour 1 : Apr√®s-midi"

#: src/SUMMARY.md src/tuples-and-arrays.md
#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Tuples and Arrays"
msgstr ""

#: src/SUMMARY.md src/tuples-and-arrays/iteration.md
#, fuzzy
msgid "Array Iteration"
msgstr "Iterator"

#: src/SUMMARY.md src/tuples-and-arrays/match.md src/pattern-matching.md
msgid "Pattern Matching"
msgstr "Filtrage par motif"

#: src/SUMMARY.md src/tuples-and-arrays/destructuring.md
#: src/pattern-matching/destructuring.md
#, fuzzy
msgid "Destructuring"
msgstr "D√©structuration des √©num√©rations"

#: src/SUMMARY.md src/tuples-and-arrays/exercise.md
msgid "Exercise: Nested Arrays"
msgstr ""

#: src/SUMMARY.md src/references.md
msgid "References"
msgstr "R√©f√©rences"

#: src/SUMMARY.md src/references/shared.md
#, fuzzy
msgid "Shared References"
msgstr "R√©f√©rences"

#: src/SUMMARY.md src/references/exclusive.md
#, fuzzy
msgid "Exclusive References"
msgstr "R√©f√©rences invalides"

#: src/SUMMARY.md src/references/exercise.md
msgid "Exercise: Geometry"
msgstr ""

#: src/SUMMARY.md src/user-defined-types.md
msgid "User-Defined Types"
msgstr ""

#: src/SUMMARY.md src/user-defined-types/named-structs.md
#, fuzzy
msgid "Named Structs"
msgstr "Structures"

#: src/SUMMARY.md src/user-defined-types/tuple-structs.md
msgid "Tuple Structs"
msgstr "Structures tuple"

#: src/SUMMARY.md src/user-defined-types/enums.md
#: src/pattern-matching/destructuring.md
msgid "Enums"
msgstr "√ânum√©rations"

#: src/SUMMARY.md src/user-defined-types/static-and-const.md
#, fuzzy
msgid "Static and Const"
msgstr "static & const"

#: src/SUMMARY.md src/user-defined-types/aliases.md
msgid "Type Aliases"
msgstr ""

#: src/SUMMARY.md src/user-defined-types/exercise.md
msgid "Exercise: Elevator Events"
msgstr ""

#: src/SUMMARY.md
msgid "Day 2: Morning"
msgstr "Jour 2 : Matin"

#: src/SUMMARY.md src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "Let Control Flow"
msgstr "Flux de contr√¥le"

#: src/SUMMARY.md src/pattern-matching/exercise.md
msgid "Exercise: Expression Evaluation"
msgstr ""

#: src/SUMMARY.md src/methods-and-traits.md
#, fuzzy
msgid "Methods and Traits"
msgstr "Read et Write"

#: src/SUMMARY.md src/methods-and-traits/methods.md
msgid "Methods"
msgstr "M√©thodes"

#: src/SUMMARY.md src/methods-and-traits/traits.md
msgid "Traits"
msgstr "Traits"

#: src/SUMMARY.md src/methods-and-traits/deriving.md
#, fuzzy
msgid "Deriving"
msgstr "Traits d√©riv√©s"

#: src/SUMMARY.md src/methods-and-traits/trait-objects.md
msgid "Trait Objects"
msgstr "Objets traits"

#: src/SUMMARY.md src/methods-and-traits/exercise.md
#, fuzzy
msgid "Exercise: Generic Logger"
msgstr "Exercices"

#: src/SUMMARY.md src/generics.md
msgid "Generics"
msgstr "G√©n√©riques"

#: src/SUMMARY.md src/generics/generic-functions.md
#, fuzzy
msgid "Generic Functions"
msgstr "Fonctions externes"

#: src/SUMMARY.md src/generics/generic-data.md
msgid "Generic Data Types"
msgstr "Types de donn√©es g√©n√©riques"

#: src/SUMMARY.md src/generics/trait-bounds.md
msgid "Trait Bounds"
msgstr "Traits li√©"

#: src/SUMMARY.md src/generics/impl-trait.md
#, fuzzy
msgid "`impl Trait`"
msgstr "`Trait d'impl√©mentation`"

#: src/SUMMARY.md src/generics/exercise.md
msgid "Exercise: Generic `min`"
msgstr ""

#: src/SUMMARY.md
msgid "Day 2: Afternoon"
msgstr "Jour 2 : Apr√®s-midi"

#: src/SUMMARY.md src/std-types.md
#, fuzzy
msgid "Standard Library Types"
msgstr "Biblioth√®que standard"

#: src/SUMMARY.md src/std-types/std.md
msgid "Standard Library"
msgstr "Biblioth√®que standard"

#: src/SUMMARY.md src/std-types/docs.md
#, fuzzy
msgid "Documentation"
msgstr "Tests de documentation"

#: src/SUMMARY.md
#, fuzzy
msgid "`Option`"
msgstr "`Dur√©e`"

#: src/SUMMARY.md
#, fuzzy
msgid "`Result`"
msgstr "`Option`, `R√©sultat`"

#: src/SUMMARY.md src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`String`"
msgstr "String"

#: src/SUMMARY.md src/std-types/vec.md
#, fuzzy
msgid "`Vec`"
msgstr "`Vec`"

#: src/SUMMARY.md src/std-types/hashmap.md src/bare-metal/no_std.md
#, fuzzy
msgid "`HashMap`"
msgstr "`HashMap`"

#: src/SUMMARY.md src/std-types/exercise.md
#, fuzzy
msgid "Exercise: Counter"
msgstr "Exercices"

#: src/SUMMARY.md src/std-traits.md
#, fuzzy
msgid "Standard Library Traits"
msgstr "Biblioth√®que standard"

#: src/SUMMARY.md src/std-traits/comparisons.md src/async.md
#, fuzzy
msgid "Comparisons"
msgstr "Comparaison"

#: src/SUMMARY.md src/std-traits/operators.md
#, fuzzy
msgid "Operators"
msgstr "It√©rateurs"

#: src/SUMMARY.md src/std-traits/from-and-into.md
#, fuzzy
msgid "`From` and `Into`"
msgstr "`De` et `Dans`"

#: src/SUMMARY.md src/std-traits/casting.md
#, fuzzy
msgid "Casting"
msgstr "Tester"

#: src/SUMMARY.md src/std-traits/read-and-write.md
#, fuzzy
msgid "`Read` and `Write`"
msgstr "`Lire` et `Ecrire`"

#: src/SUMMARY.md
msgid "`Default`, struct update syntax"
msgstr ""

#: src/SUMMARY.md src/std-traits/closures.md
#, fuzzy
msgid "Closures"
msgstr "Fermetures"

#: src/SUMMARY.md src/std-traits/exercise.md
#, fuzzy
msgid "Exercise: ROT13"
msgstr "Exercices"

#: src/SUMMARY.md
msgid "Day 3: Morning"
msgstr "Jour 3 : Matin"

#: src/SUMMARY.md src/memory-management.md
msgid "Memory Management"
msgstr "Gestion de la m√©moire"

#: src/SUMMARY.md src/memory-management/review.md
msgid "Review of Program Memory"
msgstr ""

#: src/SUMMARY.md src/memory-management/approaches.md
#, fuzzy
msgid "Approaches to Memory Management"
msgstr "Gestion automatique de la m√©moire"

#: src/SUMMARY.md src/memory-management/ownership.md
msgid "Ownership"
msgstr "Possession"

#: src/SUMMARY.md src/memory-management/move.md
msgid "Move Semantics"
msgstr "S√©mantique de d√©placement"

#: src/SUMMARY.md
msgid "`Clone`"
msgstr ""

#: src/SUMMARY.md src/memory-management/copy-types.md
#, fuzzy
msgid "Copy Types"
msgstr "Types compos√©s"

#: src/SUMMARY.md
#, fuzzy
msgid "`Drop`"
msgstr "Drop"

#: src/SUMMARY.md src/memory-management/exercise.md
msgid "Exercise: Builder Type"
msgstr ""

#: src/SUMMARY.md src/smart-pointers.md
msgid "Smart Pointers"
msgstr ""

#: src/SUMMARY.md src/smart-pointers/box.md
#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`Box<T>`"
msgstr "`Bo√Æte`"

#: src/SUMMARY.md src/smart-pointers/rc.md
#, fuzzy
msgid "`Rc`"
msgstr "`Rc`"

#: src/SUMMARY.md src/smart-pointers/exercise.md
msgid "Exercise: Binary Tree"
msgstr ""

#: src/SUMMARY.md
msgid "Day 3: Afternoon"
msgstr "Jour 3 : Apr√®s-midi"

#: src/SUMMARY.md src/borrowing.md
msgid "Borrowing"
msgstr "Emprunts"

#: src/SUMMARY.md src/borrowing/shared.md
#, fuzzy
msgid "Borrowing a Value"
msgstr "Emprunts"

#: src/SUMMARY.md src/borrowing/borrowck.md
#, fuzzy
msgid "Borrow Checking"
msgstr "Emprunts"

#: src/SUMMARY.md src/borrowing/interior-mutability.md
#, fuzzy
msgid "Interior Mutability"
msgstr "Interop√©rabilit√©"

#: src/SUMMARY.md src/borrowing/exercise.md
#, fuzzy
msgid "Exercise: Health Statistics"
msgstr "Statistiques de sant√©"

#: src/SUMMARY.md src/slices-and-lifetimes.md
#, fuzzy
msgid "Slices and Lifetimes"
msgstr "Dur√©es de vie"

#: src/SUMMARY.md
#, fuzzy
msgid "Slices: `&[T]`"
msgstr "Tranches"

#: src/SUMMARY.md src/slices-and-lifetimes/str.md
#, fuzzy
msgid "String References"
msgstr "R√©f√©rences invalides"

#: src/SUMMARY.md src/slices-and-lifetimes/lifetime-annotations.md
#, fuzzy
msgid "Lifetime Annotations"
msgstr "Dur√©es de vie dans les appels de fonction"

#: src/SUMMARY.md
#, fuzzy
msgid "Lifetime Elision"
msgstr "Dur√©es de vie"

#: src/SUMMARY.md
#, fuzzy
msgid "Struct Lifetimes"
msgstr "Dur√©es de vie"

#: src/SUMMARY.md src/slices-and-lifetimes/exercise.md
msgid "Exercise: Protobuf Parsing"
msgstr ""

#: src/SUMMARY.md
#, fuzzy
msgid "Day 4: Morning"
msgstr "Jour 1 : Matin"

#: src/SUMMARY.md src/iterators.md
#, fuzzy
msgid "Iterators"
msgstr "It√©rateurs"

#: src/SUMMARY.md src/iterators/iterator.md src/bare-metal/no_std.md
#, fuzzy
msgid "`Iterator`"
msgstr "`It√©rateur`"

#: src/SUMMARY.md src/iterators/intoiterator.md
#, fuzzy
msgid "`IntoIterator`"
msgstr "`IntoIterator`"

#: src/SUMMARY.md
#, fuzzy
msgid "`FromIterator`"
msgstr "FromIterator"

#: src/SUMMARY.md src/iterators/exercise.md
msgid "Exercise: Iterator Method Chaining"
msgstr ""

#: src/SUMMARY.md src/modules.md src/modules/modules.md
msgid "Modules"
msgstr "Modules"

#: src/SUMMARY.md src/modules/filesystem.md
msgid "Filesystem Hierarchy"
msgstr "Hi√©rarchie du syst√®me de fichiers"

#: src/SUMMARY.md src/modules/visibility.md
msgid "Visibility"
msgstr "Visibilit√©"

#: src/SUMMARY.md
msgid "`use`, `super`, `self`"
msgstr ""

#: src/SUMMARY.md src/modules/exercise.md
#, fuzzy
msgid "Exercise: Modules for a GUI Library"
msgstr "Une biblioth√®que d'interface graphique"

#: src/SUMMARY.md src/testing.md src/chromium/testing.md
msgid "Testing"
msgstr "Tester"

#: src/SUMMARY.md
msgid "Test Modules"
msgstr "Modules de test"

#: src/SUMMARY.md src/testing/other.md
#, fuzzy
msgid "Other Types of Tests"
msgstr "Autres projets"

#: src/SUMMARY.md src/testing/useful-crates.md
msgid "Useful Crates"
msgstr "Crates utiles"

#: src/SUMMARY.md src/testing/googletest.md
msgid "GoogleTest"
msgstr ""

#: src/SUMMARY.md src/testing/mocking.md
msgid "Mocking"
msgstr ""

#: src/SUMMARY.md src/testing/lints.md
msgid "Compiler Lints and Clippy"
msgstr ""

#: src/SUMMARY.md src/testing/exercise.md
#, fuzzy
msgid "Exercise: Luhn Algorithm"
msgstr "Algorithme de Luhn"

#: src/SUMMARY.md
#, fuzzy
msgid "Day 4: Afternoon"
msgstr "Jour 1 : Apr√®s-midi"

#: src/SUMMARY.md src/error-handling.md
msgid "Error Handling"
msgstr "Gestion des erreurs"

#: src/SUMMARY.md src/error-handling/panics.md
msgid "Panics"
msgstr "Paniques"

#: src/SUMMARY.md src/error-handling/try.md
#, fuzzy
msgid "Try Operator"
msgstr "Iterator"

#: src/SUMMARY.md src/error-handling/try-conversions.md
#, fuzzy
msgid "Try Conversions"
msgstr "Conversions implicites"

#: src/SUMMARY.md
#, fuzzy
msgid "`Error` Trait"
msgstr "\"Erreur\""

#: src/SUMMARY.md src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid "`thiserror` and `anyhow`"
msgstr "`De` et `Dans`"

#: src/SUMMARY.md
#, fuzzy
msgid "Exercise: Rewriting with `Result`"
msgstr "Gestion structur√©e des erreurs avec `Result`"

#: src/SUMMARY.md src/unsafe-rust.md src/unsafe-rust/unsafe.md
msgid "Unsafe Rust"
msgstr "Rust non s√©curis√© (_unsafe_)"

#: src/SUMMARY.md
#, fuzzy
msgid "Unsafe"
msgstr "Rust non s√©curis√© (_unsafe_)"

#: src/SUMMARY.md src/unsafe-rust/dereferencing.md
msgid "Dereferencing Raw Pointers"
msgstr "D√©r√©f√©rencement des pointeurs nus"

#: src/SUMMARY.md src/unsafe-rust/mutable-static.md
msgid "Mutable Static Variables"
msgstr "Variables statiques mutables"

#: src/SUMMARY.md src/unsafe-rust/unions.md
msgid "Unions"
msgstr "Unions"

#: src/SUMMARY.md src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid "Unsafe Functions"
msgstr "Appel de fonctions non s√©curis√©es"

#: src/SUMMARY.md
#, fuzzy
msgid "Unsafe Traits"
msgstr "Impl√©mentation de traits non s√©curis√©s"

#: src/SUMMARY.md
#, fuzzy
msgid "Exercise: FFI Wrapper"
msgstr "Enveloppe FFI s√©curis√©e"

#: src/SUMMARY.md src/bare-metal/android.md
msgid "Android"
msgstr "Android"

#: src/SUMMARY.md src/android/setup.md src/chromium/setup.md
msgid "Setup"
msgstr "Installation"

#: src/SUMMARY.md src/android/build-rules.md
msgid "Build Rules"
msgstr "R√®gles de compilation"

#: src/SUMMARY.md
msgid "Binary"
msgstr "Binaire"

#: src/SUMMARY.md
msgid "Library"
msgstr "Biblioth√®que"

#: src/SUMMARY.md src/android/aidl.md
msgid "AIDL"
msgstr "AIDL"

#: src/SUMMARY.md
msgid "Interface"
msgstr "Interface"

#: src/SUMMARY.md
msgid "Implementation"
msgstr "Mise en ≈ìuvre"

#: src/SUMMARY.md
msgid "Server"
msgstr "Serveur"

#: src/SUMMARY.md src/android/aidl/deploy.md
msgid "Deploy"
msgstr "D√©ployer"

#: src/SUMMARY.md
msgid "Client"
msgstr "Client"

#: src/SUMMARY.md src/android/aidl/changing.md
msgid "Changing API"
msgstr "Modification de l'API"

#: src/SUMMARY.md src/android/logging.md src/bare-metal/aps/logging.md
msgid "Logging"
msgstr "Journalisation"

#: src/SUMMARY.md src/android/interoperability.md
msgid "Interoperability"
msgstr "Interop√©rabilit√©"

#: src/SUMMARY.md
msgid "With C"
msgstr "Avec C"

#: src/SUMMARY.md
msgid "Calling C with Bindgen"
msgstr "Appeler C avec Bindgen"

#: src/SUMMARY.md
msgid "Calling Rust from C"
msgstr "Appeler Rust depuis C"

#: src/SUMMARY.md src/android/interoperability/cpp.md
msgid "With C++"
msgstr "Avec C++"

#: src/SUMMARY.md src/android/interoperability/cpp/bridge.md
#, fuzzy
msgid "The Bridge Module"
msgstr "Modules de test"

#: src/SUMMARY.md
#, fuzzy
msgid "Rust Bridge"
msgstr "Binaires Rust"

#: src/SUMMARY.md src/android/interoperability/cpp/generated-cpp.md
msgid "Generated C++"
msgstr ""

#: src/SUMMARY.md
msgid "C++ Bridge"
msgstr ""

#: src/SUMMARY.md src/android/interoperability/cpp/shared-types.md
#, fuzzy
msgid "Shared Types"
msgstr "Types scalaires"

#: src/SUMMARY.md src/android/interoperability/cpp/shared-enums.md
msgid "Shared Enums"
msgstr ""

#: src/SUMMARY.md src/android/interoperability/cpp/rust-result.md
#, fuzzy
msgid "Rust Error Handling"
msgstr "Gestion des erreurs"

#: src/SUMMARY.md src/android/interoperability/cpp/cpp-exception.md
#, fuzzy
msgid "C++ Error Handling"
msgstr "Gestion des erreurs"

#: src/SUMMARY.md src/android/interoperability/cpp/type-mapping.md
msgid "Additional Types"
msgstr ""

#: src/SUMMARY.md
msgid "Building for Android: C++"
msgstr ""

#: src/SUMMARY.md
msgid "Building for Android: Genrules"
msgstr ""

#: src/SUMMARY.md
msgid "Building for Android: Rust"
msgstr ""

#: src/SUMMARY.md
msgid "With Java"
msgstr "Avec Java"

#: src/SUMMARY.md src/exercises/android/morning.md
#: src/exercises/bare-metal/morning.md src/exercises/bare-metal/afternoon.md
#: src/exercises/concurrency/morning.md src/exercises/concurrency/afternoon.md
msgid "Exercises"
msgstr "Exercices"

#: src/SUMMARY.md
msgid "Chromium"
msgstr ""

#: src/SUMMARY.md src/chromium/cargo.md
msgid "Comparing Chromium and Cargo Ecosystems"
msgstr ""

#: src/SUMMARY.md
msgid "Policy"
msgstr ""

#: src/SUMMARY.md
#, fuzzy
msgid "Unsafe Code"
msgstr "Rust non s√©curis√© (_unsafe_)"

#: src/SUMMARY.md src/chromium/build-rules/depending.md
msgid "Depending on Rust Code from Chromium C++"
msgstr ""

#: src/SUMMARY.md src/chromium/build-rules/vscode.md
msgid "Visual Studio Code"
msgstr ""

#: src/SUMMARY.md src/exercises/chromium/third-party.md
#, fuzzy
msgid "Exercise"
msgstr "Exercices"

#: src/SUMMARY.md src/chromium/testing/rust-gtest-interop.md
msgid "`rust_gtest_interop` Library"
msgstr ""

#: src/SUMMARY.md src/chromium/testing/build-gn.md
msgid "GN Rules for Rust Tests"
msgstr ""

#: src/SUMMARY.md src/chromium/testing/chromium-import-macro.md
msgid "`chromium::import!` Macro"
msgstr ""

#: src/SUMMARY.md src/chromium/interoperability-with-cpp.md
#, fuzzy
msgid "Interoperability with C++"
msgstr "Interop√©rabilit√© avec C"

#: src/SUMMARY.md src/chromium/interoperability-with-cpp/example-bindings.md
#, fuzzy
msgid "Example Bindings"
msgstr "Exemples"

#: src/SUMMARY.md src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid "Limitations of CXX"
msgstr ""

#: src/SUMMARY.md src/chromium/interoperability-with-cpp/error-handling.md
#, fuzzy
msgid "CXX Error Handling"
msgstr "Gestion des erreurs"

#: src/SUMMARY.md
#, fuzzy
msgid "Error Handling: QR Example"
msgstr "Gestion des erreurs"

#: src/SUMMARY.md
#, fuzzy
msgid "Error Handling: PNG Example"
msgstr "Gestion des erreurs"

#: src/SUMMARY.md
msgid "Using CXX in Chromium"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates.md
msgid "Adding Third Party Crates"
msgstr ""

#: src/SUMMARY.md
msgid "Configuring Cargo.toml"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid "Configuring `gnrt_config.toml`"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates/downloading-crates.md
msgid "Downloading Crates"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid "Generating `gn` Build Rules"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Resolving Problems"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid "Build Scripts Which Generate Code"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "Build Scripts Which Build C++ or Take Arbitrary Actions"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid "Depending on a Crate"
msgstr ""

#: src/SUMMARY.md
msgid "Reviews and Audits"
msgstr ""

#: src/SUMMARY.md
msgid "Checking into Chromium Source Code"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates/keeping-up-to-date.md
msgid "Keeping Crates Up to Date"
msgstr ""

#: src/SUMMARY.md
msgid "Bringing It Together - Exercise"
msgstr ""

#: src/SUMMARY.md src/exercises/chromium/solutions.md
#, fuzzy
msgid "Exercise Solutions"
msgstr "Solutions"

#: src/SUMMARY.md
msgid "Bare Metal: Morning"
msgstr "Bare Metal : Matin"

#: src/SUMMARY.md src/bare-metal/no_std.md
#, fuzzy
msgid "`no_std`"
msgstr "`no_std`"

#: src/SUMMARY.md
msgid "A Minimal Example"
msgstr "Un exemple minimal"

#: src/SUMMARY.md src/bare-metal/no_std.md src/bare-metal/alloc.md
#, fuzzy
msgid "`alloc`"
msgstr "`allouer`"

#: src/SUMMARY.md src/bare-metal/microcontrollers.md
msgid "Microcontrollers"
msgstr "Microcontr√¥leurs"

#: src/SUMMARY.md src/bare-metal/microcontrollers/mmio.md
msgid "Raw MMIO"
msgstr "MMIO brut"

#: src/SUMMARY.md
msgid "PACs"
msgstr "PACs"

#: src/SUMMARY.md
msgid "HAL Crates"
msgstr "HAL Crates"

#: src/SUMMARY.md
msgid "Board Support Crates"
msgstr "Board Support Crates"

#: src/SUMMARY.md
msgid "The Type State Pattern"
msgstr "Le mod√®le d'√©tat de type"

#: src/SUMMARY.md src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid "`embedded-hal`"
msgstr "`embedded-hal`"

#: src/SUMMARY.md src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid "`probe-rs` and `cargo-embed`"
msgstr "`probe-rs`, `cargo-embed`"

#: src/SUMMARY.md src/bare-metal/microcontrollers/debugging.md
msgid "Debugging"
msgstr "D√©bogage"

#: src/SUMMARY.md
msgid "Other Projects"
msgstr "Autres projets"

#: src/SUMMARY.md src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "Compass"
msgstr "Boussole"

#: src/SUMMARY.md
msgid "Solutions"
msgstr "Solutions"

#: src/SUMMARY.md
msgid "Bare Metal: Afternoon"
msgstr "Bare Metal : Apr√®s-midi"

#: src/SUMMARY.md
msgid "Application Processors"
msgstr "Processeurs d'applications"

#: src/SUMMARY.md src/bare-metal/aps/entry-point.md
msgid "Getting Ready to Rust"
msgstr ""

#: src/SUMMARY.md
msgid "Inline Assembly"
msgstr "Assembleur en ligne"

#: src/SUMMARY.md
msgid "MMIO"
msgstr "MMIO"

#: src/SUMMARY.md
msgid "Let's Write a UART Driver"
msgstr "√âcrivons un pilote UART"

#: src/SUMMARY.md
msgid "More Traits"
msgstr "Plus de traits"

#: src/SUMMARY.md
msgid "A Better UART Driver"
msgstr "Un meilleur pilote UART"

#: src/SUMMARY.md src/bare-metal/aps/better-uart/bitflags.md
msgid "Bitflags"
msgstr "Bitflags"

#: src/SUMMARY.md
msgid "Multiple Registers"
msgstr "Registres multiples"

#: src/SUMMARY.md src/bare-metal/aps/better-uart/driver.md
msgid "Driver"
msgstr "Pilote"

#: src/SUMMARY.md
msgid "Using It"
msgstr "Utilisation"

#: src/SUMMARY.md src/bare-metal/aps/exceptions.md
msgid "Exceptions"
msgstr "Exceptions"

#: src/SUMMARY.md src/bare-metal/useful-crates/zerocopy.md
#, fuzzy
msgid "`zerocopy`"
msgstr "`z√©rocopie`"

#: src/SUMMARY.md src/bare-metal/useful-crates/aarch64-paging.md
#, fuzzy
msgid "`aarch64-paging`"
msgstr "`aarch64-pagination`"

#: src/SUMMARY.md src/bare-metal/useful-crates/buddy_system_allocator.md
#, fuzzy
msgid "`buddy_system_allocator`"
msgstr "`buddy_system_allocator`"

#: src/SUMMARY.md src/bare-metal/useful-crates/tinyvec.md
#, fuzzy
msgid "`tinyvec`"
msgstr "`tinyvec`"

#: src/SUMMARY.md src/bare-metal/useful-crates/spin.md
#, fuzzy
msgid "`spin`"
msgstr "`tourner`"

#: src/SUMMARY.md
#, fuzzy
msgid "`vmbase`"
msgstr "vmbase"

#: src/SUMMARY.md
msgid "RTC Driver"
msgstr "Pilote RTC"

#: src/SUMMARY.md
msgid "Concurrency: Morning"
msgstr "Concurrence : Matin"

#: src/SUMMARY.md src/concurrency/threads.md
msgid "Threads"
msgstr "Threads"

#: src/SUMMARY.md src/concurrency/scoped-threads.md
msgid "Scoped Threads"
msgstr "Threads d√©limit√©s"

#: src/SUMMARY.md src/concurrency/channels.md
msgid "Channels"
msgstr "Canaux"

#: src/SUMMARY.md src/concurrency/channels/unbounded.md
msgid "Unbounded Channels"
msgstr "Canaux illimit√©s"

#: src/SUMMARY.md src/concurrency/channels/bounded.md
msgid "Bounded Channels"
msgstr "Canaux limit√©s"

#: src/SUMMARY.md src/concurrency/send-sync.md
#, fuzzy
msgid "`Send` and `Sync`"
msgstr "`Envoyer` et `Synchroniser`"

#: src/SUMMARY.md src/concurrency/send-sync/send.md
#, fuzzy
msgid "`Send`"
msgstr "`Envoyer`"

#: src/SUMMARY.md src/concurrency/send-sync/sync.md
#, fuzzy
msgid "`Sync`"
msgstr "`Synchroniser`"

#: src/SUMMARY.md src/concurrency/send-sync/examples.md
msgid "Examples"
msgstr "Exemples"

#: src/SUMMARY.md src/concurrency/shared_state.md
msgid "Shared State"
msgstr "√âtat partag√©"

#: src/SUMMARY.md src/concurrency/shared_state/arc.md
#, fuzzy
msgid "`Arc`"
msgstr "`Arc`"

#: src/SUMMARY.md src/concurrency/shared_state/mutex.md
#, fuzzy
msgid "`Mutex`"
msgstr "`Mutex`"

#: src/SUMMARY.md src/memory-management/review.md
#: src/error-handling/try-conversions.md
#: src/concurrency/shared_state/example.md
msgid "Example"
msgstr "Exemple"

#: src/SUMMARY.md src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
msgid "Dining Philosophers"
msgstr "D√Æner des philosophes"

#: src/SUMMARY.md src/exercises/concurrency/link-checker.md
msgid "Multi-threaded Link Checker"
msgstr "V√©rificateur de liens √† plusieurs threads"

#: src/SUMMARY.md
msgid "Concurrency: Afternoon"
msgstr "Concurrence : Apr√®s-midi"

#: src/SUMMARY.md
msgid "Async Basics"
msgstr ""

#: src/SUMMARY.md src/async/async-await.md
msgid "`async`/`await`"
msgstr ""

#: src/SUMMARY.md src/async/futures.md
msgid "Futures"
msgstr "Fermetures"

#: src/SUMMARY.md src/async/runtimes.md
#, fuzzy
msgid "Runtimes"
msgstr "Garanties d'ex√©cution"

#: src/SUMMARY.md src/async/runtimes/tokio.md
msgid "Tokio"
msgstr "Tokio"

#: src/SUMMARY.md src/exercises/concurrency/link-checker.md src/async/tasks.md
#: src/exercises/concurrency/chat-app.md
msgid "Tasks"
msgstr "T√¢ches"

#: src/SUMMARY.md src/async/channels.md
msgid "Async Channels"
msgstr "Canaux asynchrones"

#: src/SUMMARY.md
msgid "Control Flow"
msgstr "Flux de contr√¥le"

#: src/SUMMARY.md src/async/control-flow/join.md
msgid "Join"
msgstr ""

#: src/SUMMARY.md src/async/control-flow/select.md
msgid "Select"
msgstr "Select"

#: src/SUMMARY.md
msgid "Pitfalls"
msgstr "Pi√®ges"

#: src/SUMMARY.md
msgid "Blocking the Executor"
msgstr "Bloquer l'ex√©cuteur"

#: src/SUMMARY.md src/async/pitfalls/pin.md
msgid "`Pin`"
msgstr ""

#: src/SUMMARY.md src/async/pitfalls/async-traits.md
msgid "Async Traits"
msgstr "Traits asynchrones"

#: src/SUMMARY.md src/async/pitfalls/cancellation.md
msgid "Cancellation"
msgstr "Annulation"

#: src/SUMMARY.md src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "Broadcast Chat Application"
msgstr ""

#: src/SUMMARY.md
msgid "Final Words"
msgstr "Derniers mots"

#: src/SUMMARY.md src/thanks.md
msgid "Thanks!"
msgstr "Merci!"

#: src/SUMMARY.md src/glossary.md
msgid "Glossary"
msgstr ""

#: src/SUMMARY.md
msgid "Other Resources"
msgstr "Autres ressources"

#: src/SUMMARY.md src/credits.md
msgid "Credits"
msgstr "Cr√©dits"

#: src/index.md
#, fuzzy
msgid ""
"[![Build workflow](https://img.shields.io/github/actions/workflow/status/"
"google/comprehensive-rust/build.yml?style=flat-square)](https://github.com/"
"google/comprehensive-rust/actions/workflows/build.yml?query=branch%3Amain) [!"
"[GitHub contributors](https://img.shields.io/github/contributors/google/"
"comprehensive-rust?style=flat-square)](https://github.com/google/"
"comprehensive-rust/graphs/contributors) [![GitHub stars](https://img.shields."
"io/github/stars/google/comprehensive-rust?style=flat-square)](https://github."
"com/google/comprehensive-rust/stargazers)"
msgstr ""
"[![Flux de construction](https://img.shields.io/github/actions/workflow/"
"status/google/comprehensive-rust/build.yml?style=flat-square)](https://"
"github.com/google/comprehensive-rust/actions/workflows/build.yml?"
"query=branch%3Amain) [![Contributeurs GitHub](https://img.shields.io/github/"
"contributors/google/comprehensive-rust?style=flat-square)](https://github."
"com/google/comprehensive-rust/graphs/contributors)"

#: src/index.md
msgid ""
"This is a free Rust course developed by the Android team at Google. The "
"course covers the full spectrum of Rust, from basic syntax to advanced "
"topics like generics and error handling."
msgstr ""
"Ce cours Rust gratuit a √©t√© d√©velopp√© par l'√©quipe Android de Google. Le "
"cours couvre l'ensemble du langage Rust, de la syntaxe de base aux sujets "
"avanc√©s comme les g√©n√©riques et la gestion des erreurs."

#: src/index.md
msgid ""
"The latest version of the course can be found at <https://google.github.io/"
"comprehensive-rust/>. If you are reading somewhere else, please check there "
"for updates."
msgstr ""
"La version la plus √† jour de ce cours se trouve √† l'adresse suivante: "
"<https://google.github.io/comprehensive-rust/>. Si vous lisez ce cours "
"depuis une autre adresse, n'h√©sitez pas √† suivre ce lien pour acc√©der √† la "
"derni√®re version."

#: src/index.md
msgid ""
"The goal of the course is to teach you Rust. We assume you don't know "
"anything about Rust and hope to:"
msgstr ""
"Le but du cours est de vous apprendre Rust. Nous supposons que vous "
"d√©couvrez ce langage et esp√©rons :"

#: src/index.md
msgid "Give you a comprehensive understanding of the Rust syntax and language."
msgstr ""
"Vous donner une compr√©hension compl√®te de la syntaxe et du langage Rust."

#: src/index.md
msgid "Enable you to modify existing programs and write new programs in Rust."
msgstr ""
"Vous permettre de modifier des programmes existants et d'√©crire de nouveaux "
"programmes en Rust."

#: src/index.md
msgid "Show you common Rust idioms."
msgstr "Vous montrer les constructions fr√©quentes (idiomes) en Rust."

#: src/index.md
#, fuzzy
msgid "We call the first four course days Rust Fundamentals."
msgstr ""
"Nous appelons les trois premiers jours de ce cours les ¬´Fondamentaux de "
"Rust¬ª."

#: src/index.md
msgid ""
"Building on this, you're invited to dive into one or more specialized topics:"
msgstr ""
"Au-del√† de ces trois premiers jours de cours, nous vous invitons √† "
"approfondir un ou plusieurs des sujets suivant:"

#: src/index.md
msgid ""
"[Android](android.md): a half-day course on using Rust for Android platform "
"development (AOSP). This includes interoperability with C, C++, and Java."
msgstr ""
"[Android](android.md): un cours d'une demi-journ√©e consacr√© √† l'utilisation "
"de Rust dans le cadre du d√©veloppement pour la plate-forme Android. Ce cours "
"couvre √©galement l'interop√©rabilit√© avec les langages C, C++ et Java."

#: src/index.md
#, fuzzy
msgid ""
"[Chromium](chromium.md): a half-day course on using Rust within Chromium "
"based browsers. This includes interoperability with C++ and how to include "
"third-party crates in Chromium."
msgstr ""
"[Android](android.md): un cours d'une demi-journ√©e consacr√© √† l'utilisation "
"de Rust dans le cadre du d√©veloppement pour la plate-forme Android. Ce cours "
"couvre √©galement l'interop√©rabilit√© avec les langages C, C++ et Java."

#: src/index.md
msgid ""
"[Bare-metal](bare-metal.md): a whole-day class on using Rust for bare-metal "
"(embedded) development. Both microcontrollers and application processors are "
"covered."
msgstr ""
"[Bare-metal](bare-metal.md): un cours d'une journ√©e consacr√© √† l'utilisation "
"de Rust pour le d√©veloppement embarqu√©. Le cours touche √† la fois aux "
"microcontr√¥leurs et aux processeurs d'applications."

#: src/index.md
msgid ""
"[Concurrency](concurrency.md): a whole-day class on concurrency in Rust. We "
"cover both classical concurrency (preemptively scheduling using threads and "
"mutexes) and async/await concurrency (cooperative multitasking using "
"futures)."
msgstr ""
"[Programmation concurrente](concurrency.md): un cours d'une journ√©e consacr√© "
"√† la programmation concurrente en Rust. Nous couvrons la concurrence "
"classique (planification √† base de threads et mutex) ainsi que la "
"concurrence async/await (multit√¢che coop√©ratif √† base de _futures_)."

#: src/index.md
msgid "Non-Goals"
msgstr "Non-objectifs"

#: src/index.md
msgid ""
"Rust is a large language and we won't be able to cover all of it in a few "
"days. Some non-goals of this course are:"
msgstr ""
"Rust est un vaste langage et nous ne pourrons pas tout couvrir en quelques "
"jours. Certains non-objectifs de ce cours sont¬†:"

#: src/index.md
msgid ""
"Learning how to develop macros: please see [Chapter 19.5 in the Rust Book]"
"(https://doc.rust-lang.org/book/ch19-06-macros.html) and [Rust by Example]"
"(https://doc.rust-lang.org/rust-by-example/macros.html) instead."
msgstr ""
"Apprendre comment d√©velopper des macros: pour cela, nous vous invitons √† "
"consulter le [Chapitre 19.5 dans le Rust Book](https://doc.rust-lang.org/"
"book/ch19-06-macros.html) et [Rust by Example](https://doc.rust-lang.org/"
"rust-by-example/macros.html) (an anglais). Vous pouvez √©galement consulter "
"[le Chapitre 19.5 dans la traduction non-officielle du Rust Book](https://"
"jimskapt.github.io/rust-book-fr/ch19-06-macros.html) en fran√ßais."

#: src/index.md
msgid "Assumptions"
msgstr "Pr√©requis"

#: src/index.md
msgid ""
"The course assumes that you already know how to program. Rust is a "
"statically-typed language and we will sometimes make comparisons with C and "
"C++ to better explain or contrast the Rust approach."
msgstr ""
"Le cours suppose que vous savez d√©j√† programmer. Rust est un langage "
"statiquement typ√© et nous ferons parfois des comparaisons avec C et C++ pour "
"mieux expliquer ou contraster l'approche de Rust."

#: src/index.md
msgid ""
"If you know how to program in a dynamically-typed language such as Python or "
"JavaScript, then you will be able to follow along just fine too."
msgstr ""
"Si vous savez programmer dans un langage √† typage dynamique tel que Python "
"ou JavaScript, vous pourrez √©galement suivre ce cours sans probl√®me."

#: src/index.md
msgid ""
"This is an example of a _speaker note_. We will use these to add additional "
"information to the slides. This could be key points which the instructor "
"should cover as well as answers to typical questions which come up in class."
msgstr ""
"Ceci est un exemple de _note du formateur_. Nous les utiliserons pour "
"ajouter d'autres informations sur les diapositives. Cela pourrait √™tre des "
"points cl√©s que l'instructeur devrait couvrir, ainsi que des r√©ponses aux "
"questions typiques pos√©es en classe."

#: src/running-the-course.md src/running-the-course/course-structure.md
msgid "This page is for the course instructor."
msgstr "Cette page est destin√©e au formateur."

#: src/running-the-course.md
msgid ""
"Here is a bit of background information about how we've been running the "
"course internally at Google."
msgstr ""
"Voici quelques informations g√©n√©rales sur la fa√ßon dont nous avons organis√© "
"le cours en interne chez Google."

#: src/running-the-course.md
#, fuzzy
msgid ""
"We typically run classes from 9:00 am to 4:00 pm, with a 1 hour lunch break "
"in the middle. This leaves 3 hours for the morning class and 3 hours for the "
"afternoon class. Both sessions contain multiple breaks and time for students "
"to work on exercises."
msgstr ""
"La plupart des classes sont organis√©es de 10 heures √† 16 heures, avec une "
"pause d√©jeuner d'une heure, soit deux heures et demi de cours le matin et "
"deux heures et demi de cours l'apr√®s-midi. Ceci n'est qu'une "
"recommandation : il vous est √©galement possible de planifier une session de "
"trois heures le matin afin de laisser plus de temps pour les exercices. "
"L'inconv√©nient de sessions plus longues est une fatigue importante en fin de "
"journ√©e."

#: src/running-the-course.md
msgid "Before you run the course, you will want to:"
msgstr ""
"Avant de pr√©senter le cours, nous vous recommandons les choses suivantes¬†:"

#: src/running-the-course.md
msgid ""
"Make yourself familiar with the course material. We've included speaker "
"notes to help highlight the key points (please help us by contributing more "
"speaker notes!). When presenting, you should make sure to open the speaker "
"notes in a popup (click the link with a little arrow next to \"Speaker "
"Notes\"). This way you have a clean screen to present to the class."
msgstr ""
"Familiarisez-vous avec le cours. Nous avons inclus les _notes du formateur_ "
"afin de mettre les points cl√©s en √©vidence (n'h√©sitez pas √† nous proposer "
"des notes suppl√©mentaires !). Lors de la pr√©sentation, vous devez vous "
"assurer d'ouvrir les notes du formateur dans une popup (cliquez sur le lien "
"avec une petite fl√®che √† c√¥t√© de _Notes du Formateur_ (_Speaker Notes_)). De "
"cette fa√ßon, vous affichez le cours sans les notes √† la classe, et pouvez "
"suivre les notes s√©par√©ment."

#: src/running-the-course.md
#, fuzzy
msgid ""
"Decide on the dates. Since the course takes four days, we recommend that you "
"schedule the days over two weeks. Course participants have said that they "
"find it helpful to have a gap in the course since it helps them process all "
"the information we give them."
msgstr ""
"D√©cidez des dates de la classe en avance. √âtant donn√© que le cours dure au "
"moins trois jours complets, nous vous recommandons de programmer les jours "
"de classe sur un intervalle de deux semaines. Les participants aux classes "
"pr√©c√©dentes ont en effet indiqu√© qu'il est utile d'espacer les jours de "
"classe afin de mieux absorber le contenu."

#: src/running-the-course.md
msgid ""
"Find a room large enough for your in-person participants. We recommend a "
"class size of 15-25 people. That's small enough that people are comfortable "
"asking questions --- it's also small enough that one instructor will have "
"time to answer the questions. Make sure the room has _desks_ for yourself "
"and for the students: you will all need to be able to sit and work with your "
"laptops. In particular, you will be doing a lot of live-coding as an "
"instructor, so a lectern won't be very helpful for you."
msgstr ""
"Trouvez une salle suffisamment grande pour que tous les participants "
"puissent suivre en personne. Nous recommandons que le nombre de participants "
"soit de 15 √† 20 personnes. Cela constitue un groupe suffisamment petit pour "
"que les gens soient √† l'aise pour poser des questions --- c'est aussi assez "
"petit pour qu'un instructeur ait le temps de r√©pondre aux questions. Assurez-"
"vous que la salle dispose de _bureaux_ pour vous et pour les √©tudiants¬†: "
"vous devriez tous pouvoir vous assoir et travailler avec vos ordinateurs "
"portables. En particulier, vous serez amen√© √† faire beaucoup de "
"programmation en direct en tant qu'instructeur, donc un simple pupitre ne "
"serait pas tr√®s pratique pour vous."

#: src/running-the-course.md
msgid ""
"On the day of your course, show up to the room a little early to set things "
"up. We recommend presenting directly using `mdbook serve` running on your "
"laptop (see the [installation instructions](https://github.com/google/"
"comprehensive-rust#building)). This ensures optimal performance with no lag "
"as you change pages. Using your laptop will also allow you to fix typos as "
"you or the course participants spot them."
msgstr ""
"Les jours de classe, pr√©voyez d'arriver en avance afin de pr√©parer la salle. "
"Nous vous recommandons de pr√©senter directement en utilisant `mdbook serve` "
"ex√©cut√© sur votre ordinateur portable (voir les [instructions d'installation]"
"(https://github.com/google/comprehensive-rust#building)). Cela garantit des "
"performances optimales sans ralentissement lorsque vous changez de page. "
"L'utilisation de votre ordinateur portable vous permettra √©galement de "
"corriger les √©ventuelles fautes de frappe."

#: src/running-the-course.md
msgid ""
"Let people solve the exercises by themselves or in small groups. We "
"typically spend 30-45 minutes on exercises in the morning and in the "
"afternoon (including time to review the solutions). Make sure to ask people "
"if they're stuck or if there is anything you can help with. When you see "
"that several people have the same problem, call it out to the class and "
"offer a solution, e.g., by showing people where to find the relevant "
"information in the standard library."
msgstr ""
"Laissez les participants r√©soudre les exercices seuls ou en petits groupes. "
"En g√©n√©ral nous consacrons 30 √† 45 minutes aux exercices le matin et l'apr√®s-"
"midi (y compris pour discuter les solutions). Assurez-vous de demander aux "
"gens s'ils sont bloqu√©s ou si vous pouvez les aider. Si vous constatez que "
"plusieurs personnes font face au m√™me probl√®me, partagez-le avec la classe "
"et proposez une solution, par exemple en montrant aux participants o√π "
"trouver les informations pertinentes dans la biblioth√®que standard."

#: src/running-the-course.md
msgid ""
"That is all, good luck running the course! We hope it will be as much fun "
"for you as it has been for us!"
msgstr ""
"C'est tout, bonne chance pour la pr√©sentation du cours¬†! Nous esp√©rons que "
"vous y prendrez autant de plaisir que nous !"

#: src/running-the-course.md
msgid ""
"Please [provide feedback](https://github.com/google/comprehensive-rust/"
"discussions/86) afterwards so that we can keep improving the course. We "
"would love to hear what worked well for you and what can be made better. "
"Your students are also very welcome to [send us feedback](https://github.com/"
"google/comprehensive-rust/discussions/100)!"
msgstr ""
"Nous vous demandons de bien vouloir [fournir des commentaires](https://"
"github.com/google/comprehensive-rust/discussions/86) par la suite afin que "
"nous puissions continuer d'am√©liorer le cours. Nous aimerions savoir ce qui "
"a bien fonctionn√© pour vous et ce qui pourrait √™tre am√©lior√©. Vos √©l√®ves "
"peuvent √©galement [envoyer des commentaires](https://github.com/google/"
"comprehensive-rust/discussions/100). Merci !"

#: src/running-the-course/course-structure.md
msgid "Rust Fundamentals"
msgstr "Fondamentaux de Rust"

#: src/running-the-course/course-structure.md
#, fuzzy
msgid ""
"The first four days make up [Rust Fundamentals](../welcome-day-1.md). The "
"days are fast paced and we cover a lot of ground!"
msgstr ""
"Les trois premiers jours constituent les [Fondamentaux de Rust](../welcome-"
"day-1.md). Le rythme est soutenu et nous couvrons beaucoup de sujets:"

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "Course schedule:"
msgstr "Structure du cours"

#: src/running-the-course/course-structure.md
msgid "Day 1 Morning (3 hours, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-1.md) (5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Hello, World](../hello-world.md) (20 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Types and Values](../types-and-values.md) (1 hour and 5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Control Flow Basics](../control-flow-basics.md) (1 hour)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 1 Afternoon (2 hours and 55 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Tuples and Arrays](../tuples-and-arrays.md) (1 hour)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[References](../references.md) (50 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[User-Defined Types](../user-defined-types.md) (50 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 2 Morning (3 hours and 5 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-2.md) (3 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "[Pattern Matching](../pattern-matching.md) (50 minutes)"
msgstr ""
"Voir [Filtrage par motif](../pattern-matching.md) pour plus de d√©tails sur "
"les motifs avec Rust."

#: src/running-the-course/course-structure.md
msgid "[Methods and Traits](../methods-and-traits.md) (55 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Generics](../generics.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "Day 2 Afternoon (3 hours, including breaks)"
msgstr "Exercices de l'apr√®s-midi du jour 2"

#: src/running-the-course/course-structure.md
msgid "[Standard Library Types](../std-types.md) (1 hour and 10 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Standard Library Traits](../std-traits.md) (1 hour and 40 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 3 Morning (2 hours and 15 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-3.md) (3 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Memory Management](../memory-management.md) (1 hour and 10 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Smart Pointers](../smart-pointers.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 3 Afternoon (2 hours and 20 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Borrowing](../borrowing.md) (1 hour)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid ""
"[Slices and Lifetimes](../slices-and-lifetimes.md) (1 hour and 10 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 4 Morning (3 hours and 5 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-4.md) (3 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Iterators](../iterators.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Modules](../modules.md) (40 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Testing](../testing.md) (1 hour and 5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 4 Afternoon (2 hours, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Error Handling](../error-handling.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Unsafe Rust](../unsafe-rust.md) (1 hour and 5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Deep Dives"
msgstr "Approfondissements"

#: src/running-the-course/course-structure.md
#, fuzzy
msgid ""
"In addition to the 4-day class on Rust Fundamentals, we cover some more "
"specialized topics:"
msgstr ""
"Au del√† des trois jours portant sur les Fondamentaux de Rust, nous couvrons "
"√©galement des sujets sp√©cifiques:"

#: src/running-the-course/course-structure.md
msgid "Rust in Android"
msgstr "Rust pour Android"

#: src/running-the-course/course-structure.md
msgid ""
"The [Rust in Android](../android.md) deep dive is a half-day course on using "
"Rust for Android platform development. This includes interoperability with "
"C, C++, and Java."
msgstr ""
"[Rust pour Android](../android.md) est un cours d'une demi-journ√©e consacr√© "
"√† l'utilisation de Rust dans le cadre du d√©veloppement pour la plate-forme "
"Android. Ce cours couvre √©galement l'interop√©rabilit√© avec les langages C, C+"
"+ et Java."

#: src/running-the-course/course-structure.md
msgid ""
"You will need an [AOSP checkout](https://source.android.com/docs/setup/"
"download/downloading). Make a checkout of the [course repository](https://"
"github.com/google/comprehensive-rust) on the same machine and move the `src/"
"android/` directory into the root of your AOSP checkout. This will ensure "
"that the Android build system sees the `Android.bp` files in `src/android/`."
msgstr ""
"Vous aurez besoin d'un [AOSP checkout](https://source.android.com/docs/setup/"
"download/downloading). Effectuez un checkout du [r√©pertoire du cours]"
"(https://github.com/google/comprehensive-rust) sur la m√™me machine et "
"d√©placez le dossier `src/android/` √† la racine de votre checkout AOSP. Cela "
"assurera que le syst√®me de construction d'Android a acc√®s aux fichiers "
"`Android.bp` dans `src/android/`."

#: src/running-the-course/course-structure.md
msgid ""
"Ensure that `adb sync` works with your emulator or real device and pre-build "
"all Android examples using `src/android/build_all.sh`. Read the script to "
"see the commands it runs and make sure they work when you run them by hand."
msgstr ""
"Assurez-vous que `adb sync` fonctionne avec votre √©mulateur ou votre "
"appareil r√©el et pr√©-construisez tous les exemples Android en utilisant `src/"
"android/build_all.sh`. Lisez le script pour voir les commandes √©x√©cut√©es et "
"assurez-vous qu'elles fonctionnent lorsque vous les ex√©cutez √† la main."

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "Rust in Chromium"
msgstr "Rust pour Android"

#: src/running-the-course/course-structure.md
msgid ""
"The [Rust in Chromium](../chromium.md) deep dive is a half-day course on "
"using Rust as part of the Chromium browser. It includes using Rust in "
"Chromium's `gn` build system, bringing in third-party libraries (\"crates\") "
"and C++ interoperability."
msgstr ""

#: src/running-the-course/course-structure.md
msgid ""
"You will need to be able to build Chromium --- a debug, component build is "
"[recommended](../chromium/setup.md) for speed but any build will work. "
"Ensure that you can run the Chromium browser that you've built."
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Bare-Metal Rust"
msgstr "Bare-Metal Rust"

#: src/running-the-course/course-structure.md
msgid ""
"The [Bare-Metal Rust](../bare-metal.md) deep dive is a full day class on "
"using Rust for bare-metal (embedded) development. Both microcontrollers and "
"application processors are covered."
msgstr ""
"[Bare-metal Rust](../bare-metal.md) est un cours d'une journ√©e consacr√© √† "
"l'utilisation de Rust pour le d√©veloppement embarqu√©. Le cours touche √† la "
"fois aux microcontr√¥leurs et aux processeurs d'applications."

#: src/running-the-course/course-structure.md
msgid ""
"For the microcontroller part, you will need to buy the [BBC micro:bit]"
"(https://microbit.org/) v2 development board ahead of time. Everybody will "
"need to install a number of packages as described on the [welcome page](../"
"bare-metal.md)."
msgstr ""
"Pour la partie microcontr√¥leurs, vous devrez acheter la carte de "
"d√©veloppement [BBC micro:bit](https://microbit.org/) v2 avant de commencer.\n"
"Tous les participants √† ce cours devront installer les paquets list√©s sur "
"[la page de bienvenue](../bare-metal.md) du cours."

#: src/running-the-course/course-structure.md
msgid "Concurrency in Rust"
msgstr "Programmation concurrente en Rust"

#: src/running-the-course/course-structure.md
msgid ""
"The [Concurrency in Rust](../concurrency.md) deep dive is a full day class "
"on classical as well as `async`/`await` concurrency."
msgstr ""
"[La programmation concurrente en Rust](../concurrency.md) est un cours d'une "
"journ√©e portant sur la programmation concurrente classique ainsi que `async`/"
"`await`."

#: src/running-the-course/course-structure.md
msgid ""
"You will need a fresh crate set up and the dependencies downloaded and ready "
"to go. You can then copy/paste the examples into `src/main.rs` to experiment "
"with them:"
msgstr ""
"Il faudra que vous ayez pr√©par√© une crate √† jour et que vous ayez t√©l√©charg√© "
"et install√© les d√©pendances. Vous pourrez ensuite copier/coller les exemples "
"dans `src/main.rs` et les modifier:"

#: src/running-the-course/course-structure.md
msgid "Format"
msgstr "Format du cours"

#: src/running-the-course/course-structure.md
msgid ""
"The course is meant to be very interactive and we recommend letting the "
"questions drive the exploration of Rust!"
msgstr ""
"Le cours se veut tr√®s interactif et nous recommandons de laisser les "
"questions guider l'exploration de Rust !"

#: src/running-the-course/keyboard-shortcuts.md
msgid "There are several useful keyboard shortcuts in mdBook:"
msgstr "Il existe plusieurs raccourcis clavier utiles dans mdBook¬†:"

#: src/running-the-course/keyboard-shortcuts.md
msgid "Arrow-Left"
msgstr "Fl√®che vers la gauche"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Navigate to the previous page."
msgstr "¬†: Navigue √† la page pr√©c√©dente."

#: src/running-the-course/keyboard-shortcuts.md
msgid "Arrow-Right"
msgstr "Fl√®che vers la droite"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Navigate to the next page."
msgstr "¬†: Navigue √† la page suivante."

#: src/running-the-course/keyboard-shortcuts.md src/cargo/code-samples.md
msgid "Ctrl + Enter"
msgstr "Ctrl¬†+¬†Entr√©e"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Execute the code sample that has focus."
msgstr "¬†: Ex√©cute l'exemple de code qui a le focus."

#: src/running-the-course/keyboard-shortcuts.md
msgid "s"
msgstr "s"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Activate the search bar."
msgstr " : Active la barre de recherche."

#: src/running-the-course/translations.md
msgid ""
"The course has been translated into other languages by a set of wonderful "
"volunteers:"
msgstr ""
"Le cours a √©t√© traduit dans d'autres langues par un ensemble de merveilleux "
"b√©n√©voles:"

#: src/running-the-course/translations.md
#, fuzzy
msgid ""
"[Brazilian Portuguese](https://google.github.io/comprehensive-rust/pt-BR/) "
"by [@rastringer](https://github.com/rastringer), [@hugojacob](https://github."
"com/hugojacob), [@joaovicmendes](https://github.com/joaovicmendes), and "
"[@henrif75](https://github.com/henrif75)."
msgstr ""
"[portugais br√©silien](https://google.github.io/comprehensive-rust/pt-BR/) "
"par [@rastringer](https://github.com/rastringer) et [@hugojacob](https://"
"github.com/hugojacob)."

#: src/running-the-course/translations.md
msgid ""
"[Chinese (Simplified)](https://google.github.io/comprehensive-rust/zh-CN/) "
"by [@suetfei](https://github.com/suetfei), [@wnghl](https://github.com/"
"wnghl), [@anlunx](https://github.com/anlunx), [@kongy](https://github.com/"
"kongy), [@noahdragon](https://github.com/noahdragon), [@superwhd](https://"
"github.com/superwhd), [@SketchK](https://github.com/SketchK), and [@nodmp]"
"(https://github.com/nodmp)."
msgstr ""

#: src/running-the-course/translations.md
#, fuzzy
msgid ""
"[Chinese (Traditional)](https://google.github.io/comprehensive-rust/zh-TW/) "
"by [@hueich](https://github.com/hueich), [@victorhsieh](https://github.com/"
"victorhsieh), [@mingyc](https://github.com/mingyc), [@kuanhungchen](https://"
"github.com/kuanhungchen), and [@johnathan79717](https://github.com/"
"johnathan79717)."
msgstr ""
"[portugais br√©silien](https://google.github.io/comprehensive-rust/pt-BR/) "
"par [@rastringer](https://github.com/rastringer) et [@hugojacob](https://"
"github.com/hugojacob)."

#: src/running-the-course/translations.md
#, fuzzy
msgid ""
"[Korean](https://google.github.io/comprehensive-rust/ko/) by [@keispace]"
"(https://github.com/keispace), [@jiyongp](https://github.com/jiyongp), and "
"[@jooyunghan](https://github.com/jooyunghan)."
msgstr ""
"[cor√©en](https://google.github.io/comprehensive-rust/ko/) par [@keispace]"
"(https://github.com/keispace), [@jiyongp](https://github.com/jiyongp) et "
"[@jooyunghan](https://github.com/jooyunghan)."

#: src/running-the-course/translations.md
msgid ""
"[Spanish](https://google.github.io/comprehensive-rust/es/) by [@deavid]"
"(https://github.com/deavid)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"Use the language picker in the top-right corner to switch between languages."
msgstr ""
"Utilisez le s√©lecteur de langue dans le coin sup√©rieur droit pour basculer "
"entre les langues."

#: src/running-the-course/translations.md
#, fuzzy
msgid "Incomplete Translations"
msgstr "Traductions"

#: src/running-the-course/translations.md
msgid ""
"There is a large number of in-progress translations. We link to the most "
"recently updated translations:"
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Bengali](https://google.github.io/comprehensive-rust/bn/) by [@raselmandol]"
"(https://github.com/raselmandol)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[French](https://google.github.io/comprehensive-rust/fr/) by [@KookaS]"
"(https://github.com/KookaS) and [@vcaen](https://github.com/vcaen)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[German](https://google.github.io/comprehensive-rust/de/) by [@Throvn]"
"(https://github.com/Throvn) and [@ronaldfw](https://github.com/ronaldfw)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Japanese](https://google.github.io/comprehensive-rust/ja/) by [@CoinEZ-JPN]"
"(https://github.com/CoinEZ) and [@momotaro1105](https://github.com/"
"momotaro1105)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"If you want to help with this effort, please see [our instructions](https://"
"github.com/google/comprehensive-rust/blob/main/TRANSLATIONS.md) for how to "
"get going. Translations are coordinated on the [issue tracker](https://"
"github.com/google/comprehensive-rust/issues/282)."
msgstr ""
"Si vous souhaitez contribuer √† cet effort, veuillez consulter \\[nos "
"instructions\\] pour savoir comment se lancer. Les traductions sont "
"coordonn√©es sur le \\[traqueur de probl√®mes\\]."

#: src/cargo.md
msgid ""
"When you start reading about Rust, you will soon meet [Cargo](https://doc."
"rust-lang.org/cargo/), the standard tool used in the Rust ecosystem to build "
"and run Rust applications. Here we want to give a brief overview of what "
"Cargo is and how it fits into the wider ecosystem and how it fits into this "
"training."
msgstr ""
"Lorsque vous commencerez √† lire sur Rust, vous rencontrerez bient√¥t [Cargo]"
"(https://doc.rust-lang.org/cargo/), l'outil standard utilis√© dans "
"l'√©cosyst√®me Rust pour cr√©er et ex√©cuter des applications Rust. Ici, nous "
"voulons donner un bref aper√ßu de ce qu'est Cargo et comment il s'int√®gre "
"dans le large √©cosyst√®me et comment cela s'inscrit dans cette formation."

#: src/cargo.md
msgid "Installation"
msgstr "Installation"

#: src/cargo.md
msgid "**Please follow the instructions on <https://rustup.rs/>.**"
msgstr ""

#: src/cargo.md
#, fuzzy
msgid ""
"This will give you the Cargo build tool (`cargo`) and the Rust compiler "
"(`rustc`). You will also get `rustup`, a command line utility that you can "
"use to install to different compiler versions."
msgstr ""
"Avec cargo et rustc, Rustup s'installera en tant qu'utilitaire de ligne de "
"commande que vous pourrez utiliser pour installer/changer de cha√Ænes "
"d'outils, configurer une compilation crois√©e, etc."

#: src/cargo.md
msgid ""
"After installing Rust, you should configure your editor or IDE to work with "
"Rust. Most editors do this by talking to [rust-analyzer](https://rust-"
"analyzer.github.io/), which provides auto-completion and jump-to-definition "
"functionality for [VS Code](https://code.visualstudio.com/), [Emacs](https://"
"rust-analyzer.github.io/manual.html#emacs), [Vim/Neovim](https://rust-"
"analyzer.github.io/manual.html#vimneovim), and many others. There is also a "
"different IDE available called [RustRover](https://www.jetbrains.com/rust/)."
msgstr ""

#: src/cargo.md
#, fuzzy
msgid ""
"On Debian/Ubuntu, you can also install Cargo, the Rust source and the [Rust "
"formatter](https://github.com/rust-lang/rustfmt) via `apt`. However, this "
"gets you an outdated rust version and may lead to unexpected behavior. The "
"command would be:"
msgstr ""
"Sur Debian/Ubuntu, vous pouvez installer Cargo, la source Rust et le "
"[formateur Rust](https://github.com/rust-lang/rustfmt) avec"

#: src/cargo/rust-ecosystem.md
msgid "The Rust Ecosystem"
msgstr "L'√©cosyst√®me de Rust"

#: src/cargo/rust-ecosystem.md
msgid ""
"The Rust ecosystem consists of a number of tools, of which the main ones are:"
msgstr ""
"L'√©cosyst√®me de Rust est compos√© d'un certain nombre d'outils, dont les "
"principaux sont :"

#: src/cargo/rust-ecosystem.md
msgid ""
"`rustc`: the Rust compiler which turns `.rs` files into binaries and other "
"intermediate formats."
msgstr ""
"`rustc`¬†: le compilateur Rust qui transforme les fichiers `.rs` en binaires "
"et autres formats interm√©diaires."

#: src/cargo/rust-ecosystem.md
#, fuzzy
msgid ""
"`cargo`: the Rust dependency manager and build tool. Cargo knows how to "
"download dependencies, usually hosted on <https://crates.io>, and it will "
"pass them to `rustc` when building your project. Cargo also comes with a "
"built-in test runner which is used to execute unit tests."
msgstr ""
"`cargo`¬†: le gestionnaire de d√©pendances Rust et l'outil de construction. "
"Cargo sait comment t√©l√©charger les d√©pendances h√©berg√©es sur <https://crates."
"io> et il les transmettra √† `rustc` lors de la construction de votre projet. "
"Cargo est √©galement livr√© avec un ex√©cuteur de test qui est utilis√© pour "
"ex√©cuter des tests unitaires."

#: src/cargo/rust-ecosystem.md
#, fuzzy
msgid ""
"`rustup`: the Rust toolchain installer and updater. This tool is used to "
"install and update `rustc` and `cargo` when new versions of Rust are "
"released. In addition, `rustup` can also download documentation for the "
"standard library. You can have multiple versions of Rust installed at once "
"and `rustup` will let you switch between them as needed."
msgstr ""
"`rustup`¬†: le programme d'installation et de mise √† jour de la cha√Æne "
"d'outils Rust. Cet outil sert √† installer et mettez √† jour `rustc` et "
"`cargo` lorsque de nouvelles versions de Rust sont publi√©es. De plus, "
"`rustup` peut √©galement t√©l√©charger la documentation de la  biblioth√®que "
"standard. Vous pouvez avoir plusieurs versions de Rust install√©es √† la fois "
"et `rustup` vous permettra de basculer entre elles au besoin."

#: src/cargo/rust-ecosystem.md src/hello-world/hello-world.md
#: src/tuples-and-arrays/tuples-and-arrays.md src/references/exclusive.md
#: src/pattern-matching/destructuring.md src/memory-management/move.md
#: src/error-handling/try.md src/android/setup.md src/concurrency/threads.md
#: src/async/async-await.md
msgid "Key points:"
msgstr "Points cl√©s:"

#: src/cargo/rust-ecosystem.md
msgid ""
"Rust has a rapid release schedule with a new release coming out every six "
"weeks. New releases maintain backwards compatibility with old releases --- "
"plus they enable new functionality."
msgstr ""
"Rust a un calendrier de publication rapide avec une nouvelle version qui "
"sort toutes les six semaines. Les nouvelles versions maintiennent la "
"r√©trocompatibilit√© avec les anciennes versions --- en plus, elles activent "
"de nouvelles fonctionnalit√©s."

#: src/cargo/rust-ecosystem.md
msgid ""
"There are three release channels: \"stable\", \"beta\", and \"nightly\"."
msgstr ""
"Il existe trois canaux de sortie¬†: \"stable\", \"beta\" et \"nightly\"."

#: src/cargo/rust-ecosystem.md
msgid ""
"New features are being tested on \"nightly\", \"beta\" is what becomes "
"\"stable\" every six weeks."
msgstr ""
"De nouvelles fonctionnalit√©s sont test√©es sur \"nightly\", \"beta\" est ce "
"qui devient \"stable\" toutes les six semaines."

#: src/cargo/rust-ecosystem.md
msgid ""
"Dependencies can also be resolved from alternative [registries](https://doc."
"rust-lang.org/cargo/reference/registries.html), git, folders, and more."
msgstr ""

#: src/cargo/rust-ecosystem.md
msgid ""
"Rust also has [editions](https://doc.rust-lang.org/edition-guide/): the "
"current edition is Rust 2021. Previous editions were Rust 2015 and Rust 2018."
msgstr ""
"Rust a √©galement des \\[√©ditions\\]¬†: l'√©dition actuelle est Rust 2021. Les "
"√©ditions pass√©es √©taient Rust 2015 et Rust 2018."

#: src/cargo/rust-ecosystem.md
msgid ""
"The editions are allowed to make backwards incompatible changes to the "
"language."
msgstr ""
"Les √©ditions sont autoris√©es √† apporter des modifications r√©trocompatibles √† "
"la langue."

#: src/cargo/rust-ecosystem.md
msgid ""
"To prevent breaking code, editions are opt-in: you select the edition for "
"your crate via the `Cargo.toml` file."
msgstr ""
"Pour √©viter de casser le code, les √©ditions sont opt-in¬†: vous s√©lectionnez "
"l'√©dition pour votre crate via le fichier `Cargo.toml`."

#: src/cargo/rust-ecosystem.md
msgid ""
"To avoid splitting the ecosystem, Rust compilers can mix code written for "
"different editions."
msgstr ""
"Pour √©viter de diviser l'√©cosyst√®me, les compilateurs Rust peuvent m√©langer "
"le code √©crit pour diff√©rentes √©ditions."

#: src/cargo/rust-ecosystem.md
msgid ""
"Mention that it is quite rare to ever use the compiler directly not through "
"`cargo` (most users never do)."
msgstr ""
"Veuillez noter qu'il est assez rare d'utiliser le compilateur directement et "
"non via `cargo` (la plupart des utilisateurs ne le font jamais)."

#: src/cargo/rust-ecosystem.md
#, fuzzy
msgid ""
"It might be worth alluding that Cargo itself is an extremely powerful and "
"comprehensive tool. It is capable of many advanced features including but "
"not limited to:"
msgstr ""
"Il peut √™tre utile de mentionner que Cargo lui-m√™me est un outil extr√™mement "
"puissant et complet. Il est capable de nombreuses fonctionnalit√©s avanc√©es, "
"y compris, mais sans s'y limiter¬†:"

#: src/cargo/rust-ecosystem.md
msgid "Project/package structure"
msgstr "Structure du projet/paquets"

#: src/cargo/rust-ecosystem.md
msgid "[workspaces](https://doc.rust-lang.org/cargo/reference/workspaces.html)"
msgstr "\\[espaces de travail\\]"

#: src/cargo/rust-ecosystem.md
msgid "Dev Dependencies and Runtime Dependency management/caching"
msgstr ""
"Gestion/mise en cache des d√©pendances de d√©veloppement et des d√©pendances "
"d'ex√©cution"

#: src/cargo/rust-ecosystem.md
msgid ""
"[build scripting](https://doc.rust-lang.org/cargo/reference/build-scripts."
"html)"
msgstr "\\[cr√©er des scripts\\]"

#: src/cargo/rust-ecosystem.md
msgid ""
"[global installation](https://doc.rust-lang.org/cargo/commands/cargo-install."
"html)"
msgstr "\\[installation globale\\]"

#: src/cargo/rust-ecosystem.md
msgid ""
"It is also extensible with sub command plugins as well (such as [cargo "
"clippy](https://github.com/rust-lang/rust-clippy))."
msgstr ""
"Il est √©galement extensible avec des plugins de sous-commande (tels que "
"[cargo clippy](https://github.com/rust-lang/rust-clippy))."

#: src/cargo/rust-ecosystem.md
msgid ""
"Read more from the [official Cargo Book](https://doc.rust-lang.org/cargo/)"
msgstr "En savoir plus sur le \\[livre officiel de Cargo\\]"

#: src/cargo/code-samples.md
msgid "Code Samples in This Training"
msgstr "√âchantillons de code dans cette formation"

#: src/cargo/code-samples.md
msgid ""
"For this training, we will mostly explore the Rust language through examples "
"which can be executed through your browser. This makes the setup much easier "
"and ensures a consistent experience for everyone."
msgstr ""
"Pour cette formation, nous allons surtout explorer le langage Rust √† travers "
"des exemples qui peuvent √™tre ex√©cut√© via votre navigateur. Cela rend la "
"configuration beaucoup plus facile et assure une exp√©rience coh√©rente pour "
"chacun."

#: src/cargo/code-samples.md
msgid ""
"Installing Cargo is still encouraged: it will make it easier for you to do "
"the exercises. On the last day, we will do a larger exercise which shows you "
"how to work with dependencies and for that you need Cargo."
msgstr ""
"L'installation de Cargo est tout de m√™me encourag√©e : elle vous facilitera "
"la t√¢che des exercices. Le dernier jour, nous ferons un exercice plus large "
"qui vous montrera comment travailler avec des d√©pendances et pour cela vous "
"avez besoin de Cargo."

#: src/cargo/code-samples.md
msgid "The code blocks in this course are fully interactive:"
msgstr "Les blocs de code de ce cours sont enti√®rement interactifs¬†:"

#: src/cargo/code-samples.md src/cargo/running-locally.md
msgid "\"Edit me!\""
msgstr ""

#: src/cargo/code-samples.md
msgid "You can use "
msgstr "Vous pouvez utiliser "

#: src/cargo/code-samples.md
msgid " to execute the code when focus is in the text box."
msgstr " pour ex√©cuter le code lorsque le focus est dans la zone de texte."

#: src/cargo/code-samples.md
msgid ""
"Most code samples are editable like shown above. A few code samples are not "
"editable for various reasons:"
msgstr ""
"La plupart des exemples de code sont modifiables comme indiqu√© ci-dessus. "
"Quelques exemples de code ne sont pas modifiables pour diverses raisons¬†:"

#: src/cargo/code-samples.md
msgid ""
"The embedded playgrounds cannot execute unit tests. Copy-paste the code and "
"open it in the real Playground to demonstrate unit tests."
msgstr ""
"Les terrains de jeu int√©gr√©s ne peuvent pas ex√©cuter de tests unitaires. "
"Copiez-collez le code et ouvrez-le dans le vrai terrain de jeu pour "
"d√©montrer les tests unitaires."

#: src/cargo/code-samples.md
msgid ""
"The embedded playgrounds lose their state the moment you navigate away from "
"the page! This is the reason that the students should solve the exercises "
"using a local Rust installation or via the Playground."
msgstr ""
"Les terrains de jeux int√©gr√©es perdent leur √©tat au moment o√π vous naviguez "
"loin de la page! C'est la raison pour laquelle les √©l√®ves doivent r√©soudre "
"les exercices en utilisant une installation Rust locale ou via le terrain de "
"jeu."

#: src/cargo/running-locally.md
msgid "Running Code Locally with Cargo"
msgstr "Ex√©cuter le code localement avec Cargo"

#: src/cargo/running-locally.md
msgid ""
"If you want to experiment with the code on your own system, then you will "
"need to first install Rust. Do this by following the [instructions in the "
"Rust Book](https://doc.rust-lang.org/book/ch01-01-installation.html). This "
"should give you a working `rustc` and `cargo`. At the time of writing, the "
"latest stable Rust release has these version numbers:"
msgstr ""
"Si vous souhaitez exp√©rimenter le code sur votre propre syst√®me, vous aurez "
"besoin pour installer d'abord de Rust. Pour ce faire, suivez les "
"[instructions dans le livre Rust](https://doc.rust-lang.org/book/ch01-01-"
"installation.html). Cela devrait vous donner un \"rustc\" et un \"cargo\" "
"fonctionnels. Au moment de l'√©criture, la derni√®re version stable de Rust a "
"ces num√©ros de version:"

#: src/cargo/running-locally.md
msgid ""
"You can use any later version too since Rust maintains backwards "
"compatibility."
msgstr ""

#: src/cargo/running-locally.md
#, fuzzy
msgid ""
"With this in place, follow these steps to build a Rust binary from one of "
"the examples in this training:"
msgstr ""
"Une fois cela en place, suivez ces √©tapes pour cr√©er un binaire Rust √† "
"partir d'un des exemples dans cette formation :"

#: src/cargo/running-locally.md
msgid "Click the \"Copy to clipboard\" button on the example you want to copy."
msgstr ""

#: src/cargo/running-locally.md
msgid ""
"Use `cargo new exercise` to create a new `exercise/` directory for your code:"
msgstr ""

#: src/cargo/running-locally.md
msgid ""
"Navigate into `exercise/` and use `cargo run` to build and run your binary:"
msgstr ""

#: src/cargo/running-locally.md
msgid ""
"Replace the boiler-plate code in `src/main.rs` with your own code. For "
"example, using the example on the previous page, make `src/main.rs` look like"
msgstr ""

#: src/cargo/running-locally.md
msgid "Use `cargo run` to build and run your updated binary:"
msgstr ""

#: src/cargo/running-locally.md
msgid ""
"Use `cargo check` to quickly check your project for errors, use `cargo "
"build` to compile it without running it. You will find the output in `target/"
"debug/` for a normal debug build. Use `cargo build --release` to produce an "
"optimized release build in `target/release/`."
msgstr ""

#: src/cargo/running-locally.md
msgid ""
"You can add dependencies for your project by editing `Cargo.toml`. When you "
"run `cargo` commands, it will automatically download and compile missing "
"dependencies for you."
msgstr ""

#: src/cargo/running-locally.md
msgid ""
"Try to encourage the class participants to install Cargo and use a local "
"editor. It will make their life easier since they will have a normal "
"development environment."
msgstr ""
"Essayez d'encourager les participants √† installer Cargo et √† utiliser un "
"√©diteur local. Cela leur facilitera la vie puisqu'ils auront un "
"environnement de d√©veloppement normal."

#: src/welcome-day-1.md
msgid "Welcome to Day 1"
msgstr "Bienvenue au jour 1"

#: src/welcome-day-1.md
#, fuzzy
msgid ""
"This is the first day of Rust Fundamentals. We will cover a lot of ground "
"today:"
msgstr ""
"C'est le premier jour de Comprehensive Rust(le guide complet de Rust). Nous "
"couvrirons beaucoup de terrain aujourd'hui:"

#: src/welcome-day-1.md
msgid ""
"Basic Rust syntax: variables, scalar and compound types, enums, structs, "
"references, functions, and methods."
msgstr ""
"Syntaxe de base de Rust¬†: variables, types scalaires et compos√©s, "
"√©num√©rations, structures, r√©f√©rences, fonctions et m√©thodes."

#: src/welcome-day-1.md
#, fuzzy
msgid "Types and type inference."
msgstr "Inf√©rence de type"

#: src/welcome-day-1.md
msgid "Control flow constructs: loops, conditionals, and so on."
msgstr ""

#: src/welcome-day-1.md
msgid "User-defined types: structs and enums."
msgstr ""

#: src/welcome-day-1.md
#, fuzzy
msgid "Pattern matching: destructuring enums, structs, and arrays."
msgstr ""
"Filtrage par motif¬†: d√©structuration des √©num√©rations, des structures et des "
"tableaux."

#: src/welcome-day-1.md src/welcome-day-2.md src/welcome-day-3.md
#: src/welcome-day-4.md
msgid "Schedule"
msgstr ""

#: src/welcome-day-1.md src/welcome-day-1-afternoon.md src/welcome-day-2.md
#: src/welcome-day-2-afternoon.md src/welcome-day-3.md
#: src/welcome-day-3-afternoon.md src/welcome-day-4.md
#: src/welcome-day-4-afternoon.md
msgid "In this session:"
msgstr ""

#: src/welcome-day-1.md
msgid "[Welcome](./welcome-day-1.md) (5 minutes)"
msgstr ""

#: src/welcome-day-1.md
msgid "[Hello, World](./hello-world.md) (20 minutes)"
msgstr ""

#: src/welcome-day-1.md
msgid "[Types and Values](./types-and-values.md) (1 hour and 5 minutes)"
msgstr ""

#: src/welcome-day-1.md
msgid "[Control Flow Basics](./control-flow-basics.md) (1 hour)"
msgstr ""

#: src/welcome-day-1.md src/welcome-day-2-afternoon.md
msgid "Including 10 minute breaks, this session should take about 3 hours"
msgstr ""

#: src/welcome-day-1.md
msgid "Please remind the students that:"
msgstr "Veuillez rappeler aux √©l√®ves que :"

#: src/welcome-day-1.md
#, fuzzy
msgid ""
"They should ask questions when they get them, don't save them to the end."
msgstr ""
"Ils doivent poser des questions lorsqu'ils les re√ßoivent, ne les enregistrez "
"pas jusqu'√† la fin."

#: src/welcome-day-1.md
#, fuzzy
msgid ""
"The class is meant to be interactive and discussions are very much "
"encouraged!"
msgstr ""
"Le cours se veut interactif et les discussions sont vivement encourag√©es¬†!"

#: src/welcome-day-1.md
#, fuzzy
msgid ""
"As an instructor, you should try to keep the discussions relevant, i.e., "
"keep the discussions related to how Rust does things vs some other language. "
"It can be hard to find the right balance, but err on the side of allowing "
"discussions since they engage people much more than one-way communication."
msgstr ""
"En tant qu'instructeur, vous devez essayer de garder les discussions "
"pertinentes, c'est-√†-dire, garder le lien avec la fa√ßon dont Rust fait les "
"choses par rapport √† un autre langage. √áa peut √™tre difficile de trouver le "
"bon √©quilibre, mais privil√©giez les discussions car elles engagent les gens "
"bien plus que la communication √† sens unique."

#: src/welcome-day-1.md
#, fuzzy
msgid ""
"The questions will likely mean that we talk about things ahead of the slides."
msgstr ""
"Les questions signifieront probablement que nous parlons de choses avant les "
"diapositives."

#: src/welcome-day-1.md
#, fuzzy
msgid ""
"This is perfectly okay! Repetition is an important part of learning. "
"Remember that the slides are just a support and you are free to skip them as "
"you like."
msgstr ""
"C'est tout √† fait correct! La r√©p√©tition est une partie importante de "
"l'apprentissage. N'oubliez pas que les diapositives ne sont qu'un support et "
"que vous √™tes libre de les sauter si vous le souhaitez."

#: src/welcome-day-1.md
msgid ""
"The idea for the first day is to show the \"basic\" things in Rust that "
"should have immediate parallels in other languages. The more advanced parts "
"of Rust come on the subsequent days."
msgstr ""

#: src/welcome-day-1.md
msgid ""
"If you're teaching this in a classroom, this is a good place to go over the "
"schedule. Note that there is an exercise at the end of each segment, "
"followed by a break. Plan to cover the exercise solution after the break. "
"The times listed here are a suggestion in order to keep the course on "
"schedule. Feel free to be flexible and adjust as necessary!"
msgstr ""

#: src/hello-world.md src/types-and-values.md src/control-flow-basics.md
#: src/tuples-and-arrays.md src/references.md src/user-defined-types.md
#: src/pattern-matching.md src/methods-and-traits.md src/generics.md
#: src/std-types.md src/std-traits.md src/memory-management.md
#: src/smart-pointers.md src/borrowing.md src/slices-and-lifetimes.md
#: src/iterators.md src/modules.md src/testing.md src/error-handling.md
#: src/unsafe-rust.md
msgid "In this segment:"
msgstr ""

#: src/hello-world.md
msgid "[What is Rust?](./hello-world/what-is-rust.md) (10 minutes)"
msgstr ""

#: src/hello-world.md
msgid "[Hello, World](./hello-world/hello-world.md) (5 minutes)"
msgstr ""

#: src/hello-world.md
msgid "[Benefits of Rust](./hello-world/benefits.md) (3 minutes)"
msgstr ""

#: src/hello-world.md
msgid "[Playground](./hello-world/playground.md) (2 minutes)"
msgstr ""

#: src/hello-world.md
msgid "This segment should take about 20 minutes"
msgstr ""

#: src/hello-world/what-is-rust.md
msgid ""
"Rust is a new programming language which had its [1.0 release in 2015]"
"(https://blog.rust-lang.org/2015/05/15/Rust-1.0.html):"
msgstr ""
"Rust est un nouveau langage de programmation qui a eu sa [version 1.0 en "
"2015](https://blog.rust-lang.org/2015/05/15/Rust-1.0.html)¬†:"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "Rust is a statically compiled language in a similar role as C++"
msgstr "Rust est un langage compil√© statiquement dans un r√¥le similaire √† C++"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "`rustc` uses LLVM as its backend."
msgstr "`rustc` utilise LLVM comme backend."

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid ""
"Rust supports many [platforms and architectures](https://doc.rust-lang.org/"
"nightly/rustc/platform-support.html):"
msgstr ""
"Rust prend en charge de nombreuses [plates-formes et architectures](https://"
"doc.rust-lang.org/nightly/rustc/platform-support.html):"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "x86, ARM, WebAssembly, ..."
msgstr "x86, ARM, WebAssembly, ... \\*Linux, Mac, Windows, ..."

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "Linux, Mac, Windows, ..."
msgstr "Rust est utilis√© pour une large gamme d'appareils¬†:"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "Rust is used for a wide range of devices:"
msgstr "firmware et chargeurs de d√©marrage,"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "firmware and boot loaders,"
msgstr "√©crans intelligents,"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "smart displays,"
msgstr "t√©l√©phones portables,"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "mobile phones,"
msgstr "ordinateurs de bureau,"

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid "desktops,"
msgstr "serveurs."

#: src/hello-world/what-is-rust.md
msgid "servers."
msgstr ""

#: src/hello-world/what-is-rust.md
msgid "Rust fits in the same area as C++:"
msgstr "Rust s'inscrit dans le m√™me domaine que C++¬†:"

#: src/hello-world/what-is-rust.md
msgid "High flexibility."
msgstr "Grande flexibilit√©."

#: src/hello-world/what-is-rust.md
msgid "High level of control."
msgstr "Haut niveau de contr√¥le."

#: src/hello-world/what-is-rust.md
#, fuzzy
msgid ""
"Can be scaled down to very constrained devices such as microcontrollers."
msgstr ""
"Peut √™tre r√©duit √† des appareils tr√®s limit√©s comme les t√©l√©phones mobiles."

#: src/hello-world/what-is-rust.md
msgid "Has no runtime or garbage collection."
msgstr "N'a pas de temps d'ex√©cution ou de r√©cup√©ration d'ordures."

#: src/hello-world/what-is-rust.md
msgid "Focuses on reliability and safety without sacrificing performance."
msgstr ""
"Se concentre sur la fiabilit√© et la s√©curit√© sans sacrifier les performances."

#: src/hello-world/hello-world.md
msgid ""
"Let us jump into the simplest possible Rust program, a classic Hello World "
"program:"
msgstr ""
"Passons au programme Rust le plus simple possible, un Bonjour Monde "
"classique programme:"

#: src/hello-world/hello-world.md
msgid "\"Hello üåç!\""
msgstr ""

#: src/hello-world/hello-world.md
msgid "What you see:"
msgstr "Ce que tu vois:"

#: src/hello-world/hello-world.md
msgid "Functions are introduced with `fn`."
msgstr "Les fonctions sont introduites avec `fn`."

#: src/hello-world/hello-world.md
msgid "Blocks are delimited by curly braces like in C and C++."
msgstr "Les blocs sont d√©limit√©s par des accolades comme en C et C++."

#: src/hello-world/hello-world.md
msgid "The `main` function is the entry point of the program."
msgstr "La fonction `main` est le point d'entr√©e du programme."

#: src/hello-world/hello-world.md
msgid "Rust has hygienic macros, `println!` is an example of this."
msgstr "Rust a des macros hygi√©niques, `println!` en est un exemple."

#: src/hello-world/hello-world.md
msgid "Rust strings are UTF-8 encoded and can contain any Unicode character."
msgstr ""
"Les strings Rust sont encod√©es en UTF-8 et peuvent contenir n'importe quel "
"caract√®re Unicode."

#: src/hello-world/hello-world.md
#, fuzzy
msgid ""
"This slide tries to make the students comfortable with Rust code. They will "
"see a ton of it over the next four days so we start small with something "
"familiar."
msgstr ""
"Cette diapositive tente de mettre les √©tudiants √† l'aise avec le code Rust. "
"Ils en verront une tonne durant les quatre prochains jours, alors nous "
"commen√ßons petit avec quelque chose de familier."

#: src/hello-world/hello-world.md
#, fuzzy
msgid ""
"Rust is very much like other languages in the C/C++/Java tradition. It is "
"imperative and it doesn't try to reinvent things unless absolutely necessary."
msgstr ""
"Rust ressemble beaucoup aux autres langages traditionnels C/C++/Java. C'est "
"imp√©ratif (non fonctionnel) et il n'essaie pas de r√©inventer les choses √† "
"moins qu'absolument n√©cessaire."

#: src/hello-world/hello-world.md
#, fuzzy
msgid "Rust is modern with full support for things like Unicode."
msgstr ""
"Rust est moderne avec un support complet pour des choses comme Unicode."

#: src/hello-world/hello-world.md
#, fuzzy
msgid ""
"Rust uses macros for situations where you want to have a variable number of "
"arguments (no function [overloading](../control-flow-basics/functions.md))."
msgstr ""
"Rust utilise des macros pour les situations o√π vous souhaitez avoir un "
"nombre variable d'arguments (pas de fonction [surcharg√©es](basic-syntax/"
"functions-interlude.md))."

#: src/hello-world/hello-world.md
#, fuzzy
msgid ""
"Macros being 'hygienic' means they don't accidentally capture identifiers "
"from the scope they are used in. Rust macros are actually only [partially "
"hygienic](https://veykril.github.io/tlborm/decl-macros/minutiae/hygiene."
"html)."
msgstr ""
"Les macros √©tant \"hygi√©niques\", elles ne capturent pas accidentellement "
"les identifiants de la port√©e dans laquelle elles sont utilis√©es. Les macros "
"Rust ne sont en fait que [partiellement hygi√©nique](https://veykril.github."
"io/tlborm/decl-macros/minutiae/hygiene.html)."

#: src/hello-world/hello-world.md
msgid ""
"Rust is multi-paradigm. For example, it has powerful [object-oriented "
"programming features](https://doc.rust-lang.org/book/ch17-00-oop.html), and, "
"while it is not a functional language, it includes a range of [functional "
"concepts](https://doc.rust-lang.org/book/ch13-00-functional-features.html)."
msgstr ""

#: src/hello-world/benefits.md
msgid "Some unique selling points of Rust:"
msgstr "Quelques arguments de vente uniques √† Rust¬†:"

#: src/hello-world/benefits.md
msgid ""
"_Compile time memory safety_ - whole classes of memory bugs are prevented at "
"compile time"
msgstr ""

#: src/hello-world/benefits.md
msgid "No uninitialized variables."
msgstr "Aucune variable non initialis√©e."

#: src/hello-world/benefits.md
msgid "No double-frees."
msgstr "Pas de double lib√©ration de m√©moire."

#: src/hello-world/benefits.md
msgid "No use-after-free."
msgstr "Aucune utilisation apr√®s la lib√©ration."

#: src/hello-world/benefits.md
msgid "No `NULL` pointers."
msgstr "Pas de pointeurs `NULL`."

#: src/hello-world/benefits.md
msgid "No forgotten locked mutexes."
msgstr "Pas de mutex verrouill√©s oubli√©s."

#: src/hello-world/benefits.md
msgid "No data races between threads."
msgstr "Pas de courses de donn√©es entre les threads."

#: src/hello-world/benefits.md
msgid "No iterator invalidation."
msgstr "Aucune invalidation d'it√©rateur."

#: src/hello-world/benefits.md
msgid ""
"_No undefined runtime behavior_ - what a Rust statement does is never left "
"unspecified"
msgstr ""

#: src/hello-world/benefits.md
#, fuzzy
msgid "Array access is bounds checked."
msgstr "L'acc√®s au tableau est v√©rifi√© dans les limites."

#: src/hello-world/benefits.md
#, fuzzy
msgid "Integer overflow is defined (panic or wrap-around)."
msgstr "Le d√©bordement d'entier est d√©fini."

#: src/hello-world/benefits.md
msgid ""
"_Modern language features_ - as expressive and ergonomic as higher-level "
"languages"
msgstr ""

#: src/hello-world/benefits.md
#, fuzzy
msgid "Enums and pattern matching."
msgstr "√ânum√©rations et filtrage par motif."

#: src/hello-world/benefits.md
#, fuzzy
msgid "Generics."
msgstr "G√©n√©riques."

#: src/hello-world/benefits.md
#, fuzzy
msgid "No overhead FFI."
msgstr "Pas de frais g√©n√©raux FFI."

#: src/hello-world/benefits.md
#, fuzzy
msgid "Zero-cost abstractions."
msgstr "Abstractions √† co√ªt z√©ro."

#: src/hello-world/benefits.md
#, fuzzy
msgid "Great compiler errors."
msgstr "Grandes erreurs de compilation."

#: src/hello-world/benefits.md
#, fuzzy
msgid "Built-in dependency manager."
msgstr "Gestionnaire de d√©pendances int√©gr√©."

#: src/hello-world/benefits.md
#, fuzzy
msgid "Built-in support for testing."
msgstr "Support int√©gr√© pour les tests."

#: src/hello-world/benefits.md
#, fuzzy
msgid "Excellent Language Server Protocol support."
msgstr "Excellente prise en charge du protocole de serveur de langue."

#: src/hello-world/benefits.md
msgid ""
"Do not spend much time here. All of these points will be covered in more "
"depth later."
msgstr ""

#: src/hello-world/benefits.md
msgid ""
"Make sure to ask the class which languages they have experience with. "
"Depending on the answer you can highlight different features of Rust:"
msgstr ""
"Assurez-vous de demander √† la classe dans quels langages ils ont de "
"l'exp√©rience. Selon la r√©ponse, vous pouvez mettre en √©vidence diff√©rentes "
"fonctionnalit√©s de Rust¬†:"

#: src/hello-world/benefits.md
msgid ""
"Experience with C or C++: Rust eliminates a whole class of _runtime errors_ "
"via the borrow checker. You get performance like in C and C++, but you don't "
"have the memory unsafety issues. In addition, you get a modern language with "
"constructs like pattern matching and built-in dependency management."
msgstr ""
"Exp√©rience avec C ou C++¬†: Rust √©limine toute une classe d'_erreurs "
"d'ex√©cution_ via le v√©rificateur d'emprunt. On obtient des performances "
"comme en C et C++, mais sans probl√®mes d'ins√©curit√© de la m√©moire. De plus, "
"Rust est un langage moderne avec des constructions telles que le filtrage "
"par motif et la gestion int√©gr√©e des d√©pendances."

#: src/hello-world/benefits.md
msgid ""
"Experience with Java, Go, Python, JavaScript...: You get the same memory "
"safety as in those languages, plus a similar high-level language feeling. In "
"addition you get fast and predictable performance like C and C++ (no garbage "
"collector) as well as access to low-level hardware (should you need it)"
msgstr ""
"Exp√©rience avec Java, Go, Python, JavaScript... : On b√©n√©ficie de la m√™me "
"s√©curit√© m√©moire que dans ces langages, plus un sentiment de langage de haut "
"niveau similaire. En outre on obtient des performances rapides et "
"pr√©visibles comme C et C++ (pas de ramassage d'ordures) ainsi que l'acc√®s au "
"mat√©riel de bas niveau (si l'on en a besoin)."

#: src/hello-world/playground.md
msgid ""
"The [Rust Playground](https://play.rust-lang.org/) provides an easy way to "
"run short Rust programs, and is the basis for the examples and exercises in "
"this course. Try running the \"hello-world\" program it starts with. It "
"comes with a few handy features:"
msgstr ""

#: src/hello-world/playground.md
msgid ""
"Under \"Tools\", use the `rustfmt` option to format your code in the "
"\"standard\" way."
msgstr ""

#: src/hello-world/playground.md
msgid ""
"Rust has two main \"profiles\" for generating code: Debug (extra runtime "
"checks, less optimization) and Release (fewer runtime checks, lots of "
"optimization). These are accessible under \"Debug\" at the top."
msgstr ""

#: src/hello-world/playground.md
msgid ""
"If you're interested, use \"ASM\" under \"...\" to see the generated "
"assembly code."
msgstr ""

#: src/hello-world/playground.md
msgid ""
"As students head into the break, encourage them to open up the playground "
"and experiment a little. Encourage them to keep the tab open and try things "
"out during the rest of the course. This is particularly helpful for advanced "
"students who want to know more about Rust's optimizations or generated "
"assembly."
msgstr ""

#: src/types-and-values.md
msgid "[Variables](./types-and-values/variables.md) (5 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Values](./types-and-values/values.md) (10 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Arithmetic](./types-and-values/arithmetic.md) (5 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Strings](./types-and-values/strings.md) (10 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Type Inference](./types-and-values/inference.md) (5 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Exercise: Fibonacci](./types-and-values/exercise.md) (30 minutes)"
msgstr ""

#: src/types-and-values.md src/testing.md src/unsafe-rust.md
msgid "This segment should take about 1 hour and 5 minutes"
msgstr ""

#: src/types-and-values/variables.md
#, fuzzy
msgid ""
"Rust provides type safety via static typing. Variable bindings are made with "
"`let`:"
msgstr ""
"Rust fournit une s√©curit√© de type via le typage statique. Les liaisons "
"variables sont immuables par d√©faut:"

#: src/types-and-values/variables.md src/control-flow-basics/loops.md
#: src/control-flow-basics/break-continue.md
#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"x: {x}\""
msgstr ""

#: src/types-and-values/variables.md
msgid ""
"// x = 20;\n"
"    // println!(\"x: {x}\");\n"
msgstr ""

#: src/types-and-values/variables.md
msgid ""
"Uncomment the `x = 20` to demonstrate that variables are immutable by "
"default. Add the `mut` keyword to allow changes."
msgstr ""

#: src/types-and-values/variables.md
msgid ""
"The `i32` here is the type of the variable. This must be known at compile "
"time, but type inference (covered later) allows the programmer to omit it in "
"many cases."
msgstr ""

#: src/types-and-values/values.md
msgid ""
"Here are some basic built-in types, and the syntax for literal values of "
"each type."
msgstr ""

#: src/types-and-values/values.md src/tuples-and-arrays/tuples-and-arrays.md
#: src/unsafe-rust/exercise.md
#, fuzzy
msgid "Types"
msgstr "Types"

#: src/types-and-values/values.md src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid "Literals"
msgstr "Litt√©raux"

#: src/types-and-values/values.md
#, fuzzy
msgid "Signed integers"
msgstr "Entiers sign√©s"

#: src/types-and-values/values.md
#, fuzzy
msgid "`i8`, `i16`, `i32`, `i64`, `i128`, `isize`"
msgstr "`i8`, `i16`, `i32`, `i64`, `i128`, `isize`"

#: src/types-and-values/values.md
#, fuzzy
msgid "`-10`, `0`, `1_000`, `123_i64`"
msgstr "`-10`, `0`, `1_000`, `123i64`"

#: src/types-and-values/values.md
#, fuzzy
msgid "Unsigned integers"
msgstr "Entiers non sign√©s"

#: src/types-and-values/values.md
#, fuzzy
msgid "`u8`, `u16`, `u32`, `u64`, `u128`, `usize`"
msgstr "`u8`, `u16`, `u32`, `u64`, `u128`, `usize`"

#: src/types-and-values/values.md
#, fuzzy
msgid "`0`, `123`, `10_u16`"
msgstr "`0`, `123`, `10u16`"

#: src/types-and-values/values.md
#, fuzzy
msgid "Floating point numbers"
msgstr "Nombres √† virgule flottante"

#: src/types-and-values/values.md
#, fuzzy
msgid "`f32`, `f64`"
msgstr "`f32`, `f64`"

#: src/types-and-values/values.md
#, fuzzy
msgid "`3.14`, `-10.0e20`, `2_f32`"
msgstr "`3.14`, `-10.0e20`, `2f32`"

#: src/types-and-values/values.md
#, fuzzy
msgid "Unicode scalar values"
msgstr "Valeurs scalaires Unicode"

#: src/types-and-values/values.md
#, fuzzy
msgid "`char`"
msgstr "`car`"

#: src/types-and-values/values.md
#, fuzzy
msgid "`'a'`, `'Œ±'`, `'‚àû'`"
msgstr "`'a'`, `'Œ±'`, `'‚àû'`"

#: src/types-and-values/values.md
#, fuzzy
msgid "Booleans"
msgstr "Cha√Ænes d'octets"

#: src/types-and-values/values.md
#, fuzzy
msgid "`bool`"
msgstr "`&[u8]`"

#: src/types-and-values/values.md
#, fuzzy
msgid "`true`, `false`"
msgstr ""
"`b\"abc\"`, `br#\" \" \"#`\n"
"\n"
"Bool√©ens\n"
"\n"
"`bool`\n"
"\n"
"'vrai', 'faux'"

#: src/types-and-values/values.md
#, fuzzy
msgid "The types have widths as follows:"
msgstr "Les types ont des largeurs comme suit¬†:"

#: src/types-and-values/values.md
#, fuzzy
msgid "`iN`, `uN`, and `fN` are _N_ bits wide,"
msgstr "`iN`, `uN` et `fN` ont une largeur de _N_ bits,"

#: src/types-and-values/values.md
#, fuzzy
msgid "`isize` and `usize` are the width of a pointer,"
msgstr "`isize` et `usize` sont la largeur d'un pointeur,"

#: src/types-and-values/values.md
#, fuzzy
msgid "`char` is 32 bits wide,"
msgstr "`char` a une largeur de 32 bits,"

#: src/types-and-values/values.md
#, fuzzy
msgid "`bool` is 8 bits wide."
msgstr "`bool` a une largeur de 8 bits."

#: src/types-and-values/values.md
msgid "There are a few syntaxes which are not shown above:"
msgstr ""

#: src/types-and-values/values.md
msgid ""
"All underscores in numbers can be left out, they are for legibility only. So "
"`1_000` can be written as `1000` (or `10_00`), and `123_i64` can be written "
"as `123i64`."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid "\"result: {}\""
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"This is the first time we've seen a function other than `main`, but the "
"meaning should be clear: it takes three integers, and returns an integer. "
"Functions will be covered in more detail later."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid "Arithmetic is very similar to other languages, with similar precedence."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"What about integer overflow? In C and C++ overflow of _signed_ integers is "
"actually undefined, and might do different things on different platforms or "
"compilers. In Rust, it's defined."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"Change the `i32`'s to `i16` to see an integer overflow, which panics "
"(checked) in a debug build and wraps in a release build. There are other "
"options, such as overflowing, saturating, and carrying. These are accessed "
"with method syntax, e.g., `(a * b).saturating_add(b * c).saturating_add(c * "
"a)`."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"In fact, the compiler will detect overflow of constant expressions, which is "
"why the example requires a separate function."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"Rust has two types to represent strings, both of which will be covered in "
"more depth later. Both _always_ store UTF-8 encoded strings."
msgstr ""

#: src/types-and-values/strings.md
#, fuzzy
msgid "`String` - a modifiable, owned string."
msgstr "`String` un tampon de cha√Æne mutable."

#: src/types-and-values/strings.md
msgid "`&str` - a read-only string. String literals have this type."
msgstr ""

#: src/types-and-values/strings.md
msgid "\"Greetings\""
msgstr ""

#: src/types-and-values/strings.md
msgid "\"ü™ê\""
msgstr ""

#: src/types-and-values/strings.md
msgid "\", \""
msgstr ""

#: src/types-and-values/strings.md
msgid "\"final sentence: {}\""
msgstr ""

#: src/types-and-values/strings.md src/async/control-flow/join.md
msgid "\"{:?}\""
msgstr ""

#: src/types-and-values/strings.md
msgid "//println!(\"{:?}\", &sentence[12..13]);\n"
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"This slide introduces strings. Everything here will be covered in more depth "
"later, but this is enough for subsequent slides and exercises to use strings."
msgstr ""

#: src/types-and-values/strings.md
msgid "Invalid UTF-8 in a string is UB, and this not allowed in safe Rust."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"`String` is a user-defined type with a constructor (`::new()`) and methods "
"like `s.push_str(..)`."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"The `&` in `&str` indicates that this is a reference. We will cover "
"references later, so for now just think of `&str` as a unit meaning \"a read-"
"only string\"."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"The commented-out line is indexing into the string by byte position. "
"`12..13` does not end on a character boundary, so the program panics. Adjust "
"it to a range that does, based on the error message."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"Raw strings allow you to create a `&str` value with escapes disabled: "
"`r\"\\n\" == \"\\\\n\"`. You can embed double-quotes by using an equal "
"amount of `#` on either side of the quotes:"
msgstr ""

#: src/types-and-values/inference.md
#, fuzzy
msgid "Rust will look at how the variable is _used_ to determine the type:"
msgstr ""
"Rust examinera comment la variable est _utilis√©e_ pour d√©terminer le type¬†:"

#: src/types-and-values/inference.md
#, fuzzy
msgid ""
"This slide demonstrates how the Rust compiler infers types based on "
"constraints given by variable declarations and usages."
msgstr ""
"Cette diapositive montre comment le compilateur Rust d√©duit les types en "
"fonction des contraintes donn√©es par les d√©clarations et les utilisations "
"des variables."

#: src/types-and-values/inference.md
#, fuzzy
msgid ""
"It is very important to emphasize that variables declared like this are not "
"of some sort of dynamic \"any type\" that can hold any data. The machine "
"code generated by such declaration is identical to the explicit declaration "
"of a type. The compiler does the job for us and helps us write more concise "
"code."
msgstr ""
"Il est tr√®s important de souligner que les variables d√©clar√©es de cette "
"mani√®re ne sont pas d'une sorte de \"tout type\" dynamique qui peut d√©tenir "
"des donn√©es. Le code machine g√©n√©r√© par une telle d√©claration est identique "
"√† la d√©claration explicite d'un type. Le compilateur fait le travail pour "
"nous et nous aide √† √©crire un code plus concis."

#: src/types-and-values/inference.md
msgid ""
"When nothing constrains the type of an integer literal, Rust defaults to "
"`i32`. This sometimes appears as `{integer}` in error messages. Similarly, "
"floating-point literals default to `f64`."
msgstr ""

#: src/types-and-values/inference.md
msgid "// ERROR: no implementation for `{float} == {integer}`\n"
msgstr ""

#: src/types-and-values/exercise.md
msgid ""
"The first and second Fibonacci numbers are both `1`. For n>2, the n'th "
"Fibonacci number is calculated recursively as the sum of the n-1'th and "
"n-2'th Fibonacci numbers."
msgstr ""

#: src/types-and-values/exercise.md
msgid ""
"Write a function `fib(n)` that calculates the n'th Fibonacci number. When "
"will this function panic?"
msgstr ""

#: src/types-and-values/exercise.md
msgid "// The base case.\n"
msgstr ""

#: src/types-and-values/exercise.md src/control-flow-basics/exercise.md
#, fuzzy
msgid "\"Implement this\""
msgstr "Mise en ≈ìuvre"

#: src/types-and-values/exercise.md
msgid "// The recursive case.\n"
msgstr ""

#: src/types-and-values/exercise.md src/types-and-values/solution.md
msgid "\"fib(n) = {}\""
msgstr ""

#: src/control-flow-basics.md
msgid "[Conditionals](./control-flow-basics/conditionals.md) (5 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid "[Loops](./control-flow-basics/loops.md) (5 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid ""
"[break and continue](./control-flow-basics/break-continue.md) (5 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid ""
"[Blocks and Scopes](./control-flow-basics/blocks-and-scopes.md) (10 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid "[Functions](./control-flow-basics/functions.md) (3 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid "[Macros](./control-flow-basics/macros.md) (2 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid ""
"[Exercise: Collatz Sequence](./control-flow-basics/exercise.md) (30 minutes)"
msgstr ""

#: src/control-flow-basics.md src/tuples-and-arrays.md src/borrowing.md
msgid "This segment should take about 1 hour"
msgstr ""

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid "Much of the Rust syntax will be familiar to you from C, C++ or Java:"
msgstr ""
"Une grande partie de la syntaxe de Rust vous sera famili√®re en C, C++ ou "
"Java¬†:"

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid "Blocks are delimited by curly braces."
msgstr "Les blocs et les port√©es sont d√©limit√©s par des accolades."

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid ""
"Line comments are started with `//`, block comments are delimited by `/* ... "
"*/`."
msgstr ""
"Les commentaires de ligne commencent par `//`, les commentaires de bloc sont "
"d√©limit√©s par `/* ... */`."

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid "Keywords like `if` and `while` work the same."
msgstr "Des mots-cl√©s comme `if` et `while` fonctionnent de la m√™me mani√®re."

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid "Variable assignment is done with `=`, comparison is done with `==`."
msgstr ""
"L'affectation des variables se fait avec `=`, la comparaison se fait avec "
"`==`."

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid "`if` expressions"
msgstr "expressions \"si\""

#: src/control-flow-basics/conditionals.md
msgid ""
"You use [`if` expressions](https://doc.rust-lang.org/reference/expressions/"
"if-expr.html#if-expressions) exactly like `if` statements in other languages:"
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "\"small\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "\"biggish\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "\"huge\""
msgstr ""

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid ""
"In addition, you can use `if` as an expression. The last expression of each "
"block becomes the value of the `if` expression:"
msgstr ""
"De plus, vous pouvez l'utiliser comme expression. Cela fait la m√™me chose "
"que ci-dessus:"

#: src/control-flow-basics/conditionals.md
msgid "\"large\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "\"number size: {}\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid ""
"Because `if` is an expression and must have a particular type, both of its "
"branch blocks must have the same type. Show what happens if you add `;` "
"after `\"small\"` in the second example."
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid ""
"When `if` is used in an expression, the expression must have a `;` to "
"separate it from the next statement. Remove the `;` before `println!` to see "
"the compiler error."
msgstr ""

#: src/control-flow-basics/loops.md
msgid "There are three looping keywords in Rust: `while`, `loop`, and `for`:"
msgstr ""

#: src/control-flow-basics/loops.md
#, fuzzy
msgid "`while`"
msgstr "Expressions `while`"

#: src/control-flow-basics/loops.md
#, fuzzy
msgid ""
"The [`while` keyword](https://doc.rust-lang.org/reference/expressions/loop-"
"expr.html#predicate-loops) works much like in other languages, executing the "
"loop body as long as the condition is true."
msgstr ""
"Comme avec `if`, il existe une variante `while let` qui teste √† plusieurs "
"reprises une valeur contre un mod√®le¬†:"

#: src/control-flow-basics/loops.md
msgid "\"Final x: {x}\""
msgstr ""

#: src/control-flow-basics/loops.md
#, fuzzy
msgid "`for`"
msgstr "Boucles `for`"

#: src/control-flow-basics/loops.md
#, fuzzy
msgid ""
"The [`for` loop](https://doc.rust-lang.org/std/keyword.for.html) iterates "
"over ranges of values:"
msgstr ""
"[`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html) utilis√© pour "
"d√©finir les destructeurs."

#: src/control-flow-basics/loops.md
msgid "`loop`"
msgstr ""

#: src/control-flow-basics/loops.md
#, fuzzy
msgid ""
"The [`loop` statement](https://doc.rust-lang.org/std/keyword.loop.html) just "
"loops forever, until a `break`."
msgstr ""
"[`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html) utilis√© pour "
"d√©finir les destructeurs."

#: src/control-flow-basics/loops.md
msgid "\"{i}\""
msgstr ""

#: src/control-flow-basics/loops.md
msgid ""
"We will discuss iteration later; for now, just stick to range expressions."
msgstr ""

#: src/control-flow-basics/loops.md
msgid ""
"Note that the `for` loop only iterates to `4`. Show the `1..=5` syntax for "
"an inclusive range."
msgstr ""

#: src/control-flow-basics/break-continue.md
msgid ""
"If you want to exit any kind of loop early, use [`break`](https://doc.rust-"
"lang.org/reference/expressions/loop-expr.html#break-expressions). For "
"`loop`, this can take an optional expression that becomes the value of the "
"`loop` expression."
msgstr ""

#: src/control-flow-basics/break-continue.md
msgid ""
"If you want to immediately start the next iteration use [`continue`](https://"
"doc.rust-lang.org/reference/expressions/loop-expr.html#continue-expressions)."
msgstr ""

#: src/control-flow-basics/break-continue.md
msgid "\"{result}\""
msgstr ""

#: src/control-flow-basics/break-continue.md
#, fuzzy
msgid ""
"Both `continue` and `break` can optionally take a label argument which is "
"used to break out of nested loops:"
msgstr ""
"Si vous voulez quitter une boucle plus t√¥t, utilisez `break`, si vous voulez "
"commencer imm√©diatement la prochaine it√©ration utilise `continue`. "
"`continue` et `break` peuvent √©ventuellement prenez un argument d'√©tiquette "
"qui est utilis√© pour sortir des boucles imbriqu√©es¬†:"

#: src/control-flow-basics/break-continue.md
msgid "\"x: {x}, i: {i}\""
msgstr ""

#: src/control-flow-basics/break-continue.md
#, fuzzy
msgid ""
"In this case we break the outer loop after 3 iterations of the inner loop."
msgstr ""
"Dans ce cas, nous cassons la boucle externe apr√®s 3 it√©rations de la boucle "
"interne."

#: src/control-flow-basics/break-continue.md
msgid ""
"Note that `loop` is the only looping construct which returns a non-trivial "
"value. This is because it's guaranteed to be entered at least once (unlike "
"`while` and `for` loops)."
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "Blocks"
msgstr "Blocs"

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid ""
"A block in Rust contains a sequence of expressions, enclosed by braces `{}`. "
"Each block has a value and a type, which are those of the last expression of "
"the block:"
msgstr ""
"Un bloc en Rust a une valeur et un type : la valeur est la derni√®re "
"expression du bloc:"

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"y: {y}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid ""
"If the last expression ends with `;`, then the resulting value and type is "
"`()`."
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "Scopes and Shadowing"
msgstr "Port√©e et masquage"

#: src/control-flow-basics/blocks-and-scopes.md
msgid "A variable's scope is limited to the enclosing block."
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid ""
"You can shadow variables, both those from outer scopes and variables from "
"the same scope:"
msgstr ""
"Vous pouvez masquer des variables, √† la fois celles des port√©es externes et "
"celles des m√™me p√©rim√®tre :"

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"before: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md src/std-traits/from-and-into.md
#: src/slices-and-lifetimes/solution.md
msgid "\"hello\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"inner scope: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"shadowed in inner scope: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"after: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid ""
"You can show how the value of the block changes by changing the last line in "
"the block. For instance, adding/removing a semicolon or using a `return`."
msgstr ""
"Vous pouvez montrer comment la valeur du bloc change en modifiant la "
"derni√®re ligne du bloc. Par exemple, ajouter/supprimer un point-virgule ou "
"utiliser un \"retour\"."

#: src/control-flow-basics/blocks-and-scopes.md
msgid ""
"Show that a variable's scope is limited by adding a `b` in the inner block "
"in the last example, and then trying to access it outside that block."
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid ""
"Shadowing is different from mutation, because after shadowing both "
"variable's memory locations exist at the same time. Both are available under "
"the same name, depending where you use it in the code."
msgstr ""
"D√©finition¬†: l'occultation est diff√©rente de la mutation, car apr√®s "
"l'occultation, les emplacements de m√©moire des deux variables existent en "
"m√™me temps. Les deux sont disponibles sous le m√™me nom, selon l'endroit o√π "
"vous l'utilisez dans le code."

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid "A shadowing variable can have a different type."
msgstr "Une variable d'occultation peut avoir un type diff√©rent."

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid ""
"Shadowing looks obscure at first, but is convenient for holding on to values "
"after `.unwrap()`."
msgstr ""
"L'ombrage semble obscur au d√©but, mais est pratique pour conserver les "
"valeurs apr√®s `.unwrap()`."

#: src/control-flow-basics/functions.md
msgid ""
"Declaration parameters are followed by a type (the reverse of some "
"programming languages), then a return type."
msgstr ""

#: src/control-flow-basics/functions.md
msgid ""
"The last expression in a function body (or any block) becomes the return "
"value. Simply omit the `;` at the end of the expression. The `return` "
"keyword can be used for early return, but the \"bare value\" form is "
"idiomatic at the end of a function (refactor `gcd` to use a `return`)."
msgstr ""

#: src/control-flow-basics/functions.md
msgid ""
"Some functions have no return value, and return the 'unit type', `()`. The "
"compiler will infer this if the `-> ()` return type is omitted."
msgstr ""

#: src/control-flow-basics/functions.md
#, fuzzy
msgid ""
"Overloading is not supported -- each function has a single implementation."
msgstr "Chaque fonction a une seule impl√©mentation¬†:"

#: src/control-flow-basics/functions.md
msgid ""
"Always takes a fixed number of parameters. Default arguments are not "
"supported. Macros can be used to support variadic functions."
msgstr ""

#: src/control-flow-basics/functions.md
#, fuzzy
msgid ""
"Always takes a single set of parameter types. These types can be generic, "
"which will be covered later."
msgstr "Prend toujours un seul ensemble de types de param√®tres."

#: src/control-flow-basics/macros.md
msgid ""
"Macros are expanded into Rust code during compilation, and can take a "
"variable number of arguments. They are distinguished by a `!` at the end. "
"The Rust standard library includes an assortment of useful macros."
msgstr ""

#: src/control-flow-basics/macros.md
#, fuzzy
msgid ""
"`println!(format, ..)` prints a line to standard output, applying formatting "
"described in [`std::fmt`](https://doc.rust-lang.org/std/fmt/index.html)."
msgstr ""
"La surcharge d'op√©rateur est impl√©ment√©e via des traits dans [`std::ops`]"
"(https://doc.rust-lang.org/std/ops/index.html)¬†:"

#: src/control-flow-basics/macros.md
msgid ""
"`format!(format, ..)` works just like `println!` but returns the result as a "
"string."
msgstr ""

#: src/control-flow-basics/macros.md
msgid "`dbg!(expression)` logs the value of the expression and returns it."
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"`todo!()` marks a bit of code as not-yet-implemented. If executed, it will "
"panic."
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"`unreachable!()` marks a bit of code as unreachable. If executed, it will "
"panic."
msgstr ""

#: src/control-flow-basics/macros.md
msgid "\"{n}! = {}\""
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"The takeaway from this section is that these common conveniences exist, and "
"how to use them. Why they are defined as macros, and what they expand to, is "
"not especially critical."
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"The course does not cover defining macros, but a later section will describe "
"use of derive macros."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid ""
"The [Collatz Sequence](https://en.wikipedia.org/wiki/Collatz_conjecture) is "
"defined as follows, for an arbitrary n"
msgstr ""

#: src/control-flow-basics/exercise.md
#, fuzzy
msgid "1"
msgstr "12"

#: src/control-flow-basics/exercise.md
msgid " greater than zero:"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "If _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "i"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ is 1, then the sequence terminates at _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ is even, then _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "i+1"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " = n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " / 2_."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ is odd, then _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " = 3 * n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " + 1_."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "For example, beginning with _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ = 3:"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "3 is odd, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md
#, fuzzy
msgid "2"
msgstr "12"

#: src/control-flow-basics/exercise.md
msgid "_ = 3 * 3 + 1 = 10;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "10 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "3"
msgstr "3"

#: src/control-flow-basics/exercise.md
msgid "_ = 10 / 2 = 5;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "5 is odd, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "4"
msgstr "4"

#: src/control-flow-basics/exercise.md
msgid "_ = 3 * 5 + 1 = 16;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "16 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "5"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ = 16 / 2 = 8;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "8 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "6"
msgstr "6"

#: src/control-flow-basics/exercise.md
msgid "_ = 8 / 2 = 4;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "4 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "7"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ = 4 / 2 = 2;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "2 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "8"
msgstr "8"

#: src/control-flow-basics/exercise.md
msgid "_ = 1; and"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "the sequence terminates."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid ""
"Write a function to calculate the length of the collatz sequence for a given "
"initial `n`."
msgstr ""

#: src/control-flow-basics/exercise.md src/control-flow-basics/solution.md
msgid "/// Determine the length of the collatz sequence beginning at `n`.\n"
msgstr ""

#: src/control-flow-basics/solution.md src/concurrency/scoped-threads.md
msgid "\"Length: {}\""
msgstr ""

#: src/welcome-day-1-afternoon.md src/welcome-day-2-afternoon.md
#: src/welcome-day-3-afternoon.md src/welcome-day-4-afternoon.md
#, fuzzy
msgid "Welcome Back"
msgstr "Bienvenue"

#: src/welcome-day-1-afternoon.md
msgid "[Tuples and Arrays](./tuples-and-arrays.md) (1 hour)"
msgstr ""

#: src/welcome-day-1-afternoon.md
msgid "[References](./references.md) (50 minutes)"
msgstr ""

#: src/welcome-day-1-afternoon.md
msgid "[User-Defined Types](./user-defined-types.md) (50 minutes)"
msgstr ""

#: src/welcome-day-1-afternoon.md
msgid ""
"Including 10 minute breaks, this session should take about 2 hours and 55 "
"minutes"
msgstr ""

#: src/tuples-and-arrays.md
msgid ""
"[Tuples and Arrays](./tuples-and-arrays/tuples-and-arrays.md) (10 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Array Iteration](./tuples-and-arrays/iteration.md) (3 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Pattern Matching](./tuples-and-arrays/match.md) (10 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Destructuring](./tuples-and-arrays/destructuring.md) (5 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Exercise: Nested Arrays](./tuples-and-arrays/exercise.md) (30 minutes)"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"Tuples and arrays are the first \"compound\" types we have seen. All "
"elements of an array have the same type, while tuples can accommodate "
"different types. Both types have a size fixed at compile time."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
#: src/tuples-and-arrays/destructuring.md
msgid "Arrays"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`[T; N]`"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`[20, 30, 40]`, `[0; 3]`"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
#: src/tuples-and-arrays/destructuring.md
msgid "Tuples"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`()`, `(T,)`, `(T1, T2)`, ..."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`()`, `('x',)`, `('x', 1.2)`, ..."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid "Array assignment and access:"
msgstr "Affectation et acc√®s aux baies¬†:"

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid "Tuple assignment and access:"
msgstr "Affectation et acc√®s aux tuples¬†:"

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid "Arrays:"
msgstr "Tableaux¬†:"

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"A value of the array type `[T; N]` holds `N` (a compile-time constant) "
"elements of the same type `T`. Note that the length of the array is _part of "
"its type_, which means that `[u8; 3]` and `[u8; 4]` are considered two "
"different types. Slices, which have a size determined at runtime, are "
"covered later."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"Try accessing an out-of-bounds array element. Array accesses are checked at "
"runtime. Rust can usually optimize these checks away, and they can be "
"avoided using unsafe Rust."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "We can use literals to assign values to arrays."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"The `println!` macro asks for the debug implementation with the `?` format "
"parameter: `{}` gives the default output, `{:?}` gives the debug output. "
"Types such as integers and strings implement the default output, but arrays "
"only implement the debug output. This means that we must use debug output "
"here."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"Adding `#`, eg `{a:#?}`, invokes a \"pretty printing\" format, which can be "
"easier to read."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid "Tuples:"
msgstr "Tuples¬†:"

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid "Like arrays, tuples have a fixed length."
msgstr "Comme les tableaux, les tuples ont une longueur fixe."

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid "Tuples group together values of different types into a compound type."
msgstr ""
"Les tuples regroupent des valeurs de diff√©rents types dans un type compos√©."

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid ""
"Fields of a tuple can be accessed by the period and the index of the value, "
"e.g. `t.0`, `t.1`."
msgstr ""
"Les champs d'un tuple sont accessibles par le point et l'index de la valeur, "
"par ex. `t.0`, `t.1`."

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid ""
"The empty tuple `()` is also known as the \"unit type\". It is both a type, "
"and the only valid value of that type --- that is to say both the type and "
"its value are expressed as `()`. It is used to indicate, for example, that a "
"function or expression has no return value, as we'll see in a future slide."
msgstr ""
"Le tuple vide `()` est √©galement appel√© \"type d'unit√©\". C'est √† la fois un "
"type et la seule valeur valide de ce type - c'est-√†-dire √† la fois le type "
"et sa valeur sont exprim√©s par `()`. Il est utilis√© pour indiquer, par "
"exemple, qu'une fonction ou expression n'a pas de valeur de retour, comme "
"nous le verrons dans une prochaine diapositive."

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid ""
"You can think of it as `void` that can be familiar to you from other "
"programming languages."
msgstr ""
"Vous pouvez le consid√©rer comme un \"vide\" qui peut vous √™tre familier "
"d'autres langages de programmation."

#: src/tuples-and-arrays/iteration.md
msgid "The `for` statement supports iterating over arrays (but not tuples)."
msgstr ""

#: src/tuples-and-arrays/iteration.md
msgid ""
"This functionality uses the `IntoIterator` trait, but we haven't covered "
"that yet."
msgstr ""

#: src/tuples-and-arrays/iteration.md
msgid ""
"The `assert_ne!` macro is new here. There are also `assert_eq!` and `assert!"
"` macros. These are always checked while, debug-only variants like "
"`debug_assert!` compile to nothing in release builds."
msgstr ""

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"The `match` keyword lets you match a value against one or more _patterns_. "
"The comparisons are done from top to bottom and the first match wins."
msgstr ""
"Le mot cl√© `match` vous permet de faire correspondre une valeur √† un ou "
"plusieurs _patterns_. Le les comparaisons se font de haut en bas et le "
"premier match l'emporte."

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid "The patterns can be simple values, similarly to `switch` in C and C++:"
msgstr ""
"Les mod√®les peuvent √™tre des valeurs simples, de la m√™me mani√®re que "
"`switch` en C et C++¬†:"

#: src/tuples-and-arrays/match.md
msgid "'x'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'q'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Quitting\""
msgstr ""

#: src/tuples-and-arrays/match.md src/std-traits/solution.md
#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'a'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'s'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'w'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'d'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Moving around\""
msgstr ""

#: src/tuples-and-arrays/match.md src/error-handling/exercise.md
#: src/error-handling/solution.md
msgid "'0'"
msgstr ""

#: src/tuples-and-arrays/match.md src/error-handling/exercise.md
#: src/error-handling/solution.md
msgid "'9'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Number input\""
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Lowercase: {key}\""
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Something else\""
msgstr ""

#: src/tuples-and-arrays/match.md
msgid ""
"The `_` pattern is a wildcard pattern which matches any value. The "
"expressions _must_ be irrefutable, meaning that it covers every possibility, "
"so `_` is often used as the final catch-all case."
msgstr ""

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"Match can be used as an expression. Just like `if`, each match arm must have "
"the same type. The type is the last expression of the block, if any. In the "
"example above, the type is `()`."
msgstr ""
"Comme `if let`, chaque bras de correspondance doit avoir le m√™me type. Le "
"type est le dernier expression du bloc, le cas √©ch√©ant. Dans l'exemple ci-"
"dessus, le type est `()`."

#: src/tuples-and-arrays/match.md
msgid ""
"A variable in the pattern (`key` in this example) will create a binding that "
"can be used within the match arm."
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "A match guard causes the arm to match only if the condition is true."
msgstr ""

#: src/tuples-and-arrays/match.md src/user-defined-types/named-structs.md
#: src/user-defined-types/enums.md src/methods-and-traits/methods.md
#, fuzzy
msgid "Key Points:"
msgstr "Points cl√©s:"

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"You might point out how some specific characters are being used when in a "
"pattern"
msgstr ""
"Vous pouvez indiquer comment certains caract√®res sp√©cifiques sont utilis√©s "
"dans un mod√®le"

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid "`|` as an `or`"
msgstr "`|` comme un `ou`"

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid "`..` can expand as much as it needs to be"
msgstr "`..` peut s'√©tendre autant que n√©cessaire"

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid "`1..=5` represents an inclusive range"
msgstr "`1..=5` repr√©sente une plage inclusive"

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid "`_` is a wild card"
msgstr "`_` est un joker"

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"Match guards as a separate syntax feature are important and necessary when "
"we wish to concisely express more complex ideas than patterns alone would "
"allow."
msgstr ""
"Les gardes de correspondance en tant que fonctionnalit√© de syntaxe distincte "
"sont importants et n√©cessaires lorsque nous souhaitons exprimer de mani√®re "
"concise des id√©es plus complexes que ne le permettraient les mod√®les seuls."

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"They are not the same as separate `if` expression inside of the match arm. "
"An `if` expression inside of the branch block (after `=>`) happens after the "
"match arm is selected. Failing the `if` condition inside of that block won't "
"result in other arms of the original `match` expression being considered."
msgstr ""
"Ils ne sont pas identiques √† une expression \"if\" s√©par√©e √† l'int√©rieur du "
"bras de match. Une expression `if` √† l'int√©rieur du bloc de branche (apr√®s "
"`=>`) se produit apr√®s la s√©lection du bras de correspondance. L'√©chec de la "
"condition \"si\" √† l'int√©rieur de ce bloc n'entra√Ænera pas d'autres bras de "
"l'expression \"match\" d'origine consid√©r√©e."

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"The condition defined in the guard applies to every expression in a pattern "
"with an `|`."
msgstr ""
"La condition d√©finie dans la garde s'applique √† chaque expression dans un "
"mod√®le avec un `|`."

#: src/tuples-and-arrays/destructuring.md
msgid ""
"Destructuring is a way of extracting data from a data structure by writing a "
"pattern that is matched up to the data structure, binding variables to "
"subcomponents of the data structure."
msgstr ""

#: src/tuples-and-arrays/destructuring.md
#, fuzzy
msgid "You can destructure tuples and arrays by matching on their elements:"
msgstr ""
"Vous pouvez d√©structurer des tableaux, des tuples et des tranches en faisant "
"correspondre leurs √©l√©ments¬†:"

#: src/tuples-and-arrays/destructuring.md
msgid "\"on Y axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"on X axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"left of Y axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"below X axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"first quadrant\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"Tell me about {triple:?}\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"First is 0, y = {y}, and z = {z}\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"First is 1 and the rest were ignored\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"All elements were ignored\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "Create a new array pattern using `_` to represent an element."
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "Add more values to the array."
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid ""
"Point out that how `..` will expand to account for different number of "
"elements."
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "Show matching against the tail with patterns `[.., b]` and `[a@..,b]`"
msgstr ""

#: src/tuples-and-arrays/exercise.md
msgid "Arrays can contain other arrays:"
msgstr ""

#: src/tuples-and-arrays/exercise.md
#, fuzzy
msgid "What is the type of this variable?"
msgstr "Quel est le type de \"mot\" dans chaque boucle¬†?"

#: src/tuples-and-arrays/exercise.md
#, fuzzy
msgid ""
"Use an array such as the above to write a function `transpose` which will "
"transpose a matrix (turn rows into columns):"
msgstr ""
"Utilisez ce qui pr√©c√®de pour √©crire une fonction `pretty_print` qui imprime "
"joliment une matrice et une fonction `transpose` qui va transposer une "
"matrice (transformer les lignes en colonnes):"

#: src/tuples-and-arrays/exercise.md
#, fuzzy
msgid "Hard-code both functions to operate on 3 √ó 3 matrices."
msgstr ""
"Codez en dur les deux fonctions pour qu'elles fonctionnent sur des matrices "
"3 √ó 3."

#: src/tuples-and-arrays/exercise.md
#, fuzzy
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and implement the "
"functions:"
msgstr ""
"Copiez le code ci-dessous sur <https://play.rust-lang.org/> et impl√©mentez "
"le les fonctions:"

#: src/tuples-and-arrays/exercise.md src/borrowing/exercise.md
#: src/unsafe-rust/exercise.md
msgid "// TODO: remove this when you're done with your implementation.\n"
msgstr ""

#: src/tuples-and-arrays/exercise.md src/tuples-and-arrays/solution.md
msgid "// <-- the comment makes rustfmt add a newline\n"
msgstr ""

#: src/tuples-and-arrays/exercise.md src/tuples-and-arrays/solution.md
msgid "\"matrix: {:#?}\""
msgstr ""

#: src/tuples-and-arrays/exercise.md src/tuples-and-arrays/solution.md
msgid "\"transposed: {:#?}\""
msgstr ""

#: src/tuples-and-arrays/solution.md
msgid "//\n"
msgstr ""

#: src/references.md
msgid "[Shared References](./references/shared.md) (10 minutes)"
msgstr ""

#: src/references.md
msgid "[Exclusive References](./references/exclusive.md) (10 minutes)"
msgstr ""

#: src/references.md
msgid "[Exercise: Geometry](./references/exercise.md) (30 minutes)"
msgstr ""

#: src/references.md src/user-defined-types.md src/pattern-matching.md
msgid "This segment should take about 50 minutes"
msgstr ""

#: src/references/shared.md
msgid ""
"A reference provides a way to access another value without taking "
"responsibility for the value, and is also called \"borrowing\". Shared "
"references are read-only, and the referenced data cannot change."
msgstr ""

#: src/references/shared.md
msgid ""
"A shared reference to a type `T` has type `&T`. A reference value is made "
"with the `&` operator. The `*` operator \"dereferences\" a reference, "
"yielding its value."
msgstr ""

#: src/references/shared.md
#, fuzzy
msgid "Rust will statically forbid dangling references:"
msgstr "Rust interdira statiquement les r√©f√©rences pendantes¬†:"

#: src/references/shared.md
msgid ""
"A reference is said to \"borrow\" the value it refers to, and this is a good "
"model for students not familiar with pointers: code can use the reference to "
"access the value, but is still \"owned\" by the original variable. The "
"course will get into more detail on ownership in day 3."
msgstr ""

#: src/references/shared.md
msgid ""
"References are implemented as pointers, and a key advantage is that they can "
"be much smaller than the thing they point to. Students familiar with C or C+"
"+ will recognize references as pointers. Later parts of the course will "
"cover how Rust prevents the memory-safety bugs that come from using raw "
"pointers."
msgstr ""

#: src/references/shared.md
msgid ""
"Rust does not automatically create references for you - the `&` is always "
"required."
msgstr ""

#: src/references/shared.md
#, fuzzy
msgid ""
"Rust will auto-dereference in some cases, in particular when invoking "
"methods (try `r.count_ones()`). There is no need for an `->` operator like "
"in C++."
msgstr ""
"Rust d√©r√©f√©rencera automatiquement dans certains cas, en particulier lors de "
"l'appel m√©thodes (essayez `ref_x.count_ones()`)."

#: src/references/shared.md
msgid ""
"In this example, `r` is mutable so that it can be reassigned (`r = &b`). "
"Note that this re-binds `r`, so that it refers to something else. This is "
"different from C++, where assignment to a reference changes the referenced "
"value."
msgstr ""

#: src/references/shared.md
msgid ""
"A shared reference does not allow modifying the value it refers to, even if "
"that value was mutable. Try `*r = 'X'`."
msgstr ""

#: src/references/shared.md
msgid ""
"Rust is tracking the lifetimes of all references to ensure they live long "
"enough. Dangling references cannot occur in safe Rust. `x_axis` would return "
"a reference to `point`, but `point` will be deallocated when the function "
"returns, so this will not compile."
msgstr ""

#: src/references/shared.md
#, fuzzy
msgid "We will talk more about borrowing when we get to ownership."
msgstr ""
"Nous parlerons davantage de l'emprunt lorsque nous arriverons √† la propri√©t√©."

#: src/references/exclusive.md
msgid ""
"Exclusive references, also known as mutable references, allow changing the "
"value they refer to. They have type `&mut T`."
msgstr ""

#: src/references/exclusive.md
msgid ""
"\"Exclusive\" means that only this reference can be used to access the "
"value. No other references (shared or exclusive) can exist at the same time, "
"and the referenced value cannot be accessed while the exclusive reference "
"exists. Try making an `&point.0` or changing `point.0` while `x_coord` is "
"alive."
msgstr ""

#: src/references/exclusive.md
#, fuzzy
msgid ""
"Be sure to note the difference between `let mut x_coord: &i32` and `let "
"x_coord: &mut i32`. The first one represents a shared reference which can be "
"bound to different values, while the second represents an exclusive "
"reference to a mutable value."
msgstr ""
"Assurez-vous de noter la diff√©rence entre `let mut ref_x: &i32` et `let "
"ref_x: &mut i32`. Le premier repr√©sente une r√©f√©rence mutable qui peut √™tre "
"li√©e √† diff√©rentes valeurs, tandis que la seconde repr√©sente une r√©f√©rence √† "
"une valeur modifiable."

#: src/references/exercise.md
msgid ""
"We will create a few utility functions for 3-dimensional geometry, "
"representing a point as `[f64;3]`. It is up to you to determine the function "
"signatures."
msgstr ""

#: src/references/exercise.md
msgid ""
"// Calculate the magnitude of a vector by summing the squares of its "
"coordinates\n"
"// and taking the square root. Use the `sqrt()` method to calculate the "
"square\n"
"// root, like `v.sqrt()`.\n"
msgstr ""

#: src/references/exercise.md
msgid ""
"// Normalize a vector by calculating its magnitude and dividing all of its\n"
"// coordinates by that magnitude.\n"
msgstr ""

#: src/references/exercise.md
msgid "// Use the following `main` to test your work.\n"
msgstr ""

#: src/references/exercise.md src/references/solution.md
msgid "\"Magnitude of a unit vector: {}\""
msgstr ""

#: src/references/exercise.md src/references/solution.md
msgid "\"Magnitude of {v:?}: {}\""
msgstr ""

#: src/references/exercise.md src/references/solution.md
msgid "\"Magnitude of {v:?} after normalization: {}\""
msgstr ""

#: src/references/solution.md
msgid "/// Calculate the magnitude of the given vector.\n"
msgstr ""

#: src/references/solution.md
msgid ""
"/// Change the magnitude of the vector to 1.0 without changing its "
"direction.\n"
msgstr ""

#: src/user-defined-types.md
msgid "[Named Structs](./user-defined-types/named-structs.md) (10 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid "[Tuple Structs](./user-defined-types/tuple-structs.md) (10 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid "[Enums](./user-defined-types/enums.md) (5 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid ""
"[Static and Const](./user-defined-types/static-and-const.md) (5 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid "[Type Aliases](./user-defined-types/aliases.md) (2 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid ""
"[Exercise: Elevator Events](./user-defined-types/exercise.md) (15 minutes)"
msgstr ""

#: src/user-defined-types/named-structs.md
#, fuzzy
msgid "Like C and C++, Rust has support for custom structs:"
msgstr "Comme C et C++, Rust prend en charge les structures personnalis√©es¬†:"

#: src/user-defined-types/named-structs.md
msgid "\"{} is {} years old\""
msgstr ""

#: src/user-defined-types/named-structs.md
#: src/android/interoperability/with-c/bindgen.md
msgid "\"Peter\""
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "\"Avery\""
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "\"Jackie\""
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "Structs work like in C or C++."
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "Like in C++, and unlike in C, no typedef is needed to define a type."
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "Unlike in C++, there is no inheritance between structs."
msgstr ""

#: src/user-defined-types/named-structs.md
msgid ""
"This may be a good time to let people know there are different types of "
"structs."
msgstr ""

#: src/user-defined-types/named-structs.md
msgid ""
"Zero-sized structs (e.g. `struct Foo;`) might be used when implementing a "
"trait on some type but don‚Äôt have any data that you want to store in the "
"value itself."
msgstr ""

#: src/user-defined-types/named-structs.md
msgid ""
"The next slide will introduce Tuple structs, used when the field names are "
"not important."
msgstr ""

#: src/user-defined-types/named-structs.md
#, fuzzy
msgid ""
"If you already have variables with the right names, then you can create the "
"struct using a shorthand."
msgstr ""
"Si vous avez d√©j√† des variables avec les bons noms, vous pouvez cr√©er le "
"struct en utilisant un raccourci¬†:"

#: src/user-defined-types/named-structs.md
msgid ""
"The syntax `..avery` allows us to copy the majority of the fields from the "
"old struct without having to explicitly type it all out. It must always be "
"the last element."
msgstr ""

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid "If the field names are unimportant, you can use a tuple struct:"
msgstr ""
"Si les noms de champ ne sont pas importants, vous pouvez utiliser une "
"structure tuple¬†:"

#: src/user-defined-types/tuple-structs.md
msgid "\"({}, {})\""
msgstr ""

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid "This is often used for single-field wrappers (called newtypes):"
msgstr ""
"Ceci est souvent utilis√© pour les wrappers √† champ unique (appel√©s newtypes):"

#: src/user-defined-types/tuple-structs.md
msgid "\"Ask a rocket scientist at NASA\""
msgstr ""

#: src/user-defined-types/tuple-structs.md
#: src/android/interoperability/cpp/cpp-bridge.md
#: src/bare-metal/microcontrollers/type-state.md
#: src/async/pitfalls/cancellation.md
msgid "// ...\n"
msgstr ""

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid ""
"Newtypes are a great way to encode additional information about the value in "
"a primitive type, for example:"
msgstr ""
"Les nouveaux types sont un excellent moyen d'encoder des informations "
"suppl√©mentaires sur la valeur dans un type primitif, par exemple¬†:"

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid "The number is measured in some units: `Newtons` in the example above."
msgstr ""
"Le nombre est mesur√© dans certaines unit√©s : `Newtons` dans l'exemple ci-"
"dessus."

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid ""
"The value passed some validation when it was created, so you no longer have "
"to validate it again at every use: `PhoneNumber(String)` or `OddNumber(u32)`."
msgstr ""
"La valeur a √©t√© valid√©e lors de sa cr√©ation, vous n'avez donc plus besoin de "
"la valider √† chaque utilisation¬†: 'PhoneNumber(String)`ou`OddNumber(u32)\\`."

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid ""
"Demonstrate how to add a `f64` value to a `Newtons` type by accessing the "
"single field in the newtype."
msgstr ""
"Montrez comment ajouter une valeur `f64` √† un type `Newtons` en acc√©dant au "
"champ unique dans le nouveau type."

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid ""
"Rust generally doesn‚Äôt like inexplicit things, like automatic unwrapping or "
"for instance using booleans as integers."
msgstr ""
"Rust n'aime g√©n√©ralement pas les choses inexplicites, comme le d√©ballage "
"automatique ou, par exemple, l'utilisation de bool√©ens comme entiers."

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid "Operator overloading is discussed on Day 3 (generics)."
msgstr "La surcharge des op√©rateurs est discut√©e le jour 3 (g√©n√©riques)."

#: src/user-defined-types/tuple-structs.md
msgid ""
"The example is a subtle reference to the [Mars Climate Orbiter](https://en."
"wikipedia.org/wiki/Mars_Climate_Orbiter) failure."
msgstr ""

#: src/user-defined-types/enums.md
#, fuzzy
msgid ""
"The `enum` keyword allows the creation of a type which has a few different "
"variants:"
msgstr ""
"Le mot cl√© `enum` permet la cr√©ation d'un type qui a quelques diff√©rentes "
"variantes :"

#: src/user-defined-types/enums.md
msgid "// Simple variant\n"
msgstr ""

#: src/user-defined-types/enums.md
msgid "// Tuple variant\n"
msgstr ""

#: src/user-defined-types/enums.md
msgid "// Struct variant\n"
msgstr ""

#: src/user-defined-types/enums.md
msgid "\"On this turn: {:?}\""
msgstr ""

#: src/user-defined-types/enums.md
#, fuzzy
msgid "Enumerations allow you to collect a set of values under one type."
msgstr ""
"Les √©num√©rations vous permettent de collecter un ensemble de valeurs sous un "
"type"

#: src/user-defined-types/enums.md
msgid ""
"`Direction` is a type with variants. There are two values of `Direction`: "
"`Direction::Left` and `Direction::Right`."
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"`PlayerMove` is a type with three variants. In addition to the payloads, "
"Rust will store a discriminant so that it knows at runtime which variant is "
"in a `PlayerMove` value."
msgstr ""

#: src/user-defined-types/enums.md
#, fuzzy
msgid "This might be a good time to compare structs and enums:"
msgstr "C'est peut-√™tre le bon moment pour comparer Structs et Enums¬†:"

#: src/user-defined-types/enums.md
#, fuzzy
msgid ""
"In both, you can have a simple version without fields (unit struct) or one "
"with different types of fields (variant payloads)."
msgstr ""
"Dans les deux cas, vous pouvez avoir une version simple sans champs "
"(structure d'unit√©) ou une version avec diff√©rents types de champs (charges "
"utiles variantes)."

#: src/user-defined-types/enums.md
#, fuzzy
msgid ""
"You could even implement the different variants of an enum with separate "
"structs but then they wouldn‚Äôt be the same type as they would if they were "
"all defined in an enum."
msgstr ""
"Vous pouvez m√™me impl√©menter les diff√©rentes variantes d'une √©num√©ration "
"avec des structures distinctes, mais elles ne seraient alors pas du m√™me "
"type que si elles √©taient toutes d√©finies dans une √©num√©ration."

#: src/user-defined-types/enums.md
msgid "Rust uses minimal space to store the discriminant."
msgstr ""

#: src/user-defined-types/enums.md
msgid "If necessary, it stores an integer of the smallest required size"
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"If the allowed variant values do not cover all bit patterns, it will use "
"invalid bit patterns to encode the discriminant (the \"niche "
"optimization\"). For example, `Option<&u8>` stores either a pointer to an "
"integer or `NULL` for the `None` variant."
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"You can control the discriminant if needed (e.g., for compatibility with C):"
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"Without `repr`, the discriminant type takes 2 bytes, because 10001 fits 2 "
"bytes."
msgstr ""

#: src/user-defined-types/enums.md src/user-defined-types/static-and-const.md
#: src/memory-management/review.md src/memory-management/move.md
#: src/smart-pointers/box.md src/borrowing/shared.md
msgid "More to Explore"
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"Rust has several optimizations it can employ to make enums take up less "
"space."
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"Null pointer optimization: For [some types](https://doc.rust-lang.org/std/"
"option/#representation), Rust guarantees that `size_of::<T>()` equals "
"`size_of::<Option<T>>()`."
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"Example code if you want to show how the bitwise representation _may_ look "
"like in practice. It's important to note that the compiler provides no "
"guarantees regarding this representation, therefore this is totally unsafe."
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid ""
"Static and constant variables are two different ways to create globally-"
"scoped values that cannot be moved or reallocated during the execution of "
"the program."
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "`const`"
msgstr "`const`"

#: src/user-defined-types/static-and-const.md
msgid ""
"Constant variables are evaluated at compile time and their values are "
"inlined wherever they are used:"
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"According to the [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html) these are inlined upon use."
msgstr ""
"Selon le \\[Rust RFC Book\\] [1](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html), ceux-ci sont int√©gr√©s lors de l'utilisation."

#: src/user-defined-types/static-and-const.md
msgid ""
"Only functions marked `const` can be called at compile time to generate "
"`const` values. `const` functions can however be called at runtime."
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "`static`"
msgstr "`statique`"

#: src/user-defined-types/static-and-const.md
msgid ""
"Static variables will live during the whole execution of the program, and "
"therefore will not move:"
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "\"Welcome to RustOS 3.14\""
msgstr "Bienvenue au jour 1"

#: src/user-defined-types/static-and-const.md
msgid "\"{BANNER}\""
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"As noted in the [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html), these are not inlined upon use and have an actual "
"associated memory location. This is useful for unsafe and embedded code, and "
"the variable lives through the entirety of the program execution. When a "
"globally-scoped value does not have a reason to need object identity, "
"`const` is generally preferred."
msgstr ""
"Comme indiqu√© dans le \\[Rust RFC Book\\] [1](https://rust-lang.github.io/"
"rfcs/0246-const-vs-static.html), ceux-ci ne sont pas align√©s lors de "
"l'utilisation et ont un emplacement de m√©moire associ√© r√©el. Ceci est utile "
"pour le code non s√©curis√© et int√©gr√©, et la variable vit tout au long de "
"l'ex√©cution du programme."

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "Mention that `const` behaves semantically similar to C++'s `constexpr`."
msgstr ""
"Mentionnez que `const` se comporte s√©mantiquement de la m√™me mani√®re que "
"`constexpr` de C++."

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"`static`, on the other hand, is much more similar to a `const` or mutable "
"global variable in C++."
msgstr ""
"`static`, d'autre part, ressemble beaucoup plus √† une variable globale "
"`const` ou mutable en C++."

#: src/user-defined-types/static-and-const.md
msgid ""
"`static` provides object identity: an address in memory and state as "
"required by types with interior mutability such as `Mutex<T>`."
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"It isn't super common that one would need a runtime evaluated constant, but "
"it is helpful and safer than using a static."
msgstr ""
"Il n'est pas tr√®s courant d'avoir besoin d'une constante √©valu√©e √† "
"l'ex√©cution, mais c'est utile et plus s√ªr que d'utiliser un statique."

#: src/user-defined-types/static-and-const.md
msgid "Properties table:"
msgstr ""

#: src/user-defined-types/static-and-const.md
#: src/chromium/adding-third-party-crates.md
msgid "Property"
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "Static"
msgstr "`statique`"

#: src/user-defined-types/static-and-const.md
msgid "Constant"
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid "Has an address in memory"
msgstr ""

#: src/user-defined-types/static-and-const.md
#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Yes"
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid "No (inlined)"
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "Lives for the entire duration of the program"
msgstr "La fonction `main` est le point d'entr√©e du programme."

#: src/user-defined-types/static-and-const.md
#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "No"
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid "Can be mutable"
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid "Yes (unsafe)"
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "Evaluated at compile time"
msgstr "Les valeurs ont des tailles fixes connues au moment de la compilation."

#: src/user-defined-types/static-and-const.md
msgid "Yes (initialised at compile time)"
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid "Inlined wherever it is used"
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid ""
"Because `static` variables are accessible from any thread, they must be "
"`Sync`. Interior mutability is possible through a [`Mutex`](https://doc.rust-"
"lang.org/std/sync/struct.Mutex.html), atomic or similar."
msgstr ""

#: src/user-defined-types/static-and-const.md
msgid "Thread-local data can be created with the macro `std::thread_local`."
msgstr ""

#: src/user-defined-types/aliases.md
msgid ""
"A type alias creates a name for another type. The two types can be used "
"interchangeably."
msgstr ""

#: src/user-defined-types/aliases.md
msgid "// Aliases are more useful with long, complex types:\n"
msgstr ""

#: src/user-defined-types/aliases.md
msgid "C programmers will recognize this as similar to a `typedef`."
msgstr ""

#: src/user-defined-types/exercise.md
msgid ""
"We will create a data structure to represent an event in an elevator control "
"system. It is up to you to define the types and functions to construct "
"various events. Use `#[derive(Debug)]` to allow the types to be formatted "
"with `{:?}`."
msgstr ""

#: src/user-defined-types/exercise.md
msgid ""
"This exercise only requires creating and populating data structures so that "
"`main` runs without errors. The next part of the course will cover getting "
"data out of these structures."
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid ""
"/// An event in the elevator system that the controller must react to.\n"
msgstr ""

#: src/user-defined-types/exercise.md
msgid "// TODO: add required variants\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// A direction of travel.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// The car has arrived on the given floor.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// The car doors have opened.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// The car doors have closed.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid ""
"/// A directional button was pressed in an elevator lobby on the given "
"floor.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// A floor button was pressed in the elevator car.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"A ground floor passenger has pressed the up button: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car has arrived on the ground floor: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car door opened: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"A passenger has pressed the 3rd floor button: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car door closed: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car has arrived on the 3rd floor: {:?}\""
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A button was pressed.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// The car has arrived at the given floor.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// The car's doors have opened.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// The car's doors have closed.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A floor is represented as an integer.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A user-accessible button.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A button in the elevator lobby on the given floor.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A floor button within the car.\n"
msgstr ""

#: src/welcome-day-2.md
#, fuzzy
msgid "Welcome to Day 2"
msgstr "Bienvenue au jour 2"

#: src/welcome-day-2.md
#, fuzzy
msgid ""
"Now that we have seen a fair amount of Rust, today will focus on Rust's type "
"system:"
msgstr ""
"Maintenant que nous avons vu une bonne quantit√© de Rust, nous allons "
"continuer avec¬†:"

#: src/welcome-day-2.md
#, fuzzy
msgid "Pattern matching: extracting data from structures."
msgstr ""
"Filtrage par motif¬†: d√©structuration des √©num√©rations, des structures et des "
"tableaux."

#: src/welcome-day-2.md
msgid "Methods: associating functions with types."
msgstr ""

#: src/welcome-day-2.md
msgid "Traits: behaviors shared by multiple types."
msgstr ""

#: src/welcome-day-2.md
msgid "Generics: parameterizing types on other types."
msgstr ""

#: src/welcome-day-2.md
msgid ""
"Standard library types and traits: a tour of Rust's rich standard library."
msgstr ""

#: src/welcome-day-2.md
msgid "[Welcome](./welcome-day-2.md) (3 minutes)"
msgstr ""

#: src/welcome-day-2.md
#, fuzzy
msgid "[Pattern Matching](./pattern-matching.md) (50 minutes)"
msgstr ""
"Voir [Filtrage par motif](../pattern-matching.md) pour plus de d√©tails sur "
"les motifs avec Rust."

#: src/welcome-day-2.md
msgid "[Methods and Traits](./methods-and-traits.md) (55 minutes)"
msgstr ""

#: src/welcome-day-2.md
msgid "[Generics](./generics.md) (45 minutes)"
msgstr ""

#: src/welcome-day-2.md src/welcome-day-4.md
msgid ""
"Including 10 minute breaks, this session should take about 3 hours and 5 "
"minutes"
msgstr ""

#: src/pattern-matching.md
msgid "[Destructuring](./pattern-matching/destructuring.md) (10 minutes)"
msgstr ""

#: src/pattern-matching.md
msgid "[Let Control Flow](./pattern-matching/let-control-flow.md) (10 minutes)"
msgstr ""

#: src/pattern-matching.md
msgid ""
"[Exercise: Expression Evaluation](./pattern-matching/exercise.md) (30 "
"minutes)"
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "Like tuples, structs and enums can also be destructured by matching:"
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "Structs"
msgstr "Structures"

#: src/pattern-matching/destructuring.md
msgid "\"x.0 = 1, b = {b}, y = {y}\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"y = 2, x = {i:?}\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"y = {y}, other fields were ignored\""
msgstr ""

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"Patterns can also be used to bind variables to parts of your values. This is "
"how you inspect the structure of your types. Let us start with a simple "
"`enum` type:"
msgstr ""
"Les mod√®les peuvent √©galement √™tre utilis√©s pour lier des variables √† des "
"parties de vos valeurs. C'est ainsi vous inspectez la structure de vos "
"types. Commen√ßons par un simple type `enum`¬†:"

#: src/pattern-matching/destructuring.md
msgid "\"cannot divide {n} into two equal parts\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"{n} divided in two is {half}\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"sorry, an error happened: {msg}\""
msgstr ""

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"Here we have used the arms to _destructure_ the `Result` value. In the first "
"arm, `half` is bound to the value inside the `Ok` variant. In the second "
"arm, `msg` is bound to the error message."
msgstr ""
"Ici, nous avons utilis√© les bras pour _d√©structurer_ la valeur `Result`. En "
"premier arm, `half` est li√© √† la valeur √† l'int√©rieur de la variante `Ok`. "
"Dans le deuxi√®me bras, `msg` est li√© au message d'erreur."

#: src/pattern-matching/destructuring.md
msgid "Change the literal values in `foo` to match with the other patterns."
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "Add a new field to `Foo` and make changes to the pattern as needed."
msgstr ""

#: src/pattern-matching/destructuring.md
msgid ""
"The distinction between a capture and a constant expression can be hard to "
"spot. Try changing the `2` in the second arm to a variable, and see that it "
"subtly doesn't work. Change it to a `const` and see it working again."
msgstr ""

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"The `if`/`else` expression is returning an enum that is later unpacked with "
"a `match`."
msgstr ""
"L'expression `if`/`else` renvoie une √©num√©ration qui est ensuite "
"d√©compress√©e avec une `match`."

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"You can try adding a third variant to the enum definition and displaying the "
"errors when running the code. Point out the places where your code is now "
"inexhaustive and how the compiler tries to give you hints."
msgstr ""
"Vous pouvez essayer d'ajouter une troisi√®me variante √† la d√©finition enum et "
"d'afficher les erreurs lors de l'ex√©cution du code. Indiquez les endroits o√π "
"votre code est maintenant inexhaustif et comment le compilateur essaie de "
"vous donner des indices."

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"The values in the enum variants can only be accessed after being pattern "
"matched."
msgstr ""
"Les valeurs des variantes enum ne sont accessibles qu'apr√®s avoir √©t√© mises "
"en correspondance avec le mod√®le. Le mod√®le lie les r√©f√©rences aux champs "
"dans le \"match arm\" apr√®s le `=>`."

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"Demonstrate what happens when the search is inexhaustive. Note the advantage "
"the Rust compiler provides by confirming when all cases are handled."
msgstr ""
"D√©montrer ce qui se passe lorsque la recherche est in√©puisable. Notez "
"l'avantage que le compilateur Rust fournit en confirmant quand tous les cas "
"sont trait√©s."

#: src/pattern-matching/destructuring.md
msgid ""
"Save the result of `divide_in_two` in the `result` variable and `match` it "
"in a loop. That won't compile because `msg` is consumed when matched. To fix "
"it, match `&result` instead of `result`. That will make `msg` a reference so "
"it won't be consumed. This [\"match ergonomics\"](https://rust-lang.github."
"io/rfcs/2005-match-ergonomics.html) appeared in Rust 2018. If you want to "
"support older Rust, replace `msg` with `ref msg` in the pattern."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"Rust has a few control flow constructs which differ from other languages. "
"They are used for pattern matching:"
msgstr ""

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "`if let` expressions"
msgstr "expressions `si nous allons`"

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "`while let` expressions"
msgstr "expressions `while let`"

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "`match` expressions"
msgstr "expressions \"correspondantes\""

#: src/pattern-matching/let-control-flow.md
msgid ""
"The [`if let` expression](https://doc.rust-lang.org/reference/expressions/if-"
"expr.html#if-let-expressions) lets you execute different code depending on "
"whether a value matches a pattern:"
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "\"slept for {:?}\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "`let else` expressions"
msgstr "expressions `while let`"

#: src/pattern-matching/let-control-flow.md
msgid ""
"For the common case of matching a pattern and returning from the function, "
"use [`let else`](https://doc.rust-lang.org/rust-by-example/flow_control/"
"let_else.html). The \"else\" case must diverge (`return`, `break`, or panic "
"- anything but falling off the end of the block)."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "\"got None\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "\"got empty string\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "\"not a hex digit\""
msgstr ""

#: src/pattern-matching/let-control-flow.md src/pattern-matching/solution.md
msgid "\"result: {:?}\""
msgstr ""

#: src/pattern-matching/let-control-flow.md src/generics/trait-bounds.md
#: src/smart-pointers/solution.md src/testing/googletest.md
#: src/testing/solution.md
msgid "\"foo\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid ""
"Like with `if let`, there is a [`while let`](https://doc.rust-lang.org/"
"reference/expressions/loop-expr.html#predicate-pattern-loops) variant which "
"repeatedly tests a value against a pattern:"
msgstr ""
"Comme avec `if`, il existe une variante `while let` qui teste √† plusieurs "
"reprises une valeur contre un mod√®le¬†:"

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid ""
"Here [`String::pop`](https://doc.rust-lang.org/stable/std/string/struct."
"String.html#method.pop) returns `Some(c)` until the string is empty, after "
"which it will return `None`. The `while let` lets us keep iterating through "
"all items."
msgstr ""
"Ici, l'it√©rateur renvoy√© par `v.iter()` renverra une `Option<i32>` √† chaque "
"appel √† `next()`. Il renvoie `Some(x)` jusqu'√† ce qu'il soit termin√©, apr√®s "
"quoi il renvoie \"Aucun\". Le `while let` nous permet de continuer √† "
"parcourir tous les √©l√©ments."

#: src/pattern-matching/let-control-flow.md
msgid "if-let"
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"Unlike `match`, `if let` does not have to cover all branches. This can make "
"it more concise than `match`."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "A common usage is handling `Some` values when working with `Option`."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"Unlike `match`, `if let` does not support guard clauses for pattern matching."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "let-else"
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"`if-let`s can pile up, as shown. The `let-else` construct supports "
"flattening this nested code. Rewrite the awkward version for students, so "
"they can see the transformation."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "The rewritten version is:"
msgstr ""

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "while-let"
msgstr "expressions `while let`"

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid ""
"Point out that the `while let` loop will keep going as long as the value "
"matches the pattern."
msgstr ""
"Soulignez que la boucle `while let` continuera tant que la valeur correspond "
"au mod√®le."

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid ""
"You could rewrite the `while let` loop as an infinite loop with an if "
"statement that breaks when there is no value to unwrap for `name.pop()`. The "
"`while let` provides syntactic sugar for the above scenario."
msgstr ""
"Vous pouvez r√©√©crire la boucle `while let` comme une boucle infinie avec une "
"instruction if qui s'interrompt lorsqu'il n'y a pas de valeur √† d√©baller "
"pour `iter.next()`. Le `while let` fournit du sucre syntaxique pour le "
"sc√©nario ci-dessus."

#: src/pattern-matching/exercise.md
msgid "Let's write a simple recursive evaluator for arithmetic expressions."
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"The `Box` type here is a smart pointer, and will be covered in detail later "
"in the course. An expression can be \"boxed\" with `Box::new` as seen in the "
"tests. To evaluate a boxed expression, use the deref operator (`*`) to "
"\"unbox\" it: `eval(*boxed_expr)`."
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"Some expressions cannot be evaluated and will return an error. The standard "
"[`Result<Value, String>`](https://doc.rust-lang.org/std/result/enum.Result."
"html) type is an enum that represents either a successful value "
"(`Ok(Value)`) or an error (`Err(String)`). We will cover this type in detail "
"later."
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"Copy and paste the code into the Rust playground, and begin implementing "
"`eval`. The final product should pass the tests. It may be helpful to use "
"`todo!()` and get the tests to pass one-by-one. You can also skip a test "
"temporarily with `#[ignore]`:"
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"If you finish early, try writing a test that results in division by zero or "
"integer overflow. How could you handle this with `Result` instead of a panic?"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// An operation to perform on two subexpressions.\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// An expression, in tree form.\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// An operation on two subexpressions.\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// A literal value\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "\"division by zero\""
msgstr ""

#: src/pattern-matching/solution.md
msgid "\"expr: {:?}\""
msgstr ""

#: src/methods-and-traits.md
msgid "[Methods](./methods-and-traits/methods.md) (10 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "[Traits](./methods-and-traits/traits.md) (10 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "[Deriving](./methods-and-traits/deriving.md) (5 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "[Trait Objects](./methods-and-traits/trait-objects.md) (10 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid ""
"[Exercise: Generic Logger](./methods-and-traits/exercise.md) (20 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "This segment should take about 55 minutes"
msgstr ""

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"Rust allows you to associate functions with your new types. You do this with "
"an `impl` block:"
msgstr ""
"Rust vous permet d'associer des fonctions √† vos nouveaux types. Vous faites "
"cela avec un Bloc `impl`¬†:"

#: src/methods-and-traits/methods.md
msgid "// No receiver, a static method\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// Exclusive borrowed read-write access to self\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// Shared and read-only borrowed access to self\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Recorded {} laps for {}:\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Lap {idx}: {lap} sec\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// Exclusive ownership of self\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Race {} is finished, total lap time: {}\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Monaco Grand Prix\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// race.add_lap(42);\n"
msgstr ""

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"The `self` arguments specify the \"receiver\" - the object the method acts "
"on. There are several common receivers for a method:"
msgstr ""
"Le `&self` ci-dessus indique que la m√©thode emprunte l'objet de mani√®re "
"immuable. L√† sont d'autres r√©cepteurs possibles pour une m√©thode¬†:"

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"`&self`: borrows the object from the caller using a shared and immutable "
"reference. The object can be used again afterwards."
msgstr ""
"`&self`¬†: emprunte l'objet √† l'appelant en utilisant un partage et immuable "
"r√©f√©rence. L'objet peut √™tre r√©utilis√© par la suite."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"`&mut self`: borrows the object from the caller using a unique and mutable "
"reference. The object can be used again afterwards."
msgstr ""
"`&mut self`¬†: emprunte l'objet √† l'appelant en utilisant un nom unique et "
"mutable r√©f√©rence. L'objet peut √™tre r√©utilis√© par la suite."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"`self`: takes ownership of the object and moves it away from the caller. The "
"method becomes the owner of the object. The object will be dropped "
"(deallocated) when the method returns, unless its ownership is explicitly "
"transmitted. Complete ownership does not automatically mean mutability."
msgstr ""
"`self`¬†: prend possession de l'objet et l'√©loigne de l'appelant. Le m√©thode "
"devient le propri√©taire de l'objet. L'objet sera supprim√© (d√©sallou√©) "
"lorsque la m√©thode revient, sauf si sa propri√©t√© est explicitement transmis."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid "`mut self`: same as above, but the method can mutate the object."
msgstr ""
"`mut self`¬†: comme ci-dessus, mais tant que la m√©thode poss√®de l'objet, elle "
"peut le faire muter aussi. La propri√©t√© compl√®te ne signifie pas "
"automatiquement la mutabilit√©."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"No receiver: this becomes a static method on the struct. Typically used to "
"create constructors which are called `new` by convention."
msgstr ""
"Pas de r√©cepteur : cela devient une m√©thode statique sur la structure. "
"G√©n√©ralement utilis√© pour cr√©er des constructeurs appel√©s \"nouveaux\" par "
"convention."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid "It can be helpful to introduce methods by comparing them to functions."
msgstr ""
"Il peut √™tre utile d'introduire des m√©thodes en les comparant √† des "
"fonctions."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"Methods are called on an instance of a type (such as a struct or enum), the "
"first parameter represents the instance as `self`."
msgstr ""
"Les m√©thodes sont appel√©es sur une instance d'un type (tel qu'un struct ou "
"un enum), le premier param√®tre repr√©sente l'instance en tant que \"self\"."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"Developers may choose to use methods to take advantage of method receiver "
"syntax and to help keep them more organized. By using methods we can keep "
"all the implementation code in one predictable place."
msgstr ""
"Les d√©veloppeurs peuvent choisir d'utiliser des m√©thodes pour tirer parti de "
"la syntaxe du r√©cepteur de m√©thode et pour mieux les organiser. En utilisant "
"des m√©thodes, nous pouvons conserver tout le code d'impl√©mentation en un "
"seul endroit pr√©visible."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid "Point out the use of the keyword `self`, a method receiver."
msgstr "Soulignez l'utilisation du mot-cl√© `self`, un r√©cepteur de m√©thode."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"Show that it is an abbreviated term for `self: Self` and perhaps show how "
"the struct name could also be used."
msgstr ""
"Montrez qu'il s'agit d'un terme abr√©g√© pour `self:&Self` et montrez peut-"
"√™tre comment le nom de la structure pourrait √©galement √™tre utilis√©."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"Explain that `Self` is a type alias for the type the `impl` block is in and "
"can be used elsewhere in the block."
msgstr ""
"Expliquez que `Self` est un alias de type pour le type dans lequel se trouve "
"le bloc `impl` et peut √™tre utilis√© ailleurs dans le bloc."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"Note how `self` is used like other structs and dot notation can be used to "
"refer to individual fields."
msgstr ""
"Notez comment `self` est utilis√© comme d'autres structures et la notation "
"par points peut √™tre utilis√©e pour faire r√©f√©rence √† des champs individuels."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"This might be a good time to demonstrate how the `&self` differs from `self` "
"by trying to run `finish` twice."
msgstr ""
"C'est peut-√™tre le bon moment pour d√©montrer en quoi `&self` diff√®re de "
"`self` en modifiant le code et en essayant d'ex√©cuter say_hello deux fois."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"Beyond variants on `self`, there are also [special wrapper types](https://"
"doc.rust-lang.org/reference/special-types-and-traits.html) allowed to be "
"receiver types, such as `Box<Self>`."
msgstr ""
"Au-del√† des variantes sur \"self\", il y a aussi \\[types d'emballage "
"sp√©ciaux\\] (https://doc.rust-lang.org/reference/special-types-and-traits."
"html) autoris√©s √† √™tre des types de r√©cepteurs, tels que `Box<Self>`."

#: src/methods-and-traits/traits.md
#, fuzzy
msgid ""
"Rust lets you abstract over types with traits. They're similar to interfaces:"
msgstr ""
"Rust vous permet d'abstraire les types avec des traits. Ils sont similaires "
"aux interfaces¬†:"

#: src/methods-and-traits/traits.md
msgid "\"Oh you're a cutie! What's your name? {}\""
msgstr ""

#: src/methods-and-traits/traits.md src/methods-and-traits/trait-objects.md
msgid "\"Woof, my name is {}!\""
msgstr ""

#: src/methods-and-traits/traits.md src/methods-and-traits/trait-objects.md
msgid "\"Miau!\""
msgstr ""

#: src/methods-and-traits/traits.md src/methods-and-traits/trait-objects.md
msgid "\"Fido\""
msgstr ""

#: src/methods-and-traits/traits.md
msgid ""
"A trait defines a number of methods that types must have in order to "
"implement the trait."
msgstr ""

#: src/methods-and-traits/traits.md
msgid "Traits are implemented in an `impl <trait> for <type> { .. }` block."
msgstr ""

#: src/methods-and-traits/traits.md
#, fuzzy
msgid ""
"Traits may specify pre-implemented (provided) methods and methods that users "
"are required to implement themselves. Provided methods can rely on required "
"methods. In this case, `greet` is provided, and relies on `talk`."
msgstr ""
"Les caract√©ristiques peuvent sp√©cifier des m√©thodes pr√©-impl√©ment√©es (par "
"d√©faut) et des m√©thodes que les utilisateurs sont tenus de suivre mettre en "
"≈ìuvre eux-m√™mes. Les m√©thodes avec des impl√©mentations par d√©faut peuvent "
"s'appuyer sur les m√©thodes requises."

#: src/methods-and-traits/deriving.md
msgid ""
"Supported traits can be automatically implemented for your custom types, as "
"follows:"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "// Default trait adds `default` constructor.\n"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "// Clone trait adds `clone` method.\n"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "\"EldurScrollz\""
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "// Debug trait adds support for printing with `{:?}`.\n"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "\"{:?} vs. {:?}\""
msgstr ""

#: src/methods-and-traits/deriving.md
msgid ""
"Derivation is implemented with macros, and many crates provide useful derive "
"macros to add useful functionality. For example, `serde` can derive "
"serialization support for a struct using `#[derive(Serialize)]`."
msgstr ""

#: src/methods-and-traits/trait-objects.md
#, fuzzy
msgid ""
"Trait objects allow for values of different types, for instance in a "
"collection:"
msgstr ""
"Les objets de trait autorisent des valeurs de diff√©rents types, par exemple "
"dans une collection¬†:"

#: src/methods-and-traits/trait-objects.md
msgid "\"Hello, who are you? {}\""
msgstr ""

#: src/methods-and-traits/trait-objects.md
#, fuzzy
msgid "Memory layout after allocating `pets`:"
msgstr "Disposition de la m√©moire apr√®s l'allocation de `pets`¬†:"

#: src/methods-and-traits/trait-objects.md
msgid ""
"```bob\n"
" Stack                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                           :     :                                             :\n"
":    pets                   :     :                     +----+----+----+----"
"+   :\n"
":   +-----------+-------+   :     :   +-----+-----+  .->| F  | i  | d  | o  "
"|   :\n"
":   | ptr       |   o---+---+-----+-->| o o | o o |  |  +----+----+----+----"
"+   :\n"
":   | len       |     2 |   :     :   +-|-|-+-|-|-+  "
"`---------.                :\n"
":   | capacity  |     2 |   :     :     | |   | |    data      "
"|                :\n"
":   +-----------+-------+   :     :     | |   | |   +-------+--|-------"
"+        :\n"
":                           :     :     | |   | '-->| name  |  o, 4, 4 "
"|        :\n"
":                           :     :     | |   |     | age   |        5 "
"|        :\n"
"`- - - - - - - - - - - - - -'     :     | |   |     +-------+----------"
"+        :\n"
"                                  :     | |   "
"|                                 :\n"
"                                  :     | |   |      "
"vtable                     :\n"
"                                  :     | |   |     +----------------------"
"+    :\n"
"                                  :     | |   '---->| \"<Dog as Pet>::talk\" "
"|    :\n"
"                                  :     | |         +----------------------"
"+    :\n"
"                                  :     | "
"|                                     :\n"
"                                  :     | |    "
"data                             :\n"
"                                  :     | |   +-------+-------"
"+                 :\n"
"                                  :     | '-->| lives |     9 "
"|                 :\n"
"                                  :     |     +-------+-------"
"+                 :\n"
"                                  :     "
"|                                       :\n"
"                                  :     |      "
"vtable                           :\n"
"                                  :     |     +----------------------"
"+          :\n"
"                                  :     '---->| \"<Cat as Pet>::talk\" "
"|          :\n"
"                                  :           +----------------------"
"+          :\n"
"                                  :                                             :\n"
"                                  '- - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"```"
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid ""
"Types that implement a given trait may be of different sizes. This makes it "
"impossible to have things like `Vec<dyn Pet>` in the example above."
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid ""
"`dyn Pet` is a way to tell the compiler about a dynamically sized type that "
"implements `Pet`."
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid ""
"In the example, `pets` is allocated on the stack and the vector data is on "
"the heap. The two vector elements are _fat pointers_:"
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid ""
"A fat pointer is a double-width pointer. It has two components: a pointer to "
"the actual object and a pointer to the [virtual method table](https://en."
"wikipedia.org/wiki/Virtual_method_table) (vtable) for the `Pet` "
"implementation of that particular object."
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid ""
"The data for the `Dog` named Fido is the `name` and `age` fields. The `Cat` "
"has a `lives` field."
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid "Compare these outputs in the above example:"
msgstr ""

#: src/methods-and-traits/trait-objects.md src/std-traits/closures.md
msgid "\"{} {}\""
msgstr ""

#: src/methods-and-traits/trait-objects.md src/std-traits/exercise.md
#: src/std-traits/solution.md src/modules/exercise.md src/modules/solution.md
#: src/android/build-rules/library.md
#: src/android/interoperability/cpp/rust-bridge.md
#: src/async/pitfalls/cancellation.md
msgid "\"{}\""
msgstr ""

#: src/methods-and-traits/exercise.md
msgid ""
"Let's design a simple logging utility, using a trait `Logger` with a `log` "
"method. Code which might log its progress can then take an `&impl Logger`. "
"In testing, this might put messages in the test logfile, while in a "
"production build it would send messages to a log server."
msgstr ""

#: src/methods-and-traits/exercise.md
msgid ""
"However, the `StderrLogger` given below logs all messages, regardless of "
"verbosity. Your task is to write a `VerbosityFilter` type that will ignore "
"messages above a maximum verbosity."
msgstr ""

#: src/methods-and-traits/exercise.md
msgid ""
"This is a common pattern: a struct wrapping a trait implementation and "
"implementing that same trait, adding behavior in the process. What other "
"kinds of wrappers might be useful in a logging utility?"
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "/// Log a message at the given verbosity level.\n"
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "\"verbosity={verbosity}: {message}\""
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "\"FYI\""
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "\"Uhoh\""
msgstr ""

#: src/methods-and-traits/exercise.md
msgid "// TODO: Define and implement `VerbosityFilter`.\n"
msgstr ""

#: src/methods-and-traits/solution.md
msgid "/// Only log messages up to the given verbosity level.\n"
msgstr ""

#: src/generics.md
msgid "[Generic Functions](./generics/generic-functions.md) (5 minutes)"
msgstr ""

#: src/generics.md
msgid "[Generic Data Types](./generics/generic-data.md) (15 minutes)"
msgstr ""

#: src/generics.md
msgid "[Trait Bounds](./generics/trait-bounds.md) (10 minutes)"
msgstr ""

#: src/generics.md
msgid "[impl Trait](./generics/impl-trait.md) (5 minutes)"
msgstr ""

#: src/generics.md
msgid "[Exercise: Generic min](./generics/exercise.md) (10 minutes)"
msgstr ""

#: src/generics.md src/smart-pointers.md src/iterators.md src/error-handling.md
msgid "This segment should take about 45 minutes"
msgstr ""

#: src/generics/generic-functions.md
#, fuzzy
msgid ""
"Rust supports generics, which lets you abstract algorithms or data "
"structures (such as sorting or a binary tree) over the types used or stored."
msgstr ""
"Rust prend en charge les g√©n√©riques, ce qui vous permet d'abstraire un "
"algorithme (comme le tri) sur les types utilis√©s dans l'algorithme."

#: src/generics/generic-functions.md
msgid "/// Pick `even` or `odd` depending on the value of `n`.\n"
msgstr ""

#: src/generics/generic-functions.md
msgid "\"picked a number: {:?}\""
msgstr ""

#: src/generics/generic-functions.md
msgid "\"picked a tuple: {:?}\""
msgstr ""

#: src/generics/generic-functions.md
msgid "\"dog\""
msgstr ""

#: src/generics/generic-functions.md
msgid "\"cat\""
msgstr ""

#: src/generics/generic-functions.md
msgid ""
"Rust infers a type for T based on the types of the arguments and return "
"value."
msgstr ""

#: src/generics/generic-functions.md
msgid ""
"This is similar to C++ templates, but Rust partially compiles the generic "
"function immediately, so that function must be valid for all types matching "
"the constraints. For example, try modifying `pick` to return `even + odd` if "
"`n == 0`. Even if only the `pick` instantiation with integers is used, Rust "
"still considers it invalid. C++ would let you do this."
msgstr ""

#: src/generics/generic-functions.md
#, fuzzy
msgid ""
"Generic code is turned into non-generic code based on the call sites. This "
"is a zero-cost abstraction: you get exactly the same result as if you had "
"hand-coded the data structures without the abstraction."
msgstr ""
"Il s'agit d'une abstraction √† co√ªt nul : vous obtenez exactement le m√™me "
"r√©sultat que si vous aviez cod√© √† la main les structures de donn√©es sans "
"l'abstraction."

#: src/generics/generic-data.md
#, fuzzy
msgid "You can use generics to abstract over the concrete field type:"
msgstr ""
"Vous pouvez utiliser des g√©n√©riques pour r√©sumer le type de champ concret¬†:"

#: src/generics/generic-data.md
msgid "// fn set_x(&mut self, x: T)\n"
msgstr ""

#: src/generics/generic-data.md
msgid "\"{integer:?} and {float:?}\""
msgstr ""

#: src/generics/generic-data.md
msgid "\"coords: {:?}\""
msgstr ""

#: src/generics/generic-data.md
#, fuzzy
msgid ""
"_Q:_ Why `T` is specified twice in `impl<T> Point<T> {}`? Isn't that "
"redundant?"
msgstr ""
"_Q¬†:_ Pourquoi `T` est sp√©cifi√© deux fois dans `impl<T> Point<T> {}`¬†? N'est-"
"ce pas redondant ?"

#: src/generics/generic-data.md
#, fuzzy
msgid ""
"This is because it is a generic implementation section for generic type. "
"They are independently generic."
msgstr ""
"C'est parce qu'il s'agit d'une section d'impl√©mentation g√©n√©rique pour le "
"type g√©n√©rique. Ils sont ind√©pendamment g√©n√©riques."

#: src/generics/generic-data.md
#, fuzzy
msgid "It means these methods are defined for any `T`."
msgstr "Cela signifie que ces m√©thodes sont d√©finies pour n'importe quel `T`."

#: src/generics/generic-data.md
#, fuzzy
msgid "It is possible to write `impl Point<u32> { .. }`."
msgstr "Il est possible d'√©crire `impl Point<u32> { .. }`."

#: src/generics/generic-data.md
#, fuzzy
msgid ""
"`Point` is still generic and you can use `Point<f64>`, but methods in this "
"block will only be available for `Point<u32>`."
msgstr ""
"`Point` est toujours g√©n√©rique et vous pouvez utiliser `Point<f64>`, mais "
"les m√©thodes de ce bloc ne seront disponibles que pour `Point<u32>`."

#: src/generics/generic-data.md
msgid ""
"Try declaring a new variable `let p = Point { x: 5, y: 10.0 };`. Update the "
"code to allow points that have elements of different types, by using two "
"type variables, e.g., `T` and `U`."
msgstr ""

#: src/generics/trait-bounds.md
#, fuzzy
msgid ""
"When working with generics, you often want to require the types to implement "
"some trait, so that you can call this trait's methods."
msgstr ""
"Lorsque vous travaillez avec des g√©n√©riques, vous souhaitez souvent exiger "
"que les types impl√©mentent un trait, afin que vous puissiez appeler les "
"m√©thodes de ce trait."

#: src/generics/trait-bounds.md
#, fuzzy
msgid "You can do this with `T: Trait` or `impl Trait`:"
msgstr "Vous pouvez le faire avec `T: Trait` ou `impl Trait`¬†:"

#: src/generics/trait-bounds.md
msgid "// struct NotClonable;\n"
msgstr ""

#: src/generics/trait-bounds.md
msgid "\"{pair:?}\""
msgstr ""

#: src/generics/trait-bounds.md
msgid "Try making a `NonClonable` and passing it to `duplicate`."
msgstr ""

#: src/generics/trait-bounds.md
msgid "When multiple traits are necessary, use `+` to join them."
msgstr ""

#: src/generics/trait-bounds.md
#, fuzzy
msgid "Show a `where` clause, students will encounter it when reading code."
msgstr ""
"Montrez une clause \"o√π\", les √©tudiants la rencontreront lors de la lecture "
"du code."

#: src/generics/trait-bounds.md
#, fuzzy
msgid "It declutters the function signature if you have many parameters."
msgstr ""
"Cela d√©sencombre la signature de la fonction si vous avez beaucoup de "
"param√®tres."

#: src/generics/trait-bounds.md
#, fuzzy
msgid "It has additional features making it more powerful."
msgstr "Il a des fonctionnalit√©s suppl√©mentaires qui le rendent plus puissant."

#: src/generics/trait-bounds.md
#, fuzzy
msgid ""
"If someone asks, the extra feature is that the type on the left of \":\" can "
"be arbitrary, like `Option<T>`."
msgstr ""
"Si quelqu'un demande, la fonctionnalit√© suppl√©mentaire est que le type √† "
"gauche de \":\" peut √™tre arbitraire, comme `Option<T>`."

#: src/generics/trait-bounds.md
msgid ""
"Note that Rust does not (yet) support specialization. For example, given the "
"original `duplicate`, it is invalid to add a specialized `duplicate(a: u32)`."
msgstr ""

#: src/generics/impl-trait.md
#, fuzzy
msgid ""
"Similar to trait bounds, an `impl Trait` syntax can be used in function "
"arguments and return values:"
msgstr ""
"Semblable aux limites de trait, une syntaxe `impl Trait` peut √™tre utilis√©e "
"dans la fonction arguments et valeurs de retour¬†:"

#: src/generics/impl-trait.md
msgid ""
"// Syntactic sugar for:\n"
"//   fn add_42_millions<T: Into<i32>>(x: T) -> i32 {\n"
msgstr ""

#: src/generics/impl-trait.md
msgid "\"{many}\""
msgstr ""

#: src/generics/impl-trait.md
msgid "\"{many_more}\""
msgstr ""

#: src/generics/impl-trait.md
msgid "\"debuggable: {debuggable:?}\""
msgstr ""

#: src/generics/impl-trait.md
#, fuzzy
msgid ""
"`impl Trait` allows you to work with types which you cannot name. The "
"meaning of `impl Trait` is a bit different in the different positions."
msgstr ""
"La signification de `impl Trait` est un peu diff√©rente dans les diff√©rentes "
"positions."

#: src/generics/impl-trait.md
#, fuzzy
msgid ""
"For a parameter, `impl Trait` is like an anonymous generic parameter with a "
"trait bound."
msgstr ""
"Pour un param√®tre, `impl Trait` est comme un param√®tre g√©n√©rique anonyme "
"avec un trait li√©."

#: src/generics/impl-trait.md
#, fuzzy
msgid ""
"For a return type, it means that the return type is some concrete type that "
"implements the trait, without naming the type. This can be useful when you "
"don't want to expose the concrete type in a public API."
msgstr ""
"Pour un type de retour, cela signifie que le type de retour est un type "
"concret qui impl√©mente le trait, sans nommer le type. Cela peut √™tre utile "
"lorsque vous ne souhaitez pas exposer le type concret dans un API publique."

#: src/generics/impl-trait.md
#, fuzzy
msgid ""
"Inference is hard in return position. A function returning `impl Foo` picks "
"the concrete type it returns, without writing it out in the source. A "
"function returning a generic type like `collect<B>() -> B` can return any "
"type satisfying `B`, and the caller may need to choose one, such as with "
"`let x: Vec<_> = foo.collect()` or with the turbofish, `foo.collect::"
"<Vec<_>>()`."
msgstr ""
"L'inf√©rence est difficile en position de retour. Une fonction renvoyant "
"`impl Foo` s√©lectionne le type concret qu'il renvoie, sans l'√©crire dans la "
"source. Une fonction retourner un type g√©n√©rique comme `collect<B>() -> B` "
"peut retourner n'importe quel type satisfaisant `B`, et l'appelant peut "
"avoir besoin d'en choisir un, comme avec `let x¬†: Vec<_> = foo.collect()` ou "
"avec le turbofish, `foo.collect ::<Vec<_>>()`."

#: src/generics/impl-trait.md
msgid ""
"What is the type of `debuggable`? Try `let debuggable: () = ..` to see what "
"the error message shows."
msgstr ""

#: src/generics/exercise.md
msgid ""
"In this short exercise, you will implement a generic `min` function that "
"determines the minimum of two values, using a `LessThan` trait."
msgstr ""

#: src/generics/exercise.md src/generics/solution.md
msgid "/// Return true if self is less than other.\n"
msgstr ""

#: src/generics/exercise.md
msgid "// TODO: implement the `min` function used in `main`.\n"
msgstr ""

#: src/generics/exercise.md src/generics/solution.md
msgid "\"Shapiro\""
msgstr ""

#: src/generics/exercise.md src/generics/solution.md
msgid "\"Baumann\""
msgstr ""

#: src/welcome-day-2-afternoon.md
msgid "[Standard Library Types](./std-types.md) (1 hour and 10 minutes)"
msgstr ""

#: src/welcome-day-2-afternoon.md
msgid "[Standard Library Traits](./std-traits.md) (1 hour and 40 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Standard Library](./std-types/std.md) (3 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Documentation](./std-types/docs.md) (5 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Option](./std-types/option.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Result](./std-types/result.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[String](./std-types/string.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Vec](./std-types/vec.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[HashMap](./std-types/hashmap.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Exercise: Counter](./std-types/exercise.md) (10 minutes)"
msgstr ""

#: src/std-types.md src/memory-management.md src/slices-and-lifetimes.md
msgid "This segment should take about 1 hour and 10 minutes"
msgstr ""

#: src/std-types.md
msgid ""
"For each of the slides in this section, spend some time reviewing the "
"documentation pages, highlighting some of the more common methods."
msgstr ""

#: src/std-types/std.md
#, fuzzy
msgid ""
"Rust comes with a standard library which helps establish a set of common "
"types used by Rust libraries and programs. This way, two libraries can work "
"together smoothly because they both use the same `String` type."
msgstr ""
"Rust est livr√© avec une biblioth√®que standard qui permet d'√©tablir un "
"ensemble de types communs utilis√© par la biblioth√®que et les programmes "
"Rust. De cette fa√ßon, deux biblioth√®ques peuvent travailler ensemble en "
"douceur car ils utilisent tous les deux le m√™me type `String`."

#: src/std-types/std.md
#, fuzzy
msgid ""
"In fact, Rust contains several layers of the Standard Library: `core`, "
"`alloc` and `std`."
msgstr ""
"En fait, Rust contient plusieurs couches de la biblioth√®que standard : "
"`core`, `alloc` et `std`."

#: src/std-types/std.md
#, fuzzy
msgid ""
"`core` includes the most basic types and functions that don't depend on "
"`libc`, allocator or even the presence of an operating system."
msgstr ""
"`core` inclut les types et fonctions les plus basiques qui ne d√©pendent pas "
"de `libc`, de l'allocateur ou m√™me la pr√©sence d'un syst√®me d'exploitation."

#: src/std-types/std.md
#, fuzzy
msgid ""
"`alloc` includes types which require a global heap allocator, such as `Vec`, "
"`Box` and `Arc`."
msgstr ""
"`alloc` inclut les types qui n√©cessitent un allocateur de tas global, tels "
"que `Vec`, `Box` et `Arc`."

#: src/std-types/std.md
#, fuzzy
msgid ""
"Embedded Rust applications often only use `core`, and sometimes `alloc`."
msgstr ""
"Les applications Embedded Rust n'utilisent souvent que \"core\" et parfois "
"\"alloc\"."

#: src/std-types/docs.md
msgid "Rust comes with extensive documentation. For example:"
msgstr ""

#: src/std-types/docs.md
#, fuzzy
msgid ""
"All of the details about [loops](https://doc.rust-lang.org/stable/reference/"
"expressions/loop-expr.html)."
msgstr ""
"Voir la [Rust Reference](https://doc.rust-lang.org/reference/type-layout."
"html)."

#: src/std-types/docs.md
msgid ""
"Primitive types like [`u8`](https://doc.rust-lang.org/stable/std/primitive."
"u8.html)."
msgstr ""

#: src/std-types/docs.md
#, fuzzy
msgid ""
"Standard library types like [`Option`](https://doc.rust-lang.org/stable/std/"
"option/enum.Option.html) or [`BinaryHeap`](https://doc.rust-lang.org/stable/"
"std/collections/struct.BinaryHeap.html)."
msgstr ""
"[`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) et [`Write`]"
"(https://doc.rust-lang.org/std/io/trait.Write.html) utilis√©s pour IO,"

#: src/std-types/docs.md
msgid "In fact, you can document your own code:"
msgstr ""

#: src/std-types/docs.md
msgid ""
"/// Determine whether the first argument is divisible by the second "
"argument.\n"
"///\n"
"/// If the second argument is zero, the result is false.\n"
msgstr ""

#: src/std-types/docs.md
#, fuzzy
msgid ""
"The contents are treated as Markdown. All published Rust library crates are "
"automatically documented at [`docs.rs`](https://docs.rs) using the [rustdoc]"
"(https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html) tool. It is "
"idiomatic to document all public items in an API using this pattern."
msgstr ""
"Le contenu est trait√© comme Markdown. Toutes les caisses de biblioth√®que "
"Rust publi√©es sont automatiquement document√© sur [`docs.rs`](https://docs."
"rs) en utilisant le [rustdoc](https://doc.rust-lang.org/rustdoc/what-is-"
"rustdoc.html). C'est idiomatic pour documenter tous les √©l√©ments publics "
"dans une API utilisant ce mod√®le."

#: src/std-types/docs.md
msgid ""
"To document an item from inside the item (such as inside a module), use `//!"
"` or `/*! .. */`, called \"inner doc comments\":"
msgstr ""

#: src/std-types/docs.md
msgid ""
"//! This module contains functionality relating to divisibility of "
"integers.\n"
msgstr ""

#: src/std-types/docs.md
#, fuzzy
msgid ""
"Show students the generated docs for the `rand` crate at <https://docs.rs/"
"rand>."
msgstr ""
"Montrez aux √©l√®ves les documents g√©n√©r√©s pour la caisse \"rand\" sur [`docs."
"rs/rand`](https://docs.rs/rand)."

#: src/std-types/option.md
#, fuzzy
msgid "Option"
msgstr "Exceptions"

#: src/std-types/option.md
msgid ""
"We have already seen some use of `Option<T>`. It stores either a value of "
"type `T` or nothing. For example, [`String::find`](https://doc.rust-lang.org/"
"stable/std/string/struct.String.html#method.find) returns an `Option<usize>`."
msgstr ""

#: src/std-types/option.md
msgid "\"L√∂we ËÄÅËôé L√©opard Gepardi\""
msgstr ""

#: src/std-types/option.md
msgid "'√©'"
msgstr ""

#: src/std-types/option.md
msgid "\"find returned {position:?}\""
msgstr ""

#: src/std-types/option.md
msgid "'Z'"
msgstr ""

#: src/std-types/option.md
msgid "\"Character not found\""
msgstr ""

#: src/std-types/option.md
#, fuzzy
msgid "`Option` is widely used, not just in the standard library."
msgstr ""
"`Option` et `Result` sont largement utilis√©s, pas seulement dans la "
"biblioth√®que standard."

#: src/std-types/option.md
msgid ""
"`unwrap` will return the value in an `Option`, or panic. `expect` is similar "
"but takes an error message."
msgstr ""

#: src/std-types/option.md
msgid ""
"You can panic on None, but you can't \"accidentally\" forget to check for "
"None."
msgstr ""

#: src/std-types/option.md
msgid ""
"It's common to `unwrap`/`expect` all over the place when hacking something "
"together, but production code typically handles `None` in a nicer fashion."
msgstr ""

#: src/std-types/option.md
msgid ""
"The niche optimization means that `Option<T>` often has the same size in "
"memory as `T`."
msgstr ""

#: src/std-types/result.md
msgid "Result"
msgstr ""

#: src/std-types/result.md
msgid ""
"`Result` is similar to `Option`, but indicates the success or failure of an "
"operation, each with a different type. This is similar to the `Res` defined "
"in the expression exercise, but generic: `Result<T, E>` where `T` is used in "
"the `Ok` variant and `E` appears in the `Err` variant."
msgstr ""

#: src/std-types/result.md
msgid "\"diary.txt\""
msgstr ""

#: src/std-types/result.md
msgid "\"Dear diary: {contents} ({bytes} bytes)\""
msgstr ""

#: src/std-types/result.md
msgid "\"Could not read file content\""
msgstr ""

#: src/std-types/result.md
msgid "\"The diary could not be opened: {err}\""
msgstr ""

#: src/std-types/result.md
#, fuzzy
msgid ""
"As with `Option`, the successful value sits inside of `Result`, forcing the "
"developer to explicitly extract it. This encourages error checking. In the "
"case where an error should never happen, `unwrap()` or `expect()` can be "
"called, and this is a signal of the developer intent too."
msgstr ""
"Comme pour `Option`, la valeur r√©ussie se trouve √† l'int√©rieur de `Result`, "
"obligeant le d√©veloppeur √† l'extraire explicitement. Cela encourage la "
"v√©rification des erreurs. Dans le cas o√π une erreur ne devrait jamais se "
"produire, `unwrap()` ou `expect()` peut √™tre appel√©, et c'est aussi un "
"signal de l'intention du d√©veloppeur."

#: src/std-types/result.md
#, fuzzy
msgid ""
"`Result` documentation is a recommended read. Not during the course, but it "
"is worth mentioning. It contains a lot of convenience methods and functions "
"that help functional-style programming."
msgstr ""
"La documentation `Result` est une lecture recommand√©e. Pas pendant le cours, "
"mais cela vaut la peine d'√™tre mentionn√©. Il contient de nombreuses m√©thodes "
"et fonctions pratiques qui facilitent la programmation de style fonctionnel."

#: src/std-types/result.md
#, fuzzy
msgid ""
"`Result` is the standard type to implement error handling as we will see on "
"Day 3."
msgstr ""
"`Result` est le type standard pour impl√©menter la gestion des erreurs, comme "
"nous le verrons le jour 3."

#: src/std-types/string.md
msgid "String"
msgstr "String"

#: src/std-types/string.md
#, fuzzy
msgid ""
"[`String`](https://doc.rust-lang.org/std/string/struct.String.html) is the "
"standard heap-allocated growable UTF-8 string buffer:"
msgstr ""
"[`String`](https://doc.rust-lang.org/std/string/struct.String.html) est le "
"tampon de cha√Æne UTF-8 √©volutif standard allou√© par tas¬†:"

#: src/std-types/string.md src/std-traits/read-and-write.md
#: src/memory-management/review.md src/testing/unit-tests.md
#: src/concurrency/scoped-threads.md
msgid "\"Hello\""
msgstr ""

#: src/std-types/string.md
msgid "\"s1: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/string.md
msgid "'!'"
msgstr ""

#: src/std-types/string.md
msgid "\"s2: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/string.md
msgid "\"üá®üá≠\""
msgstr ""

#: src/std-types/string.md
msgid "\"s3: len = {}, number of chars = {}\""
msgstr ""

#: src/std-types/string.md
#, fuzzy
msgid ""
"`String` implements [`Deref<Target = str>`](https://doc.rust-lang.org/std/"
"string/struct.String.html#deref-methods-str), which means that you can call "
"all `str` methods on a `String`."
msgstr ""
"`String` impl√©mente [`Deref<Target = str>`](https://doc.rust-lang.org/std/"
"string/struct.String.html#deref-methods-str), ce qui signifie que vous "
"pouvez appeler tous M√©thodes `str` sur une `String`."

#: src/std-types/string.md
msgid ""
"`String::new` returns a new empty string, use `String::with_capacity` when "
"you know how much data you want to push to the string."
msgstr ""

#: src/std-types/string.md
msgid ""
"`String::len` returns the size of the `String` in bytes (which can be "
"different from its length in characters)."
msgstr ""

#: src/std-types/string.md
msgid ""
"`String::chars` returns an iterator over the actual characters. Note that a "
"`char` can be different from what a human will consider a \"character\" due "
"to [grapheme clusters](https://docs.rs/unicode-segmentation/latest/"
"unicode_segmentation/struct.Graphemes.html)."
msgstr ""

#: src/std-types/string.md
msgid ""
"When people refer to strings they could either be talking about `&str` or "
"`String`."
msgstr ""

#: src/std-types/string.md
msgid ""
"When a type implements `Deref<Target = T>`, the compiler will let you "
"transparently call methods from `T`."
msgstr ""

#: src/std-types/string.md
msgid ""
"We haven't discussed the `Deref` trait yet, so at this point this mostly "
"explains the structure of the sidebar in the documentation."
msgstr ""

#: src/std-types/string.md
msgid ""
"`String` implements `Deref<Target = str>` which transparently gives it "
"access to `str`'s methods."
msgstr ""

#: src/std-types/string.md
msgid "Write and compare `let s3 = s1.deref();` and `let s3 = &*s1;`."
msgstr ""

#: src/std-types/string.md
msgid ""
"`String` is implemented as a wrapper around a vector of bytes, many of the "
"operations you see supported on vectors are also supported on `String`, but "
"with some extra guarantees."
msgstr ""

#: src/std-types/string.md
msgid "Compare the different ways to index a `String`:"
msgstr ""

#: src/std-types/string.md
msgid ""
"To a character by using `s3.chars().nth(i).unwrap()` where `i` is in-bound, "
"out-of-bounds."
msgstr ""

#: src/std-types/string.md
msgid ""
"To a substring by using `s3[0..4]`, where that slice is on character "
"boundaries or not."
msgstr ""

#: src/std-types/vec.md
#, fuzzy
msgid ""
"[`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html) is the standard "
"resizable heap-allocated buffer:"
msgstr ""
"[`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html) est le tampon "
"standard redimensionnable allou√© au tas¬†:"

#: src/std-types/vec.md
msgid "\"v1: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/vec.md
msgid "\"v2: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/vec.md
msgid "// Canonical macro to initialize a vector with elements.\n"
msgstr ""

#: src/std-types/vec.md
msgid "// Retain only the even elements.\n"
msgstr ""

#: src/std-types/vec.md
msgid "\"{v3:?}\""
msgstr ""

#: src/std-types/vec.md
msgid "// Remove consecutive duplicates.\n"
msgstr ""

#: src/std-types/vec.md
#, fuzzy
msgid ""
"`Vec` implements [`Deref<Target = [T]>`](https://doc.rust-lang.org/std/vec/"
"struct.Vec.html#deref-methods-%5BT%5D), which means that you can call slice "
"methods on a `Vec`."
msgstr ""
"`Vec` impl√©mente [`Deref<Target = [T]>`](https://doc.rust-lang.org/std/vec/"
"struct.Vec.html#deref-methods-%5BT%5D), ce qui signifie que vous pouvez "
"appeler slice m√©thodes sur un `Vec`."

#: src/std-types/vec.md
msgid ""
"`Vec` is a type of collection, along with `String` and `HashMap`. The data "
"it contains is stored on the heap. This means the amount of data doesn't "
"need to be known at compile time. It can grow or shrink at runtime."
msgstr ""

#: src/std-types/vec.md
msgid ""
"Notice how `Vec<T>` is a generic type too, but you don't have to specify `T` "
"explicitly. As always with Rust type inference, the `T` was established "
"during the first `push` call."
msgstr ""

#: src/std-types/vec.md
msgid ""
"`vec![...]` is a canonical macro to use instead of `Vec::new()` and it "
"supports adding initial elements to the vector."
msgstr ""

#: src/std-types/vec.md
msgid ""
"To index the vector you use `[` `]`, but they will panic if out of bounds. "
"Alternatively, using `get` will return an `Option`. The `pop` function will "
"remove the last element."
msgstr ""

#: src/std-types/vec.md
msgid ""
"Slices are covered on day 3. For now, students only need to know that a "
"value of type `Vec` gives access to all of the documented slice methods, too."
msgstr ""

#: src/std-types/hashmap.md
#, fuzzy
msgid "Standard hash map with protection against HashDoS attacks:"
msgstr ""
"Carte de hachage standard avec protection contre les attaques HashDoS¬†:"

#: src/std-types/hashmap.md
msgid "\"Adventures of Huckleberry Finn\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Grimms' Fairy Tales\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Pride and Prejudice\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Les Mis√©rables\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"We know about {} books, but not Les Mis√©rables.\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Alice's Adventure in Wonderland\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"{book}: {count} pages\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"{book} is unknown.\""
msgstr ""

#: src/std-types/hashmap.md
msgid "// Use the .entry() method to insert a value if nothing is found.\n"
msgstr ""

#: src/std-types/hashmap.md
msgid "\"{page_counts:#?}\""
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"`HashMap` is not defined in the prelude and needs to be brought into scope."
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"Try the following lines of code. The first line will see if a book is in the "
"hashmap and if not return an alternative value. The second line will insert "
"the alternative value in the hashmap if the book is not found."
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Harry Potter and the Sorcerer's Stone\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"The Hunger Games\""
msgstr ""

#: src/std-types/hashmap.md
msgid "Unlike `vec!`, there is unfortunately no standard `hashmap!` macro."
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"Although, since Rust 1.56, HashMap implements [`From<[(K, V); N]>`](https://"
"doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#impl-"
"From%3C%5B(K,+V);+N%5D%3E-for-HashMap%3CK,+V,+RandomState%3E), which allows "
"us to easily initialize a hash map from a literal array:"
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"Alternatively HashMap can be built from any `Iterator` which yields key-"
"value tuples."
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"We are showing `HashMap<String, i32>`, and avoid using `&str` as key to make "
"examples easier. Using references in collections can, of course, be done, "
"but it can lead into complications with the borrow checker."
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"Try removing `to_string()` from the example above and see if it still "
"compiles. Where do you think we might run into issues?"
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"This type has several \"method-specific\" return types, such as `std::"
"collections::hash_map::Keys`. These types often appear in searches of the "
"Rust docs. Show students the docs for this type, and the helpful link back "
"to the `keys` method."
msgstr ""

#: src/std-types/exercise.md
msgid ""
"In this exercise you will take a very simple data structure and make it "
"generic. It uses a [`std::collections::HashMap`](https://doc.rust-lang.org/"
"stable/std/collections/struct.HashMap.html) to keep track of which values "
"have been seen and how many times each one has appeared."
msgstr ""

#: src/std-types/exercise.md
msgid ""
"The initial version of `Counter` is hard coded to only work for `u32` "
"values. Make the struct and its methods generic over the type of value being "
"tracked, that way `Counter` can track any type of value."
msgstr ""

#: src/std-types/exercise.md
msgid ""
"If you finish early, try using the [`entry`](https://doc.rust-lang.org/"
"stable/std/collections/struct.HashMap.html#method.entry) method to halve the "
"number of hash lookups required to implement the `count` method."
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid ""
"/// Counter counts the number of times each value of type T has been seen.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "/// Create a new Counter.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "/// Count an occurrence of the given value.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "/// Return the number of times the given value has been seen.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"saw {} values equal to {}\""
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"apple\""
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"orange\""
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"got {} apples\""
msgstr ""

#: src/std-traits.md
msgid "[Comparisons](./std-traits/comparisons.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Operators](./std-traits/operators.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[From and Into](./std-traits/from-and-into.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Casting](./std-traits/casting.md) (5 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Read and Write](./std-traits/read-and-write.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Default, struct update syntax](./std-traits/default.md) (5 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Closures](./std-traits/closures.md) (20 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Exercise: ROT13](./std-traits/exercise.md) (30 minutes)"
msgstr ""

#: src/std-traits.md
msgid "This segment should take about 1 hour and 40 minutes"
msgstr ""

#: src/std-traits.md
msgid ""
"As with the standard-library types, spend time reviewing the documentation "
"for each trait."
msgstr ""

#: src/std-traits.md
msgid "This section is long. Take a break midway through."
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"These traits support comparisons between values. All traits can be derived "
"for types containing fields that implement these traits."
msgstr ""

#: src/std-traits/comparisons.md
msgid "`PartialEq` and `Eq`"
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"`PartialEq` is a partial equivalence relation, with required method `eq` and "
"provided method `ne`. The `==` and `!=` operators will call these methods."
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"`Eq` is a full equivalence relation (reflexive, symmetric, and transitive) "
"and implies `PartialEq`. Functions that require full equivalence will use "
"`Eq` as a trait bound."
msgstr ""

#: src/std-traits/comparisons.md
#, fuzzy
msgid "`PartialOrd` and `Ord`"
msgstr "`Lire` et `Ecrire`"

#: src/std-traits/comparisons.md
msgid ""
"`PartialOrd` defines a partial ordering, with a `partial_cmp` method. It is "
"used to implement the `<`, `<=`, `>=`, and `>` operators."
msgstr ""

#: src/std-traits/comparisons.md
msgid "`Ord` is a total ordering, with `cmp` returning `Ordering`."
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"`PartialEq` can be implemented between different types, but `Eq` cannot, "
"because it is reflexive:"
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"In practice, it's common to derive these traits, but uncommon to implement "
"them."
msgstr ""

#: src/std-traits/operators.md
#, fuzzy
msgid ""
"Operator overloading is implemented via traits in [`std::ops`](https://doc."
"rust-lang.org/std/ops/index.html):"
msgstr ""
"La surcharge d'op√©rateur est impl√©ment√©e via des traits dans [`std::ops`]"
"(https://doc.rust-lang.org/std/ops/index.html)¬†:"

#: src/std-traits/operators.md
msgid "\"{:?} + {:?} = {:?}\""
msgstr ""

#: src/std-traits/operators.md src/memory-management/drop.md
#, fuzzy
msgid "Discussion points:"
msgstr "Points de discussion:"

#: src/std-traits/operators.md
#, fuzzy
msgid ""
"You could implement `Add` for `&Point`. In which situations is that useful?"
msgstr ""
"Vous pouvez impl√©menter `Add` pour `&Point`. Dans quelles situations est-ce "
"utile ?"

#: src/std-traits/operators.md
#, fuzzy
msgid ""
"Answer: `Add:add` consumes `self`. If type `T` for which you are overloading "
"the operator is not `Copy`, you should consider overloading the operator for "
"`&T` as well. This avoids unnecessary cloning on the call site."
msgstr ""
"R√©ponse : `Add:add` consomme `self`. Si tapez `T` pour lequel vous √™tes la "
"surcharge de l'op√©rateur n'est pas `Copy`, vous devriez envisager de "
"surcharger l'op√©rateur pour `&T` √©galement. Cela √©vite un clonage inutile "
"sur le site d'appel. \\*¬†Pourquoi `Output` est-il un type associ√©¬†? Pourrait-"
"il en faire un param√®tre de type?"

#: src/std-traits/operators.md
#, fuzzy
msgid ""
"Why is `Output` an associated type? Could it be made a type parameter of the "
"method?"
msgstr ""
"R√©ponse courte¬†: les param√®tres de type sont contr√¥l√©s par l'appelant, mais "
"les types associ√©s (comme `Output`) sont contr√¥l√©s par l'impl√©menteur d'un "
"trait."

#: src/std-traits/operators.md
msgid ""
"Short answer: Function type parameters are controlled by the caller, but "
"associated types (like `Output`) are controlled by the implementer of a "
"trait."
msgstr ""

#: src/std-traits/operators.md
msgid ""
"You could implement `Add` for two different types, e.g. `impl Add<(i32, "
"i32)> for Point` would add a tuple to a `Point`."
msgstr ""

#: src/std-traits/from-and-into.md
#, fuzzy
msgid ""
"Types implement [`From`](https://doc.rust-lang.org/std/convert/trait.From."
"html) and [`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) to "
"facilitate type conversions:"
msgstr ""
"Les types impl√©mentent [`From`](https://doc.rust-lang.org/std/convert/trait."
"From.html) et [`Into`](https://doc.rust-lang.org/std/convert/trait.Into."
"html) pour faciliter les conversions de type¬†:"

#: src/std-traits/from-and-into.md
msgid "\"{s}, {addr}, {one}, {bigger}\""
msgstr ""

#: src/std-traits/from-and-into.md
#, fuzzy
msgid ""
"[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) is "
"automatically implemented when [`From`](https://doc.rust-lang.org/std/"
"convert/trait.From.html) is implemented:"
msgstr ""
"[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) est "
"automatiquement impl√©ment√© lorsque [`From`](https://doc.rust-lang.org/std/"
"convert/trait.From.html) est impl√©ment√©¬†:"

#: src/std-traits/from-and-into.md
#, fuzzy
msgid ""
"That's why it is common to only implement `From`, as your type will get "
"`Into` implementation too."
msgstr ""
"C'est pourquoi il est courant de n'impl√©menter que `From`, car votre type "
"recevra √©galement l'impl√©mentation `Into`."

#: src/std-traits/from-and-into.md
#, fuzzy
msgid ""
"When declaring a function argument input type like \"anything that can be "
"converted into a `String`\", the rule is opposite, you should use `Into`. "
"Your function will accept types that implement `From` and those that _only_ "
"implement `Into`."
msgstr ""
"Lors de la d√©claration d'un type d'entr√©e d'argument de fonction comme "
"\"tout ce qui peut √™tre converti en `String`\", la r√®gle est oppos√©e, vous "
"devez utiliser `Into`. Votre fonction acceptera les types qui impl√©mentent "
"`From` et ceux qui impl√©mentent _uniquement_ `Into`."

#: src/std-traits/casting.md
msgid ""
"Rust has no _implicit_ type conversions, but does support explicit casts "
"with `as`. These generally follow C semantics where those are defined."
msgstr ""

#: src/std-traits/casting.md
msgid "\"as u16: {}\""
msgstr ""

#: src/std-traits/casting.md
msgid "\"as i16: {}\""
msgstr ""

#: src/std-traits/casting.md
msgid "\"as u8: {}\""
msgstr ""

#: src/std-traits/casting.md
msgid ""
"The results of `as` are _always_ defined in Rust and consistent across "
"platforms. This might not match your intuition for changing sign or casting "
"to a smaller type -- check the docs, and comment for clarity."
msgstr ""

#: src/std-traits/casting.md
msgid ""
"Casting with `as` is a relatively sharp tool that is easy to use "
"incorrectly, and can be a source of subtle bugs as future maintenance work "
"changes the types that are used or the ranges of values in types. Casts are "
"best used only when the intent is to indicate unconditional truncation (e.g. "
"selecting the bottom 32 bits of a `u64` with `as u32`, regardless of what "
"was in the high bits)."
msgstr ""

#: src/std-traits/casting.md
msgid ""
"For infallible casts (e.g. `u32` to `u64`), prefer using `From` or `Into` "
"over `as` to confirm that the cast is in fact infallible. For fallible "
"casts, `TryFrom` and `TryInto` are available when you want to handle casts "
"that fit differently from those that don't."
msgstr ""

#: src/std-traits/casting.md
msgid "Consider taking a break after this slide."
msgstr ""

#: src/std-traits/casting.md
msgid ""
"`as` is similar to a C++ static cast. Use of `as` in cases where data might "
"be lost is generally discouraged, or at least deserves an explanatory "
"comment."
msgstr ""

#: src/std-traits/casting.md
msgid "This is common in casting integers to `usize` for use as an index."
msgstr ""

#: src/std-traits/read-and-write.md
#, fuzzy
msgid ""
"Using [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) and "
"[`BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html), you can "
"abstract over `u8` sources:"
msgstr ""
"En utilisant [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) et "
"[`BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html), vous "
"pouvez r√©sumer les sources `u8`¬†:"

#: src/std-traits/read-and-write.md
msgid "b\"foo\\nbar\\nbaz\\n\""
msgstr ""

#: src/std-traits/read-and-write.md
msgid "\"lines in slice: {}\""
msgstr ""

#: src/std-traits/read-and-write.md
msgid "\"lines in file: {}\""
msgstr ""

#: src/std-traits/read-and-write.md
#, fuzzy
msgid ""
"Similarly, [`Write`](https://doc.rust-lang.org/std/io/trait.Write.html) lets "
"you abstract over `u8` sinks:"
msgstr ""
"De m√™me, [`Write`](https://doc.rust-lang.org/std/io/trait.Write.html) vous "
"permet d'abstraire les puits `u8`¬†:"

#: src/std-traits/read-and-write.md
msgid "\"\\n\""
msgstr ""

#: src/std-traits/read-and-write.md src/slices-and-lifetimes/str.md
msgid "\"World\""
msgstr ""

#: src/std-traits/read-and-write.md
msgid "\"Logged: {:?}\""
msgstr ""

#: src/std-traits/default.md
#, fuzzy
msgid "The `Default` Trait"
msgstr "Le trait \"par d√©faut\""

#: src/std-traits/default.md
#, fuzzy
msgid ""
"[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) trait "
"produces a default value for a type."
msgstr ""
"[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) trait "
"fournit une impl√©mentation par d√©faut d'un trait."

#: src/std-traits/default.md
msgid "\"John Smith\""
msgstr ""

#: src/std-traits/default.md
msgid "\"{default_struct:#?}\""
msgstr ""

#: src/std-traits/default.md
msgid "\"Y is set!\""
msgstr ""

#: src/std-traits/default.md
msgid "\"{almost_default_struct:#?}\""
msgstr ""

#: src/std-traits/default.md src/slices-and-lifetimes/exercise.md
#: src/slices-and-lifetimes/solution.md
msgid "\"{:#?}\""
msgstr ""

#: src/std-traits/default.md
#, fuzzy
msgid ""
"It can be implemented directly or it can be derived via `#[derive(Default)]`."
msgstr ""
"Il peut √™tre impl√©ment√© directement ou il peut √™tre d√©riv√© via "
"`#[derive(Default)]`."

#: src/std-traits/default.md
#, fuzzy
msgid ""
"A derived implementation will produce a value where all fields are set to "
"their default values."
msgstr ""
"L'impl√©mentation d√©riv√©e produira une instance o√π tous les champs sont "
"d√©finis sur leurs valeurs par d√©faut."

#: src/std-traits/default.md
#, fuzzy
msgid "This means all types in the struct must implement `Default` too."
msgstr ""
"Cela signifie que tous les types de la structure doivent √©galement "
"impl√©menter `Default`."

#: src/std-traits/default.md
#, fuzzy
msgid ""
"Standard Rust types often implement `Default` with reasonable values (e.g. "
"`0`, `\"\"`, etc)."
msgstr ""
"Les types Rust standard impl√©mentent souvent `Default` avec des valeurs "
"raisonnables (par exemple `0`, `\"\"`, etc.)."

#: src/std-traits/default.md
#, fuzzy
msgid "The partial struct initialization works nicely with default."
msgstr ""
"La copie de structure partielle fonctionne bien avec la valeur par d√©faut."

#: src/std-traits/default.md
#, fuzzy
msgid ""
"The Rust standard library is aware that types can implement `Default` and "
"provides convenience methods that use it."
msgstr ""
"La biblioth√®que standard Rust est consciente que les types peuvent "
"impl√©menter `Default` et fournit des m√©thodes pratiques qui l'utilisent."

#: src/std-traits/default.md
msgid ""
"The `..` syntax is called [struct update syntax](https://doc.rust-lang.org/"
"book/ch05-01-defining-structs.html#creating-instances-from-other-instances-"
"with-struct-update-syntax)."
msgstr ""

#: src/std-traits/closures.md
#, fuzzy
msgid ""
"Closures or lambda expressions have types which cannot be named. However, "
"they implement special [`Fn`](https://doc.rust-lang.org/std/ops/trait.Fn."
"html), [`FnMut`](https://doc.rust-lang.org/std/ops/trait.FnMut.html), and "
"[`FnOnce`](https://doc.rust-lang.org/std/ops/trait.FnOnce.html) traits:"
msgstr ""
"Les fermetures ou les expressions lambda ont des types qui ne peuvent pas "
"√™tre nomm√©s. Cependant, ils impl√©menter [`Fn`](https://doc.rust-lang.org/std/"
"ops/trait.Fn.html) sp√©cial, [`FnMut`](https://doc.rust-lang.org/std/ops/"
"trait.FnMut.html), et [`FnOnce`](https://doc.rust-lang.org/std/ops/trait."
"FnOnce.html)¬†:"

#: src/std-traits/closures.md
#, fuzzy
msgid "\"Calling function on {input}\""
msgstr "Appel de fonctions non s√©curis√©es"

#: src/std-traits/closures.md
msgid "\"add_3: {}\""
msgstr ""

#: src/std-traits/closures.md
msgid "\"accumulate: {}\""
msgstr ""

#: src/std-traits/closures.md
msgid "\"multiply_sum: {}\""
msgstr ""

#: src/std-traits/closures.md
#, fuzzy
msgid ""
"An `Fn` (e.g. `add_3`) neither consumes nor mutates captured values, or "
"perhaps captures nothing at all. It can be called multiple times "
"concurrently."
msgstr ""
"Un `Fn` ne consomme ni ne modifie les valeurs captur√©es, ou peut-√™tre ne "
"capture rien du tout, il peut donc √™tre appel√© plusieurs fois simultan√©ment."

#: src/std-traits/closures.md
#, fuzzy
msgid ""
"An `FnMut` (e.g. `accumulate`) might mutate captured values. You can call it "
"multiple times, but not concurrently."
msgstr ""
"Un `FnMut` peut faire muter les valeurs captur√©es, vous pouvez donc "
"l'appeler plusieurs fois mais pas simultan√©ment."

#: src/std-traits/closures.md
#, fuzzy
msgid ""
"If you have an `FnOnce` (e.g. `multiply_sum`), you may only call it once. It "
"might consume captured values."
msgstr ""
"Si vous avez un \"FnOnce\", vous ne pouvez l'appeler qu'une seule fois. Cela "
"peut consommer des valeurs captur√©es."

#: src/std-traits/closures.md
#, fuzzy
msgid ""
"`FnMut` is a subtype of `FnOnce`. `Fn` is a subtype of `FnMut` and `FnOnce`. "
"I.e. you can use an `FnMut` wherever an `FnOnce` is called for, and you can "
"use an `Fn` wherever an `FnMut` or `FnOnce` is called for."
msgstr ""
"`FnMut` est un sous-type de `FnOnce`. `Fn` est un sous-type de `FnMut` et "
"`FnOnce`. C'est √† dire. vous pouvez utiliser un `FnMut` partout o√π un "
"`FnOnce` est appel√©, et vous pouvez utiliser un `Fn` partout o√π un `FnMut` "
"ou `FnOnce` est r√©clam√©."

#: src/std-traits/closures.md
msgid ""
"When you define a function that takes a closure, you should take `FnOnce` if "
"you can (i.e. you call it once), or `FnMut` else, and last `Fn`. This allows "
"the most flexibility for the caller."
msgstr ""

#: src/std-traits/closures.md
msgid ""
"In contrast, when you have a closure, the most flexible you can have is `Fn` "
"(it can be passed everywhere), then `FnMut`, and lastly `FnOnce`."
msgstr ""

#: src/std-traits/closures.md
msgid ""
"The compiler also infers `Copy` (e.g. for `add_3`) and `Clone` (e.g. "
"`multiply_sum`), depending on what the closure captures."
msgstr ""

#: src/std-traits/closures.md
msgid ""
"By default, closures will capture by reference if they can. The `move` "
"keyword makes them capture by value."
msgstr ""

#: src/std-traits/closures.md
msgid "\"Hi\""
msgstr ""

#: src/std-traits/closures.md
msgid "\"there\""
msgstr ""

#: src/std-traits/exercise.md
msgid ""
"In this example, you will implement the classic [\"ROT13\" cipher](https://"
"en.wikipedia.org/wiki/ROT13). Copy this code to the playground, and "
"implement the missing bits. Only rotate ASCII alphabetic characters, to "
"ensure the result is still valid UTF-8."
msgstr ""

#: src/std-traits/exercise.md
msgid "// Implement the `Read` trait for `RotDecoder`.\n"
msgstr ""

#: src/std-traits/exercise.md src/std-traits/solution.md
msgid "\"Gb trg gb gur bgure fvqr!\""
msgstr ""

#: src/std-traits/exercise.md src/std-traits/solution.md
msgid "\"To get to the other side!\""
msgstr ""

#: src/std-traits/exercise.md
msgid ""
"What happens if you chain two `RotDecoder` instances together, each rotating "
"by 13 characters?"
msgstr ""

#: src/std-traits/solution.md
msgid "'A'"
msgstr ""

#: src/welcome-day-3.md
#, fuzzy
msgid "Welcome to Day 3"
msgstr "Bienvenue au jour 3"

#: src/welcome-day-3.md
msgid "Today, we will cover:"
msgstr ""

#: src/welcome-day-3.md
msgid ""
"Memory management, lifetimes, and the borrow checker: how Rust ensures "
"memory safety."
msgstr ""

#: src/welcome-day-3.md
msgid "Smart pointers: standard library pointer types."
msgstr ""

#: src/welcome-day-3.md
msgid "[Welcome](./welcome-day-3.md) (3 minutes)"
msgstr ""

#: src/welcome-day-3.md
msgid "[Memory Management](./memory-management.md) (1 hour and 10 minutes)"
msgstr ""

#: src/welcome-day-3.md
msgid "[Smart Pointers](./smart-pointers.md) (45 minutes)"
msgstr ""

#: src/welcome-day-3.md
msgid ""
"Including 10 minute breaks, this session should take about 2 hours and 15 "
"minutes"
msgstr ""

#: src/memory-management.md
msgid "[Review of Program Memory](./memory-management/review.md) (5 minutes)"
msgstr ""

#: src/memory-management.md
msgid ""
"[Approaches to Memory Management](./memory-management/approaches.md) (10 "
"minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Ownership](./memory-management/ownership.md) (5 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Move Semantics](./memory-management/move.md) (10 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Clone](./memory-management/clone.md) (2 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Copy Types](./memory-management/copy-types.md) (5 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Drop](./memory-management/drop.md) (10 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Exercise: Builder Type](./memory-management/exercise.md) (20 minutes)"
msgstr ""

#: src/memory-management/review.md
msgid "Programs allocate memory in two ways:"
msgstr ""

#: src/memory-management/review.md
#, fuzzy
msgid "Stack: Continuous area of memory for local variables."
msgstr "Pile : Zone continue de m√©moire pour les variables locales."

#: src/memory-management/review.md
#, fuzzy
msgid "Values have fixed sizes known at compile time."
msgstr "Les valeurs ont des tailles fixes connues au moment de la compilation."

#: src/memory-management/review.md
#, fuzzy
msgid "Extremely fast: just move a stack pointer."
msgstr "Extr√™mement rapide : il suffit de d√©placer un pointeur de pile."

#: src/memory-management/review.md
#, fuzzy
msgid "Easy to manage: follows function calls."
msgstr "Facile √† g√©rer : suit les appels de fonction."

#: src/memory-management/review.md
#, fuzzy
msgid "Great memory locality."
msgstr "Grande localit√© de m√©moire."

#: src/memory-management/review.md
#, fuzzy
msgid "Heap: Storage of values outside of function calls."
msgstr "Heap¬†: Stockage de valeurs en dehors des appels de fonction."

#: src/memory-management/review.md
#, fuzzy
msgid "Values have dynamic sizes determined at runtime."
msgstr ""
"Les valeurs ont des tailles dynamiques d√©termin√©es au moment de l'ex√©cution."

#: src/memory-management/review.md
#, fuzzy
msgid "Slightly slower than the stack: some book-keeping needed."
msgstr ""
"L√©g√®rement plus lent que la pile¬†: une certaine comptabilit√© est n√©cessaire."

#: src/memory-management/review.md
#, fuzzy
msgid "No guarantee of memory locality."
msgstr "Aucune garantie de localisation de la m√©moire."

#: src/memory-management/review.md
#, fuzzy
msgid ""
"Creating a `String` puts fixed-sized metadata on the stack and dynamically "
"sized data, the actual string, on the heap:"
msgstr ""
"La cr√©ation d'une \"cha√Æne\" place des donn√©es de taille fixe sur la pile et "
"dimensionn√©es dynamiquement donn√©es sur le tas¬†:"

#: src/memory-management/review.md
msgid ""
"Mention that a `String` is backed by a `Vec`, so it has a capacity and "
"length and can grow if mutable via reallocation on the heap."
msgstr ""

#: src/memory-management/review.md
msgid ""
"If students ask about it, you can mention that the underlying memory is heap "
"allocated using the [System Allocator](https://doc.rust-lang.org/std/alloc/"
"struct.System.html) and custom allocators can be implemented using the "
"[Allocator API](https://doc.rust-lang.org/std/alloc/index.html)"
msgstr ""

#: src/memory-management/review.md
msgid ""
"We can inspect the memory layout with `unsafe` Rust. However, you should "
"point out that this is rightfully unsafe!"
msgstr ""

#: src/memory-management/review.md src/testing/unit-tests.md
msgid "' '"
msgstr ""

#: src/memory-management/review.md
msgid "\"world\""
msgstr ""

#: src/memory-management/review.md
msgid ""
"// DON'T DO THIS AT HOME! For educational purposes only.\n"
"    // String provides no guarantees about its layout, so this could lead "
"to\n"
"    // undefined behavior.\n"
msgstr ""

#: src/memory-management/review.md
msgid "\"ptr = {ptr:#x}, len = {len}, capacity = {capacity}\""
msgstr ""

#: src/memory-management/approaches.md
#, fuzzy
msgid "Traditionally, languages have fallen into two broad categories:"
msgstr ""
"Traditionnellement, les langues se r√©partissent en deux grandes cat√©gories :"

#: src/memory-management/approaches.md
#, fuzzy
msgid "Full control via manual memory management: C, C++, Pascal, ..."
msgstr ""
"Contr√¥le total via la gestion manuelle de la m√©moire : C, C++, Pascal, ..."

#: src/memory-management/approaches.md
msgid "Programmer decides when to allocate or free heap memory."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Programmer must determine whether a pointer still points to valid memory."
msgstr ""

#: src/memory-management/approaches.md
msgid "Studies show, programmers make mistakes."
msgstr ""

#: src/memory-management/approaches.md
#, fuzzy
msgid ""
"Full safety via automatic memory management at runtime: Java, Python, Go, "
"Haskell, ..."
msgstr ""
"S√©curit√© totale via la gestion automatique de la m√©moire √† l'ex√©cution : "
"Java, Python, Go, Haskell, ..."

#: src/memory-management/approaches.md
msgid ""
"A runtime system ensures that memory is not freed until it can no longer be "
"referenced."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Typically implemented with reference counting, garbage collection, or RAII."
msgstr ""

#: src/memory-management/approaches.md
#, fuzzy
msgid "Rust offers a new mix:"
msgstr "Rust propose un nouveau mix :"

#: src/memory-management/approaches.md
#, fuzzy
msgid ""
"Full control _and_ safety via compile time enforcement of correct memory "
"management."
msgstr ""
"Contr√¥le total * et * s√©curit√© via l'application du temps de compilation de "
"la m√©moire correcte gestion."

#: src/memory-management/approaches.md
#, fuzzy
msgid "It does this with an explicit ownership concept."
msgstr "Il le fait avec un concept de propri√©t√© explicite."

#: src/memory-management/approaches.md
msgid ""
"This slide is intended to help students coming from other languages to put "
"Rust in context."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"C must manage heap manually with `malloc` and `free`. Common errors include "
"forgetting to call `free`, calling it multiple times for the same pointer, "
"or dereferencing a pointer after the memory it points to has been freed."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"C++ has tools like smart pointers (`unique_ptr`, `shared_ptr`) that take "
"advantage of language guarantees about calling destructors to ensure memory "
"is freed when a function returns. It is still quite easy to mis-use these "
"tools and create similar bugs to C."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Java, Go, and Python rely on the garbage collector to identify memory that "
"is no longer reachable and discard it. This guarantees that any pointer can "
"be dereferenced, eliminating use-after-free and other classes of bugs. But, "
"GC has a runtime cost and is difficult to tune properly."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Rust's ownership and borrowing model can, in many cases, get the performance "
"of C, with alloc and free operations precisely where they are required -- "
"zero cost. It also provides tools similar to C++'s smart pointers. When "
"required, other options such as reference counting are available, and there "
"are even third-party crates available to support runtime garbage collection "
"(not covered in this class)."
msgstr ""

#: src/memory-management/ownership.md
#, fuzzy
msgid ""
"All variable bindings have a _scope_ where they are valid and it is an error "
"to use a variable outside its scope:"
msgstr ""
"Toutes les liaisons de variables ont un _scope_ o√π elles sont valides et "
"c'est une erreur de utiliser une variable en dehors de sa port√©e¬†:"

#: src/memory-management/ownership.md
#, fuzzy
msgid ""
"We say that the variable _owns_ the value. Every Rust value has precisely "
"one owner at all times."
msgstr "On dit que la variable _poss√®de_ la valeur."

#: src/memory-management/ownership.md
#, fuzzy
msgid ""
"At the end of the scope, the variable is _dropped_ and the data is freed. A "
"destructor can run here to free up resources."
msgstr ""
"A la fin du scope, la variable est _dropped_ et les donn√©es sont lib√©r√©es."

#: src/memory-management/ownership.md
msgid ""
"Students familiar with garbage-collection implementations will know that a "
"garbage collector starts with a set of \"roots\" to find all reachable "
"memory. Rust's \"single owner\" principle is a similar idea."
msgstr ""

#: src/memory-management/move.md
#, fuzzy
msgid "An assignment will transfer _ownership_ between variables:"
msgstr "Une affectation transf√©rera la propri√©t√© entre les variables¬†:"

#: src/memory-management/move.md
#, fuzzy
msgid "\"Hello!\""
msgstr "Bonjour le monde!"

#: src/memory-management/move.md src/slices-and-lifetimes/str.md
msgid "\"s2: {s2}\""
msgstr ""

#: src/memory-management/move.md
msgid "// println!(\"s1: {s1}\");\n"
msgstr ""

#: src/memory-management/move.md
#, fuzzy
msgid "The assignment of `s1` to `s2` transfers ownership."
msgstr "L'affectation de `s1` √† `s2` transf√®re la propri√©t√©."

#: src/memory-management/move.md
#, fuzzy
msgid "When `s1` goes out of scope, nothing happens: it does not own anything."
msgstr ""
"Lorsque `s1` sort de la port√©e, rien ne se passe¬†: il n'a pas de propri√©t√©."

#: src/memory-management/move.md
#, fuzzy
msgid "When `s2` goes out of scope, the string data is freed."
msgstr ""
"Lorsque `s2` sort de la port√©e, les donn√©es de la cha√Æne sont lib√©r√©es."

#: src/memory-management/move.md
#, fuzzy
msgid "Before move to `s2`:"
msgstr "Avant de passer √† `s2`¬†:"

#: src/memory-management/move.md
#, fuzzy
msgid "After move to `s2`:"
msgstr "Apr√®s le passage √† `s2`¬†:"

#: src/memory-management/move.md
msgid ""
"```bob\n"
" Stack                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - -.\n"
":                           :     :                           :\n"
":    s1 \"(inaccessible)\"    :     :                           :\n"
":   +-----------+-------+   :     :   +----+----+----+----+   :\n"
":   | ptr       |   o---+---+--+--+-->| R  | u  | s  | t  |   :\n"
":   | len       |     4 |   :  |  :   +----+----+----+----+   :\n"
":   | capacity  |     4 |   :  |  :                           :\n"
":   +-----------+-------+   :  |  :                           :\n"
":                           :  |  `- - - - - - - - - - - - - -'\n"
":    s2                     :  |\n"
":   +-----------+-------+   :  |\n"
":   | ptr       |   o---+---+--'\n"
":   | len       |     4 |   :\n"
":   | capacity  |     4 |   :\n"
":   +-----------+-------+   :\n"
":                           :\n"
"`- - - - - - - - - - - - - -'\n"
"```"
msgstr ""

#: src/memory-management/move.md
#, fuzzy
msgid ""
"When you pass a value to a function, the value is assigned to the function "
"parameter. This transfers ownership:"
msgstr ""
"Lorsque vous transmettez une valeur √† une fonction, la valeur est affect√©e √† "
"la fonction param√®tre. Cela transf√®re la propri√©t√©¬†:"

#: src/memory-management/move.md
msgid "\"Hello {name}\""
msgstr ""

#: src/memory-management/move.md src/android/interoperability/java.md
#, fuzzy
msgid "\"Alice\""
msgstr "Tranches"

#: src/memory-management/move.md
msgid "// say_hello(name);\n"
msgstr ""

#: src/memory-management/move.md
#, fuzzy
msgid ""
"Mention that this is the opposite of the defaults in C++, which copies by "
"value unless you use `std::move` (and the move constructor is defined!)."
msgstr ""
"Mentionnez que c'est l'oppos√© des valeurs par d√©faut en C++, qui copie par "
"valeur √† moins que vous n'utilisiez `std::move` (et que le constructeur de "
"d√©placement soit d√©fini¬†!)."

#: src/memory-management/move.md
msgid ""
"It is only the ownership that moves. Whether any machine code is generated "
"to manipulate the data itself is a matter of optimization, and such copies "
"are aggressively optimized away."
msgstr ""

#: src/memory-management/move.md
msgid ""
"Simple values (such as integers) can be marked `Copy` (see later slides)."
msgstr ""

#: src/memory-management/move.md
#, fuzzy
msgid "In Rust, clones are explicit (by using `clone`)."
msgstr "Dans Rust, les clones sont explicites (en utilisant `clone`)."

#: src/memory-management/move.md
msgid "In the `say_hello` example:"
msgstr ""

#: src/memory-management/move.md
#, fuzzy
msgid ""
"With the first call to `say_hello`, `main` gives up ownership of `name`. "
"Afterwards, `name` cannot be used anymore within `main`."
msgstr ""
"Avec le premier appel √† `say_hello`, `main` abandonne la propri√©t√© de "
"`name`. Ensuite, `name` ne peut plus √™tre utilis√© dans `main`."

#: src/memory-management/move.md
#, fuzzy
msgid ""
"The heap memory allocated for `name` will be freed at the end of the "
"`say_hello` function."
msgstr ""
"La m√©moire de tas allou√©e pour `name` sera lib√©r√©e √† la fin de la fonction "
"`say_hello`."

#: src/memory-management/move.md
#, fuzzy
msgid ""
"`main` can retain ownership if it passes `name` as a reference (`&name`) and "
"if `say_hello` accepts a reference as a parameter."
msgstr ""
"`main` peut conserver la propri√©t√© s'il passe `name` comme r√©f√©rence "
"(`&name`) et si `say_hello` accepte une r√©f√©rence comme param√®tre."

#: src/memory-management/move.md
#, fuzzy
msgid ""
"Alternatively, `main` can pass a clone of `name` in the first call (`name."
"clone()`)."
msgstr ""
"Alternativement, `main` peut passer un clone de `name` dans le premier appel "
"(`name.clone()`)."

#: src/memory-management/move.md
#, fuzzy
msgid ""
"Rust makes it harder than C++ to inadvertently create copies by making move "
"semantics the default, and by forcing programmers to make clones explicit."
msgstr ""
"Rust rend plus difficile que C++ la cr√©ation de copies par inadvertance en "
"faisant de la s√©mantique de d√©placement la valeur par d√©faut et en for√ßant "
"les programmeurs √† rendre les clones explicites."

#: src/memory-management/move.md
#, fuzzy
msgid "Defensive Copies in Modern C++"
msgstr "Double lib√©ration de m√©moire en C++ moderne"

#: src/memory-management/move.md
#, fuzzy
msgid "Modern C++ solves this differently:"
msgstr "Le C++ moderne r√©sout cela diff√©remment¬†:"

#: src/memory-management/move.md
msgid "\"Cpp\""
msgstr ""

#: src/memory-management/move.md
msgid "// Duplicate the data in s1.\n"
msgstr ""

#: src/memory-management/move.md
#, fuzzy
msgid ""
"The heap data from `s1` is duplicated and `s2` gets its own independent copy."
msgstr ""
"Les donn√©es de tas de `s1` sont dupliqu√©es et `s2` obtient sa propre copie "
"ind√©pendante."

#: src/memory-management/move.md
#, fuzzy
msgid "When `s1` and `s2` go out of scope, they each free their own memory."
msgstr ""
"Lorsque `s1` et `s2` sortent de la port√©e, ils lib√®rent chacun leur propre "
"m√©moire."

#: src/memory-management/move.md
#, fuzzy
msgid "Before copy-assignment:"
msgstr "Avant l'affectation de copie¬†:"

#: src/memory-management/move.md
#, fuzzy
msgid "After copy-assignment:"
msgstr "Apr√®s l'affectation de copie¬†:"

#: src/memory-management/move.md
msgid ""
"C++ has made a slightly different choice than Rust. Because `=` copies data, "
"the string data has to be cloned. Otherwise we would get a double-free when "
"either string goes out of scope."
msgstr ""

#: src/memory-management/move.md
msgid ""
"C++ also has [`std::move`](https://en.cppreference.com/w/cpp/utility/move), "
"which is used to indicate when a value may be moved from. If the example had "
"been `s2 = std::move(s1)`, no heap allocation would take place. After the "
"move, `s1` would be in a valid but unspecified state. Unlike Rust, the "
"programmer is allowed to keep using `s1`."
msgstr ""

#: src/memory-management/move.md
msgid ""
"Unlike Rust, `=` in C++ can run arbitrary code as determined by the type "
"which is being copied or moved."
msgstr ""

#: src/memory-management/clone.md
msgid "Clone"
msgstr ""

#: src/memory-management/clone.md
msgid ""
"Sometimes you _want_ to make a copy of a value. The `Clone` trait "
"accomplishes this."
msgstr ""

#: src/memory-management/clone.md
msgid ""
"The idea of `Clone` is to make it easy to spot where heap allocations are "
"occurring. Look for `.clone()` and a few others like `Vec::new` or `Box::"
"new`."
msgstr ""

#: src/memory-management/clone.md
msgid ""
"It's common to \"clone your way out\" of problems with the borrow checker, "
"and return later to try to optimize those clones away."
msgstr ""

#: src/memory-management/copy-types.md
#, fuzzy
msgid ""
"While move semantics are the default, certain types are copied by default:"
msgstr ""
"Bien que la s√©mantique de d√©placement soit la valeur par d√©faut, certains "
"types sont copi√©s par d√©faut¬†:"

#: src/memory-management/copy-types.md
#, fuzzy
msgid "These types implement the `Copy` trait."
msgstr "Ces types impl√©mentent le trait \"Copier\"."

#: src/memory-management/copy-types.md
#, fuzzy
msgid "You can opt-in your own types to use copy semantics:"
msgstr ""
"Vous pouvez activer vos propres types pour utiliser la s√©mantique de copie¬†:"

#: src/memory-management/copy-types.md
#, fuzzy
msgid "After the assignment, both `p1` and `p2` own their own data."
msgstr "Apr√®s l'affectation, `p1` et `p2` poss√®dent leurs propres donn√©es."

#: src/memory-management/copy-types.md
#, fuzzy
msgid "We can also use `p1.clone()` to explicitly copy the data."
msgstr ""
"Nous pouvons √©galement utiliser `p1.clone()` pour copier explicitement les "
"donn√©es."

#: src/memory-management/copy-types.md
#, fuzzy
msgid "Copying and cloning are not the same thing:"
msgstr "La copie et le clonage ne sont pas la m√™me chose¬†:"

#: src/memory-management/copy-types.md
#, fuzzy
msgid ""
"Copying refers to bitwise copies of memory regions and does not work on "
"arbitrary objects."
msgstr ""
"La copie fait r√©f√©rence aux copies au niveau du bit des r√©gions de m√©moire "
"et ne fonctionne pas sur des objets arbitraires."

#: src/memory-management/copy-types.md
#, fuzzy
msgid ""
"Copying does not allow for custom logic (unlike copy constructors in C++)."
msgstr ""
"La copie ne permet pas de logique personnalis√©e (contrairement aux "
"constructeurs de copie en C++)."

#: src/memory-management/copy-types.md
#, fuzzy
msgid ""
"Cloning is a more general operation and also allows for custom behavior by "
"implementing the `Clone` trait."
msgstr ""
"Le clonage est une op√©ration plus g√©n√©rale et permet √©galement un "
"comportement personnalis√© en impl√©mentant le trait \"Cloner\"."

#: src/memory-management/copy-types.md
#, fuzzy
msgid "Copying does not work on types that implement the `Drop` trait."
msgstr ""
"La copie ne fonctionne pas sur les types qui impl√©mentent le trait `Drop`."

#: src/memory-management/copy-types.md
#, fuzzy
msgid "In the above example, try the following:"
msgstr "Dans l'exemple ci-dessus, essayez ce qui suit¬†:"

#: src/memory-management/copy-types.md
#, fuzzy
msgid ""
"Add a `String` field to `struct Point`. It will not compile because `String` "
"is not a `Copy` type."
msgstr ""
"Ajoutez un champ `String` √† `struct Point`. Il ne sera pas compil√© car "
"`String` n'est pas un type `Copy`."

#: src/memory-management/copy-types.md
#, fuzzy
msgid ""
"Remove `Copy` from the `derive` attribute. The compiler error is now in the "
"`println!` for `p1`."
msgstr ""
"Supprimer `Copy` de l'attribut `derive`. L'erreur du compilateur est "
"maintenant dans `println!` pour `p1`."

#: src/memory-management/copy-types.md
#, fuzzy
msgid "Show that it works if you clone `p1` instead."
msgstr "Montrez que cela fonctionne si vous clonez `p1` √† la place."

#: src/memory-management/drop.md
#, fuzzy
msgid "The `Drop` Trait"
msgstr "Le trait `L√¢cher`"

#: src/memory-management/drop.md
#, fuzzy
msgid ""
"Values which implement [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop."
"html) can specify code to run when they go out of scope:"
msgstr ""
"Les valeurs qui impl√©mentent [`Drop`](https://doc.rust-lang.org/std/ops/"
"trait.Drop.html) peuvent sp√©cifier le code √† ex√©cuter lorsqu'elles sortent "
"de la port√©e¬†:"

#: src/memory-management/drop.md
msgid "\"Dropping {}\""
msgstr ""

#: src/memory-management/drop.md src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"a\""
msgstr ""

#: src/memory-management/drop.md src/testing/googletest.md
msgid "\"b\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"c\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"d\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"Exiting block B\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"Exiting block A\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"Exiting main\""
msgstr ""

#: src/memory-management/drop.md
msgid "Note that `std::mem::drop` is not the same as `std::ops::Drop::drop`."
msgstr ""

#: src/memory-management/drop.md
msgid "Values are automatically dropped when they go out of scope."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"When a value is dropped, if it implements `std::ops::Drop` then its `Drop::"
"drop` implementation will be called."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"All its fields will then be dropped too, whether or not it implements `Drop`."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"`std::mem::drop` is just an empty function that takes any value. The "
"significance is that it takes ownership of the value, so at the end of its "
"scope it gets dropped. This makes it a convenient way to explicitly drop "
"values earlier than they would otherwise go out of scope."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"This can be useful for objects that do some work on `drop`: releasing locks, "
"closing files, etc."
msgstr ""

#: src/memory-management/drop.md
#, fuzzy
msgid "Why doesn't `Drop::drop` take `self`?"
msgstr "Pourquoi `Drop::drop` ne prend-il pas `self`¬†?"

#: src/memory-management/drop.md
#, fuzzy
msgid ""
"Short-answer: If it did, `std::mem::drop` would be called at the end of the "
"block, resulting in another call to `Drop::drop`, and a stack overflow!"
msgstr ""
"R√©ponse courte¬†: si c'√©tait le cas, `std::mem::drop` serait appel√© √† la fin "
"de le bloc, r√©sultant en un autre appel √† `Drop :: drop`, et une pile "
"d√©bordement!"

#: src/memory-management/drop.md
#, fuzzy
msgid "Try replacing `drop(a)` with `a.drop()`."
msgstr "Essayez de remplacer `drop(a)` par `a.drop()`."

#: src/memory-management/exercise.md
msgid ""
"In this example, we will implement a complex data type that owns all of its "
"data. We will use the \"builder pattern\" to support building a new value "
"piece-by-piece, using convenience functions."
msgstr ""

#: src/memory-management/exercise.md
msgid "Fill in the missing pieces."
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// A representation of a software package.\n"
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid ""
"/// Return a representation of this package as a dependency, for use in\n"
"    /// building other packages.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"1\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid ""
"/// A builder for a Package. Use `build()` to create the `Package` itself.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"2\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Set the package version.\n"
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Set the package authors.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"3\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Add an additional dependency.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"4\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Set the language. If not set, language defaults to None.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"5\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"base64\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"0.13\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"base64: {base64:?}\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"log\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"0.4\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"log: {log:?}\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"serde\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"djmitche\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"4.0\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"serde: {serde:?}\""
msgstr ""

#: src/memory-management/solution.md
msgid "\"0.1\""
msgstr ""

#: src/smart-pointers.md
msgid "[Box"
msgstr ""

#: src/smart-pointers.md
msgid "](./smart-pointers/box.md) (10 minutes)"
msgstr ""

#: src/smart-pointers.md
msgid "[Rc](./smart-pointers/rc.md) (5 minutes)"
msgstr ""

#: src/smart-pointers.md
msgid "[Exercise: Binary Tree](./smart-pointers/exercise.md) (30 minutes)"
msgstr ""

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"[`Box`](https://doc.rust-lang.org/std/boxed/struct.Box.html) is an owned "
"pointer to data on the heap:"
msgstr ""
"[`Box`](https://doc.rust-lang.org/std/boxed/struct.Box.html) est un pointeur "
"propri√©taire vers des donn√©es sur le tas¬†:"

#: src/smart-pointers/box.md
msgid "\"five: {}\""
msgstr ""

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"`Box<T>` implements `Deref<Target = T>`, which means that you can [call "
"methods from `T` directly on a `Box<T>`](https://doc.rust-lang.org/std/ops/"
"trait.Deref.html#more-on-deref-coercion)."
msgstr ""
"`Box<T>` impl√©mente `Deref<Target = T>`, ce qui signifie que vous pouvez "
"[appeler des m√©thodes depuis `T` directement sur une `Box<T>`](https://doc."
"rust-lang.org/std/ops/trait.Deref.html#more-on-deref-coercion)."

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"Recursive data types or data types with dynamic sizes need to use a `Box`:"
msgstr ""
"Les types de donn√©es r√©cursifs ou les types de donn√©es avec des tailles "
"dynamiques doivent utiliser une `Box`¬†:"

#: src/smart-pointers/box.md
msgid "/// A non-empty list: first element and the rest of the list.\n"
msgstr ""

#: src/smart-pointers/box.md
msgid "/// An empty list.\n"
msgstr ""

#: src/smart-pointers/box.md
msgid "\"{list:?}\""
msgstr ""

#: src/smart-pointers/box.md
msgid ""
"```bob\n"
" Stack                           Heap\n"
".- - - - - - - - - - - - - - .     .- - - - - - - - - - - - - - - - - - - - "
"- - - - -.\n"
":                            :     :                                                 :\n"
":    "
"list                    :     :                                                 :\n"
":   +---------+----+----+    :     :    +---------+----+----+    +------+----"
"+----+  :\n"
":   | Element | 1  | o--+----+-----+--->| Element | 2  | o--+--->| Nil  | // "
"| // |  :\n"
":   +---------+----+----+    :     :    +---------+----+----+    +------+----"
"+----+  :\n"
":                            :     :                                                 :\n"
":                            :     :                                                 :\n"
"'- - - - - - - - - - - - - - '     '- - - - - - - - - - - - - - - - - - - - "
"- - - - -'\n"
"```"
msgstr ""

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"`Box` is like `std::unique_ptr` in C++, except that it's guaranteed to be "
"not null."
msgstr ""
"`Box` est comme `std::unique_ptr` en C++, sauf qu'il est garanti qu'il n'est "
"pas nul."

#: src/smart-pointers/box.md
#, fuzzy
msgid "A `Box` can be useful when you:"
msgstr "Une `Box` peut √™tre utile lorsque vous¬†:"

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"have a type whose size that can't be known at compile time, but the Rust "
"compiler wants to know an exact size."
msgstr ""
"avoir un type dont la taille ne peut pas √™tre connue au moment de la "
"compilation, mais le compilateur Rust veut conna√Ætre une taille exacte."

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"want to transfer ownership of a large amount of data. To avoid copying large "
"amounts of data on the stack, instead store the data on the heap in a `Box` "
"so only the pointer is moved."
msgstr ""
"souhaitez transf√©rer la propri√©t√© d'une grande quantit√© de donn√©es. Pour "
"√©viter de copier de grandes quantit√©s de donn√©es sur la pile, stockez plut√¥t "
"les donn√©es sur le tas dans une `Box` afin que seul le pointeur soit d√©plac√©."

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"If `Box` was not used and we attempted to embed a `List` directly into the "
"`List`, the compiler would not compute a fixed size of the struct in memory "
"(`List` would be of infinite size)."
msgstr ""
"Si la `Box` n'a pas √©t√© utilis√©e ici et que nous avons essay√© d'int√©grer une "
"`List` directement dans la `List`, le compilateur ne calculerait pas une "
"taille fixe de la structure en m√©moire, elle semblerait infinie."

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"`Box` solves this problem as it has the same size as a regular pointer and "
"just points at the next element of the `List` in the heap."
msgstr ""
"`Box` r√©sout ce probl√®me car il a la m√™me taille qu'un pointeur normal et "
"pointe simplement vers le prochain √©l√©ment de la `Liste` dans le tas."

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"Remove the `Box` in the List definition and show the compiler error. "
"\"Recursive with indirection\" is a hint you might want to use a Box or "
"reference of some kind, instead of storing a value directly."
msgstr ""
"Supprimez la `Box` dans la d√©finition de la liste et affichez l'erreur du "
"compilateur. \"R√©cursif avec indirection\" est un indice que vous voudrez "
"peut-√™tre utiliser une bo√Æte ou une r√©f√©rence quelconque, au lieu de stocker "
"une valeur directement."

#: src/smart-pointers/box.md
msgid "Niche Optimization"
msgstr "Optimisation niche"

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"A `Box` cannot be empty, so the pointer is always valid and non-`null`. This "
"allows the compiler to optimize the memory layout:"
msgstr ""
"Une `Box` ne peut pas √™tre vide, donc le pointeur est toujours valide et non "
"`null`. Ce permet au compilateur d'optimiser la disposition de la m√©moire¬†:"

#: src/smart-pointers/box.md
msgid ""
"```bob\n"
" Stack                           Heap\n"
".- - - - - - - - - - - - - - .     .- - - - - - - - - - - - - -.\n"
":                            :     :                           :\n"
":    list                    :     :                           :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":   | Element | 1  | o--+----+-----+--->| Element | 2  | // |  :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":                            :     :                           :\n"
":                            :     :                           :\n"
"'- - - - - - - - - - - - - - '     '- - - - - - - - - - - - - -'\n"
"```"
msgstr ""

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"[`Rc`](https://doc.rust-lang.org/std/rc/struct.Rc.html) is a reference-"
"counted shared pointer. Use this when you need to refer to the same data "
"from multiple places:"
msgstr ""
"[`Rc`](https://doc.rust-lang.org/std/rc/struct.Rc.html) est un pointeur "
"partag√© compt√© par r√©f√©rence. Utilisez-le lorsque vous avez besoin de vous "
"r√©f√©rer aux m√™mes donn√©es depuis plusieurs endroits¬†:"

#: src/smart-pointers/rc.md
msgid "\"a: {a}\""
msgstr ""

#: src/smart-pointers/rc.md
msgid "\"b: {b}\""
msgstr ""

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"See [`Arc`](../concurrency/shared_state/arc.md) and [`Mutex`](https://doc."
"rust-lang.org/std/sync/struct.Mutex.html) if you are in a multi-threaded "
"context."
msgstr ""
"Voir [`Arc`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) si vous "
"√™tes dans un contexte multi-thread."

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"You can _downgrade_ a shared pointer into a [`Weak`](https://doc.rust-lang."
"org/std/rc/struct.Weak.html) pointer to create cycles that will get dropped."
msgstr ""
"Vous pouvez _r√©trograder_ un pointeur partag√© en un pointeur [`Weak`]"
"(https://doc.rust-lang.org/std/rc/struct.Weak.html) pour cr√©er des cycles "
"qui va tomber."

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"`Rc`'s count ensures that its contained value is valid for as long as there "
"are references."
msgstr ""
"Le comptage de `Rc` garantit que sa valeur contenue est valide tant qu'il y "
"a des r√©f√©rences."

#: src/smart-pointers/rc.md
#, fuzzy
msgid "`Rc` in Rust is like `std::shared_ptr` in C++."
msgstr "Comme `std::shared_ptr` de C++."

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"`Rc::clone` is cheap: it creates a pointer to the same allocation and "
"increases the reference count. Does not make a deep clone and can generally "
"be ignored when looking for performance issues in code."
msgstr ""
"`clone` est bon march√©¬†: il cr√©e un pointeur vers la m√™me allocation et "
"augmente le nombre de r√©f√©rences. Ne cr√©e pas de clone profond et peut "
"g√©n√©ralement √™tre ignor√© lors de la recherche de probl√®mes de performances "
"dans le code."

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"`make_mut` actually clones the inner value if necessary (\"clone-on-write\") "
"and returns a mutable reference."
msgstr ""
"`make_mut` clone en fait la valeur interne si n√©cessaire (\"clone-on-"
"write\") et renvoie une r√©f√©rence mutable."

#: src/smart-pointers/rc.md
#, fuzzy
msgid "Use `Rc::strong_count` to check the reference count."
msgstr "Utilisez `Rc::strong_count` pour v√©rifier le nombre de r√©f√©rences."

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"`Rc::downgrade` gives you a _weakly reference-counted_ object to create "
"cycles that will be dropped properly (likely in combination with `RefCell`)."
msgstr ""
"Vous pouvez `downgrader()` un `Rc` en un objet _faiblement compt√© en "
"r√©f√©rence_ pour cr√©er des cycles qui seront supprim√©s correctement "
"(probablement en combinaison avec `RefCell`)."

#: src/smart-pointers/exercise.md
msgid ""
"A binary tree is a tree-type data structure where every node has two "
"children (left and right). We will create a tree where each node stores a "
"value. For a given node N, all nodes in a N's left subtree contain smaller "
"values, and all nodes in N's right subtree will contain larger values."
msgstr ""

#: src/smart-pointers/exercise.md
msgid "Implement the following types, so that the given tests pass."
msgstr ""

#: src/smart-pointers/exercise.md
msgid ""
"Extra Credit: implement an iterator over a binary tree that returns the "
"values in order."
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid "/// A node in the binary tree.\n"
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid "/// A possibly-empty subtree.\n"
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid ""
"/// A container storing a set of values, using a binary tree.\n"
"///\n"
"/// If the same value is added multiple times, it is only stored once.\n"
msgstr ""

#: src/smart-pointers/exercise.md
msgid "// Implement `new`, `insert`, `len`, and `has`.\n"
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid "// not a unique item\n"
msgstr ""

#: src/smart-pointers/solution.md src/testing/googletest.md
msgid "\"bar\""
msgstr ""

#: src/welcome-day-3-afternoon.md
msgid "[Borrowing](./borrowing.md) (1 hour)"
msgstr ""

#: src/welcome-day-3-afternoon.md
msgid ""
"[Slices and Lifetimes](./slices-and-lifetimes.md) (1 hour and 10 minutes)"
msgstr ""

#: src/welcome-day-3-afternoon.md
msgid ""
"Including 10 minute breaks, this session should take about 2 hours and 20 "
"minutes"
msgstr ""

#: src/borrowing.md
msgid "[Borrowing a Value](./borrowing/shared.md) (10 minutes)"
msgstr ""

#: src/borrowing.md
msgid "[Borrow Checking](./borrowing/borrowck.md) (10 minutes)"
msgstr ""

#: src/borrowing.md
msgid "[Interior Mutability](./borrowing/interior-mutability.md) (10 minutes)"
msgstr ""

#: src/borrowing.md
msgid "[Exercise: Health Statistics](./borrowing/exercise.md) (30 minutes)"
msgstr ""

#: src/borrowing/shared.md
#, fuzzy
msgid ""
"As we saw before, instead of transferring ownership when calling a function, "
"you can let a function _borrow_ the value:"
msgstr ""
"Au lieu de transf√©rer la propri√©t√© lors de l'appel d'une fonction, vous "
"pouvez laisser une la fonction _emprunte_ la valeur¬†:"

#: src/borrowing/shared.md
#, fuzzy
msgid "The `add` function _borrows_ two points and returns a new point."
msgstr "La fonction `add` _emprunte_ deux points et renvoie un nouveau point."

#: src/borrowing/shared.md
#, fuzzy
msgid "The caller retains ownership of the inputs."
msgstr "L'appelant conserve la propri√©t√© des entr√©es."

#: src/borrowing/shared.md
msgid ""
"This slide is a review of the material on references from day 1, expanding "
"slightly to include function arguments and return values."
msgstr ""

#: src/borrowing/shared.md
#, fuzzy
msgid "Notes on stack returns:"
msgstr "Remarques sur les retours de pile¬†:"

#: src/borrowing/shared.md
msgid ""
"Demonstrate that the return from `add` is cheap because the compiler can "
"eliminate the copy operation. Change the above code to print stack addresses "
"and run it on the [Playground](https://play.rust-lang.org/?"
"version=stable&mode=release&edition=2021&gist=0cb13be1c05d7e3446686ad9947c4671) "
"or look at the assembly in [Godbolt](https://rust.godbolt.org/). In the "
"\"DEBUG\" optimization level, the addresses should change, while they stay "
"the same when changing to the \"RELEASE\" setting:"
msgstr ""

#: src/borrowing/shared.md
msgid "The Rust compiler can do return value optimization (RVO)."
msgstr ""

#: src/borrowing/shared.md
msgid ""
"In C++, copy elision has to be defined in the language specification because "
"constructors can have side effects. In Rust, this is not an issue at all. If "
"RVO did not happen, Rust will always perform a simple and efficient `memcpy` "
"copy."
msgstr ""

#: src/borrowing/borrowck.md
#, fuzzy
msgid ""
"Rust's _borrow checker_ puts constraints on the ways you can borrow values. "
"For a given value, at any time:"
msgstr ""
"Rust impose des contraintes sur la mani√®re dont vous pouvez emprunter des "
"valeurs¬†:"

#: src/borrowing/borrowck.md
#, fuzzy
msgid "You can have one or more shared references to the value, _or_"
msgstr "Vous pouvez avoir une ou plusieurs valeurs `&T` √† tout moment, _ou_"

#: src/borrowing/borrowck.md
#, fuzzy
msgid "You can have exactly one exclusive reference to the value."
msgstr "Vous pouvez avoir exactement une valeur `&mut T`."

#: src/borrowing/borrowck.md
msgid ""
"Note that the requirement is that conflicting references not _exist_ at the "
"same point. It does not matter where the reference is dereferenced."
msgstr ""

#: src/borrowing/borrowck.md
#, fuzzy
msgid ""
"The above code does not compile because `a` is borrowed as mutable (through "
"`c`) and as immutable (through `b`) at the same time."
msgstr ""
"Le code ci-dessus ne se compile pas car 'a' est emprunt√© comme mutable (via "
"'c') et comme immuable (via 'b') en m√™me temps."

#: src/borrowing/borrowck.md
#, fuzzy
msgid ""
"Move the `println!` statement for `b` before the scope that introduces `c` "
"to make the code compile."
msgstr ""
"D√©placez l'instruction `println!` pour `b` avant la port√©e qui introduit `c` "
"pour que le code soit compil√©."

#: src/borrowing/borrowck.md
#, fuzzy
msgid ""
"After that change, the compiler realizes that `b` is only ever used before "
"the new mutable borrow of `a` through `c`. This is a feature of the borrow "
"checker called \"non-lexical lifetimes\"."
msgstr ""
"Apr√®s ce changement, le compilateur se rend compte que 'b' n'est utilis√© "
"qu'avant le nouvel emprunt mutable de 'a' √† 'c'. Il s'agit d'une "
"fonctionnalit√© du v√©rificateur d'emprunt appel√©e \"dur√©es de vie non "
"lexicales\"."

#: src/borrowing/borrowck.md
msgid ""
"The exclusive reference constraint is quite strong. Rust uses it to ensure "
"that data races do not occur. Rust also _relies_ on this constraint to "
"optimize code. For example, a value behind a shared reference can be safely "
"cached in a register for the lifetime of that reference."
msgstr ""

#: src/borrowing/borrowck.md
msgid ""
"The borrow checker is designed to accommodate many common patterns, such as "
"taking exclusive references to different fields in a struct at the same "
"time. But, there are some situations where it doesn't quite \"get it\" and "
"this often results in \"fighting with the borrow checker.\""
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"In some situations, it's necessary to modify data behind a shared (read-"
"only) reference. For example, a shared data structure might have an internal "
"cache, and wish to update that cache from read-only methods."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"The \"interior mutability\" pattern allows exclusive (mutable) access behind "
"a shared reference. The standard library provides several ways to do this, "
"all while still ensuring safety, typically by performing a runtime check."
msgstr ""

#: src/borrowing/interior-mutability.md
#, fuzzy
msgid "`RefCell`"
msgstr "`RefCell<T>`"

#: src/borrowing/interior-mutability.md
msgid "\"graph: {root:#?}\""
msgstr ""

#: src/borrowing/interior-mutability.md
msgid "\"graph sum: {}\""
msgstr ""

#: src/borrowing/interior-mutability.md
#, fuzzy
msgid "`Cell`"
msgstr "`Cellule<T>`"

#: src/borrowing/interior-mutability.md
msgid ""
"`Cell` wraps a value and allows getting or setting the value, even with a "
"shared reference to the `Cell`. However, it does not allow any references to "
"the value. Since there are no references, borrowing rules cannot be broken."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"The main thing to take away from this slide is that Rust provides _safe_ "
"ways to modify data behind a shared reference. There are a variety of ways "
"to ensure that safety, and `RefCell` and `Cell` are two of them."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"`RefCell` enforces Rust's usual borrowing rules (either multiple shared "
"references or a single exclusive reference) with a runtime check. In this "
"case, all borrows are very short and never overlap, so the checks always "
"succeed."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"`Rc` only allows shared (read-only) access to its contents, since its "
"purpose is to allow (and count) many references. But we want to modify the "
"value, so we need interior mutability."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"`Cell` is a simpler means to ensure safety: it has a `set` method that takes "
"`&self`. This needs no runtime check, but requires moving values, which can "
"have its own cost."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"Demonstrate that reference loops can be created by adding `root` to `subtree."
"children`."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"To demonstrate a runtime panic, add a `fn inc(&mut self)` that increments "
"`self.value` and calls the same method on its children. This will panic in "
"the presence of the reference loop, with `thread 'main' panicked at 'already "
"borrowed: BorrowMutError'`."
msgstr ""

#: src/borrowing/exercise.md
#, fuzzy
msgid ""
"You're working on implementing a health-monitoring system. As part of that, "
"you need to keep track of users' health statistics."
msgstr ""
"Vous travaillez √† la mise en place d'un syst√®me de surveillance de la sant√©. "
"Dans le cadre de cela, vous besoin de suivre les statistiques de sant√© des "
"utilisateurs."

#: src/borrowing/exercise.md
#, fuzzy
msgid ""
"You'll start with a stubbed function in an `impl` block as well as a `User` "
"struct definition. Your goal is to implement the stubbed out method on the "
"`User` `struct` defined in the `impl` block."
msgstr ""
"Vous commencerez avec quelques fonctions stub dans un bloc `impl` ainsi "
"qu'un `User` d√©finition de structure. Votre objectif est d'impl√©menter les "
"m√©thodes tronqu√©es sur le `User` `struct` d√©fini dans le bloc `impl`."

#: src/borrowing/exercise.md
#, fuzzy
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and fill in the missing "
"method:"
msgstr ""
"Copiez le code ci-dessous sur <https://play.rust-lang.org/> et remplissez "
"les champs manquants m√©thodes¬†:"

#: src/borrowing/exercise.md
msgid ""
"\"Update a user's statistics based on measurements from a visit to the "
"doctor\""
msgstr ""

#: src/borrowing/exercise.md src/borrowing/solution.md
#: src/android/build-rules/library.md src/android/aidl/client.md
msgid "\"Bob\""
msgstr ""

#: src/borrowing/exercise.md src/borrowing/solution.md
msgid "\"I'm {} and my age is {}\""
msgstr ""

#: src/slices-and-lifetimes.md
msgid "[Slices: &\\[T\\]](./slices-and-lifetimes/slices.md) (10 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid "[String References](./slices-and-lifetimes/str.md) (10 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Lifetime Annotations](./slices-and-lifetimes/lifetime-annotations.md) (10 "
"minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Lifetime Elision](./slices-and-lifetimes/lifetime-elision.md) (5 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Struct Lifetimes](./slices-and-lifetimes/struct-lifetimes.md) (5 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Exercise: Protobuf Parsing](./slices-and-lifetimes/exercise.md) (30 minutes)"
msgstr ""

#: src/slices-and-lifetimes/slices.md
msgid "Slices"
msgstr "Tranches"

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid "A slice gives you a view into a larger collection:"
msgstr "Une tranche vous donne une vue dans une plus grande collection¬†:"

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid "Slices borrow data from the sliced type."
msgstr ""
"Les tranches empruntent des donn√©es au type en tranches. \\*¬†Question¬†: Que "
"se passe-t-il si vous modifiez `a[3]`¬†?"

#: src/slices-and-lifetimes/slices.md
msgid "Question: What happens if you modify `a[3]` right before printing `s`?"
msgstr ""

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"We create a slice by borrowing `a` and specifying the starting and ending "
"indexes in brackets."
msgstr ""
"Nous cr√©ons une tranche en empruntant `a` et en sp√©cifiant les index de "
"d√©but et de fin entre parenth√®ses."

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"If the slice starts at index 0, Rust‚Äôs range syntax allows us to drop the "
"starting index, meaning that `&a[0..a.len()]` and `&a[..a.len()]` are "
"identical."
msgstr ""
"Si la tranche commence √† l'index 0, la syntaxe de plage de Rust nous permet "
"de supprimer l'index de d√©part, ce qui signifie que `&a[0..a.len()]` et "
"`&a[..a.len()]` sont identiques ."

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"The same is true for the last index, so `&a[2..a.len()]` and `&a[2..]` are "
"identical."
msgstr ""
"Il en va de m√™me pour le dernier index, donc `&a[2..a.len()]` et `&a[2..]` "
"sont identiques."

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"To easily create a slice of the full array, we can therefore use `&a[..]`."
msgstr ""
"Pour cr√©er facilement une tranche du tableau complet, on peut donc utiliser "
"`&a[..]`."

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"`s` is a reference to a slice of `i32`s. Notice that the type of `s` "
"(`&[i32]`) no longer mentions the array length. This allows us to perform "
"computation on slices of different sizes."
msgstr ""
"`s` est une r√©f√©rence √† une tranche de `i32`s. Notez que le type de `s` "
"(`&[i32]`) ne mentionne plus la longueur du tableau. Cela nous permet "
"d'effectuer des calculs sur des tranches de tailles diff√©rentes."

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"Slices always borrow from another object. In this example, `a` has to remain "
"'alive' (in scope) for at least as long as our slice."
msgstr ""
"Les tranches empruntent toujours √† un autre objet. Dans cet exemple, \"a\" "
"doit rester \"vivant\" (dans la port√©e) au moins aussi longtemps que notre "
"tranche."

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"The question about modifying `a[3]` can spark an interesting discussion, but "
"the answer is that for memory safety reasons you cannot do it through `a` at "
"this point in the execution, but you can read the data from both `a` and `s` "
"safely. It works before you created the slice, and again after the "
"`println`, when the slice is no longer used."
msgstr ""
"La question sur la modification de `a[3]` peut susciter une discussion "
"int√©ressante, mais la r√©ponse est que pour des raisons de s√©curit√© de la "
"m√©moire vous ne pouvez pas le faire via `a` apr√®s avoir cr√©√© une tranche, "
"mais vous pouvez lire les donn√©es de `a` et `s` en toute s√©curit√©. Plus de "
"d√©tails seront expliqu√©s dans la section V√©rificateur d'emprunt."

#: src/slices-and-lifetimes/str.md
msgid ""
"We can now understand the two string types in Rust: `&str` is almost like "
"`&[char]`, but with its data stored in a variable-length encoding (UTF-8)."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid "\"s1: {s1}\""
msgstr ""

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid "\"Hello \""
msgstr "Bonjour le monde!"

#: src/slices-and-lifetimes/str.md
msgid "\"s3: {s3}\""
msgstr ""

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid "Rust terminology:"
msgstr "Terminologie de Rust :"

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid "`&str` an immutable reference to a string slice."
msgstr "`&str` une r√©f√©rence immuable √† une tranche de cha√Æne."

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid "`String` a mutable string buffer."
msgstr "`String` un tampon de cha√Æne mutable."

#: src/slices-and-lifetimes/str.md
msgid ""
"`&str` introduces a string slice, which is an immutable reference to UTF-8 "
"encoded string data stored in a block of memory. String literals "
"(`‚ÄùHello‚Äù`), are stored in the program‚Äôs binary."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid ""
"Rust‚Äôs `String` type is a wrapper around a vector of bytes. As with a "
"`Vec<T>`, it is owned."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid ""
"As with many other types `String::from()` creates a string from a string "
"literal; `String::new()` creates a new empty string, to which string data "
"can be added using the `push()` and `push_str()` methods."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid ""
"The `format!()` macro is a convenient way to generate an owned string from "
"dynamic values. It accepts the same format specification as `println!()`."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid ""
"You can borrow `&str` slices from `String` via `&` and optionally range "
"selection. If you select a byte range that is not aligned to character "
"boundaries, the expression will panic. The `chars` iterator iterates over "
"characters and is preferred over trying to get character boundaries right."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid ""
"For C++ programmers: think of `&str` as `std::string_view` from C++, but the "
"one that always points to a valid string in memory. Rust `String` is a rough "
"equivalent of `std::string` from C++ (main difference: it can only contain "
"UTF-8 encoded bytes and will never use a small-string optimization)."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid "Byte strings literals allow you to create a `&[u8]` value directly:"
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"A reference has a _lifetime_, which must not \"outlive\" the value it refers "
"to. This is verified by the borrow checker."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"The lifetime can be implicit - this is what we have seen so far. Lifetimes "
"can also be explicit: `&'a Point`, `&'document str`. Lifetimes start with "
"`'` and `'a` is a typical default name. Read `&'a Point` as \"a borrowed "
"`Point` which is valid for at least the lifetime `a`\"."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"Lifetimes are always inferred by the compiler: you cannot assign a lifetime "
"yourself. Explicit lifetime annotations create constraints where there is "
"ambiguity; the compiler verifies that there is a valid solution."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"Lifetimes become more complicated when considering passing values to and "
"returning values from functions."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid "// What is the lifetime of p3?\n"
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid "\"p3: {p3:?}\""
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"In this example, the the compiler does not know what lifetime to infer for "
"`p3`. Looking inside the function body shows that it can only safely assume "
"that `p3`'s lifetime is the shorter of `p1` and `p2`. But just like types, "
"Rust requires explicit annotations of lifetimes on function arguments and "
"return values."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid "Add `'a` appropriately to `left_most`:"
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"This says, \"given p1 and p2 which both outlive `'a`, the return value lives "
"for at least `'a`."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"In common cases, lifetimes can be elided, as described on the next slide."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "Lifetimes in Function Calls"
msgstr "Dur√©es de vie dans les appels de fonction"

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"Lifetimes for function arguments and return values must be fully specified, "
"but Rust allows lifetimes to be elided in most cases with [a few simple "
"rules](https://doc.rust-lang.org/nomicon/lifetime-elision.html). This is not "
"inference -- it is just a syntactic shorthand."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "Each argument which does not have a lifetime annotation is given one."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"If there is only one argument lifetime, it is given to all un-annotated "
"return values."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"If there are multiple argument lifetimes, but the first one is for `self`, "
"that lifetime is given to all un-annotated return values."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "In this example, `cab_distance` is trivially elided."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"The `nearest` function provides another example of a function with multiple "
"references in its arguments that requires explicit annotation."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "Try adjusting the signature to \"lie\" about the lifetimes returned:"
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"This won't compile, demonstrating that the annotations are checked for "
"validity by the compiler. Note that this is not the case for raw pointers "
"(unsafe), and this is a common source of errors with unsafe Rust."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"Students may ask when to use lifetimes. Rust borrows _always_ have "
"lifetimes. Most of the time, elision and type inference mean these don't "
"need to be written out. In more complicated cases, lifetime annotations can "
"help resolve ambiguity. Often, especially when prototyping, it's easier to "
"just work with owned data by cloning values where necessary."
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "Lifetimes in Data Structures"
msgstr "Dur√©es de vie dans les structures de donn√©es"

#: src/slices-and-lifetimes/struct-lifetimes.md
#, fuzzy
msgid ""
"If a data type stores borrowed data, it must be annotated with a lifetime:"
msgstr ""
"Si un type de donn√©es stocke des donn√©es emprunt√©es, il doit √™tre annot√© "
"avec une dur√©e de vie¬†:"

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"Bye {text}!\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"The quick brown fox jumps over the lazy dog.\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "// erase(text);\n"
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"{fox:?}\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"{dog:?}\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
#, fuzzy
msgid ""
"In the above example, the annotation on `Highlight` enforces that the data "
"underlying the contained `&str` lives at least as long as any instance of "
"`Highlight` that uses that data."
msgstr ""
"Dans l'exemple ci-dessus, l'annotation sur `Highlight` impose que les "
"donn√©es sous-jacentes au `&str` contenu vivent au moins aussi longtemps que "
"toute instance de `Highlight` qui utilise ces donn√©es."

#: src/slices-and-lifetimes/struct-lifetimes.md
#, fuzzy
msgid ""
"If `text` is consumed before the end of the lifetime of `fox` (or `dog`), "
"the borrow checker throws an error."
msgstr ""
"Si `text` est consomm√© avant la fin de la dur√©e de vie de `fox` (ou `dog`), "
"le v√©rificateur d'emprunt g√©n√®re une erreur."

#: src/slices-and-lifetimes/struct-lifetimes.md
#, fuzzy
msgid ""
"Types with borrowed data force users to hold on to the original data. This "
"can be useful for creating lightweight views, but it generally makes them "
"somewhat harder to use."
msgstr ""
"Les types avec des donn√©es emprunt√©es obligent les utilisateurs √† conserver "
"les donn√©es d'origine. Cela peut √™tre utile pour cr√©er des vues l√©g√®res, "
"mais cela les rend g√©n√©ralement un peu plus difficiles √† utiliser."

#: src/slices-and-lifetimes/struct-lifetimes.md
#, fuzzy
msgid "When possible, make data structures own their data directly."
msgstr ""
"Dans la mesure du possible, faites en sorte que les structures de donn√©es "
"soient directement propri√©taires de leurs donn√©es."

#: src/slices-and-lifetimes/struct-lifetimes.md
#, fuzzy
msgid ""
"Some structs with multiple references inside can have more than one lifetime "
"annotation. This can be necessary if there is a need to describe lifetime "
"relationships between the references themselves, in addition to the lifetime "
"of the struct itself. Those are very advanced use cases."
msgstr ""
"Certaines structures contenant plusieurs r√©f√©rences peuvent avoir plusieurs "
"annotations de dur√©e de vie. Cela peut √™tre n√©cessaire s'il est n√©cessaire "
"de d√©crire les relations de dur√©e de vie entre les r√©f√©rences elles-m√™mes, "
"en plus de la dur√©e de vie de la structure elle-m√™me. Ce sont des cas "
"d'utilisation tr√®s avanc√©s."

#: src/slices-and-lifetimes/exercise.md
msgid ""
"In this exercise, you will build a parser for the [protobuf binary encoding]"
"(https://protobuf.dev/programming-guides/encoding/). Don't worry, it's "
"simpler than it seems! This illustrates a common parsing pattern, passing "
"slices of data. The underlying data itself is never copied."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"Fully parsing a protobuf message requires knowing the types of the fields, "
"indexed by their field numbers. That is typically provided in a `proto` "
"file. In this exercise, we'll encode that information into `match` "
"statements in functions that get called for each field."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
#, fuzzy
msgid "We'll use the following proto:"
msgstr "Vous pouvez utiliser le fichier `Cargo.toml` suivant¬†:"

#: src/slices-and-lifetimes/exercise.md
msgid ""
"A proto message is encoded as a series of fields, one after the next. Each "
"is implemented as a \"tag\" followed by the value. The tag contains a field "
"number (e.g., `2` for the `id` field of a `Person` message) and a wire type "
"defining how the payload should be determined from the byte stream."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"Integers, including the tag, are represented with a variable-length encoding "
"called VARINT. Luckily, `parse_varint` is defined for you below. The given "
"code also defines callbacks to handle `Person` and `PhoneNumber` fields, and "
"to parse a message into a series of calls to those callbacks."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"What remains for you is to implement the `parse_field` function and the "
"`ProtoMessage` trait for `Person` and `PhoneNumber`."
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid varint\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid wire-type\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Unexpected EOF\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid length\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Unexpected wire-type)\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid string (not UTF-8)\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// A wire type as seen on the wire.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// The Varint WireType indicates the value is a single VARINT.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"//I64,  -- not needed for this exercise\n"
"    /// The Len WireType indicates that the value is a length represented as "
"a\n"
"    /// VARINT followed by exactly that number of bytes.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"/// The I32 WireType indicates that the value is precisely 4 bytes in\n"
"    /// little-endian order containing a 32-bit signed integer.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// A field's value, typed based on the wire type.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "//I64(i64),  -- not needed for this exercise\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// A field, containing the field number and its value.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "//1 => WireType::I64,  -- not needed for this exercise\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"/// Parse a VARINT, returning the parsed value and the remaining bytes.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"// This is the last byte of the VARINT, so convert it to\n"
"            // a u64 and return it.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "// More than 7 bytes is invalid.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// Convert a tag into a field number and a WireType.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// Parse a field, returning the remaining bytes\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"\"Based on the wire type, build a Field, consuming as many bytes as "
"necessary.\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid "\"Return the field, and any un-consumed bytes.\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"/// Parse a message in the given data, calling `T::add_field` for each field "
"in\n"
"/// the message.\n"
"///\n"
"/// The entire input is consumed.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid "// TODO: Implement ProtoMessage for Person and PhoneNumber.\n"
msgstr ""

#: src/slices-and-lifetimes/solution.md
msgid "// Unwrap error because `value` is definitely 4 bytes long.\n"
msgstr ""

#: src/slices-and-lifetimes/solution.md
msgid "// skip everything else\n"
msgstr ""

#: src/slices-and-lifetimes/solution.md
msgid "b\"hello\""
msgstr ""

#: src/welcome-day-4.md
#, fuzzy
msgid "Welcome to Day 4"
msgstr "Bienvenue au jour 1"

#: src/welcome-day-4.md
#, fuzzy
msgid ""
"Today we will cover topics relating to building large-scale software in Rust:"
msgstr "Aujourd'hui, nous aborderons quelques sujets plus avanc√©s de Rust¬†:"

#: src/welcome-day-4.md
msgid "Iterators: a deep dive on the `Iterator` trait."
msgstr ""

#: src/welcome-day-4.md
msgid "Modules and visibility."
msgstr ""

#: src/welcome-day-4.md
#, fuzzy
msgid "Testing."
msgstr "Tester"

#: src/welcome-day-4.md
#, fuzzy
msgid "Error handling: panics, `Result`, and the try operator `?`."
msgstr ""
"Gestion des erreurs¬†: paniques, ¬´¬†R√©sultat¬†¬ª et l'op√©rateur d'essai ¬´¬†?¬†¬ª."

#: src/welcome-day-4.md
msgid ""
"Unsafe Rust: the escape hatch when you can't express yourself in safe Rust."
msgstr ""

#: src/welcome-day-4.md
msgid "[Welcome](./welcome-day-4.md) (3 minutes)"
msgstr ""

#: src/welcome-day-4.md
msgid "[Iterators](./iterators.md) (45 minutes)"
msgstr ""

#: src/welcome-day-4.md
msgid "[Modules](./modules.md) (40 minutes)"
msgstr ""

#: src/welcome-day-4.md
msgid "[Testing](./testing.md) (1 hour and 5 minutes)"
msgstr ""

#: src/iterators.md
msgid "[Iterator](./iterators/iterator.md) (5 minutes)"
msgstr ""

#: src/iterators.md
msgid "[IntoIterator](./iterators/intoiterator.md) (5 minutes)"
msgstr ""

#: src/iterators.md
msgid "[FromIterator](./iterators/fromiterator.md) (5 minutes)"
msgstr ""

#: src/iterators.md
msgid ""
"[Exercise: Iterator Method Chaining](./iterators/exercise.md) (30 minutes)"
msgstr ""

#: src/iterators/iterator.md
msgid ""
"The [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) "
"trait supports iterating over values in a collection. It requires a `next` "
"method and provides lots of methods. Many standard library types implement "
"`Iterator`, and you can implement it yourself, too:"
msgstr ""

#: src/iterators/iterator.md
msgid "\"fib({i}): {n}\""
msgstr ""

#: src/iterators/iterator.md
#, fuzzy
msgid ""
"The `Iterator` trait implements many common functional programming "
"operations over collections (e.g. `map`, `filter`, `reduce`, etc). This is "
"the trait where you can find all the documentation about them. In Rust these "
"functions should produce the code as efficient as equivalent imperative "
"implementations."
msgstr ""
"Le trait `Iterator` impl√©mente de nombreuses op√©rations de programmation "
"fonctionnelles courantes sur les collections (par exemple, `map`, `filter`, "
"`reduce`, etc.). C'est le trait o√π vous pouvez trouver toute la "
"documentation √† propos d'eux. Dans Rust, ces fonctions devraient produire le "
"code aussi efficace que l'imp√©ratif √©quivalent impl√©mentations."

#: src/iterators/iterator.md
#, fuzzy
msgid ""
"`IntoIterator` is the trait that makes for loops work. It is implemented by "
"collection types such as `Vec<T>` and references to them such as `&Vec<T>` "
"and `&[T]`. Ranges also implement it. This is why you can iterate over a "
"vector with `for i in some_vec { .. }` but `some_vec.next()` doesn't exist."
msgstr ""
"`IntoIterator` est le trait qui fait fonctionner les boucles. Il est "
"impl√©ment√© par des types de collection tels que `Vec<T>` et leurs r√©f√©rences "
"telles que `&Vec<T>` et `&[T]`. Les gammes l'impl√©mentent √©galement. C'est "
"pourquoi vous pouvez it√©rer sur un vecteur avec `for i in some_vec { .. }` "
"mais `some_vec.next()` n'existe pas."

#: src/iterators/intoiterator.md
#, fuzzy
msgid ""
"The `Iterator` trait tells you how to _iterate_ once you have created an "
"iterator. The related trait [`IntoIterator`](https://doc.rust-lang.org/std/"
"iter/trait.IntoIterator.html) defines how to create an iterator for a type. "
"It is used automatically by the `for` loop."
msgstr ""
"Le trait `Iterator` vous indique comment _it√©rer_ une fois que vous avez "
"cr√©√© un it√©rateur. Le trait connexe \"IntoIterator\" vous indique comment "
"cr√©er l'it√©rateur¬†:"

#: src/iterators/intoiterator.md
msgid "\"point = {x}, {y}\""
msgstr ""

#: src/iterators/intoiterator.md
#, fuzzy
msgid ""
"Click through to the docs for `IntoIterator`. Every implementation of "
"`IntoIterator` must declare two types:"
msgstr ""
"La syntaxe ici signifie que chaque impl√©mentation de `IntoIterator` doit "
"d√©clarer deux types :"

#: src/iterators/intoiterator.md
#, fuzzy
msgid "`Item`: the type to iterate over, such as `i8`,"
msgstr "`Item`¬†: le type sur lequel nous it√©rons, tel que `i8`,"

#: src/iterators/intoiterator.md
#, fuzzy
msgid "`IntoIter`: the `Iterator` type returned by the `into_iter` method."
msgstr "`IntoIter`¬†: le type `Iterator` renvoy√© par la m√©thode `into_iter`."

#: src/iterators/intoiterator.md
#, fuzzy
msgid ""
"Note that `IntoIter` and `Item` are linked: the iterator must have the same "
"`Item` type, which means that it returns `Option<Item>`"
msgstr ""
"Notez que `IntoIter` et `Item` sont li√©s¬†: l'it√©rateur doit avoir le m√™me "
"Type `Item`, ce qui signifie qu'il renvoie `Option<Item>`"

#: src/iterators/intoiterator.md
msgid "The example iterates over all combinations of x and y coordinates."
msgstr ""

#: src/iterators/intoiterator.md
msgid ""
"Try iterating over the grid twice in `main`. Why does this fail? Note that "
"`IntoIterator::into_iter` takes ownership of `self`."
msgstr ""

#: src/iterators/intoiterator.md
msgid ""
"Fix this issue by implementing `IntoIterator` for `&Grid` and storing a "
"reference to the `Grid` in `GridIter`."
msgstr ""

#: src/iterators/intoiterator.md
msgid ""
"The same problem can occur for standard library types: `for e in "
"some_vector` will take ownership of `some_vector` and iterate over owned "
"elements from that vector. Use `for e in &some_vector` instead, to iterate "
"over references to elements of `some_vector`."
msgstr ""

#: src/iterators/fromiterator.md
msgid "FromIterator"
msgstr "FromIterator"

#: src/iterators/fromiterator.md
#, fuzzy
msgid ""
"[`FromIterator`](https://doc.rust-lang.org/std/iter/trait.FromIterator.html) "
"lets you build a collection from an [`Iterator`](https://doc.rust-lang.org/"
"std/iter/trait.Iterator.html)."
msgstr ""
"[`FromIterator`](https://doc.rust-lang.org/std/iter/trait.FromIterator.html) "
"vous permet de cr√©er une collection √† partir d'un [`Iterator`](https://doc."
"rust-lang.org/std/iter/trait.Iterator.html)."

#: src/iterators/fromiterator.md
msgid "\"prime_squares: {prime_squares:?}\""
msgstr ""

#: src/iterators/fromiterator.md
#, fuzzy
msgid "`Iterator` implements"
msgstr "`It√©rateur`"

#: src/iterators/fromiterator.md
msgid "There are two ways to specify `B` for this method:"
msgstr ""

#: src/iterators/fromiterator.md
msgid ""
"With the \"turbofish\": `some_iterator.collect::<COLLECTION_TYPE>()`, as "
"shown. The `_` shorthand used here lets Rust infer the type of the `Vec` "
"elements."
msgstr ""

#: src/iterators/fromiterator.md
msgid ""
"With type inference: `let prime_squares: Vec<_> = some_iterator.collect()`. "
"Rewrite the example to use this form."
msgstr ""

#: src/iterators/fromiterator.md
#, fuzzy
msgid ""
"There are basic implementations of `FromIterator` for `Vec`, `HashMap`, etc. "
"There are also more specialized implementations which let you do cool things "
"like convert an `Iterator<Item = Result<V, E>>` into a `Result<Vec<V>, E>`."
msgstr ""
"Il existe √©galement des impl√©mentations qui vous permettent de faire des "
"choses sympas comme convertir un `Iterator<Item = Result<V, E>>` en un "
"`Result<Vec<V>, E>`."

#: src/iterators/exercise.md
#, fuzzy
msgid ""
"In this exercise, you will need to find and use some of the provided methods "
"in the [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) "
"trait to implement a complex calculation."
msgstr ""
"Vous pouvez impl√©menter le trait [`Iterator`](https://doc.rust-lang.org/std/"
"iter/trait.Iterator.html) sur vos propres types¬†:"

#: src/iterators/exercise.md
#, fuzzy
msgid ""
"Copy the following code to <https://play.rust-lang.org/> and make the tests "
"pass. Use an iterator expression and `collect` the result to construct the "
"return value."
msgstr ""
"Copiez le code suivant sur <https://play.rust-lang.org/> et faites les tests "
"passer. Essayez d'√©viter d'attribuer un \"Vec\" √† vos r√©sultats "
"interm√©diaires¬†:"

#: src/iterators/exercise.md src/iterators/solution.md
msgid ""
"/// Calculate the differences between elements of `values` offset by "
"`offset`,\n"
"/// wrapping around from the end of `values` to the beginning.\n"
"///\n"
"/// Element `n` of the result is `values[(n+offset)%len] - values[n]`.\n"
msgstr ""

#: src/modules.md
msgid "[Modules](./modules/modules.md) (5 minutes)"
msgstr ""

#: src/modules.md
msgid "[Filesystem Hierarchy](./modules/filesystem.md) (5 minutes)"
msgstr ""

#: src/modules.md
msgid "[Visibility](./modules/visibility.md) (5 minutes)"
msgstr ""

#: src/modules.md
msgid "[use, super, self](./modules/paths.md) (10 minutes)"
msgstr ""

#: src/modules.md
msgid ""
"[Exercise: Modules for a GUI Library](./modules/exercise.md) (15 minutes)"
msgstr ""

#: src/modules.md
msgid "This segment should take about 40 minutes"
msgstr ""

#: src/modules/modules.md
#, fuzzy
msgid "We have seen how `impl` blocks let us namespace functions to a type."
msgstr ""
"Nous avons vu comment les blocs `impl` nous permettent de faire fonctionner "
"l'espace de noms sur un type."

#: src/modules/modules.md
#, fuzzy
msgid "Similarly, `mod` lets us namespace types and functions:"
msgstr ""
"De m√™me, `mod` nous permet d'utiliser des types et des fonctions d'espace de "
"noms¬†:"

#: src/modules/modules.md
msgid "\"In the foo module\""
msgstr ""

#: src/modules/modules.md
msgid "\"In the bar module\""
msgstr ""

#: src/modules/modules.md
#, fuzzy
msgid ""
"Packages provide functionality and include a `Cargo.toml` file that "
"describes how to build a bundle of 1+ crates."
msgstr ""
"Les packages fournissent des fonctionnalit√©s et incluent un fichier `Cargo."
"toml` qui d√©crit comment cr√©er un ensemble de 1+ caisses."

#: src/modules/modules.md
#, fuzzy
msgid ""
"Crates are a tree of modules, where a binary crate creates an executable and "
"a library crate compiles to a library."
msgstr ""
"Les caisses sont un arbre de modules, o√π une caisse binaire cr√©e un "
"ex√©cutable et une caisse de biblioth√®que se compile en une biblioth√®que."

#: src/modules/modules.md
#, fuzzy
msgid "Modules define organization, scope, and are the focus of this section."
msgstr ""
"Les modules d√©finissent l'organisation, la port√©e et sont au centre de cette "
"section."

#: src/modules/filesystem.md
msgid ""
"Omitting the module content will tell Rust to look for it in another file:"
msgstr ""

#: src/modules/filesystem.md
msgid ""
"This tells rust that the `garden` module content is found at `src/garden."
"rs`. Similarly, a `garden::vegetables` module can be found at `src/garden/"
"vegetables.rs`."
msgstr ""

#: src/modules/filesystem.md
#, fuzzy
msgid "The `crate` root is in:"
msgstr "La racine `crate` se trouve dans¬†:"

#: src/modules/filesystem.md
#, fuzzy
msgid "`src/lib.rs` (for a library crate)"
msgstr "`src/lib.rs` (pour une caisse de biblioth√®que)"

#: src/modules/filesystem.md
#, fuzzy
msgid "`src/main.rs` (for a binary crate)"
msgstr "`src/main.rs` (pour un crate binaire)"

#: src/modules/filesystem.md
#, fuzzy
msgid ""
"Modules defined in files can be documented, too, using \"inner doc "
"comments\". These document the item that contains them -- in this case, a "
"module."
msgstr ""
"Les modules d√©finis dans les fichiers peuvent √©galement √™tre document√©s √† "
"l'aide de \"commentaires de documentation internes\". Ceux-ci documentent "
"l'√©l√©ment qui les contient -- dans ce cas, un module."

#: src/modules/filesystem.md
msgid ""
"//! This module implements the garden, including a highly performant "
"germination\n"
"//! implementation.\n"
msgstr ""

#: src/modules/filesystem.md
msgid "// Re-export types from this module.\n"
msgstr ""

#: src/modules/filesystem.md
msgid "/// Sow the given seed packets.\n"
msgstr ""

#: src/modules/filesystem.md
msgid "/// Harvest the produce in the garden that is ready.\n"
msgstr ""

#: src/modules/filesystem.md
msgid ""
"Before Rust 2018, modules needed to be located at `module/mod.rs` instead of "
"`module.rs`, and this is still a working alternative for editions after 2018."
msgstr ""

#: src/modules/filesystem.md
msgid ""
"The main reason to introduce `filename.rs` as alternative to `filename/mod."
"rs` was because many files named `mod.rs` can be hard to distinguish in IDEs."
msgstr ""

#: src/modules/filesystem.md
msgid "Deeper nesting can use folders, even if the main module is a file:"
msgstr ""

#: src/modules/filesystem.md
msgid ""
"The place rust will look for modules can be changed with a compiler "
"directive:"
msgstr ""

#: src/modules/filesystem.md
msgid "\"some/path.rs\""
msgstr ""

#: src/modules/filesystem.md
msgid ""
"This is useful, for example, if you would like to place tests for a module "
"in a file named `some_module_test.rs`, similar to the convention in Go."
msgstr ""

#: src/modules/visibility.md
#, fuzzy
msgid "Modules are a privacy boundary:"
msgstr "Les modules sont une limite de confidentialit√©¬†:"

#: src/modules/visibility.md
#, fuzzy
msgid "Module items are private by default (hides implementation details)."
msgstr ""
"Les √©l√©ments du module sont priv√©s par d√©faut (cache les d√©tails "
"d'impl√©mentation)."

#: src/modules/visibility.md
#, fuzzy
msgid "Parent and sibling items are always visible."
msgstr "Les √©l√©ments parents et fr√®res sont toujours visibles."

#: src/modules/visibility.md
#, fuzzy
msgid ""
"In other words, if an item is visible in module `foo`, it's visible in all "
"the descendants of `foo`."
msgstr ""
"En d'autres termes, si un √©l√©ment est visible dans le module `foo`, il est "
"visible dans tous les descendants de `foo`."

#: src/modules/visibility.md
msgid "\"outer::private\""
msgstr ""

#: src/modules/visibility.md
msgid "\"outer::public\""
msgstr ""

#: src/modules/visibility.md
msgid "\"outer::inner::private\""
msgstr ""

#: src/modules/visibility.md
msgid "\"outer::inner::public\""
msgstr ""

#: src/modules/visibility.md
#, fuzzy
msgid "Use the `pub` keyword to make modules public."
msgstr "Utilisez le mot-cl√© `pub` pour rendre les modules publics."

#: src/modules/visibility.md
#, fuzzy
msgid ""
"Additionally, there are advanced `pub(...)` specifiers to restrict the scope "
"of public visibility."
msgstr ""
"De plus, il existe des sp√©cificateurs avanc√©s `pub(...)` pour restreindre la "
"port√©e de la visibilit√© publique."

#: src/modules/visibility.md
#, fuzzy
msgid ""
"See the [Rust Reference](https://doc.rust-lang.org/reference/visibility-and-"
"privacy.html#pubin-path-pubcrate-pubsuper-and-pubself)."
msgstr ""
"Voir la [Rust Reference](https://doc.rust-lang.org/reference/visibility-and-"
"privacy.html#pubin-path-pubcrate-pubsuper-and-pubself)."

#: src/modules/visibility.md
#, fuzzy
msgid "Configuring `pub(crate)` visibility is a common pattern."
msgstr ""
"La configuration de la visibilit√© de `pub(crate)` est un mod√®le courant."

#: src/modules/visibility.md
#, fuzzy
msgid "Less commonly, you can give visibility to a specific path."
msgstr ""
"Plus rarement, vous pouvez donner de la visibilit√© √† un chemin sp√©cifique."

#: src/modules/visibility.md
#, fuzzy
msgid ""
"In any case, visibility must be granted to an ancestor module (and all of "
"its descendants)."
msgstr ""
"Dans tous les cas, la visibilit√© doit √™tre accord√©e √† un module anc√™tre (et "
"√† tous ses descendants)."

#: src/modules/paths.md
msgid "use, super, self"
msgstr ""

#: src/modules/paths.md
msgid ""
"A module can bring symbols from another module into scope with `use`. You "
"will typically see something like this at the top of each module:"
msgstr ""

#: src/modules/paths.md
msgid "Paths"
msgstr "Chemins"

#: src/modules/paths.md
#, fuzzy
msgid "Paths are resolved as follows:"
msgstr "Les chemins sont r√©solus comme suit¬†:"

#: src/modules/paths.md
#, fuzzy
msgid "As a relative path:"
msgstr "En tant que chemin relatif¬†:"

#: src/modules/paths.md
#, fuzzy
msgid "`foo` or `self::foo` refers to `foo` in the current module,"
msgstr "`foo` ou `self::foo` fait r√©f√©rence √† `foo` dans le module actuel,"

#: src/modules/paths.md
#, fuzzy
msgid "`super::foo` refers to `foo` in the parent module."
msgstr "`super::foo` fait r√©f√©rence √† `foo` dans le module parent."

#: src/modules/paths.md
#, fuzzy
msgid "As an absolute path:"
msgstr "En tant que chemin absolu¬†:"

#: src/modules/paths.md
#, fuzzy
msgid "`crate::foo` refers to `foo` in the root of the current crate,"
msgstr "`crate::foo` fait r√©f√©rence √† `foo` √† la racine du crate actuel,"

#: src/modules/paths.md
#, fuzzy
msgid "`bar::foo` refers to `foo` in the `bar` crate."
msgstr "`bar::foo` fait r√©f√©rence √† `foo` dans le crate `bar`."

#: src/modules/paths.md
msgid ""
"It is common to \"re-export\" symbols at a shorter path. For example, the "
"top-level `lib.rs` in a crate might have"
msgstr ""

#: src/modules/paths.md
msgid ""
"making `DiskStorage` and `NetworkStorage` available to other crates with a "
"convenient, short path."
msgstr ""

#: src/modules/paths.md
msgid ""
"For the most part, only items that appear in a module need to be `use`'d. "
"However, a trait must be in scope to call any methods on that trait, even if "
"a type implementing that trait is already in scope. For example, to use the "
"`read_to_string` method on a type implementing the `Read` trait, you need to "
"`use std::io::Read`."
msgstr ""

#: src/modules/paths.md
msgid ""
"The `use` statement can have a wildcard: `use std::io::*`. This is "
"discouraged because it is not clear which items are imported, and those "
"might change over time."
msgstr ""

#: src/modules/exercise.md
msgid ""
"In this exercise, you will reorganize a small GUI Library implementation. "
"This library defines a `Widget` trait and a few implementations of that "
"trait, as well as a `main` function."
msgstr ""

#: src/modules/exercise.md
msgid ""
"It is typical to put each type or set of closely-related types into its own "
"module, so each widget type should get its own module."
msgstr ""

#: src/modules/exercise.md
#, fuzzy
msgid "Cargo Setup"
msgstr "Installation"

#: src/modules/exercise.md
msgid ""
"The Rust playground only supports one file, so you will need to make a Cargo "
"project on your local filesystem:"
msgstr ""

#: src/modules/exercise.md
msgid ""
"Edit the resulting `src/main.rs` to add `mod` statements, and add additional "
"files in the `src` directory."
msgstr ""

#: src/modules/exercise.md
msgid "Source"
msgstr ""

#: src/modules/exercise.md
msgid "Here's the single-module implementation of the GUI library:"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "/// Natural width of `self`.\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "/// Draw the widget into a buffer.\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "/// Draw the widget on standard output.\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"{buffer}\""
msgstr ""

#: src/modules/exercise.md
msgid "// Add 4 paddings for borders\n"
msgstr ""

#: src/modules/exercise.md
msgid ""
"// TODO: Change draw_into to return Result<(), std::fmt::Error>. Then use "
"the\n"
"        // ?-operator here instead of .unwrap().\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"+-{:-<inner_width$}-+\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md src/testing/unit-tests.md
#: src/testing/solution.md
msgid "\"\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"| {:^inner_width$} |\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"+={:=<inner_width$}=+\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"| {:inner_width$} |\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "// add a bit of padding\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"+{:-<width$}+\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"|{:^width$}|\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"Rust GUI Demo 1.23\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"This is a small text GUI demo.\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"Click me!\""
msgstr ""

#: src/modules/exercise.md
msgid ""
"Encourage students to divide the code in a way that feels natural for them, "
"and get accustomed to the required `mod`, `use`, and `pub` declarations. "
"Afterward, discuss what organizations are most idiomatic."
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets/label.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Label-width\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR: Label-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Label-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets/button.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Button-width\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR: Button-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Button-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets/window.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid ""
"// ANCHOR_END: Window-width\n"
"        // Add 4 paddings for borders\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR: Window-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Window-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid ""
"// TODO: after learning about error handling, you can change\n"
"        // draw_into to return Result<(), std::fmt::Error>. Then use\n"
"        // the ?-operator here instead of .unwrap().\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/main.rs ----\n"
msgstr ""

#: src/testing.md
msgid "[Test Modules](./testing/unit-tests.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Other Types of Tests](./testing/other.md) (10 minutes)"
msgstr ""

#: src/testing.md
msgid "[Useful Crates](./testing/useful-crates.md) (3 minutes)"
msgstr ""

#: src/testing.md
msgid "[GoogleTest](./testing/googletest.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Mocking](./testing/mocking.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Compiler Lints and Clippy](./testing/lints.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Exercise: Luhn Algorithm](./testing/exercise.md) (30 minutes)"
msgstr ""

#: src/testing/unit-tests.md
msgid "Unit Tests"
msgstr "Tests unitaires"

#: src/testing/unit-tests.md
#, fuzzy
msgid "Rust and Cargo come with a simple unit test framework:"
msgstr "Rust et Cargo sont livr√©s avec un cadre de test unitaire simple¬†:"

#: src/testing/unit-tests.md
#, fuzzy
msgid "Unit tests are supported throughout your code."
msgstr "Les tests unitaires sont pris en charge dans tout votre code."

#: src/testing/unit-tests.md
#, fuzzy
msgid "Integration tests are supported via the `tests/` directory."
msgstr ""
"Les tests d'int√©gration sont pris en charge via le r√©pertoire `tests/`."

#: src/testing/unit-tests.md
msgid ""
"Tests are marked with `#[test]`. Unit tests are often put in a nested "
"`tests` module, using `#[cfg(test)]` to conditionally compile them only when "
"building tests."
msgstr ""

#: src/testing/unit-tests.md
#, fuzzy
msgid "\"Hello World\""
msgstr "Bonjour le monde!"

#: src/testing/unit-tests.md
#, fuzzy
msgid "This lets you unit test private helpers."
msgstr "Cela vous permet de tester unitairement les helpers priv√©s."

#: src/testing/unit-tests.md
#, fuzzy
msgid "The `#[cfg(test)]` attribute is only active when you run `cargo test`."
msgstr ""
"L'attribut `#[cfg(test)]` n'est actif que lorsque vous lancez `cargo test`."

#: src/testing/unit-tests.md
msgid "Run the tests in the playground in order to show their results."
msgstr ""

#: src/testing/other.md
msgid "Integration Tests"
msgstr "Tests d'int√©gration"

#: src/testing/other.md
#, fuzzy
msgid "If you want to test your library as a client, use an integration test."
msgstr ""
"Si vous souhaitez tester votre biblioth√®que en tant que client, utilisez un "
"test d'int√©gration."

#: src/testing/other.md
#, fuzzy
msgid "Create a `.rs` file under `tests/`:"
msgstr "Cr√©ez un fichier `.rs` sous `tests/`¬†:"

#: src/testing/other.md
msgid "// tests/my_library.rs\n"
msgstr ""

#: src/testing/other.md
#, fuzzy
msgid "These tests only have access to the public API of your crate."
msgstr "Ces tests n'ont acc√®s qu'√† l'API publique de votre crate."

#: src/testing/other.md
msgid "Documentation Tests"
msgstr "Tests de documentation"

#: src/testing/other.md
#, fuzzy
msgid "Rust has built-in support for documentation tests:"
msgstr "Rust a un support int√©gr√© pour les tests de documentation¬†:"

#: src/testing/other.md
msgid ""
"/// Shortens a string to the given length.\n"
"///\n"
"/// ```\n"
"/// # use playground::shorten_string;\n"
"/// assert_eq!(shorten_string(\"Hello World\", 5), \"Hello\");\n"
"/// assert_eq!(shorten_string(\"Hello World\", 20), \"Hello World\");\n"
"/// ```\n"
msgstr ""

#: src/testing/other.md
#, fuzzy
msgid "Code blocks in `///` comments are automatically seen as Rust code."
msgstr ""
"Les blocs de code dans les commentaires `///` sont automatiquement "
"consid√©r√©s comme du code Rust."

#: src/testing/other.md
#, fuzzy
msgid "The code will be compiled and executed as part of `cargo test`."
msgstr "Le code sera compil√© et ex√©cut√© dans le cadre du `cargo test`."

#: src/testing/other.md
msgid ""
"Adding `#` in the code will hide it from the docs, but will still compile/"
"run it."
msgstr ""

#: src/testing/other.md
#, fuzzy
msgid ""
"Test the above code on the [Rust Playground](https://play.rust-lang.org/?"
"version=stable&mode=debug&edition=2021&gist=3ce2ad13ea1302f6572cb15cd96becf0)."
msgstr ""
"Testez le code ci-dessus sur [Rust Playground](https://play.rust-lang.org/?"
"version=stable&mode=debug&edition=2021&gist=3ce2ad13ea1302f6572cb15cd96becf0)."

#: src/testing/useful-crates.md
#, fuzzy
msgid "Rust comes with only basic support for writing tests."
msgstr "Rust a un support int√©gr√© pour les tests de documentation¬†:"

#: src/testing/useful-crates.md
msgid "Here are some additional crates which we recommend for writing tests:"
msgstr ""

#: src/testing/useful-crates.md
msgid ""
"[googletest](https://docs.rs/googletest): Comprehensive test assertion "
"library in the tradition of GoogleTest for C++."
msgstr ""

#: src/testing/useful-crates.md
msgid "[proptest](https://docs.rs/proptest): Property-based testing for Rust."
msgstr ""

#: src/testing/useful-crates.md
msgid ""
"[rstest](https://docs.rs/rstest): Support for fixtures and parameterised "
"tests."
msgstr ""

#: src/testing/googletest.md
msgid ""
"The [GoogleTest](https://docs.rs/googletest/) crate allows for flexible test "
"assertions using _matchers_:"
msgstr ""

#: src/testing/googletest.md
msgid "\"baz\""
msgstr ""

#: src/testing/googletest.md
msgid "\"xyz\""
msgstr ""

#: src/testing/googletest.md
msgid ""
"If we change the last element to `\"!\"`, the test fails with a structured "
"error message pin-pointing the error:"
msgstr ""

#: src/testing/googletest.md
msgid ""
"GoogleTest is not part of the Rust Playground, so you need to run this "
"example in a local environment. Use `cargo add googletest` to quickly add it "
"to an existing Cargo project."
msgstr ""

#: src/testing/googletest.md
msgid ""
"The `use googletest::prelude::*;` line imports a number of [commonly used "
"macros and types](https://docs.rs/googletest/latest/googletest/prelude/index."
"html)."
msgstr ""

#: src/testing/googletest.md
msgid "This just scratches the surface, there are many builtin matchers."
msgstr ""

#: src/testing/googletest.md
msgid ""
"A particularly nice feature is that mismatches in multi-line strings strings "
"are shown as a diff:"
msgstr ""

#: src/testing/googletest.md
msgid ""
"\"Memory safety found,\\n\\\n"
"                 Rust's strong typing guides the way,\\n\\\n"
"                 Secure code you'll write.\""
msgstr ""

#: src/testing/googletest.md
msgid ""
"\"Memory safety found,\\n\\\n"
"            Rust's silly humor guides the way,\\n\\\n"
"            Secure code you'll write.\""
msgstr ""

#: src/testing/googletest.md
msgid "shows a color-coded diff (colors not shown here):"
msgstr ""

#: src/testing/googletest.md
msgid ""
"The crate is a Rust port of [GoogleTest for C++](https://google.github.io/"
"googletest/)."
msgstr ""

#: src/testing/googletest.md
msgid "GoogleTest is available for use in AOSP."
msgstr ""

#: src/testing/mocking.md
msgid ""
"For mocking, [Mockall](https://docs.rs/mockall/) is a widely used library. "
"You need to refactor your code to use traits, which you can then quickly "
"mock:"
msgstr ""

#: src/testing/mocking.md
msgid ""
"The advice here is for Android (AOSP) where Mockall is the recommended "
"mocking library. There are other [mocking libraries available on crates.io]"
"(https://crates.io/keywords/mock), in particular in the area of mocking HTTP "
"services. The other mocking libraries work in a similar fashion as Mockall, "
"meaning that they make it easy to get a mock implementation of a given trait."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Note that mocking is somewhat _controversial_: mocks allow you to completely "
"isolate a test from its dependencies. The immediate result is faster and "
"more stable test execution. On the other hand, the mocks can be configured "
"wrongly and return output different from what the real dependencies would do."
msgstr ""

#: src/testing/mocking.md
msgid ""
"If at all possible, it is recommended that you use the real dependencies. As "
"an example, many databases allow you to configure an in-memory backend. This "
"means that you get the correct behavior in your tests, plus they are fast "
"and will automatically clean up after themselves."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Similarly, many web frameworks allow you to start an in-process server which "
"binds to a random port on `localhost`. Always prefer this over mocking away "
"the framework since it helps you test your code in the real environment."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Mockall is not part of the Rust Playground, so you need to run this example "
"in a local environment. Use `cargo add mockall` to quickly add Mockall to an "
"existing Cargo project."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Mockall has a lot more functionality. In particular, you can set up "
"expectations which depend on the arguments passed. Here we use this to mock "
"a cat which becomes hungry 3 hours after the last time it was fed:"
msgstr ""

#: src/testing/mocking.md
msgid ""
"You can use `.times(n)` to limit the number of times a mock method can be "
"called to `n` --- the mock will automatically panic when dropped if this "
"isn't satisfied."
msgstr ""

#: src/testing/lints.md
msgid ""
"The Rust compiler produces fantastic error messages, as well as helpful "
"built-in lints. [Clippy](https://doc.rust-lang.org/clippy/) provides even "
"more lints, organized into groups that can be enabled per-project."
msgstr ""

#: src/testing/lints.md
msgid "\"X probably fits in a u16, right? {}\""
msgstr ""

#: src/testing/lints.md
msgid ""
"Run the code sample and examine the error message. There are also lints "
"visible here, but those will not be shown once the code compiles. Switch to "
"the Playground site to show those lints."
msgstr ""

#: src/testing/lints.md
msgid ""
"After resolving the lints, run `clippy` on the playground site to show "
"clippy warnings. Clippy has extensive documentation of its lints, and adds "
"new lints (including default-deny lints) all the time."
msgstr ""

#: src/testing/lints.md
msgid ""
"Note that errors or warnings with `help: ...` can be fixed with `cargo fix` "
"or via your editor."
msgstr ""

#: src/testing/exercise.md
msgid "Luhn Algorithm"
msgstr "Algorithme de Luhn"

#: src/testing/exercise.md
#, fuzzy
msgid ""
"The [Luhn algorithm](https://en.wikipedia.org/wiki/Luhn_algorithm) is used "
"to validate credit card numbers. The algorithm takes a string as input and "
"does the following to validate the credit card number:"
msgstr ""
"L'[algorithme de Luhn](https://en.wikipedia.org/wiki/Luhn_algorithm) est "
"utilis√© pour valider les num√©ros de carte de cr√©dit. L'algorithme prend une "
"cha√Æne en entr√©e et fait le suivant pour valider le num√©ro de carte "
"bancaire :"

#: src/testing/exercise.md
#, fuzzy
msgid "Ignore all spaces. Reject number with less than two digits."
msgstr ""
"Ignorer tous les espaces. Num√©ro de rejet comportant moins de deux chiffres."

#: src/testing/exercise.md
#, fuzzy
msgid ""
"Moving from **right to left**, double every second digit: for the number "
"`1234`, we double `3` and `1`. For the number `98765`, we double `6` and `8`."
msgstr ""
"En se d√©pla√ßant de droite √† gauche, doubler tous les deux chiffres¬†: pour le "
"nombre `1234`, on double '3' et '1'."

#: src/testing/exercise.md
#, fuzzy
msgid ""
"After doubling a digit, sum the digits if the result is greater than 9. So "
"doubling `7` becomes `14` which becomes `1 + 4 = 5`."
msgstr ""
"Apr√®s avoir doubl√© un chiffre, additionnez les chiffres. Donc doubler '7' "
"devient '14' ce qui devient '5'."

#: src/testing/exercise.md
#, fuzzy
msgid "Sum all the undoubled and doubled digits."
msgstr "Additionnez tous les chiffres non doubl√©s et doubl√©s."

#: src/testing/exercise.md
#, fuzzy
msgid "The credit card number is valid if the sum ends with `0`."
msgstr ""
"Le num√©ro de carte de cr√©dit est valide si la somme se termine par '0'."

#: src/testing/exercise.md
msgid ""
"The provided code provides a buggy implementation of the luhn algorithm, "
"along with two basic unit tests that confirm that most the algorithm is "
"implemented correctly."
msgstr ""

#: src/testing/exercise.md
#, fuzzy
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and write additional "
"tests to uncover bugs in the provided implementation, fixing any bugs you "
"find."
msgstr ""
"Copiez le code ci-dessous sur <https://play.rust-lang.org/> et remplissez "
"les champs manquants fonctions et m√©thodes :"

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4263 9826 4026 9299\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4539 3195 0343 6467\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"7992 7398 713\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4223 9826 4026 9299\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4539 3195 0343 6476\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"8273 1232 7352 0569\""
msgstr ""

#: src/testing/solution.md
msgid "// This is the buggy version that appears in the problem.\n"
msgstr ""

#: src/testing/solution.md
msgid "// This is the solution and passes all of the tests below.\n"
msgstr ""

#: src/testing/solution.md
msgid "\"1234 5678 1234 5670\""
msgstr ""

#: src/testing/solution.md
msgid "\"Is {cc_number} a valid credit card number? {}\""
msgstr ""

#: src/testing/solution.md
msgid "\"yes\""
msgstr ""

#: src/testing/solution.md
msgid "\"no\""
msgstr ""

#: src/testing/solution.md
msgid "\"foo 0 0\""
msgstr ""

#: src/testing/solution.md
msgid "\" \""
msgstr ""

#: src/testing/solution.md
msgid "\"  \""
msgstr ""

#: src/testing/solution.md
msgid "\"    \""
msgstr ""

#: src/testing/solution.md
msgid "\"0\""
msgstr ""

#: src/testing/solution.md
msgid "\" 0 0 \""
msgstr ""

#: src/welcome-day-4-afternoon.md
msgid "[Error Handling](./error-handling.md) (45 minutes)"
msgstr ""

#: src/welcome-day-4-afternoon.md
msgid "[Unsafe Rust](./unsafe-rust.md) (1 hour and 5 minutes)"
msgstr ""

#: src/welcome-day-4-afternoon.md
msgid "Including 10 minute breaks, this session should take about 2 hours"
msgstr ""

#: src/error-handling.md
msgid "[Panics](./error-handling/panics.md) (3 minutes)"
msgstr ""

#: src/error-handling.md
msgid "[Try Operator](./error-handling/try.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid "[Try Conversions](./error-handling/try-conversions.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid "[Error Trait](./error-handling/error.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid ""
"[thiserror and anyhow](./error-handling/thiserror-and-anyhow.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid ""
"[Exercise: Rewriting with Result](./error-handling/exercise.md) (20 minutes)"
msgstr ""

#: src/error-handling/panics.md
msgid "Rust handles fatal errors with a \"panic\"."
msgstr ""

#: src/error-handling/panics.md
#, fuzzy
msgid "Rust will trigger a panic if a fatal error happens at runtime:"
msgstr ""
"Rust d√©clenchera une panique si une erreur fatale se produit lors de "
"l'ex√©cution¬†:"

#: src/error-handling/panics.md
msgid "\"v[100]: {}\""
msgstr ""

#: src/error-handling/panics.md
#, fuzzy
msgid "Panics are for unrecoverable and unexpected errors."
msgstr "Les paniques concernent les erreurs irr√©cup√©rables et inattendues."

#: src/error-handling/panics.md
#, fuzzy
msgid "Panics are symptoms of bugs in the program."
msgstr "Les paniques sont des sympt√¥mes de bogues dans le programme."

#: src/error-handling/panics.md
msgid "Runtime failures like failed bounds checks can panic"
msgstr ""

#: src/error-handling/panics.md
msgid "Assertions (such as `assert!`) panic on failure"
msgstr ""

#: src/error-handling/panics.md
msgid "Purpose-specific panics can use the `panic!` macro."
msgstr ""

#: src/error-handling/panics.md
msgid ""
"A panic will \"unwind\" the stack, dropping values just as if the functions "
"had returned."
msgstr ""

#: src/error-handling/panics.md
#, fuzzy
msgid ""
"Use non-panicking APIs (such as `Vec::get`) if crashing is not acceptable."
msgstr ""
"Utilisez des API qui ne paniquent pas (telles que `Vec::get`) si le plantage "
"n'est pas acceptable."

#: src/error-handling/panics.md
#, fuzzy
msgid ""
"By default, a panic will cause the stack to unwind. The unwinding can be "
"caught:"
msgstr ""
"Par d√©faut, une panique entra√Ænera le d√©roulement de la pile. Le d√©roulement "
"peut √™tre rattrap√© :"

#: src/error-handling/panics.md
msgid "\"No problem here!\""
msgstr ""

#: src/error-handling/panics.md
msgid "\"{result:?}\""
msgstr ""

#: src/error-handling/panics.md
msgid "\"oh no!\""
msgstr ""

#: src/error-handling/panics.md
msgid ""
"Catching is unusual; do not attempt to implement exceptions with "
"`catch_unwind`!"
msgstr ""

#: src/error-handling/panics.md
#, fuzzy
msgid ""
"This can be useful in servers which should keep running even if a single "
"request crashes."
msgstr ""
"Cela peut √™tre utile dans les serveurs qui doivent continuer √† fonctionner "
"m√™me si un seul la demande se bloque."

#: src/error-handling/panics.md
#, fuzzy
msgid "This does not work if `panic = 'abort'` is set in your `Cargo.toml`."
msgstr ""
"Cela ne fonctionne pas si `panic = 'abort'` est d√©fini dans votre `Cargo."
"toml`."

#: src/error-handling/try.md
msgid ""
"Runtime errors like connection-refused or file-not-found are handled with "
"the `Result` type, but matching this type on every call can be cumbersome. "
"The try-operator `?` is used to return errors to the caller. It lets you "
"turn the common"
msgstr ""

#: src/error-handling/try.md
#, fuzzy
msgid "into the much simpler"
msgstr "dans le plus simple"

#: src/error-handling/try.md
#, fuzzy
msgid "We can use this to simplify our error handling code:"
msgstr ""
"Nous pouvons l'utiliser pour simplifier notre code de gestion des erreurs¬†:"

#: src/error-handling/try.md
msgid "//fs::write(\"config.dat\", \"alice\").unwrap();\n"
msgstr ""

#: src/error-handling/try.md src/error-handling/try-conversions.md
#: src/error-handling/thiserror-and-anyhow.md
msgid "\"config.dat\""
msgstr ""

#: src/error-handling/try.md src/error-handling/try-conversions.md
msgid "\"username or error: {username:?}\""
msgstr ""

#: src/error-handling/try.md
msgid "Simplify the `read_username` function to use `?`."
msgstr ""

#: src/error-handling/try.md
#, fuzzy
msgid "The `username` variable can be either `Ok(string)` or `Err(error)`."
msgstr "La variable `username` peut √™tre soit `Ok(string)` soit `Err(error)`."

#: src/error-handling/try.md
#, fuzzy
msgid ""
"Use the `fs::write` call to test out the different scenarios: no file, empty "
"file, file with username."
msgstr ""
"Utilisez l'appel `fs::write` pour tester les diff√©rents sc√©narios¬†: pas de "
"fichier, fichier vide, fichier avec nom d'utilisateur."

#: src/error-handling/try.md
msgid ""
"Note that `main` can return a `Result<(), E>` as long as it implements `std::"
"process:Termination`. In practice, this means that `E` implements `Debug`. "
"The executable will print the `Err` variant and return a nonzero exit status "
"on error."
msgstr ""

#: src/error-handling/try-conversions.md
#, fuzzy
msgid ""
"The effective expansion of `?` is a little more complicated than previously "
"indicated:"
msgstr ""
"L'expansion effective de `?` est un peu plus compliqu√©e qu'indiqu√© "
"pr√©c√©demment¬†:"

#: src/error-handling/try-conversions.md
#, fuzzy
msgid "works the same as"
msgstr "fonctionne de la m√™me mani√®re que"

#: src/error-handling/try-conversions.md
#, fuzzy
msgid ""
"The `From::from` call here means we attempt to convert the error type to the "
"type returned by the function. This makes it easy to encapsulate errors into "
"higher-level errors."
msgstr ""
"L'appel `From::from` ici signifie que nous essayons de convertir le type "
"d'erreur en type renvoy√© par la fonction¬†:"

#: src/error-handling/try-conversions.md
msgid "\"IO error: {e}\""
msgstr ""

#: src/error-handling/try-conversions.md
msgid "\"Found no username in {path}\""
msgstr ""

#: src/error-handling/try-conversions.md
#: src/error-handling/thiserror-and-anyhow.md
msgid "//fs::write(\"config.dat\", \"\").unwrap();\n"
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"The `?` operator must return a value compatible with the return type of the "
"function. For `Result`, it means that the error types have to be compatible. "
"A function that returns `Result<T, ErrorOuter>` can only use `?` on a value "
"of type `Result<U, ErrorInner>` if `ErrorOuter` and `ErrorInner` are the "
"same type or if `ErrorOuter` implements `From<ErrorInner>`."
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"A common alternative to a `From` implementation is `Result::map_err`, "
"especially when the conversion only happens in one place."
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"There is no compatibility requirement for `Option`. A function returning "
"`Option<T>` can use the `?` operator on `Option<U>` for arbitrary `T` and "
"`U` types."
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"A function that returns `Result` cannot use `?` on `Option` and vice versa. "
"However, `Option::ok_or` converts `Option` to `Result` whereas `Result::ok` "
"turns `Result` into `Option`."
msgstr ""

#: src/error-handling/error.md
msgid "Dynamic Error Types"
msgstr "Types d'erreurs dynamiques"

#: src/error-handling/error.md
#, fuzzy
msgid ""
"Sometimes we want to allow any type of error to be returned without writing "
"our own enum covering all the different possibilities. The `std::error::"
"Error` trait makes it easy to create a trait object that can contain any "
"error."
msgstr ""
"Parfois, nous voulons permettre √† tout type d'erreur d'√™tre renvoy√© sans "
"√©crire notre propre √©num√©ration couvrant toutes les diff√©rentes "
"possibilit√©s. `std::error::Error` rend cela facile."

#: src/error-handling/error.md
msgid "\"count.dat\""
msgstr ""

#: src/error-handling/error.md
msgid "\"1i3\""
msgstr ""

#: src/error-handling/error.md
msgid "\"Count: {count}\""
msgstr ""

#: src/error-handling/error.md
msgid "\"Error: {err}\""
msgstr ""

#: src/error-handling/error.md
msgid ""
"The `read_count` function can return `std::io::Error` (from file operations) "
"or `std::num::ParseIntError` (from `String::parse`)."
msgstr ""

#: src/error-handling/error.md
#, fuzzy
msgid ""
"Boxing errors saves on code, but gives up the ability to cleanly handle "
"different error cases differently in the program. As such it's generally not "
"a good idea to use `Box<dyn Error>` in the public API of a library, but it "
"can be a good option in a program where you just want to display the error "
"message somewhere."
msgstr ""
"Cela permet d'√©conomiser du code, mais abandonne la possibilit√© de g√©rer "
"proprement diff√©rents cas d'erreur diff√©remment dans le programme. En tant "
"que tel, ce n'est g√©n√©ralement pas une bonne id√©e d'utiliser `Box<dyn "
"Error>` dans l'API publique d'un biblioth√®que, mais cela peut √™tre une bonne "
"option dans un programme o√π vous voulez juste afficher le message d'erreur "
"quelque part."

#: src/error-handling/error.md
msgid ""
"Make sure to implement the `std::error::Error` trait when defining a custom "
"error type so it can be boxed. But if you need to support the `no_std` "
"attribute, keep in mind that the `std::error::Error` trait is currently "
"compatible with `no_std` in [nightly](https://github.com/rust-lang/rust/"
"issues/103765) only."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid ""
"The [`thiserror`](https://docs.rs/thiserror/) and [`anyhow`](https://docs.rs/"
"anyhow/) crates are widely used to simplify error handling."
msgstr ""
"La caisse [thiserror](https://docs.rs/thiserror/) est un moyen populaire de "
"cr√©er un error enum comme nous l'avons fait sur la page pr√©c√©dente¬†:"

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"`thiserror` is often used in libraries to create custom error types that "
"implement `From<T>`."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"`anyhow` is often used by applications to help with error handling in "
"functions, including adding contextual information to your errors."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Found no username in {0}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Failed to open {path}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Failed to read\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Username: {username}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Error: {err:?}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid "`thiserror`"
msgstr "\"Erreur\""

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"The `Error` derive macro is provided by `thiserror`, and has lots of useful "
"attributes to help define error types in a compact way."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "The `std::error::Error` trait is derived automatically."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "The message from `#[error]` is used to derive the `Display` trait."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "`anyhow`"
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid ""
"`anyhow::Error` is essentially a wrapper around `Box<dyn Error>`. As such "
"it's again generally not a good choice for the public API of a library, but "
"is widely used in applications."
msgstr ""
"`anyhow::Error` est essentiellement un wrapper autour de `Box<dyn Error>`. "
"En tant que tel, ce n'est g√©n√©ralement pas un bon choix pour l'API publique "
"d'une biblioth√®que, mais il est largement utilis√© dans les applications."

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid "`anyhow::Result<V>` is a type alias for `Result<V, anyhow::Error>`."
msgstr ""
"`anyhow::Result<V>` est un alias de type pour `Result<V, anyhow::Error>`."

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid ""
"Actual error type inside of it can be extracted for examination if necessary."
msgstr ""
"Le type d'erreur r√©el √† l'int√©rieur peut √™tre extrait pour examen si "
"n√©cessaire."

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid ""
"Functionality provided by `anyhow::Result<T>` may be familiar to Go "
"developers, as it provides similar usage patterns and ergonomics to `(T, "
"error)` from Go."
msgstr ""
"La fonctionnalit√© fournie par `anyhow::Result<T>` peut √™tre famili√®re aux "
"d√©veloppeurs Go, car elle fournit mod√®les d'utilisation et ergonomie "
"similaires √† `(T, erreur)` de Go."

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"`anyhow::Context` is a trait implemented for the standard `Result` and "
"`Option` types. `use anyhow::Context` is necessary to enable `.context()` "
"and `.with_context()` on those types."
msgstr ""

#: src/error-handling/exercise.md
msgid "Exercise: Rewriting with Result"
msgstr ""

#: src/error-handling/exercise.md
msgid ""
"The following implements a very simple parser for an expression language. "
"However, it handles errors by panicking. Rewrite it to instead use idiomatic "
"error handling and propagate errors to a return from `main`. Feel free to "
"use `thiserror` and `anyhow`."
msgstr ""

#: src/error-handling/exercise.md
msgid ""
"HINT: start by fixing error handling in the `parse` function. Once that is "
"working correctly, update `Tokenizer` to implement "
"`Iterator<Item=Result<Token, TokenizerError>>` and handle that in the parser."
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// An arithmetic operator.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A token in the expression language.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// An expression in the expression language.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A reference to a variable.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A literal number.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A binary operation.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'z'"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'_'"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'+'"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'-'"
msgstr ""

#: src/error-handling/exercise.md
msgid "\"Unexpected character {c}\""
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "\"Unexpected end of input\""
msgstr ""

#: src/error-handling/exercise.md
msgid "\"Invalid 32-bit integer'\""
msgstr ""

#: src/error-handling/exercise.md
msgid "\"Unexpected token {tok:?}\""
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "// Look ahead to parse a binary operation if present.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "\"10+foo+20-30\""
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "\"{expr:?}\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Unexpected character '{0}' in input\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Tokenizer error: {0}\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Unexpected token {0:?}\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Invalid number\""
msgstr ""

#: src/unsafe-rust.md
msgid "[Unsafe](./unsafe-rust/unsafe.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid ""
"[Dereferencing Raw Pointers](./unsafe-rust/dereferencing.md) (10 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Mutable Static Variables](./unsafe-rust/mutable-static.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Unions](./unsafe-rust/unions.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Unsafe Functions](./unsafe-rust/unsafe-functions.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Unsafe Traits](./unsafe-rust/unsafe-traits.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Exercise: FFI Wrapper](./unsafe-rust/exercise.md) (30 minutes)"
msgstr ""

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid "The Rust language has two parts:"
msgstr "Le langage Rust comporte deux parties¬†:"

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid "**Safe Rust:** memory safe, no undefined behavior possible."
msgstr ""
"**Safe Rust¬†:** m√©moire s√©curis√©e, aucun comportement ind√©fini possible."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid ""
"**Unsafe Rust:** can trigger undefined behavior if preconditions are "
"violated."
msgstr ""
"**Unsafe Rust¬†:** peut d√©clencher un comportement ind√©fini si les conditions "
"pr√©alables ne sont pas respect√©es."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid ""
"We saw mostly safe Rust in this course, but it's important to know what "
"Unsafe Rust is."
msgstr ""
"Nous verrons principalement Rust s√ªr dans ce cours, mais il est important de "
"savoir ce qu'est Rust non securis√© (_unsafe_)."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid ""
"Unsafe code is usually small and isolated, and its correctness should be "
"carefully documented. It is usually wrapped in a safe abstraction layer."
msgstr ""
"Le code dangereux est g√©n√©ralement petit et isol√©, et son exactitude doit "
"√™tre soigneusement document√©. Il est g√©n√©ralement envelopp√© dans une couche "
"d'abstraction s√ªre."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid "Unsafe Rust gives you access to five new capabilities:"
msgstr "Unsafe Rust vous donne acc√®s √† cinq nouvelles fonctionnalit√©s :"

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid "Dereference raw pointers."
msgstr "D√©r√©f√©rencer les pointeurs bruts."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid "Access or modify mutable static variables."
msgstr "Acc√©der ou modifier des variables statiques mutables."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid "Access `union` fields."
msgstr "Acc√©der aux champs \"union\"."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid "Call `unsafe` functions, including `extern` functions."
msgstr ""
"Appelez les fonctions `unsafe`, y compris les fonctions `extern`. \\*¬†Mettre "
"en ≈ìuvre les traits \"¬†non s√©curis√©s¬†\"."

#: src/unsafe-rust/unsafe.md
msgid "Implement `unsafe` traits."
msgstr ""

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid ""
"We will briefly cover unsafe capabilities next. For full details, please see "
"[Chapter 19.1 in the Rust Book](https://doc.rust-lang.org/book/ch19-01-"
"unsafe-rust.html) and the [Rustonomicon](https://doc.rust-lang.org/nomicon/)."
msgstr ""
"Nous aborderons ensuite bri√®vement les capacit√©s dangereuses. Pour plus de "
"d√©tails, veuillez consulter [Chapitre 19.1 du Rust Book](https://doc.rust-"
"lang.org/book/ch19-01-unsafe-rust.html) et le [Rustonomicon](https://doc."
"rust-lang.org/nomicon/)."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid ""
"Unsafe Rust does not mean the code is incorrect. It means that developers "
"have turned off some compiler safety features and have to write correct code "
"by themselves. It means the compiler no longer enforces Rust's memory-safety "
"rules."
msgstr ""
"Unsafe Rust ne signifie pas que le code est incorrect. Cela signifie que les "
"d√©veloppeurs ont d√©sactiv√© les fonctionnalit√©s de s√©curit√© du compilateur et "
"doit √©crire le code correct en eux-m√™mes. Cela signifie que le compilateur "
"n'applique plus les r√®gles de s√©curit√© de la m√©moire de Rust."

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid "Creating pointers is safe, but dereferencing them requires `unsafe`:"
msgstr ""
"La cr√©ation de pointeurs est s√ªre, mais leur d√©r√©f√©rencement n√©cessite "
"`unsafe`¬†:"

#: src/unsafe-rust/dereferencing.md
msgid "\"careful!\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid ""
"// Safe because r1 and r2 were obtained from references and so are\n"
"    // guaranteed to be non-null and properly aligned, the objects "
"underlying\n"
"    // the references from which they were obtained are live throughout the\n"
"    // whole unsafe block, and they are not accessed either through the\n"
"    // references or concurrently through any other pointers.\n"
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid "\"r1 is: {}\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid "\"uhoh\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid "\"r2 is: {}\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid ""
"// NOT SAFE. DO NOT DO THIS.\n"
"    /*\n"
"    let r3: &String = unsafe { &*r1 };\n"
"    drop(s);\n"
"    println!(\"r3 is: {}\", *r3);\n"
"    */"
msgstr ""

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid ""
"It is good practice (and required by the Android Rust style guide) to write "
"a comment for each `unsafe` block explaining how the code inside it "
"satisfies the safety requirements of the unsafe operations it is doing."
msgstr ""
"Il est recommand√© (et requis par le guide de style Android Rust) d'√©crire un "
"commentaire pour chaque Bloc `unsafe` expliquant comment le code √† "
"l'int√©rieur satisfait aux exigences de s√©curit√© de l'unsafe op√©rations qu'il "
"effectue."

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid ""
"In the case of pointer dereferences, this means that the pointers must be "
"[_valid_](https://doc.rust-lang.org/std/ptr/index.html#safety), i.e.:"
msgstr ""
"Dans le cas des d√©r√©f√©rencements de pointeurs, cela signifie que les "
"pointeurs doivent √™tre [_valid_](https://doc.rust-lang.org/std/ptr/index."
"html#safety), c'est-√†-dire¬†:"

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid "The pointer must be non-null."
msgstr "Le pointeur doit √™tre non nul."

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid ""
"The pointer must be _dereferenceable_ (within the bounds of a single "
"allocated object)."
msgstr ""
"Le pointeur doit √™tre _dereferenceable_ (dans les limites d'un seul objet "
"allou√©)."

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid "The object must not have been deallocated."
msgstr "L'objet ne doit pas avoir √©t√© d√©sallou√©."

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid "There must not be concurrent accesses to the same location."
msgstr "Il ne doit pas y avoir d'acc√®s simultan√©s au m√™me endroit."

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid ""
"If the pointer was obtained by casting a reference, the underlying object "
"must be live and no reference may be used to access the memory."
msgstr ""
"Si le pointeur a √©t√© obtenu en transtypant une r√©f√©rence, l'objet sous-"
"jacent doit √™tre actif et non r√©f√©rence peut √™tre utilis√©e pour acc√©der √† la "
"m√©moire."

#: src/unsafe-rust/dereferencing.md
#, fuzzy
msgid "In most cases the pointer must also be properly aligned."
msgstr ""
"Dans la plupart des cas, le pointeur doit √©galement √™tre correctement align√©."

#: src/unsafe-rust/dereferencing.md
msgid ""
"The \"NOT SAFE\" section gives an example of a common kind of UB bug: `*r1` "
"has the `'static` lifetime, so `r3` has type `&'static String`, and thus "
"outlives `s`. Creating a reference from a pointer requires _great care_."
msgstr ""

#: src/unsafe-rust/mutable-static.md
#, fuzzy
msgid "It is safe to read an immutable static variable:"
msgstr "Il est s√ªr de lire une variable statique immuable¬†:"

#: src/unsafe-rust/mutable-static.md
#, fuzzy
msgid "\"Hello, world!\""
msgstr "Bonjour le monde!"

#: src/unsafe-rust/mutable-static.md
msgid "\"HELLO_WORLD: {HELLO_WORLD}\""
msgstr ""

#: src/unsafe-rust/mutable-static.md
#, fuzzy
msgid ""
"However, since data races can occur, it is unsafe to read and write mutable "
"static variables:"
msgstr ""
"Cependant, √©tant donn√© que des courses de donn√©es peuvent se produire, il "
"n'est pas s√ªr de lire et d'√©crire mutable variables statiques¬†:"

#: src/unsafe-rust/mutable-static.md
msgid "\"COUNTER: {COUNTER}\""
msgstr ""

#: src/unsafe-rust/mutable-static.md
msgid ""
"The program here is safe because it is single-threaded. However, the Rust "
"compiler is conservative and will assume the worst. Try removing the "
"`unsafe` and see how the compiler explains that it is undefined behavior to "
"mutate a static from multiple threads."
msgstr ""

#: src/unsafe-rust/mutable-static.md
#, fuzzy
msgid ""
"Using a mutable static is generally a bad idea, but there are some cases "
"where it might make sense in low-level `no_std` code, such as implementing a "
"heap allocator or working with some C APIs."
msgstr ""
"L'utilisation d'une statique mutable est g√©n√©ralement une mauvaise id√©e, "
"mais il y a des cas o√π cela peut avoir du sens dans le code `no_std` de bas "
"niveau, comme l'impl√©mentation d'un allocation de tas ou l'utilisation de "
"certaines API C."

#: src/unsafe-rust/unions.md
#, fuzzy
msgid "Unions are like enums, but you need to track the active field yourself:"
msgstr ""
"Les unions sont comme des √©num√©rations, mais vous devez suivre vous-m√™me le "
"champ actif¬†:"

#: src/unsafe-rust/unions.md
msgid "\"int: {}\""
msgstr ""

#: src/unsafe-rust/unions.md
msgid "\"bool: {}\""
msgstr ""

#: src/unsafe-rust/unions.md
#, fuzzy
msgid "// Undefined behavior!\n"
msgstr "Aucun comportement ind√©fini √† l'ex√©cution¬†:"

#: src/unsafe-rust/unions.md
#, fuzzy
msgid ""
"Unions are very rarely needed in Rust as you can usually use an enum. They "
"are occasionally needed for interacting with C library APIs."
msgstr ""
"Les unions sont tr√®s rarement n√©cessaires dans Rust car vous pouvez "
"g√©n√©ralement utiliser une √©num√©ration. Ils sont parfois n√©cessaires pour "
"interagir avec les API de la biblioth√®que C."

#: src/unsafe-rust/unions.md
#, fuzzy
msgid ""
"If you just want to reinterpret bytes as a different type, you probably want "
"[`std::mem::transmute`](https://doc.rust-lang.org/stable/std/mem/fn."
"transmute.html) or a safe wrapper such as the [`zerocopy`](https://crates.io/"
"crates/zerocopy) crate."
msgstr ""
"Si vous voulez simplement r√©interpr√©ter les octets comme un type diff√©rent, "
"vous voudrez probablement [`std::mem::transmute`](https://doc.rust-lang.org/"
"stable/std/mem/fn.transmute.html) ou un coffre-fort wrapper tel que la "
"caisse [`zerocopy`](https://crates.io/crates/zerocopy)."

#: src/unsafe-rust/unsafe-functions.md
msgid "Calling Unsafe Functions"
msgstr "Appel de fonctions non s√©curis√©es"

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"A function or method can be marked `unsafe` if it has extra preconditions "
"you must uphold to avoid undefined behaviour:"
msgstr ""
"Une fonction ou une m√©thode peut √™tre marqu√©e \"unsafe\" si elle a des "
"conditions pr√©alables suppl√©mentaires que vous doit respecter pour √©viter un "
"comportement ind√©fini¬†:"

#: src/unsafe-rust/unsafe-functions.md src/unsafe-rust/exercise.md
#: src/unsafe-rust/solution.md src/android/interoperability/with-c.md
#: src/android/interoperability/with-c/rust.md
#: src/android/interoperability/cpp/cpp-bridge.md
#: src/exercises/chromium/build-rules.md src/bare-metal/aps/inline-assembly.md
#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"C\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"üóª‚ààüåè\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"// Safe because the indices are in the correct order, within the bounds of\n"
"    // the string slice, and lie on UTF-8 sequence boundaries.\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"emoji: {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"char count: {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid "// Undefined behavior if abs misbehaves.\n"
msgstr "Aucun comportement ind√©fini √† l'ex√©cution¬†:"

#: src/unsafe-rust/unsafe-functions.md
msgid "\"Absolute value of -3 according to C: {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"// Not upholding the UTF-8 encoding requirement breaks memory safety!\n"
"    // println!(\"emoji: {}\", unsafe { emojis.get_unchecked(0..3) });\n"
"    // println!(\"char count: {}\", count_chars(unsafe {\n"
"    // emojis.get_unchecked(0..3) }));\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "Writing Unsafe Functions"
msgstr "Ecrire des fonctions non s√©curis√©es"

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"You can mark your own functions as `unsafe` if they require particular "
"conditions to avoid undefined behaviour."
msgstr ""
"Vous pouvez marquer vos propres fonctions comme \"non s√©curis√©es\" si elles "
"n√©cessitent des conditions particuli√®res pour √©viter undefined comportement."

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"/// Swaps the values pointed to by the given pointers.\n"
"///\n"
"/// # Safety\n"
"///\n"
"/// The pointers must be valid and properly aligned.\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "// Safe because ...\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"a = {}, b = {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"`get_unchecked`, like most `_unchecked` functions, is unsafe, because it can "
"create UB if the range is incorrect. `abs` is incorrect for a different "
"reason: it is an external function (FFI). Calling external functions is "
"usually only a problem when those functions do things with pointers which "
"might violate Rust's memory model, but in general any C function might have "
"undefined behaviour under any arbitrary circumstances."
msgstr ""
"Ce n'est g√©n√©ralement un probl√®me que pour les fonctions externes qui font "
"des choses avec des pointeurs qui pourraient violer le mod√®le de m√©moire de "
"Rust, mais en g√©n√©ral, toute fonction C peut avoir un comportement ind√©fini "
"sous n'importe quel circonstances arbitraires."

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"The `\"C\"` in this example is the ABI; [other ABIs are available too]"
"(https://doc.rust-lang.org/reference/items/external-blocks.html)."
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"We wouldn't actually use pointers for a `swap` function - it can be done "
"safely with references."
msgstr ""
"Nous n'utiliserions pas de pointeurs pour cela car cela peut √™tre fait en "
"toute s√©curit√© avec des r√©f√©rences."

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"Note that unsafe code is allowed within an unsafe function without an "
"`unsafe` block. We can prohibit this with `#[deny(unsafe_op_in_unsafe_fn)]`. "
"Try adding it and see what happens. This will likely change in a future Rust "
"edition."
msgstr ""
"Notez que le code non s√©curis√© est autoris√© dans une fonction non s√©curis√©e "
"sans bloc ¬´ non s√©curis√© ¬ª. Nous pouvons interdisez cela avec "
"`#[deny(unsafe_op_in_unsafe_fn)]`. Essayez de l'ajouter et voyez ce qui se "
"passe."

#: src/unsafe-rust/unsafe-traits.md
msgid "Implementing Unsafe Traits"
msgstr "Impl√©mentation de traits non s√©curis√©s"

#: src/unsafe-rust/unsafe-traits.md
#, fuzzy
msgid ""
"Like with functions, you can mark a trait as `unsafe` if the implementation "
"must guarantee particular conditions to avoid undefined behaviour."
msgstr ""
"Comme avec les fonctions, vous pouvez marquer un trait comme \"non "
"s√©curis√©\" si l'impl√©mentation doit garantir conditions particuli√®res pour "
"√©viter un comportement ind√©fini."

#: src/unsafe-rust/unsafe-traits.md
#, fuzzy
msgid ""
"For example, the `zerocopy` crate has an unsafe trait that looks [something "
"like this](https://docs.rs/zerocopy/latest/zerocopy/trait.AsBytes.html):"
msgstr ""
"Par exemple, la caisse \"z√©rocopie\" a un trait dangereux qui semble "
"[quelque chose comme √ßa](https://docs.rs/zerocopy/latest/zerocopy/trait."
"AsBytes.html):"

#: src/unsafe-rust/unsafe-traits.md
msgid ""
"/// ...\n"
"/// # Safety\n"
"/// The type must have a defined representation and no padding.\n"
msgstr ""

#: src/unsafe-rust/unsafe-traits.md
msgid "// Safe because u32 has a defined representation and no padding.\n"
msgstr ""

#: src/unsafe-rust/unsafe-traits.md
#, fuzzy
msgid ""
"There should be a `# Safety` section on the Rustdoc for the trait explaining "
"the requirements for the trait to be safely implemented."
msgstr ""
"Il devrait y avoir une section `# S√©curit√©` sur le Rustdoc pour le trait "
"expliquant les exigences pour le trait √† mettre en ≈ìuvre en toute s√©curit√©."

#: src/unsafe-rust/unsafe-traits.md
#, fuzzy
msgid ""
"The actual safety section for `AsBytes` is rather longer and more "
"complicated."
msgstr ""
"La section de s√©curit√© actuelle pour `AsBytes` est plut√¥t plus longue et "
"plus compliqu√©e."

#: src/unsafe-rust/unsafe-traits.md
#, fuzzy
msgid "The built-in `Send` and `Sync` traits are unsafe."
msgstr "Les traits int√©gr√©s \"Envoyer\" et \"Synchroniser\" ne sont pas s√ªrs."

#: src/unsafe-rust/exercise.md
msgid "Safe FFI Wrapper"
msgstr "Enveloppe FFI s√©curis√©e"

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid ""
"Rust has great support for calling functions through a _foreign function "
"interface_ (FFI). We will use this to build a safe wrapper for the `libc` "
"functions you would use from C to read the names of files in a directory."
msgstr ""
"Rust a un excellent support pour appeler des fonctions via une fonction "
"_foreign interface_ (FFI). Nous allons l'utiliser pour construire un wrapper "
"s√ªr pour la `libc` fonctions que vous utiliseriez √† partir de C pour lire "
"les noms de fichiers d'un r√©pertoire."

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid "You will want to consult the manual pages:"
msgstr "Vous voudrez consulter les pages de manuel :"

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid "[`opendir(3)`](https://man7.org/linux/man-pages/man3/opendir.3.html)"
msgstr "[`opendir(3)`](https://man7.org/linux/man-pages/man3/opendir.3.html)"

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid "[`readdir(3)`](https://man7.org/linux/man-pages/man3/readdir.3.html)"
msgstr "[`readdir(3)`](https://man7.org/linux/man-pages/man3/readdir.3.html)"

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid "[`closedir(3)`](https://man7.org/linux/man-pages/man3/closedir.3.html)"
msgstr "[`closedir(3)`](https://man7.org/linux/man-pages/man3/closedir.3.html)"

#: src/unsafe-rust/exercise.md
msgid ""
"You will also want to browse the [`std::ffi`](https://doc.rust-lang.org/std/"
"ffi/) module. There you find a number of string types which you need for the "
"exercise:"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "Encoding"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "Use"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"[`str`](https://doc.rust-lang.org/std/primitive.str.html) and [`String`]"
"(https://doc.rust-lang.org/std/string/struct.String.html)"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "UTF-8"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "Text processing in Rust"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"[`CStr`](https://doc.rust-lang.org/std/ffi/struct.CStr.html) and [`CString`]"
"(https://doc.rust-lang.org/std/ffi/struct.CString.html)"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "NUL-terminated"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "Communicating with C functions"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"[`OsStr`](https://doc.rust-lang.org/std/ffi/struct.OsStr.html) and "
"[`OsString`](https://doc.rust-lang.org/std/ffi/struct.OsString.html)"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "OS-specific"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "Communicating with the OS"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "You will convert between all these types:"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"`&str` to `CString`: you need to allocate space for a trailing `\\0` "
"character,"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "`CString` to `*const i8`: you need a pointer to call C functions,"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"`*const i8` to `&CStr`: you need something which can find the trailing `\\0` "
"character,"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"`&CStr` to `&[u8]`: a slice of bytes is the universal interface for \"some "
"unknown data\","
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"`&[u8]` to `&OsStr`: `&OsStr` is a step towards `OsString`, use [`OsStrExt`]"
"(https://doc.rust-lang.org/std/os/unix/ffi/trait.OsStrExt.html) to create it,"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"`&OsStr` to `OsString`: you need to clone the data in `&OsStr` to be able to "
"return it and call `readdir` again."
msgstr ""

#: src/unsafe-rust/exercise.md
msgid ""
"The [Nomicon](https://doc.rust-lang.org/nomicon/ffi.html) also has a very "
"useful chapter about FFI."
msgstr ""

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and fill in the missing "
"functions and methods:"
msgstr ""
"Copiez le code ci-dessous sur <https://play.rust-lang.org/> et remplissez "
"les champs manquants fonctions et m√©thodes :"

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"macos\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "// Opaque type. See https://doc.rust-lang.org/nomicon/ffi.html.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid ""
"// Layout according to the Linux man page for readdir(3), where ino_t and\n"
"    // off_t are resolved according to the definitions in\n"
"    // /usr/include/x86_64-linux-gnu/{sys/types.h, bits/typesizes.h}.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "// Layout according to the macOS man page for dir(5).\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"x86_64\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid ""
"// See https://github.com/rust-lang/libc/issues/414 and the section on\n"
"        // _DARWIN_FEATURE_64_BIT_INODE in the macOS man page for stat(2).\n"
"        //\n"
"        // \"Platforms that existed before these updates were available\" "
"refers\n"
"        // to macOS (as opposed to iOS / wearOS / etc.) on Intel and "
"PowerPC.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"readdir$INODE64\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid ""
"// Call opendir and return a Ok value if that worked,\n"
"        // otherwise return Err with a message.\n"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "// Keep calling readdir until we get a NULL pointer back.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "// Call closedir as needed.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
#: src/android/interoperability/with-c/rust.md
msgid "\".\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"files: {:#?}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Invalid path: {err}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "// SAFETY: path.as_ptr() cannot be NULL.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Could not open {:?}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid ""
"// Keep calling readdir until we get a NULL pointer back.\n"
"        // SAFETY: self.dir is never NULL.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "// We have reached the end of the directory.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid ""
"// SAFETY: dirent is not NULL and dirent.d_name is NUL\n"
"        // terminated.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "// SAFETY: self.dir is not NULL.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Could not close {:?}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"no-such-directory\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Non UTF-8 character in path\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"..\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"foo.txt\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"The Foo Diaries\\n\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"bar.png\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"<PNG>\\n\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"crab.rs\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"//! Crab\\n\""
msgstr ""

#: src/android.md
#, fuzzy
msgid "Welcome to Rust in Android"
msgstr "Bienvenue au jour 1"

#: src/android.md
#, fuzzy
msgid ""
"Rust is supported for system software on Android. This means that you can "
"write new services, libraries, drivers or even firmware in Rust (or improve "
"existing code as needed)."
msgstr ""
"Rust est pris en charge pour le d√©veloppement de plates-formes natives sur "
"Android. Cela signifie que vous pouvez √©crire de nouveaux services de "
"syst√®me d'exploitation dans Rust, ainsi que l'extension prestations "
"existantes."

#: src/android.md
msgid ""
"We will attempt to call Rust from one of your own projects today. So try to "
"find a little corner of your code base where we can move some lines of code "
"to Rust. The fewer dependencies and \"exotic\" types the better. Something "
"that parses some raw bytes would be ideal."
msgstr ""
"Nous allons essayer d'appeler Rust depuis l'un de vos propres projets "
"aujourd'hui. Alors essayez de trouver un petit coin de votre code o√π nous "
"pouvons d√©placer quelques lignes de code vers Rust. Le moins il y a de "
"d√©pendances et de types \"exotiques\", le mieux c'est. Quelque chose qui "
"analyse quelques octets de donn√©e brute serait id√©al."

#: src/android.md
msgid ""
"The speaker may mention any of the following given the increased use of Rust "
"in Android:"
msgstr ""

#: src/android.md
msgid ""
"Service example: [DNS over HTTP](https://security.googleblog.com/2022/07/dns-"
"over-http3-in-android.html)"
msgstr ""

#: src/android.md
msgid ""
"Libraries: [Rutabaga Virtual Graphics Interface](https://crosvm.dev/book/"
"appendix/rutabaga_gfx.html)"
msgstr ""

#: src/android.md
msgid ""
"Kernel Drivers: [Binder](https://lore.kernel.org/rust-for-linux/20231101-"
"rust-binder-v1-0-08ba9197f637@google.com/)"
msgstr ""

#: src/android.md
msgid ""
"Firmware: [pKVM firmware](https://security.googleblog.com/2023/10/bare-metal-"
"rust-in-android.html)"
msgstr ""

#: src/android/setup.md
#, fuzzy
msgid ""
"We will be using a Cuttlefish Android Virtual Device to test our code. Make "
"sure you have access to one or create a new one with:"
msgstr ""
"Nous utiliserons un appareil virtuel Android pour tester notre code. Assurez-"
"vous que vous avez acc√©der √† un ou en cr√©er un nouveau avec :"

#: src/android/setup.md
#, fuzzy
msgid ""
"Please see the [Android Developer Codelab](https://source.android.com/docs/"
"setup/start) for details."
msgstr ""
"Veuillez consulter le \\[D√©veloppeur Android Codelab\\] (https://source."
"android.com/docs/setup/start) pour plus de d√©tails."

#: src/android/setup.md
msgid ""
"Cuttlefish is a reference Android device designed to work on generic Linux "
"desktops. MacOS support is also planned."
msgstr ""

#: src/android/setup.md
msgid ""
"The Cuttlefish system image maintains high fidelity to real devices, and is "
"the ideal emulator to run many Rust use cases."
msgstr ""

#: src/android/build-rules.md
#, fuzzy
msgid "The Android build system (Soong) supports Rust via a number of modules:"
msgstr ""
"Le syst√®me de construction Android (Soong) prend en charge Rust via un "
"certain nombre de modules¬†:"

#: src/android/build-rules.md
#, fuzzy
msgid "Module Type"
msgstr "Type de module"

#: src/android/build-rules.md
#, fuzzy
msgid "Description"
msgstr "Descriptif"

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_binary`"
msgstr "`rust_binaire`"

#: src/android/build-rules.md
#, fuzzy
msgid "Produces a Rust binary."
msgstr "Produit un binaire Rust."

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_library`"
msgstr "`rust_library`"

#: src/android/build-rules.md
#, fuzzy
msgid "Produces a Rust library, and provides both `rlib` and `dylib` variants."
msgstr ""
"Produit une biblioth√®que Rust et fournit les variantes `rlib` et `dylib`."

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_ffi`"
msgstr "`rust_ffi`"

#: src/android/build-rules.md
#, fuzzy
msgid ""
"Produces a Rust C library usable by `cc` modules, and provides both static "
"and shared variants."
msgstr ""
"Produit une biblioth√®que Rust C utilisable par les modules `cc` et fournit "
"des variantes statiques et partag√©es."

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_proc_macro`"
msgstr "`rust_proc_macro`"

#: src/android/build-rules.md
#, fuzzy
msgid ""
"Produces a `proc-macro` Rust library. These are analogous to compiler "
"plugins."
msgstr ""
"Produit une biblioth√®que Rust `proc-macro`. Ceux-ci sont analogues aux "
"plugins du compilateur."

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_test`"
msgstr "`rust_test`"

#: src/android/build-rules.md
#, fuzzy
msgid "Produces a Rust test binary that uses the standard Rust test harness."
msgstr ""
"Produit un binaire de test Rust qui utilise le harnais de test Rust standard."

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_fuzz`"
msgstr "`rust_fuzz`"

#: src/android/build-rules.md
#, fuzzy
msgid "Produces a Rust fuzz binary leveraging `libfuzzer`."
msgstr "Produit un ex√©cutable Rust fuzz utilisant `libfuzzer`."

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_protobuf`"
msgstr "`rust_protobuf`"

#: src/android/build-rules.md
#, fuzzy
msgid ""
"Generates source and produces a Rust library that provides an interface for "
"a particular protobuf."
msgstr ""
"G√©n√®re la source et produit une biblioth√®que Rust qui fournit une interface "
"pour un protobuf particulier."

#: src/android/build-rules.md
#, fuzzy
msgid "`rust_bindgen`"
msgstr "`rust_bindgen`"

#: src/android/build-rules.md
#, fuzzy
msgid ""
"Generates source and produces a Rust library containing Rust bindings to C "
"libraries."
msgstr ""
"G√©n√®re la source et produit une biblioth√®que Rust contenant des liaisons "
"Rust aux biblioth√®ques C."

#: src/android/build-rules.md
#, fuzzy
msgid "We will look at `rust_binary` and `rust_library` next."
msgstr "Nous examinerons ensuite `rust_binary` et `rust_library`."

#: src/android/build-rules.md
msgid "Additional items speaker may mention:"
msgstr ""

#: src/android/build-rules.md
msgid ""
"Cargo is not optimized for multi-language repos, and also downloads packages "
"from the internet."
msgstr ""

#: src/android/build-rules.md
msgid ""
"For compliance and performance, Android must have crates in-tree. It must "
"also interop with C/C++/Java code. Soong fills that gap."
msgstr ""

#: src/android/build-rules.md
msgid ""
"Soong has many similarities to Bazel, which is the open-source variant of "
"Blaze (used in google3)."
msgstr ""

#: src/android/build-rules.md
msgid ""
"There is a plan to transition [Android](https://source.android.com/docs/"
"setup/build/bazel/introduction), [ChromeOS](https://chromium.googlesource."
"com/chromiumos/bazel/), and [Fuchsia](https://source.android.com/docs/setup/"
"build/bazel/introduction) to Bazel."
msgstr ""

#: src/android/build-rules.md
msgid "Learning Bazel-like build rules is useful for all Rust OS developers."
msgstr ""

#: src/android/build-rules.md
msgid "Fun fact: Data from Star Trek is a Soong-type Android."
msgstr ""

#: src/android/build-rules/binary.md
msgid "Rust Binaries"
msgstr "Binaires Rust"

#: src/android/build-rules/binary.md
#, fuzzy
msgid ""
"Let us start with a simple application. At the root of an AOSP checkout, "
"create the following files:"
msgstr ""
"Commen√ßons par une application simple. A la racine d'une caisse AOSP, cr√©ez "
"les fichiers suivants¬†:"

#: src/android/build-rules/binary.md src/android/build-rules/library.md
#, fuzzy
msgid "_hello_rust/Android.bp_:"
msgstr "_hello_rust/Android.bp_¬†:"

#: src/android/build-rules/binary.md
msgid "\"hello_rust\""
msgstr ""

#: src/android/build-rules/binary.md src/android/build-rules/library.md
#: src/android/logging.md
#, fuzzy
msgid "\"src/main.rs\""
msgstr "`src/main.rs`¬†:"

#: src/android/build-rules/binary.md src/android/build-rules/library.md
#, fuzzy
msgid "_hello_rust/src/main.rs_:"
msgstr "_hello_rust/src/main.rs_¬†:"

#: src/android/build-rules/binary.md src/android/build-rules/library.md
msgid "//! Rust demo.\n"
msgstr ""

#: src/android/build-rules/binary.md src/android/build-rules/library.md
msgid "/// Prints a greeting to standard output.\n"
msgstr ""

#: src/android/build-rules/binary.md src/exercises/chromium/build-rules.md
msgid "\"Hello from Rust!\""
msgstr ""

#: src/android/build-rules/binary.md
#, fuzzy
msgid "You can now build, push, and run the binary:"
msgstr "Vous pouvez maintenant compiler, envoyer et ex√©cuter le binaire¬†:"

#: src/android/build-rules/binary.md
msgid ""
"```shell\n"
"m hello_rust\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust\" /data/local/tmp\n"
"adb shell /data/local/tmp/hello_rust\n"
"```"
msgstr ""

#: src/android/build-rules/library.md
msgid "Rust Libraries"
msgstr "Biblioth√®ques Rust"

#: src/android/build-rules/library.md
#, fuzzy
msgid "You use `rust_library` to create a new Rust library for Android."
msgstr ""
"Vous utilisez `rust_library` pour cr√©er une nouvelle biblioth√®que Rust pour "
"Android."

#: src/android/build-rules/library.md
#, fuzzy
msgid "Here we declare a dependency on two libraries:"
msgstr "Ici, nous d√©clarons une d√©pendance sur deux biblioth√®ques¬†:"

#: src/android/build-rules/library.md
#, fuzzy
msgid "`libgreeting`, which we define below,"
msgstr "`libgreeting`, que nous d√©finissons ci-dessous,"

#: src/android/build-rules/library.md
#, fuzzy
msgid ""
"`libtextwrap`, which is a crate already vendored in [`external/rust/crates/`]"
"(https://cs.android.com/android/platform/superproject/+/master:external/rust/"
"crates/)."
msgstr ""
"`libtextwrap`, qui est une caisse d√©j√† disponible dans \\[`external/rust/"
"crates/`\\]\\[crates\\]."

#: src/android/build-rules/library.md
msgid "\"hello_rust_with_dep\""
msgstr ""

#: src/android/build-rules/library.md
msgid "\"libgreetings\""
msgstr ""

#: src/android/build-rules/library.md
msgid "\"libtextwrap\""
msgstr ""

#: src/android/build-rules/library.md
msgid "// Need this to avoid dynamic link error.\n"
msgstr ""

#: src/android/build-rules/library.md
msgid "\"greetings\""
msgstr ""

#: src/android/build-rules/library.md src/android/aidl/implementation.md
#: src/android/interoperability/java.md
#, fuzzy
msgid "\"src/lib.rs\""
msgstr "`src/main.rs`¬†:"

#: src/android/build-rules/library.md
#, fuzzy
msgid "_hello_rust/src/lib.rs_:"
msgstr "_hello_rust/src/lib.rs_¬†:"

#: src/android/build-rules/library.md
msgid "//! Greeting library.\n"
msgstr ""

#: src/android/build-rules/library.md
msgid "/// Greet `name`.\n"
msgstr ""

#: src/android/build-rules/library.md
msgid "\"Hello {name}, it is very nice to meet you!\""
msgstr ""

#: src/android/build-rules/library.md
#, fuzzy
msgid "You build, push, and run the binary like before:"
msgstr "Vous construisez, poussez et ex√©cutez le binaire comme avant¬†:"

#: src/android/build-rules/library.md
msgid ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"
msgstr ""

#: src/android/aidl.md
#, fuzzy
msgid ""
"The [Android Interface Definition Language (AIDL)](https://developer.android."
"com/guide/components/aidl) is supported in Rust:"
msgstr ""
"Le [langage de d√©finition d'interface Android (AIDL)](https://developer."
"android.com/guide/components/aidl) est pris en charge dans Rust¬†:"

#: src/android/aidl.md
#, fuzzy
msgid "Rust code can call existing AIDL servers,"
msgstr "Le code Rust peut appeler des serveurs AIDL existants,"

#: src/android/aidl.md
#, fuzzy
msgid "You can create new AIDL servers in Rust."
msgstr "Vous pouvez cr√©er de nouveaux serveurs AIDL dans Rust."

#: src/android/aidl/interface.md
#, fuzzy
msgid "AIDL Interfaces"
msgstr "Interfaces AIDL"

#: src/android/aidl/interface.md
#, fuzzy
msgid "You declare the API of your service using an AIDL interface:"
msgstr "Vous d√©clarez l'API de votre service √† l'aide d'une interface AIDL¬†:"

#: src/android/aidl/interface.md
#, fuzzy
msgid ""
"_birthday_service/aidl/com/example/birthdayservice/IBirthdayService.aidl_:"
msgstr ""
"_service_anniversaire/aidl/com/exemple/serviceanniversaire/IBirthdayService."
"aidl_¬†:"

#: src/android/aidl/interface.md src/android/aidl/changing.md
msgid "/** Birthday service interface. */"
msgstr ""

#: src/android/aidl/interface.md src/android/aidl/changing.md
msgid "/** Generate a Happy Birthday message. */"
msgstr ""

#: src/android/aidl/interface.md
#, fuzzy
msgid "_birthday_service/aidl/Android.bp_:"
msgstr "_service_anniversaire/aidl/Android.bp_¬†:"

#: src/android/aidl/interface.md
msgid "\"com.example.birthdayservice\""
msgstr ""

#: src/android/aidl/interface.md
#, fuzzy
msgid "\"com/example/birthdayservice/*.aidl\""
msgstr ""
"_service_anniversaire/aidl/com/exemple/serviceanniversaire/IBirthdayService."
"aidl_¬†:"

#: src/android/aidl/interface.md
msgid "// Rust is not enabled by default\n"
msgstr ""

#: src/android/aidl/interface.md
#, fuzzy
msgid ""
"Add `vendor_available: true` if your AIDL file is used by a binary in the "
"vendor partition."
msgstr ""
"Ajoutez `vendor_available¬†: true` si votre fichier AIDL est utilis√© par un "
"binaire dans le fournisseur cloison."

#: src/android/aidl/implementation.md
#, fuzzy
msgid "Service Implementation"
msgstr "Mise en ≈ìuvre des services"

#: src/android/aidl/implementation.md
#, fuzzy
msgid "We can now implement the AIDL service:"
msgstr "Nous pouvons maintenant impl√©menter le service AIDL¬†:"

#: src/android/aidl/implementation.md
#, fuzzy
msgid "_birthday_service/src/lib.rs_:"
msgstr "_service_anniversaire/src/lib.rs_¬†:"

#: src/android/aidl/implementation.md
msgid "//! Implementation of the `IBirthdayService` AIDL interface.\n"
msgstr ""

#: src/android/aidl/implementation.md
#, fuzzy
msgid "/// The `IBirthdayService` implementation.\n"
msgstr "Mise en ≈ìuvre des services"

#: src/android/aidl/implementation.md
msgid "\"Happy Birthday {name}, congratulations with the {years} years!\""
msgstr ""

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
#, fuzzy
msgid "_birthday_service/Android.bp_:"
msgstr "_service_anniversaire/Android.bp_¬†:"

#: src/android/aidl/implementation.md src/android/aidl/server.md
#, fuzzy
msgid "\"libbirthdayservice\""
msgstr "_service_anniversaire/src/lib.rs_¬†:"

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
#, fuzzy
msgid "\"birthdayservice\""
msgstr "_service_anniversaire/src/lib.rs_¬†:"

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
msgid "\"com.example.birthdayservice-rust\""
msgstr ""

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
msgid "\"libbinder_rs\""
msgstr ""

#: src/android/aidl/server.md
#, fuzzy
msgid "AIDL Server"
msgstr "Serveur AIDL"

#: src/android/aidl/server.md
#, fuzzy
msgid "Finally, we can create a server which exposes the service:"
msgstr "Enfin, nous pouvons cr√©er un serveur qui expose le service¬†:"

#: src/android/aidl/server.md
#, fuzzy
msgid "_birthday_service/src/server.rs_:"
msgstr "_service_anniversaire/src/server.rs_¬†:"

#: src/android/aidl/server.md src/android/aidl/client.md
msgid "//! Birthday service.\n"
msgstr ""

#: src/android/aidl/server.md
msgid "/// Entry point for birthday service.\n"
msgstr ""

#: src/android/aidl/server.md
msgid "\"Failed to register service\""
msgstr ""

#: src/android/aidl/server.md
#, fuzzy
msgid "\"birthday_server\""
msgstr "_service_anniversaire/src/lib.rs_¬†:"

#: src/android/aidl/server.md
#, fuzzy
msgid "\"src/server.rs\""
msgstr "`src/main.rs`¬†:"

#: src/android/aidl/server.md src/android/aidl/client.md
msgid "// To avoid dynamic link error.\n"
msgstr ""

#: src/android/aidl/deploy.md
#, fuzzy
msgid "We can now build, push, and start the service:"
msgstr "Nous pouvons maintenant cr√©er, pousser et d√©marrer le service¬†:"

#: src/android/aidl/deploy.md
msgid ""
"```shell\n"
"m birthday_server\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_server\" /data/local/"
"tmp\n"
"adb root\n"
"adb shell /data/local/tmp/birthday_server\n"
"```"
msgstr ""

#: src/android/aidl/deploy.md
#, fuzzy
msgid "In another terminal, check that the service runs:"
msgstr "Dans un autre terminal, v√©rifiez que le service s'ex√©cute¬†:"

#: src/android/aidl/deploy.md
#, fuzzy
msgid "You can also call the service with `service call`:"
msgstr "Vous pouvez √©galement appeler le service avec `service call`¬†:"

#: src/android/aidl/client.md
#, fuzzy
msgid "AIDL Client"
msgstr "Client AIDL"

#: src/android/aidl/client.md
#, fuzzy
msgid "Finally, we can create a Rust client for our new service."
msgstr "Enfin, nous pouvons cr√©er un client Rust pour notre nouveau service."

#: src/android/aidl/client.md
#, fuzzy
msgid "_birthday_service/src/client.rs_:"
msgstr "_service_anniversaire/src/client.rs_¬†:"

#: src/android/aidl/client.md
msgid "/// Connect to the BirthdayService.\n"
msgstr ""

#: src/android/aidl/client.md
msgid "/// Call the birthday service.\n"
msgstr ""

#: src/android/aidl/client.md
msgid "\"Failed to connect to BirthdayService\""
msgstr ""

#: src/android/aidl/client.md
msgid "\"{msg}\""
msgstr ""

#: src/android/aidl/client.md
#, fuzzy
msgid "\"birthday_client\""
msgstr "_service_anniversaire/src/client.rs_¬†:"

#: src/android/aidl/client.md
#, fuzzy
msgid "\"src/client.rs\""
msgstr "`src/main.rs`¬†:"

#: src/android/aidl/client.md
#, fuzzy
msgid "Notice that the client does not depend on `libbirthdayservice`."
msgstr "Notez que le client ne d√©pend pas de `libbirthdayservice`."

#: src/android/aidl/client.md
#, fuzzy
msgid "Build, push, and run the client on your device:"
msgstr "Cr√©ez, transf√©rez et ex√©cutez le client sur votre appareil¬†:"

#: src/android/aidl/client.md
msgid ""
"```shell\n"
"m birthday_client\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_client\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/birthday_client Charlie 60\n"
"```"
msgstr ""

#: src/android/aidl/changing.md
#, fuzzy
msgid ""
"Let us extend the API with more functionality: we want to let clients "
"specify a list of lines for the birthday card:"
msgstr ""
"√âtendons l'API avec plus de fonctionnalit√©s¬†: nous voulons laisser les "
"clients sp√©cifier un liste des lignes pour la carte d'anniversaire :"

#: src/android/logging.md
#, fuzzy
msgid ""
"You should use the `log` crate to automatically log to `logcat` (on-device) "
"or `stdout` (on-host):"
msgstr ""
"Vous devez utiliser la caisse `log` pour vous connecter automatiquement √† "
"`logcat` (sur l'appareil) ou `stdout` (sur l'h√¥te)¬†:"

#: src/android/logging.md
#, fuzzy
msgid "_hello_rust_logs/Android.bp_:"
msgstr "_hello_rust_logs/Android.bp_¬†:"

#: src/android/logging.md
#, fuzzy
msgid "\"hello_rust_logs\""
msgstr "_hello_rust_logs/Android.bp_¬†:"

#: src/android/logging.md
msgid "\"liblog_rust\""
msgstr ""

#: src/android/logging.md
msgid "\"liblogger\""
msgstr ""

#: src/android/logging.md
#, fuzzy
msgid "_hello_rust_logs/src/main.rs_:"
msgstr "_hello_rust_logs/src/main.rs_¬†:"

#: src/android/logging.md
msgid "//! Rust logging demo.\n"
msgstr ""

#: src/android/logging.md
msgid "/// Logs a greeting.\n"
msgstr ""

#: src/android/logging.md
msgid "\"rust\""
msgstr ""

#: src/android/logging.md
msgid "\"Starting program.\""
msgstr ""

#: src/android/logging.md
msgid "\"Things are going fine.\""
msgstr ""

#: src/android/logging.md
msgid "\"Something went wrong!\""
msgstr ""

#: src/android/logging.md src/android/interoperability/with-c/bindgen.md
#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "Build, push, and run the binary on your device:"
msgstr "Compilez, transf√©rez et ex√©cutez le binaire sur votre appareil¬†:"

#: src/android/logging.md
msgid ""
"```shell\n"
"m hello_rust_logs\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_logs\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/hello_rust_logs\n"
"```"
msgstr ""

#: src/android/logging.md
#, fuzzy
msgid "The logs show up in `adb logcat`:"
msgstr "Les journaux s'affichent dans `adb logcat`¬†:"

#: src/android/interoperability.md
#, fuzzy
msgid ""
"Rust has excellent support for interoperability with other languages. This "
"means that you can:"
msgstr ""
"Rust a un excellent support pour l'interop√©rabilit√© avec d'autres langages. "
"√áa signifie Que tu peux:"

#: src/android/interoperability.md
#, fuzzy
msgid "Call Rust functions from other languages."
msgstr "Appelez les fonctions Rust √† partir d'autres langues."

#: src/android/interoperability.md
#, fuzzy
msgid "Call functions written in other languages from Rust."
msgstr "Fonctions d'appel √©crites dans d'autres langages depuis Rust."

#: src/android/interoperability.md
#, fuzzy
msgid ""
"When you call functions in a foreign language we say that you're using a "
"_foreign function interface_, also known as FFI."
msgstr ""
"Lorsque vous appelez des fonctions dans une langue √©trang√®re, nous disons "
"que vous utilisez un _interface de fonction √©trang√®re_, √©galement connue "
"sous le nom de FFI."

#: src/android/interoperability/with-c.md
#, fuzzy
msgid "Interoperability with C"
msgstr "Interop√©rabilit√© avec C"

#: src/android/interoperability/with-c.md
#, fuzzy
msgid ""
"Rust has full support for linking object files with a C calling convention. "
"Similarly, you can export Rust functions and call them from C."
msgstr ""
"Rust prend enti√®rement en charge la liaison de fichiers objets avec une "
"convention d'appel C. De m√™me, vous pouvez exporter des fonctions Rust et "
"les appeler depuis C."

#: src/android/interoperability/with-c.md
#, fuzzy
msgid "You can do it by hand if you want:"
msgstr "Vous pouvez le faire √† la main si vous le souhaitez :"

#: src/android/interoperability/with-c.md
msgid "\"{x}, {abs_x}\""
msgstr ""

#: src/android/interoperability/with-c.md
#, fuzzy
msgid ""
"We already saw this in the [Safe FFI Wrapper exercise](../../exercises/day-3/"
"safe-ffi-wrapper.md)."
msgstr ""
"Nous avons d√©j√† vu cela dans le [Safe FFI Wrapper exercice](../../exercises/"
"day-3/safe-ffi-wrapper.md)."

#: src/android/interoperability/with-c.md
#, fuzzy
msgid ""
"This assumes full knowledge of the target platform. Not recommended for "
"production."
msgstr ""
"Cela suppose une parfaite connaissance de la plateforme cible. Non "
"recommand√© pour fabrication."

#: src/android/interoperability/with-c.md
#, fuzzy
msgid "We will look at better options next."
msgstr "Nous examinerons ensuite de meilleures options."

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "Using Bindgen"
msgstr "Utiliser Bindgen"

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid ""
"The [bindgen](https://rust-lang.github.io/rust-bindgen/introduction.html) "
"tool can auto-generate bindings from a C header file."
msgstr ""
"L'outil [bindgen](https://rust-lang.github.io/rust-bindgen/introduction."
"html) peut g√©n√©rer automatiquement des liaisons √† partir d'un fichier d'en-"
"t√™te C."

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "First create a small C library:"
msgstr "Cr√©ez d'abord une petite biblioth√®que C¬†:"

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "_interoperability/bindgen/libbirthday.h_:"
msgstr "_interoperability/bindgen/libbirthday.h_¬†:"

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "_interoperability/bindgen/libbirthday.c_:"
msgstr "_interoperability/bindgen/libbirthday.c_¬†:"

#: src/android/interoperability/with-c/bindgen.md
msgid "<stdio.h>"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday.h\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"+--------------\\n\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"| Happy Birthday %s!\\n\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"| Congratulations with the %i years!\\n\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "Add this to your `Android.bp` file:"
msgstr "Ajoutez ceci √† votre fichier `Android.bp`¬†:"

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "_interoperability/bindgen/Android.bp_:"
msgstr "_interop√©rabilit√©/bindgen/Android.bp_¬†:"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday.c\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid ""
"Create a wrapper header file for the library (not strictly needed in this "
"example):"
msgstr ""
"Cr√©ez un fichier d'en-t√™te wrapper pour la biblioth√®que (pas strictement "
"n√©cessaire dans ce exemple):"

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "_interoperability/bindgen/libbirthday_wrapper.h_:"
msgstr "_interoperability/bindgen/libbirthday_wrapper.h_¬†:"

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "You can now auto-generate the bindings:"
msgstr "Vous pouvez maintenant g√©n√©rer automatiquement les liaisons¬†:"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday_bindgen\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "\"birthday_bindgen\""
msgstr "`rust_bindgen`"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday_wrapper.h\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"bindings\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "Finally, we can use the bindings in our Rust program:"
msgstr "Enfin, nous pouvons utiliser les liaisons dans notre programme Rust¬†:"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"print_birthday_card\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "\"main.rs\""
msgstr "`main.rs`¬†:"

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "_interoperability/bindgen/main.rs_:"
msgstr "_interop√©rabilit√©/bindgen/main.rs_¬†:"

#: src/android/interoperability/with-c/bindgen.md
msgid "//! Bindgen demo.\n"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "// SAFETY: `print_card` is safe to call with a valid `card` pointer.\n"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid ""
"```shell\n"
"m print_birthday_card\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/print_birthday_card\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/print_birthday_card\n"
"```"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "Finally, we can run auto-generated tests to ensure the bindings work:"
msgstr ""
"Enfin, nous pouvons ex√©cuter des tests g√©n√©r√©s automatiquement pour nous "
"assurer que les liaisons fonctionnent¬†:"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday_bindgen_test\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\":libbirthday_bindgen\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"general-tests\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"none\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "// Generated file, skip linting\n"
msgstr ""

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "Calling Rust"
msgstr "Appeler Rust"

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "Exporting Rust functions and types to C is easy:"
msgstr "Exporter des fonctions et des types Rust vers C est simple :"

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "_interoperability/rust/libanalyze/analyze.rs_"
msgstr "_interop√©rabilit√©/rust/libanalyze/analyze.rs_"

#: src/android/interoperability/with-c/rust.md
msgid "//! Rust FFI demo.\n"
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "/// Analyze the numbers.\n"
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"x ({x}) is smallest!\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"y ({y}) is probably larger than x ({x})\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "_interoperability/rust/libanalyze/analyze.h_"
msgstr "_interop√©rabilit√©/rust/libanalyze/analyze.h_"

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "_interoperability/rust/libanalyze/Android.bp_"
msgstr "_interop√©rabilit√©/rust/libanalyze/Android.bp_"

#: src/android/interoperability/with-c/rust.md
msgid "\"libanalyze_ffi\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze_ffi\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze.rs\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "We can now call this from a C binary:"
msgstr "Nous pouvons maintenant appeler cela √† partir d'un binaire C¬†:"

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid "_interoperability/rust/analyze/main.c_"
msgstr "_interoperability/rust/analyze/main.c_"

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze.h\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "_interoperability/rust/analyze/Android.bp_"
msgstr "_interoperability/rust/analyze/Android.bp_"

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze_numbers\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"main.c\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid ""
"```shell\n"
"m analyze_numbers\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/analyze_numbers\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/analyze_numbers\n"
"```"
msgstr ""

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid ""
"`#[no_mangle]` disables Rust's usual name mangling, so the exported symbol "
"will just be the name of the function. You can also use `#[export_name = "
"\"some_name\"]` to specify whatever name you want."
msgstr ""
"`#[no_mangle]` d√©sactive la modification du nom habituel de Rust, de sorte "
"que le symbole export√© sera simplement le nom de la fonction. Vous pouvez "
"√©galement utiliser `#[export_name = \"some_name\"]` pour sp√©cifier le nom "
"que vous voulez."

#: src/android/interoperability/cpp.md
#, fuzzy
msgid ""
"The [CXX crate](https://cxx.rs/) makes it possible to do safe "
"interoperability between Rust and C++."
msgstr ""
"La [caisse CXX](https://cxx.rs/) permet de faire une interop√©rabilit√© s√ªre "
"entre Rust et C++."

#: src/android/interoperability/cpp.md
#, fuzzy
msgid "The overall approach looks like this:"
msgstr "L'approche globale ressemble √† ceci:"

#: src/android/interoperability/cpp/bridge.md
msgid ""
"CXX relies on a description of the function signatures that will be exposed "
"from each language to the other. You provide this description using extern "
"blocks in a Rust module annotated with the `#[cxx::bridge]` attribute macro."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "\"org::blobstore\""
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "// Shared structs with fields visible to both languages.\n"
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/generated-cpp.md
msgid "// Rust types and signatures exposed to C++.\n"
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/rust-bridge.md
#: src/android/interoperability/cpp/generated-cpp.md
#: src/android/interoperability/cpp/rust-result.md
#: src/chromium/interoperability-with-cpp/example-bindings.md
#: src/chromium/interoperability-with-cpp/error-handling-qr.md
#: src/chromium/interoperability-with-cpp/error-handling-png.md
#, fuzzy
msgid "\"Rust\""
msgstr "Rustdoc"

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/cpp-bridge.md
msgid "// C++ types and signatures exposed to Rust.\n"
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/cpp-bridge.md
#: src/android/interoperability/cpp/cpp-exception.md
#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "\"C++\""
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/cpp-bridge.md
msgid "\"include/blobstore.h\""
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "The bridge is generally declared in an `ffi` module within your crate."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid ""
"From the declarations made in the bridge module, CXX will generate matching "
"Rust and C++ type/function definitions in order to expose those items to "
"both languages."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid ""
"To view the generated Rust code, use [cargo-expand](https://github.com/"
"dtolnay/cargo-expand) to view the expanded proc macro. For most of the "
"examples you would use `cargo expand ::ffi` to expand just the `ffi` module "
"(though this doesn't apply for Android projects)."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "To view the generated C++ code, look in `target/cxxbridge`."
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid "Rust Bridge Declarations"
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid "// Opaque type\n"
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid "// Method on `MyType`\n"
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
#, fuzzy
msgid "// Free function\n"
msgstr "Fonctions"

#: src/android/interoperability/cpp/rust-bridge.md
msgid ""
"Items declared in the `extern \"Rust\"` reference items that are in scope in "
"the parent module."
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid ""
"The CXX code generator uses your `extern \"Rust\"` section(s) to produce a C+"
"+ header file containing the corresponding C++ declarations. The generated "
"header has the same path as the Rust source file containing the bridge, "
"except with a .rs.h file extension."
msgstr ""

#: src/android/interoperability/cpp/generated-cpp.md
msgid "Results in (roughly) the following C++:"
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "C++ Bridge Declarations"
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "Results in (roughly) the following Rust:"
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "\"org$blobstore$cxxbridge1$new_blobstore_client\""
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "\"org$blobstore$cxxbridge1$BlobstoreClient$put\""
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid ""
"The programmer does not need to promise that the signatures they have typed "
"in are accurate. CXX performs static assertions that the signatures exactly "
"correspond with what is declared in C++."
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid ""
"`unsafe extern` blocks allow you to declare C++ functions that are safe to "
"call from Rust."
msgstr ""

#: src/android/interoperability/cpp/shared-types.md
msgid "// A=1, J=11, Q=12, K=13\n"
msgstr ""

#: src/android/interoperability/cpp/shared-types.md
msgid "Only C-like (unit) enums are supported."
msgstr ""

#: src/android/interoperability/cpp/shared-types.md
msgid ""
"A limited number of traits are supported for `#[derive()]` on shared types. "
"Corresponding functionality is also generated for the C++ code, e.g. if you "
"derive `Hash` also generates an implementation of `std::hash` for the "
"corresponding C++ type."
msgstr ""

#: src/android/interoperability/cpp/shared-enums.md
#, fuzzy
msgid "Generated Rust:"
msgstr "Rust non s√©curis√© (_unsafe_)"

#: src/android/interoperability/cpp/shared-enums.md
msgid "Generated C++:"
msgstr ""

#: src/android/interoperability/cpp/shared-enums.md
msgid ""
"On the Rust side, the code generated for shared enums is actually a struct "
"wrapping a numeric value. This is because it is not UB in C++ for an enum "
"class to hold a value different from all of the listed variants, and our "
"Rust representation needs to have the same behavior."
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid "\"fallible1 requires depth > 0\""
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid "\"Success!\""
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid ""
"Rust functions that return `Result` are translated to exceptions on the C++ "
"side."
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid ""
"The exception thrown will always be of type `rust::Error`, which primarily "
"exposes a way to get the error message string. The error message will come "
"from the error type's `Display` impl."
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid ""
"A panic unwinding from Rust to C++ will always cause the process to "
"immediately terminate."
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid "\"example/include/example.h\""
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid "\"Error: {}\""
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid ""
"C++ functions declared to return a `Result` will catch any thrown exception "
"on the C++ side and return it as an `Err` value to the calling Rust function."
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid ""
"If an exception is thrown from an extern \"C++\" function that is not "
"declared by the CXX bridge to return `Result`, the program calls C++'s `std::"
"terminate`. The behavior is equivalent to the same exception being thrown "
"through a `noexcept` C++ function."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "Rust Type"
msgstr "Rust by Example"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "C++ Type"
msgstr "Exemple C++"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::String`"
msgstr "`rust_bindgen`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`&str`"
msgstr "`&str`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::Str`"
msgstr "`rust_test`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`CxxString`"
msgstr "String"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`std::string`"
msgstr "String"

#: src/android/interoperability/cpp/type-mapping.md
msgid "`&[T]`/`&mut [T]`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::Slice`"
msgstr "`rust_ffi`"

#: src/android/interoperability/cpp/type-mapping.md
msgid "`rust::Box<T>`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid "`UniquePtr<T>`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid "`std::unique_ptr<T>`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`Vec<T>`"
msgstr "`Vec`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::Vec<T>`"
msgstr "`mpsc::R√©cepteur<T>`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`CxxVector<T>`"
msgstr "`Cellule<T>`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`std::vector<T>`"
msgstr "`mpsc::R√©cepteur<T>`"

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"These types can be used in the fields of shared structs and the arguments "
"and returns of extern functions."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"Note that Rust's `String` does not map directly to `std::string`. There are "
"a few reasons for this:"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"`std::string` does not uphold the UTF-8 invariant that `String` requires."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"The two types have different layouts in memory and so can't be passed "
"directly between languages."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"`std::string` requires move constructors that don't match Rust's move "
"semantics, so a `std::string` can't be passed by value to Rust."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-cpp-genrules.md
#: src/android/interoperability/cpp/android-build-rust.md
#, fuzzy
msgid "Building in Android"
msgstr "Rust pour Android"

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Create a `cc_library_static` to build the C++ library, including the CXX "
"generated header and source file."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"libcxx_test_cpp\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid "\"cxx_test.cpp\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid "\"cxx-bridge-header\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"libcxx_test_bridge_header\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"libcxx_test_bridge_code\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Point out that `libcxx_test_bridge_header` and `libcxx_test_bridge_code` are "
"the dependencies for the CXX-generated C++ bindings. We'll show how these "
"are setup on the next slide."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Note that you also need to depend on the `cxx-bridge-header` library in "
"order to pull in common CXX definitions."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Full docs for using CXX in Android can be found in [the Android docs]"
"(https://source.android.com/docs/setup/build/rust/building-rust-modules/"
"android-rust-patterns#rust-cpp-interop-using-cxx). You may want to share "
"that link with the class so that students know where they can find these "
"instructions again in the future."
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"Create two genrules: One to generate the CXX header, and one to generate the "
"CXX source file. These are then used as inputs to the `cc_library_static`."
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"// Generate a C++ header containing the C++ bindings\n"
"// to the Rust exported functions in lib.rs.\n"
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"cxxbridge\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"$(location cxxbridge) $(in) --header > $(out)\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"lib.rs\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"lib.rs.h\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "// Generate the C++ code that Rust calls into.\n"
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"$(location cxxbridge) $(in) > $(out)\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"lib.rs.cc\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"The `cxxbridge` tool is a standalone tool that generates the C++ side of the "
"bridge module. It is included in Android and available as a Soong tool."
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"By convention, if your Rust source file is `lib.rs` your header file will be "
"named `lib.rs.h` and your source file will be named `lib.rs.cc`. This naming "
"convention isn't enforced, though."
msgstr ""

#: src/android/interoperability/cpp/android-build-rust.md
msgid ""
"Create a `rust_binary` that depends on `libcxx` and your `cc_library_static`."
msgstr ""

#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"cxx_test\""
msgstr ""

#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"libcxx\""
msgstr ""

#: src/android/interoperability/java.md
#, fuzzy
msgid "Interoperability with Java"
msgstr "Interop√©rabilit√© avec Java"

#: src/android/interoperability/java.md
#, fuzzy
msgid ""
"Java can load shared objects via [Java Native Interface (JNI)](https://en."
"wikipedia.org/wiki/Java_Native_Interface). The [`jni` crate](https://docs.rs/"
"jni/) allows you to create a compatible library."
msgstr ""
"Java peut charger des objets partag√©s via [Java Native Interface (JNI)]"
"(https://en.wikipedia.org/wiki/Java_Native_Interface). Le [`jni` crate]"
"(https://docs.rs/jni/) vous permet de cr√©er une biblioth√®que compatible."

#: src/android/interoperability/java.md
#, fuzzy
msgid "First, we create a Rust function to export to Java:"
msgstr "Tout d'abord, nous cr√©ons une fonction Rust √† exporter vers Java¬†:"

#: src/android/interoperability/java.md
#, fuzzy
msgid "_interoperability/java/src/lib.rs_:"
msgstr "_interop√©rabilit√©/java/src/lib.rs_¬†:"

#: src/android/interoperability/java.md
msgid "//! Rust <-> Java FFI demo.\n"
msgstr ""

#: src/android/interoperability/java.md
msgid "/// HelloWorld::hello method implementation.\n"
msgstr ""

#: src/android/interoperability/java.md
msgid "\"system\""
msgstr ""

#: src/android/interoperability/java.md
msgid "\"Hello, {input}!\""
msgstr ""

#: src/android/interoperability/java.md
#, fuzzy
msgid "_interoperability/java/Android.bp_:"
msgstr "_interop√©rabilit√©/java/Android.bp_¬†:"

#: src/android/interoperability/java.md
msgid "\"libhello_jni\""
msgstr ""

#: src/android/interoperability/java.md
msgid "\"hello_jni\""
msgstr ""

#: src/android/interoperability/java.md
msgid "\"libjni\""
msgstr ""

#: src/android/interoperability/java.md
#, fuzzy
msgid "We then call this function from Java:"
msgstr "Enfin, nous pouvons appeler cette fonction depuis Java¬†:"

#: src/android/interoperability/java.md
#, fuzzy
msgid "_interoperability/java/HelloWorld.java_:"
msgstr "_interop√©rabilit√©/java/HelloWorld.java_¬†:"

#: src/android/interoperability/java.md
msgid "\"helloworld_jni\""
msgstr ""

#: src/android/interoperability/java.md
#, fuzzy
msgid "\"HelloWorld.java\""
msgstr "Bonjour le monde!"

#: src/android/interoperability/java.md
#, fuzzy
msgid "\"HelloWorld\""
msgstr "Bonjour le monde!"

#: src/android/interoperability/java.md
#, fuzzy
msgid "Finally, you can build, sync, and run the binary:"
msgstr "Enfin, vous pouvez cr√©er, synchroniser et ex√©cuter le binaire¬†:"

#: src/exercises/android/morning.md
#, fuzzy
msgid ""
"This is a group exercise: We will look at one of the projects you work with "
"and try to integrate some Rust into it. Some suggestions:"
msgstr ""
"Pour le dernier exercice, nous examinerons l'un des projets sur lesquels "
"vous travaillez. Laissez-nous regroupez-vous et faites-le ensemble. Quelques "
"suggestions:"

#: src/exercises/android/morning.md
#, fuzzy
msgid "Call your AIDL service with a client written in Rust."
msgstr "Appelez votre service AIDL avec un client √©crit en Rust."

#: src/exercises/android/morning.md
#, fuzzy
msgid "Move a function from your project to Rust and call it."
msgstr "D√©placez une fonction de votre projet vers Rust et appelez-la."

#: src/exercises/android/morning.md
#, fuzzy
msgid ""
"No solution is provided here since this is open-ended: it relies on someone "
"in the class having a piece of code which you can turn in to Rust on the fly."
msgstr ""
"Aucune solution n'est propos√©e ici car celle-ci est ouverte : elle repose "
"sur quelqu'un en la classe ayant un morceau de code que vous pouvez remettre "
"√† Rust √† la vol√©e."

#: src/chromium.md
#, fuzzy
msgid "Welcome to Rust in Chromium"
msgstr "Bienvenue au jour 1"

#: src/chromium.md
msgid ""
"Rust is supported for third-party libraries in Chromium, with first-party "
"glue code to connect between Rust and existing Chromium C++ code."
msgstr ""

#: src/chromium.md
msgid ""
"Today, we'll call into Rust to do something silly with strings. If you've "
"got a corner of the code where you're displaying a UTF8 string to the user, "
"feel free to follow this recipe in your part of the codebase instead of the "
"exact part we talk about."
msgstr ""

#: src/chromium/setup.md
msgid ""
"Make sure you can build and run Chromium. Any platform and set of build "
"flags is OK, so long as your code is relatively recent (commit position "
"1223636 onwards, corresponding to November 2023):"
msgstr ""

#: src/chromium/setup.md
msgid ""
"(A component, debug build is recommended for quickest iteration time. This "
"is the default!)"
msgstr ""

#: src/chromium/setup.md
msgid ""
"See [How to build Chromium](https://www.chromium.org/developers/how-tos/get-"
"the-code/) if you aren't already at that point. Be warned: setting up to "
"build Chromium takes time."
msgstr ""

#: src/chromium/setup.md
msgid "It's also recommended that you have Visual Studio code installed."
msgstr ""

#: src/chromium/setup.md
msgid "About the exercises"
msgstr ""

#: src/chromium/setup.md
msgid ""
"This part of the course has a series of exercises which build on each other. "
"We'll be doing them spread throughout the course instead of just at the end. "
"If you don't have time to complete a certain part, don't worry: you can "
"catch up in the next slot."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Rust community typically uses `cargo` and libraries from [crates.io](https://"
"crates.io/). Chromium is built using `gn` and `ninja` and a curated set of "
"dependencies."
msgstr ""

#: src/chromium/cargo.md
msgid "When writing code in Rust, your choices are:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Use `gn` and `ninja` with the help of the templates from `//build/rust/*."
"gni` (e.g. `rust_static_library` that we'll meet later). This uses "
"Chromium's audited toolchain and crates."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Use `cargo`, but [restrict yourself to Chromium's audited toolchain and "
"crates](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/"
"docs/rust.md#Using-cargo)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Use `cargo`, trusting a [toolchain](https://rustup.rs/) and/or [crates "
"downloaded from the internet](https://crates.io/)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"From here on we'll be focusing on `gn` and `ninja`, because this is how Rust "
"code can be built into the Chromium browser. At the same time, Cargo is an "
"important part of the Rust ecosystem and you should keep it in your toolbox."
msgstr ""

#: src/chromium/cargo.md
#, fuzzy
msgid "Mini exercise"
msgstr "Exercices"

#: src/chromium/cargo.md
msgid "Split into small groups and:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Brainstorm scenarios where `cargo` may offer an advantage and assess the "
"risk profile of these scenarios."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Discuss which tools, libraries, and groups of people need to be trusted when "
"using `gn` and `ninja`, offline `cargo`, etc."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Ask students to avoid peeking at the speaker notes before completing the "
"exercise. Assuming folks taking the course are physically together, ask them "
"to discuss in small groups of 3-4 people."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Notes/hints related to the first part of the exercise (\"scenarios where "
"Cargo may offer an advantage\"):"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"It's fantastic that when writing a tool, or prototyping a part of Chromium, "
"one has access to the rich ecosystem of crates.io libraries. There is a "
"crate for almost anything and they are usually quite pleasant to use. "
"(`clap` for command-line parsing, `serde` for serializing/deserializing to/"
"from various formats, `itertools` for working with iterators, etc.)."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`cargo` makes it easy to try a library (just add a single line to `Cargo."
"toml` and start writing code)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"It may be worth comparing how CPAN helped make `perl` a popular choice. Or "
"comparing with `python` + `pip`."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Development experience is made really nice not only by core Rust tools (e.g. "
"using `rustup` to switch to a different `rustc` version when testing a crate "
"that needs to work on nightly, current stable, and older stable) but also by "
"an ecosystem of third-party tools (e.g. Mozilla provides `cargo vet` for "
"streamlining and sharing security audits; `criterion` crate gives a "
"streamlined way to run benchmarks)."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`cargo` makes it easy to add a tool via `cargo install --locked cargo-vet`."
msgstr ""

#: src/chromium/cargo.md
msgid "It may be worth comparing with Chrome Extensions or VScode extensions."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Broad, generic examples of projects where `cargo` may be the right choice:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Perhaps surprisingly, Rust is becoming increasingly popular in the industry "
"for writing command line tools. The breadth and ergonomics of libraries is "
"comparable to Python, while being more robust (thanks to the rich "
"typesystem) and running faster (as a compiled, rather than interpreted "
"language)."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Participating in the Rust ecosystem requires using standard Rust tools like "
"Cargo. Libraries that want to get external contributions, and want to be "
"used outside of Chromium (e.g. in Bazel or Android/Soong build environments) "
"should probably use Cargo."
msgstr ""

#: src/chromium/cargo.md
msgid "Examples of Chromium-related projects that are `cargo`\\-based:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`serde_json_lenient` (experimented with in other parts of Google which "
"resulted in PRs with performance improvements)"
msgstr ""

#: src/chromium/cargo.md
msgid "Fontations libraries like `font-types`"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`gnrt` tool (we will meet it later in the course) which depends on `clap` "
"for command-line parsing and on `toml` for configuration files."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Disclaimer: a unique reason for using `cargo` was unavailability of `gn` "
"when building and bootstrapping Rust standard library when building Rust "
"toolchain.)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`run_gnrt.py` uses Chromium's copy of `cargo` and `rustc`. `gnrt` depends on "
"third-party libraries downloaded from the internet, by `run_gnrt.py` asks "
"`cargo` that only `--locked` content is allowed via `Cargo.lock`.)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Students may identify the following items as being implicitly or explicitly "
"trusted:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`rustc` (the Rust compiler) which in turn depends on the LLVM libraries, the "
"Clang compiler, the `rustc` sources (fetched from GitHub, reviewed by Rust "
"compiler team), binary Rust compiler downloaded for bootstrapping"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`rustup` (it may be worth pointing out that `rustup` is developed under the "
"umbrella of the https://github.com/rust-lang/ organization - same as `rustc`)"
msgstr ""

#: src/chromium/cargo.md
msgid "`cargo`, `rustfmt`, etc."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Various internal infrastructure (bots that build `rustc`, system for "
"distributing the prebuilt toolchain to Chromium engineers, etc.)"
msgstr ""

#: src/chromium/cargo.md
msgid "Cargo tools like `cargo audit`, `cargo vet`, etc."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Rust libraries vendored into `//third_party/rust` (audited by "
"security@chromium.org)"
msgstr ""

#: src/chromium/cargo.md
msgid "Other Rust libraries (some niche, some quite popular and commonly used)"
msgstr ""

#: src/chromium/policy.md
msgid "Chromium Rust policy"
msgstr ""

#: src/chromium/policy.md
msgid ""
"Chromium does not yet allow first-party Rust except in rare cases as "
"approved by Chromium's [Area Tech Leads](https://source.chromium.org/"
"chromium/chromium/src/+/main:ATL_OWNERS)."
msgstr ""

#: src/chromium/policy.md
msgid ""
"Chromium's policy on third party libraries is outlined [here](https://"
"chromium.googlesource.com/chromium/src/+/main/docs/adding_to_third_party."
"md#rust) - Rust is allowed for third party libraries under various "
"circumstances, including if they're the best option for performance or for "
"security."
msgstr ""

#: src/chromium/policy.md
msgid ""
"Very few Rust libraries directly expose a C/C++ API, so that means that "
"nearly all such libraries will require a small amount of first-party glue "
"code."
msgstr ""

#: src/chromium/policy.md
msgid ""
"```bob\n"
"\"C++\"                           Rust\n"
".- - - - - - - - - -.           .- - - - - - - - - - - - - - - - - - - - - - "
"-.\n"
":                   :           :                                             :\n"
": Existing Chromium :           :  Chromium Rust              Existing "
"Rust   :\n"
": \"C++\"             :           :  \"wrapper\"                  "
"crate           :\n"
": +---------------+ :           : +----------------+          +-------------"
"+ :\n"
": |               | :           : |                |          |             "
"| :\n"
": |         o-----+-+-----------+-+->            o-+----------+-->          "
"| :\n"
": |               | : Language  : |                | Crate    |             "
"| :\n"
": +---------------+ : boundary  : +----------------+ API      +-------------"
"+ :\n"
":                   :           :                                             :\n"
"`- - - - - - - - - -'           `- - - - - - - - - - - - - - - - - - - - - - "
"-'\n"
"```"
msgstr ""

#: src/chromium/policy.md
msgid ""
"First-party Rust glue code for a particular third-party crate should "
"normally be kept in `third_party/rust/<crate>/<version>/wrapper`."
msgstr ""

#: src/chromium/policy.md
msgid "Because of this, today's course will be heavily focused on:"
msgstr ""

#: src/chromium/policy.md
msgid "Bringing in third-party Rust libraries (\"crates\")"
msgstr ""

#: src/chromium/policy.md
msgid "Writing glue code to be able to use those crates from Chromium C++."
msgstr ""

#: src/chromium/policy.md
msgid "If this policy changes over time, the course will evolve to keep up."
msgstr ""

#: src/chromium/build-rules.md
#, fuzzy
msgid "Build rules"
msgstr "R√®gles de compilation"

#: src/chromium/build-rules.md
msgid ""
"Rust code is usually built using `cargo`. Chromium builds with `gn` and "
"`ninja` for efficiency --- its static rules allow maximum parallelism. Rust "
"is no exception."
msgstr ""

#: src/chromium/build-rules.md
msgid "Adding Rust code to Chromium"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"In some existing Chromium `BUILD.gn` file, declare a `rust_static_library`:"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"You can also add `deps` on other Rust targets. Later we'll use this to "
"depend upon third party code."
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"You must specify _both_ the crate root, _and_ a full list of sources. The "
"`crate_root` is the file given to the Rust compiler representing the root "
"file of the compilation unit --- typically `lib.rs`. `sources` is a complete "
"list of all source files which `ninja` needs in order to determine when "
"rebuilds are necessary."
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"(There's no such thing as a Rust `source_set`, because in Rust, an entire "
"crate is a compilation unit. A `static_library` is the smallest unit.)"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"Students might be wondering why we need a gn template, rather than using "
"[gn's built-in support for Rust static libraries](https://gn.googlesource."
"com/gn/+/main/docs/reference.md#func_static_library). The answer is that "
"this template provides support for CXX interop, Rust features, and unit "
"tests, some of which we'll use later."
msgstr ""

#: src/chromium/build-rules/unsafe.md
msgid "Including `unsafe` Rust Code"
msgstr ""

#: src/chromium/build-rules/unsafe.md
msgid ""
"Unsafe Rust code is forbidden in `rust_static_library` by default --- it "
"won't compile. If you need unsafe Rust code, add `allow_unsafe = true` to "
"the gn target. (Later in the course we'll see circumstances where this is "
"necessary.)"
msgstr ""

#: src/chromium/build-rules/unsafe.md
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [\n"
"    \"lib.rs\",\n"
"    \"hippopotamus.rs\"\n"
"  ]\n"
"  allow_unsafe = true\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules/depending.md
msgid "Simply add the above target to the `deps` of some Chromium C++ target."
msgstr ""

#: src/chromium/build-rules/depending.md
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"}\n"
"\n"
"# or source_set, static_library etc.\n"
"component(\"preexisting_cpp\") {\n"
"  deps = [ \":my_rust_lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Types are elided in Rust code, which makes a good IDE even more useful than "
"for C++. Visual Studio code works well for Rust in Chromium. To use it,"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Ensure your VSCode has the `rust-analyzer` extension, not earlier forms of "
"Rust support"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"`gn gen out/Debug --export-rust-project` (or equivalent for your output "
"directory)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid "`ln -s out/Debug/rust-project.json rust-project.json`"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"A demo of some of the code annotation and exploration features of rust-"
"analyzer might be beneficial if the audience are naturally skeptical of IDEs."
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"The following steps may help with the demo (but feel free to instead use a "
"piece of Chromium-related Rust that you are most familiar with):"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid "Open `components/qr_code_generator/qr_code_generator_ffi_glue.rs`"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Place the cursor over the `QrCode::new` call (around line 26) in "
"\\`qr_code_generator_ffi_glue.rs"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **show documentation** (typical bindings: vscode = ctrl k i; vim/CoC = "
"K)."
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **go to definition** (typical bindings: vscode = F12; vim/CoC = g d). "
"(This will take you to `//third_party/rust/.../qr_code-.../src/lib.rs`.)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **outline** and navigate to the `QrCode::with_bits` method (around line "
"164; the outline is in the file explorer pane in vscode; typical vim/CoC "
"bindings = space o)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **type annotations** (there are quote a few nice examples in the "
"`QrCode::with_bits` method)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"It may be worth pointing out that `gn gen ... --export-rust-project` will "
"need to be rerun after editing `BUILD.gn` files (which we will do a few "
"times throughout the exercises in this session)."
msgstr ""

#: src/exercises/chromium/build-rules.md
#, fuzzy
msgid "Build rules exercise"
msgstr "R√®gles de compilation"

#: src/exercises/chromium/build-rules.md
msgid ""
"In your Chromium build, add a new Rust target to `//ui/base/BUILD.gn` "
"containing:"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"**Important**: note that `no_mangle` here is considered a type of unsafety "
"by the Rust compiler, so you'll need to to allow unsafe code in your `gn` "
"target."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Add this new Rust target as a dependency of `//ui/base:base`. Declare this "
"function at the top of `ui/base/resource/resource_bundle.cc` (later, we'll "
"see how this can be automated by bindings generation tools):"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Call this function from somewhere in `ui/base/resource/resource_bundle.cc` - "
"we suggest the top of `ResourceBundle::MaybeMangleLocalizedString`. Build "
"and run Chromium, and ensure that \"Hello from Rust!\" is printed lots of "
"times."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"If you use VSCode, now set up Rust to work well in VSCode. It will be useful "
"in subsequent exercises. If you've succeeded, you will be able to use right-"
"click \"Go to definition\" on `println!`."
msgstr ""

#: src/exercises/chromium/build-rules.md
#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Where to find help"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"The options available to the [`rust_static_library` gn template](https://"
"source.chromium.org/chromium/chromium/src/+/main:build/rust/"
"rust_static_library.gni;l=16)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Information about [`#[no_mangle]`](https://doc.rust-lang.org/beta/reference/"
"abi.html#the-no_mangle-attribute)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Information about [`extern \"C\"`](https://doc.rust-lang.org/std/keyword."
"extern.html)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Information about gn's [`--export-rust-project`](https://gn.googlesource.com/"
"gn/+/main/docs/reference.md#compilation-database) switch"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"[How to install rust-analyzer in VSCode](https://code.visualstudio.com/docs/"
"languages/rust)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"This example is unusual because it boils down to the lowest-common-"
"denominator interop language, C. Both C++ and Rust can natively declare and "
"call C ABI functions. Later in the course, we'll connect C++ directly to "
"Rust."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"`allow_unsafe = true` is required here because `#[no_mangle]` might allow "
"Rust to generate two functions with the same name, and Rust can no longer "
"guarantee that the right one is called."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"If you need a pure Rust executable, you can also do that using the "
"`rust_executable` gn template."
msgstr ""

#: src/chromium/testing.md
msgid ""
"Rust community typically authors unit tests in a module placed in the same "
"source file as the code being tested. This was covered [earlier](../testing."
"md) in the course and looks like this:"
msgstr ""

#: src/chromium/testing.md
msgid ""
"In Chromium we place unit tests in a separate source file and we continue to "
"follow this practice for Rust --- this makes tests consistently discoverable "
"and helps to avoid rebuilding `.rs` files a second time (in the `test` "
"configuration)."
msgstr ""

#: src/chromium/testing.md
msgid ""
"This results in the following options for testing Rust code in Chromium:"
msgstr ""

#: src/chromium/testing.md
msgid ""
"Native Rust tests (i.e. `#[test]`). Discouraged outside of `//third_party/"
"rust`."
msgstr ""

#: src/chromium/testing.md
msgid ""
"`gtest` tests authored in C++ and exercising Rust via FFI calls. Sufficient "
"when Rust code is just a thin FFI layer and the existing unit tests provide "
"sufficient coverage for the feature."
msgstr ""

#: src/chromium/testing.md
msgid ""
"`gtest` tests authored in Rust and using the crate under test through its "
"public API (using `pub mod for_testing { ... }` if needed). This is the "
"subject of the next few slides."
msgstr ""

#: src/chromium/testing.md
msgid ""
"Mention that native Rust tests of third-party crates should eventually be "
"exercised by Chromium bots. (Such testing is needed rarely --- only after "
"adding or updating third-party crates.)"
msgstr ""

#: src/chromium/testing.md
msgid ""
"Some examples may help illustrate when C++ `gtest` vs Rust `gtest` should be "
"used:"
msgstr ""

#: src/chromium/testing.md
msgid ""
"QR has very little functionality in the first-party Rust layer (it's just a "
"thin FFI glue) and therefore uses the existing C++ unit tests for testing "
"both the C++ and the Rust implementation (parameterizing the tests so they "
"enable or disable Rust using a `ScopedFeatureList`)."
msgstr ""

#: src/chromium/testing.md
msgid ""
"Hypothetical/WIP PNG integration may need to implement memory-safe "
"implementation of pixel transformations that are provided by `libpng` but "
"missing in the `png` crate - e.g. RGBA => BGRA, or gamma correction. Such "
"functionality may benefit from separate tests authored in Rust."
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
msgid ""
"The [`rust_gtest_interop`](https://chromium.googlesource.com/chromium/src/+/"
"main/testing/rust_gtest_interop/README.md) library provides a way to:"
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
msgid ""
"Use a Rust function as a `gtest` testcase (using the `#[gtest(...)]` "
"attribute)"
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
msgid ""
"Use `expect_eq!` and similar macros (similar to `assert_eq!` but not "
"panicking and not terminating the test when the assertion fails)."
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
#, fuzzy
msgid "Example:"
msgstr "Exemple"

#: src/chromium/testing/build-gn.md
msgid ""
"The simplest way to build Rust `gtest` tests is to add them to an existing "
"test binary that already contains tests authored in C++. For example:"
msgstr ""

#: src/chromium/testing/build-gn.md
msgid ""
"```gn\n"
"test(\"ui_base_unittests\") {\n"
"  ...\n"
"  sources += [ \"my_rust_lib_unittest.rs\" ]\n"
"  deps += [ \":my_rust_lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/testing/build-gn.md
msgid ""
"Authoring Rust tests in a separate `static_library` also works, but requires "
"manually declaring the dependency on the support libraries:"
msgstr ""

#: src/chromium/testing/build-gn.md
msgid ""
"```gn\n"
"rust_static_library(\"my_rust_lib_unittests\") {\n"
"  testonly = true\n"
"  is_gtest_unittests = true\n"
"  crate_root = \"my_rust_lib_unittest.rs\"\n"
"  sources = [ \"my_rust_lib_unittest.rs\" ]\n"
"  deps = [\n"
"    \":my_rust_lib\",\n"
"    \"//testing/rust_gtest_interop\",\n"
"  ]\n"
"}\n"
"\n"
"test(\"ui_base_unittests\") {\n"
"  ...\n"
"  deps += [ \":my_rust_lib_unittests\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid ""
"After adding `:my_rust_lib` to GN `deps`, we still need to learn how to "
"import and use `my_rust_lib` from `my_rust_lib_unittest.rs`. We haven't "
"provided an explicit `crate_name` for `my_rust_lib` so its crate name is "
"computed based on the full target path and name. Fortunately we can avoid "
"working with such an unwieldy name by using the `chromium::import!` macro "
"from the automatically-imported `chromium` crate:"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid "\"//ui/base:my_rust_lib\""
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid "Under the covers the macro expands to something similar to:"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid ""
"More information can be found in [the doc comment](https://source.chromium."
"org/chromium/chromium/src/+/main:build/rust/chromium_prelude/"
"chromium_prelude.rs?q=f:chromium_prelude.rs%20pub.use.*%5Cbimport%5Cb;%20-f:"
"third_party&ss=chromium%2Fchromium%2Fsrc) of the `chromium::import` macro."
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid ""
"`rust_static_library` supports specifying an explicit name via `crate_name` "
"property, but doing this is discouraged. And it is discouraged because the "
"crate name has to be globally unique. crates.io guarantees uniqueness of its "
"crate names so `cargo_crate` GN targets (generated by the `gnrt` tool "
"covered in a later section) use short crate names."
msgstr ""

#: src/exercises/chromium/testing.md
#, fuzzy
msgid "Testing exercise"
msgstr "Exercices"

#: src/exercises/chromium/testing.md
msgid "Time for another exercise!"
msgstr ""

#: src/exercises/chromium/testing.md
msgid "In your Chromium build:"
msgstr ""

#: src/exercises/chromium/testing.md
msgid ""
"Add a testable function next to `hello_from_rust`. Some suggestions: adding "
"two integers received as arguments, computing the nth Fibonacci number, "
"summing integers in a slice, etc."
msgstr ""

#: src/exercises/chromium/testing.md
msgid "Add a separate `..._unittest.rs` file with a test for the new function."
msgstr ""

#: src/exercises/chromium/testing.md
msgid "Add the new tests to `BUILD.gn`."
msgstr ""

#: src/exercises/chromium/testing.md
msgid "Build the tests, run them, and verify that the new test works."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"The Rust community offers multiple options for C++/Rust interop, with new "
"tools being developed all the time. At the moment, Chromium uses a tool "
"called CXX."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"You describe your whole language boundary in an interface definition "
"language (which looks a lot like Rust) and then CXX tools generate "
"declarations for functions and types in both Rust and C++."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
#, fuzzy
msgid ""
"See the [CXX tutorial](https://cxx.rs/tutorial.html) for a full example of "
"using this."
msgstr ""
"Voir le \\[tutoriel CXX\\] [2](https://cxx.rs/tutorial.html) pour un exemple "
"complet d'utilisation."

#: src/chromium/interoperability-with-cpp.md
msgid ""
"Talk through the diagram. Explain that behind the scenes, this is doing just "
"the same as you previously did. Point out that automating the process has "
"the following benefits:"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"The tool guarantees that the C++ and Rust sides match (e.g. you get compile "
"errors if the `#[cxx::bridge]` doesn't match the actual C++ or Rust "
"definitions, but with out-of-sync manual bindings you'd get Undefined "
"Behavior)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"The tool automates generation of FFI thunks (small, C-ABI-compatible, free "
"functions) for non-C features (e.g. enabling FFI calls into Rust or C++ "
"methods; manual bindings would require authoring such top-level, free "
"functions manually)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid "The tool and the library can handle a set of core types - for example:"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"`&[T]` can be passed across the FFI boundary, even though it doesn't "
"guarantee any particular ABI or memory layout. With manual bindings `std::"
"span<T>` / `&[T]` have to be manually destructured and rebuilt out of a "
"pointer and length - this is error-prone given that each language represents "
"empty slices slightly differently)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"Smart pointers like `std::unique_ptr<T>`, `std::shared_ptr<T>`, and/or `Box` "
"are natively supported. With manual bindings, one would have to pass C-ABI-"
"compatible raw pointers, which would increase lifetime and memory-safety "
"risks."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"`rust::String` and `CxxString` types understand and maintain differences in "
"string representation across the languages (e.g. `rust::String::lossy` can "
"build a Rust string from non-UTF8 input and `rust::String::c_str` can NUL-"
"terminate a string)."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid ""
"CXX requires that the whole C++/Rust boundary is declared in `cxx::bridge` "
"modules inside `.rs` source code."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "\"example/include/blobstore.h\""
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "// Definitions of Rust types and functions go here\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Point out:"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid ""
"Although this looks like a regular Rust `mod`, the `#[cxx::bridge]` "
"procedural macro does complex things to it. The generated code is quite a "
"bit more sophisticated - though this does still result in a `mod` called "
"`ffi` in your code."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Native support for C++'s `std::unique_ptr` in Rust"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
#, fuzzy
msgid "Native support for Rust slices in C++"
msgstr "Support int√©gr√© pour les tests."

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Calls from C++ to Rust, and Rust types (in the top part)"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Calls from Rust to C++, and C++ types (in the bottom part)"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid ""
"**Common misconception**: It _looks_ like a C++ header is being parsed by "
"Rust, but this is misleading. This header is never interpreted by Rust, but "
"simply `#include`d in the generated C++ code for the benefit of C++ "
"compilers."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"By far the most useful page when using CXX is the [type reference](https://"
"cxx.rs/bindings.html)."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid "CXX fundamentally suits cases where:"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"Your Rust-C++ interface is sufficiently simple that you can declare all of "
"it."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"You're using only the types natively supported by CXX already, for example "
"`std::unique_ptr`, `std::string`, `&[u8]` etc."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"It has many limitations --- for example lack of support for Rust's `Option` "
"type."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"These limitations constrain us to using Rust in Chromium only for well "
"isolated \"leaf nodes\" rather than for arbitrary Rust-C++ interop. When "
"considering a use-case for Rust in Chromium, a good starting point is to "
"draft the CXX bindings for the language boundary to see if it appears simple "
"enough."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"You should also discuss some of the other sticky points with CXX, for "
"example:"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"Its error handling is based around C++ exceptions (given on the next slide)"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid "Function pointers are awkward to use."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"CXX's [support for `Result<T,E>`](https://cxx.rs/binding/result.html) relies "
"on C++ exceptions, so we can't use that in Chromium. Alternatives:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid "The `T` part of `Result<T, E>` can be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Returned via out parameters (e.g. via `&mut T`). This requires that `T` can "
"be passed across the FFI boundary - for example `T` has to be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid "A primitive type (like `u32` or `usize`)"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"A type natively supported by `cxx` (like `UniquePtr<T>`) that has a suitable "
"default value to use in a failure case (_unlike_ `Box<T>`)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Retained on the Rust side, and exposed via reference. This may be needed "
"when `T` is a Rust type, which cannot be passed across the FFI boundary, and "
"cannot be stored in `UniquePtr<T>`."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid "The `E` part of `Result<T, E>` can be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Returned as a boolean (e.g. `true` representing success, and `false` "
"representing failure)"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Preserving error details is in theory possible, but so far hasn't been "
"needed in practice."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
#, fuzzy
msgid "CXX Error Handling: QR Example"
msgstr "Gestion des erreurs"

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"The QR code generator is [an example](https://source.chromium.org/chromium/"
"chromium/src/+/main:components/qr_code_generator/qr_code_generator_ffi_glue."
"rs;l=13-18;drc=7bf1b75b910ca430501b9c6a74c1d18a0223ecca) where a boolean is "
"used to communicate success vs failure, and where the successful result can "
"be passed across the FFI boundary:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid "\"qr_code_generator\""
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"Students may be curious about the semantics of the `out_qr_size` output. "
"This is not the size of the vector, but the size of the QR code (and "
"admittedly it is a bit redundant - this is the square root of the size of "
"the vector)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"It may be worth pointing out the importance of initializing `out_qr_size` "
"before calling into the Rust function. Creation of a Rust reference that "
"points to uninitialized memory results in Undefined Behavior (unlike in C++, "
"when only the act of dereferencing such memory results in UB)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"If students ask about `Pin`, then explain why CXX needs it for mutable "
"references to C++ data: the answer is that C++ data can‚Äôt be moved around "
"like Rust data, because it may contain self-referential pointers."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
#, fuzzy
msgid "CXX Error Handling: PNG Example"
msgstr "Gestion des erreurs"

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"A prototype of a PNG decoder illustrates what can be done when the "
"successful result cannot be passed across the FFI boundary:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid "\"gfx::rust_bindings\""
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"/// This returns an FFI-friendly equivalent of `Result<PngReader<'a>,\n"
"        /// ()>`.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid "/// C++ bindings for the `crate::png::ResultOfPngReader` type.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid "/// C++ bindings for the `crate::png::PngReader` type.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"`PngReader` and `ResultOfPngReader` are Rust types --- objects of these "
"types cannot cross the FFI boundary without indirection of a `Box<T>`. We "
"can't have an `out_parameter: &mut PngReader`, because CXX doesn't allow C++ "
"to store Rust objects by value."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"This example illustrates that even though CXX doesn't support arbitrary "
"generics nor templates, we can still pass them across the FFI boundary by "
"manually specializing / monomorphizing them into a non-generic type. In the "
"example `ResultOfPngReader` is a non-generic type that forwards into "
"appropriate methods of `Result<T, E>` (e.g. into `is_err`, `unwrap`, and/or "
"`as_mut`)."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "Using cxx in Chromium"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"In Chromium, we define an independent `#[cxx::bridge] mod` for each leaf-"
"node where we want to use Rust. You'd typically have one for each "
"`rust_static_library`. Just add"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"```gn\n"
"cxx_bindings = [ \"my_rust_file.rs\" ]\n"
"   # list of files containing #[cxx::bridge], not all source files\n"
"allow_unsafe = true\n"
"```"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"to your existing `rust_static_library` target alongside `crate_root` and "
"`sources`."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "C++ headers will be generated at a sensible location, so you can just"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "\"ui/base/my_rust_file.rs.h\""
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"You will find some utility functions in `//base` to convert to/from Chromium "
"C++ types to CXX Rust types --- for example [`SpanToRustSlice`](https://"
"source.chromium.org/chromium/chromium/src/+/main:base/containers/span_rust.h;"
"l=21)."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "Students may ask --- why do we still need `allow_unsafe = true`?"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"The broad answer is that no C/C++ code is \"safe\" by the normal Rust "
"standards. Calling back and forth to C/C++ from Rust may do arbitrary things "
"to memory, and compromise the safety of Rust's own data layouts. Presence of "
"_too many_ `unsafe` keywords in C/C++ interop can harm the signal-to-noise "
"ratio of such a keyword, and is [controversial](https://steveklabnik.com/"
"writing/the-cxx-debate), but strictly, bringing any foreign code into a Rust "
"binary can cause unexpected behavior from Rust's perspective."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"The narrow answer lies in the diagram at the top of [this page](../"
"interoperability-with-cpp.md) --- behind the scenes, CXX generates Rust "
"`unsafe` and `extern \"C\"` functions just like we did manually in the "
"previous section."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
#, fuzzy
msgid "Exercise: Interoperability with C++"
msgstr "Interop√©rabilit√© avec C"

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Part one"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"In the Rust file you previously created, add a `#[cxx::bridge]` which "
"specifies a single function, to be called from C++, called "
"`hello_from_rust`, taking no parameters and returning no value."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Modify your previous `hello_from_rust` function to remove `extern \"C\"` and "
"`#[no_mangle]`. This is now just a standard Rust function."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Modify your `gn` target to build these bindings."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"In your C++ code, remove the forward-declaration of `hello_from_rust`. "
"Instead, include the generated header file."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Build and run!"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Part two"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"It's a good idea to play with CXX a little. It helps you think about how "
"flexible Rust in Chromium actually is."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
#, fuzzy
msgid "Some things to try:"
msgstr "Quelques notes:"

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Call back into C++ from Rust. You will need:"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"An additional header file which you can `include!` from your `cxx::bridge`. "
"You'll need to declare your C++ function in that new header file."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"An `unsafe` block to call such a function, or alternatively specify the "
"`unsafe` keyword in your `#[cxx::bridge]` [as described here](https://cxx.rs/"
"extern-c++.html#functions-and-member-functions)."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"You may also need to `#include \"third_party/rust/cxx/v1/crate/include/cxx."
"h\"`"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Pass a C++ string from C++ into Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Pass a reference to a C++ object into Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Intentionally get the Rust function signatures mismatched from the `#[cxx::"
"bridge]`, and get used to the errors you see."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Intentionally get the C++ function signatures mismatched from the `#[cxx::"
"bridge]`, and get used to the errors you see."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Pass a `std::unique_ptr` of some type from C++ into Rust, so that Rust can "
"own some C++ object."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Create a Rust object and pass it into C++, so that C++ owns it. (Hint: you "
"need a `Box`)."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Declare some methods on a C++ type. Call them from Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Declare some methods on a Rust type. Call them from C++."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Part three"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Now you understand the strengths and limitations of CXX interop, think of a "
"couple of use-cases for Rust in Chromium where the interface would be "
"sufficiently simple. Sketch how you might define that interface."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "The [`cxx` binding reference](https://cxx.rs/bindings.html)"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"The [`rust_static_library` gn template](https://source.chromium.org/chromium/"
"chromium/src/+/main:build/rust/rust_static_library.gni;l=16)"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Some of the questions you may encounter:"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"I'm seeing a problem initializing a variable of type X with type Y, where X "
"and Y are both function types. This is because your C++ function doesn't "
"quite match the declaration in your `cxx::bridge`."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"I seem to be able to freely convert C++ references into Rust references. "
"Doesn't that risk UB? For CXX's _opaque_ types, no, because they are zero-"
"sized. For CXX trivial types yes, it's _possible_ to cause UB, although "
"CXX's design makes it quite difficult to craft such an example."
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid ""
"Rust libraries are called \"crates\" and are found at [crates.io](https://"
"crates.io). It's _very easy_ for Rust crates to depend upon one another. So "
"they do!"
msgstr ""

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "C++ library"
msgstr "Biblioth√®que"

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "Rust crate"
msgstr "√âcosyst√®me de Rust"

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "Build system"
msgstr "√âcosyst√®me de Rust"

#: src/chromium/adding-third-party-crates.md
msgid "Lots"
msgstr ""

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "Consistent: `Cargo.toml`"
msgstr "Vous pouvez utiliser le fichier `Cargo.toml` suivant¬†:"

#: src/chromium/adding-third-party-crates.md
msgid "Typical library size"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Large-ish"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Small"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Transitive dependencies"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Few"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "For a Chromium engineer, this has pros and cons:"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid ""
"All crates use a common build system so we can automate their inclusion into "
"Chromium..."
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid ""
"... but, crates typically have transitive dependencies, so you will likely "
"have to bring in multiple libraries."
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "We'll discuss:"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "How to put a crate in the Chromium source code tree"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "How to make `gn` build rules for it"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "How to audit its source code for sufficient safety."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid "Configuring the `Cargo.toml` file to add crates"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"Chromium has a single set of centrally-managed direct crate dependencies. "
"These are managed through a single [`Cargo.toml`](https://source.chromium."
"org/chromium/chromium/src/+/main:third_party/rust/chromium_crates_io/Cargo."
"toml):"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"```toml\n"
"[dependencies]\n"
"bitflags = \"1\"\n"
"cfg-if = \"1\"\n"
"cxx = \"1\"\n"
"# lots more...\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"As with any other `Cargo.toml`, you can specify [more details about the "
"dependencies](https://doc.rust-lang.org/cargo/reference/specifying-"
"dependencies.html) --- most commonly, you'll want to specify the `features` "
"that you wish to enable in the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"When adding a crate to Chromium, you'll often need to provide some extra "
"information in an additional file, `gnrt_config.toml`, which we'll meet next."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"Alongside `Cargo.toml` is [`gnrt_config.toml`](https://source.chromium.org/"
"chromium/chromium/src/+/main:third_party/rust/chromium_crates_io/gnrt_config."
"toml). This contains Chromium-specific extensions to crate handling."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"If you add a new crate, you should specify at least the `group`. This is one "
"of:"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid "For instance,"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"Depending on the crate source code layout, you may also need to use this "
"file to specify where its `LICENSE` file(s) can be found."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"Later, we'll see some other things you will need to configure in this file "
"to resolve problems."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"A tool called `gnrt` knows how to download crates and how to generate `BUILD."
"gn` rules."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid "To start, download the crate you want like this:"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"Although the `gnrt` tool is part of the Chromium source code, by running "
"this command you will be downloading and running its dependencies from "
"`crates.io`. See [the earlier section](../cargo.md) discussing this security "
"decision."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid "This `vendor` command may download:"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
#, fuzzy
msgid "Your crate"
msgstr "Crates utiles"

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid "Direct and transitive dependencies"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"New versions of other crates, as required by `cargo` to resolve the complete "
"set of crates required by Chromium."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"Chromium maintains patches for some crates, kept in `//third_party/rust/"
"chromium_crates_io/patches`. These will be reapplied automatically, but if "
"patching fails you may need to take manual action."
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"Once you've downloaded the crate, generate the `BUILD.gn` files like this:"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid "Now run `git status`. You should find:"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"At least one new crate source code in `third_party/rust/chromium_crates_io/"
"vendor`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"At least one new `BUILD.gn` in `third_party/rust/<crate name>/v<major semver "
"version>`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid "An appropriate `README.chromium`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
#, fuzzy
msgid ""
"The \"major semver version\" is a [Rust \"semver\" version number](https://"
"doc.rust-lang.org/cargo/reference/semver.html)."
msgstr ""
"Voir la [Rust Reference](https://doc.rust-lang.org/reference/type-layout."
"html)."

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"Take a close look, especially at the things generated in `third_party/rust`."
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"Talk a little about semver --- and specifically the way that in Chromium "
"it's to allow multiple incompatible versions of a crate, which is "
"discouraged but sometimes necessary in the Cargo ecosystem."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid ""
"If your build fails, it may be because of a `build.rs`: programs which do "
"arbitrary things at build time. This is fundamentally at odds with the "
"design of `gn` and `ninja` which aim for static, deterministic, build rules "
"to maximize parallelism and repeatability of builds."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid ""
"Some `build.rs` actions are automatically supported; others require action:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "build script effect"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Supported by our gn templates"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Work required by you"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Checking rustc version to configure features on and off"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "None"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Checking platform or CPU to configure features on and off"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
#, fuzzy
msgid "Generating code"
msgstr "G√©n√©riques"

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Yes - specify in `gnrt_config.toml`"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Building C/C++"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Patch around it"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Arbitrary other actions"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid ""
"Fortunately, most crates don't contain a build script, and fortunately, most "
"build scripts only do the top two actions."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"If `ninja` complains about missing files, check the `build.rs` to see if it "
"writes source code files."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"If so, modify [`gnrt_config.toml`](../configuring-gnrt-config-toml.md) to "
"add `build-script-outputs` to the crate. If this is a transitive dependency, "
"that is, one on which Chromium code should not directly depend, also add "
"`allow-first-party-usage=false`. There are several examples already in that "
"file:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"```toml\n"
"[crate.unicode-linebreak]\n"
"allow-first-party-usage = false\n"
"build-script-outputs = [\"tables.rs\"]\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"Now rerun [`gnrt.py -- gen`](../generating-gn-build-rules.md) to regenerate "
"`BUILD.gn` files to inform ninja that this particular output file is input "
"to subsequent build steps."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid ""
"Some crates use the [`cc`](https://crates.io/crates/cc) crate to build and "
"link C/C++ libraries. Other crates parse C/C++ using [`bindgen`](https://"
"crates.io/crates/bindgen) within their build scripts. These actions can't be "
"supported in a Chromium context --- our gn, ninja and LLVM build system is "
"very specific in expressing relationships between build actions."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "So, your options are:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "Avoid these crates"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "Apply a patch to the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid ""
"Patches should be kept in `third_party/rust/chromium_crates_io/patches/"
"<crate>` - see for example the [patches against the `cxx` crate](https://"
"source.chromium.org/chromium/chromium/src/+/main:third_party/rust/"
"chromium_crates_io/patches/cxx/) - and will be applied automatically by "
"`gnrt` each time it upgrades the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid ""
"Once you've added a third-party crate and generated build rules, depending "
"on a crate is simple. Find your `rust_static_library` target, and add a "
"`dep` on the `:lib` target within your crate."
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid "Specifically,"
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid ""
"```bob\n"
"                     +------------+      +----------------------+\n"
"\"//third_party/rust\" | crate name | \"/v\" | major semver version | \":"
"lib\"\n"
"                     +------------+      +----------------------+\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid ""
"```gn\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"  deps = [ \"//third_party/rust/example_rust_crate/v1:lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid "Auditing Third Party Crates"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Adding new libraries is subject to Chromium's standard [policies](https://"
"chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/rust."
"md#Third_party-review), but of course also subject to security review. As "
"you may be bringing in not just a single crate but also transitive "
"dependencies, there may be a lot of code to review. On the other hand, safe "
"Rust code can have limited negative side effects. How should you review it?"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Over time Chromium aims to move to a process based around [cargo vet]"
"(https://mozilla.github.io/cargo-vet/)."
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Meanwhile, for each new crate addition, we are checking for the following:"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Understand why each crate is used. What's the relationship between crates? "
"If the build system for each crate contains a `build.rs` or procedural "
"macros, work out what they're for. Are they compatible with the way Chromium "
"is normally built?"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid "Check each crate seems to be reasonably well maintained"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Use `cd third-party/rust/chromium_crates_io; cargo audit` to check for known "
"vulnerabilities (first you'll need to `cargo install cargo-audit`, which "
"ironically involves downloading lots of dependencies from the internet[2](../"
"cargo.md))"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Ensure any `unsafe` code is good enough for the [Rule of Two](https://"
"chromium.googlesource.com/chromium/src/+/main/docs/security/rule-of-2."
"md#unsafe-code-in-safe-languages)"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid "Check for any use of `fs` or `net` APIs"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Read all the code at a sufficient level to look for anything out of place "
"that might have been maliciously inserted. (You can't realistically aim for "
"100% perfection here: there's often just too much code.)"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"These are just guidelines --- work with reviewers from `security@chromium."
"org` to work out the right way to become confident of the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "Checking Crates into Chromium Source Code"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "`git status` should reveal:"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "Crate code in `//third_party/rust/chromium_crates_io`"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"Metadata (`BUILD.gn` and `README.chromium`) in `//third_party/rust/<crate>/"
"<version>`"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "Please also add an `OWNERS` file in the latter location."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"You should land all this, along with your `Cargo.toml` and `gnrt_config."
"toml` changes, into the Chromium repo."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"**Important**: you need to use `git add -f` because otherwise `.gitignore` "
"files may result in some files being skipped."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"As you do so, you might find presubmit checks fail because of non-inclusive "
"language. This is because Rust crate data tends to include names of git "
"branches, and many projects still use non-inclusive terminology there. So "
"you may need to run:"
msgstr ""

#: src/chromium/adding-third-party-crates/keeping-up-to-date.md
msgid ""
"As the OWNER of any third party Chromium dependency, you are [expected to "
"keep it up to date with any security fixes](https://chromium.googlesource."
"com/chromium/src/+/main/docs/adding_to_third_party.md#add-owners). It is "
"hoped that we will soon automate this for Rust crates, but for now, it's "
"still your responsibility just as it is for any other third party dependency."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"Add [uwuify](https://crates.io/crates/uwuify) to Chromium, turning off the "
"crate's [default features](https://doc.rust-lang.org/cargo/reference/"
"features.html#the-default-feature). Assume that the crate will be used in "
"shipping Chromium, but won't be used to handle untrustworthy input."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"(In the next exercise we'll use uwuify from Chromium, but feel free to skip "
"ahead and do that now if you like. Or, you could create a new "
"[`rust_executable` target](https://source.chromium.org/chromium/chromium/src/"
"+/main:build/rust/rust_executable.gni) which uses `uwuify`)."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "Students will need to download lots of transitive dependencies."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "The total crates needed are:"
msgstr ""

#: src/exercises/chromium/third-party.md
#, fuzzy
msgid "`instant`,"
msgstr "`const`"

#: src/exercises/chromium/third-party.md
msgid "`lock_api`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`parking_lot`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`parking_lot_core`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`redox_syscall`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`scopeguard`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`smallvec`, and"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`uwuify`."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"If students are downloading even more than that, they probably forgot to "
"turn off the default features."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"Thanks to [Daniel Liu](https://github.com/Daniel-Liu-c0deb0t) for this crate!"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid "Bringing It Together --- Exercise"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"In this exercise, you're going to add a whole new Chromium feature, bringing "
"together everything you already learned."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid "The Brief from Product Management"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"A community of pixies has been discovered living in a remote rainforest. "
"It's important that we get Chromium for Pixies delivered to them as soon as "
"possible."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"The requirement is to translate all Chromium's UI strings into Pixie "
"language."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"There's not time to wait for proper translations, but fortunately pixie "
"language is very close to English, and it turns out there's a Rust crate "
"which does the translation."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"In fact, you already [imported that crate in the previous exercise](https://"
"crates.io/crates/uwuify)."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"(Obviously, real translations of Chrome require incredible care and "
"diligence. Don't ship this!)"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid "Steps"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"Modify `ResourceBundle::MaybeMangleLocalizedString` so that it uwuifies all "
"strings before display. In this special build of Chromium, it should always "
"do this irrespective of the setting of `mangle_localized_strings_`."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"If you've done everything right across all these exercises, congratulations, "
"you should have created Chrome for pixies!"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"UTF16 vs UTF8. Students should be aware that Rust strings are always UTF8, "
"and will probably decide that it's better to do the conversion on the C++ "
"side using `base::UTF16ToUTF8` and back again."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"If students decide to do the conversion on the Rust side, they'll need to "
"consider [`String::from_utf16`](https://doc.rust-lang.org/std/string/struct."
"String.html#method.from_utf16), consider error handling, and consider which "
"[CXX supported types can transfer a lot of u16s](https://cxx.rs/binding/"
"slice.html)."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"Students may design the C++/Rust boundary in several different ways, e.g. "
"taking and returning strings by value, or taking a mutable reference to a "
"string. If a mutable reference is used, CXX will likely tell the student "
"that they need to use [`Pin`](https://doc.rust-lang.org/std/pin/). You may "
"need to explain what `Pin` does, and then explain why CXX needs it for "
"mutable references to C++ data: the answer is that C++ data can't be moved "
"around like Rust data, because it may contain self-referential pointers."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"The C++ target containing `ResourceBundle::MaybeMangleLocalizedString` will "
"need to depend on a `rust_static_library` target. The student probably "
"already did this."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"The `rust_static_library` target will need to depend on `//third_party/rust/"
"uwuify/v0_2:lib`."
msgstr ""

#: src/exercises/chromium/solutions.md
msgid ""
"Solutions to the Chromium exercises can be found in [this series of CLs]"
"(https://chromium-review.googlesource.com/c/chromium/src/+/5096560)."
msgstr ""

#: src/bare-metal.md
#, fuzzy
msgid "Welcome to Bare Metal Rust"
msgstr "Bienvenue dans Bare Metal Rust"

#: src/bare-metal.md
msgid ""
"This is a standalone one-day course about bare-metal Rust, aimed at people "
"who are familiar with the basics of Rust (perhaps from completing the "
"Comprehensive Rust course), and ideally also have some experience with bare-"
"metal programming in some other language such as C."
msgstr ""
"Il s'agit d'un cours autonome d'une journ√©e sur la bare-metal Rust, destin√© "
"aux personnes familiaris√©es avec le bases de Rust (peut-√™tre apr√®s avoir "
"termin√© le cours Comprehensive Rust(le guide complet de Rust)), et "
"id√©alement aussi avoir quelques exp√©rience de la programmation bare-metal "
"dans un autre langage tel que C."

#: src/bare-metal.md
#, fuzzy
msgid ""
"Today we will talk about 'bare-metal' Rust: running Rust code without an OS "
"underneath us. This will be divided into several parts:"
msgstr ""
"Aujourd'hui, nous allons parler de Rust \"bare-metal\": ex√©cuter du code "
"Rust sans syst√®me d'exploitation sous nous. Cette volont√© √™tre divis√© en "
"plusieurs parties :"

#: src/bare-metal.md
#, fuzzy
msgid "What is `no_std` Rust?"
msgstr "Qu'est-ce que `no_std` Rust¬†?"

#: src/bare-metal.md
#, fuzzy
msgid "Writing firmware for microcontrollers."
msgstr "Ecriture de firmware pour microcontr√¥leurs."

#: src/bare-metal.md
#, fuzzy
msgid "Writing bootloader / kernel code for application processors."
msgstr ""
"Ecriture du bootloader / code noyau pour les processeurs d'application."

#: src/bare-metal.md
#, fuzzy
msgid "Some useful crates for bare-metal Rust development."
msgstr "Quelques caisses utiles pour le d√©veloppement de Rust en m√©tal nu."

#: src/bare-metal.md
#, fuzzy
msgid ""
"For the microcontroller part of the course we will use the [BBC micro:bit]"
"(https://microbit.org/) v2 as an example. It's a [development board](https://"
"tech.microbit.org/hardware/) based on the Nordic nRF51822 microcontroller "
"with some LEDs and buttons, an I2C-connected accelerometer and compass, and "
"an on-board SWD debugger."
msgstr ""
"Pour la partie microcontr√¥leur du cours, nous utiliserons le [BBC micro:bit]"
"(https://microbit.org/) v2 par exemple. C'est une [carte de d√©veloppement]"
"(https://tech.microbit.org/hardware/) bas√©e sur le Nordic Microcontr√¥leur "
"nRF51822 avec quelques LED et boutons, un acc√©l√©rom√®tre et une boussole "
"connect√©s I2C, et un d√©bogueur SWD int√©gr√©."

#: src/bare-metal.md
#, fuzzy
msgid ""
"To get started, install some tools we'll need later. On gLinux or Debian:"
msgstr ""
"Pour commencer, installez quelques outils dont nous aurons besoin plus tard. "
"Sous gLinux ou Debian¬†:"

#: src/bare-metal.md
#, fuzzy
msgid ""
"And give users in the `plugdev` group access to the micro:bit programmer:"
msgstr ""
"Et donnez aux utilisateurs du groupe `plugdev` l'acc√®s au programmeur micro:"
"bit¬†:"

#: src/bare-metal.md src/bare-metal/microcontrollers/debugging.md
#, fuzzy
msgid "On MacOS:"
msgstr "Sur MacOS¬†:"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`core`"
msgstr "`noyau`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`std`"
msgstr "`std`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "Slices, `&str`, `CStr`"
msgstr "Tranches, `&str`, `CStr`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`NonZeroU8`..."
msgstr "`NonZeroU8`..."

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Option`, `Result`"
msgstr "`Option`, `R√©sultat`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Display`, `Debug`, `write!`..."
msgstr "`Afficher`, `D√©boguer`, `√©crire¬†!`..."

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`panic!`, `assert_eq!`..."
msgstr "`panique¬†!`, `assert_eq¬†!`..."

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`NonNull` and all the usual pointer-related functions"
msgstr "`NonNull` et toutes les fonctions habituelles li√©es au pointeur"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Future` and `async`/`await`"
msgstr "`Future` et `async`/`wait`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`fence`, `AtomicBool`, `AtomicPtr`, `AtomicU32`..."
msgstr "`cl√¥ture`, `AtomicBool`, `AtomicPtr`, `AtomicU32`..."

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Duration`"
msgstr "`Dur√©e`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Box`, `Cow`, `Arc`, `Rc`"
msgstr "`Bo√Æte`, `Vache`, `Arc`, `Rc`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Vec`, `BinaryHeap`, `BtreeMap`, `LinkedList`, `VecDeque`"
msgstr "`Vec`, `BinaryHeap`, `BtreeMap`, `LinkedList`, `VecDeque`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`String`, `CString`, `format!`"
msgstr "`Cha√Æne`, `CString`, `format¬†!`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Error`"
msgstr "\"Erreur\""

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Mutex`, `Condvar`, `Barrier`, `Once`, `RwLock`, `mpsc`"
msgstr "`Mutex`, `Condvar`, `Barri√®re`, `Une fois`, `RwLock`, `mpsc`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`File` and the rest of `fs`"
msgstr "`File` et le reste de `fs`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`println!`, `Read`, `Write`, `Stdin`, `Stdout` and the rest of `io`"
msgstr "`println!`, `Read`, `Write`, `Stdin`, `Stdout` et le reste de `io`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Path`, `OsString`"
msgstr "`Chemin`, `OsString`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`net`"
msgstr "\"net\""

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`Command`, `Child`, `ExitCode`"
msgstr "`Commande`, `Enfant`, `Code de sortie`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`spawn`, `sleep` and the rest of `thread`"
msgstr "`spawn`, `sleep` et le reste de `thread`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`SystemTime`, `Instant`"
msgstr "`SystemTime`, `Instantan√©`"

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`HashMap` depends on RNG."
msgstr "`HashMap` d√©pend de RNG."

#: src/bare-metal/no_std.md
#, fuzzy
msgid "`std` re-exports the contents of both `core` and `alloc`."
msgstr "`std` r√©exporte le contenu de `core` et `alloc`."

#: src/bare-metal/minimal.md
#, fuzzy
msgid "A minimal `no_std` program"
msgstr "Un programme minimal `no_std`"

#: src/bare-metal/minimal.md
msgid "This will compile to an empty binary."
msgstr ""

#: src/bare-metal/minimal.md
msgid "`std` provides a panic handler; without it we must provide our own."
msgstr ""

#: src/bare-metal/minimal.md
msgid "It can also be provided by another crate, such as `panic-halt`."
msgstr ""

#: src/bare-metal/minimal.md
msgid ""
"Depending on the target, you may need to compile with `panic = \"abort\"` to "
"avoid an error about `eh_personality`."
msgstr ""

#: src/bare-metal/minimal.md
msgid ""
"Note that there is no `main` or any other entry point; it's up to you to "
"define your own entry point. This will typically involve a linker script and "
"some assembly code to set things up ready for Rust code to run."
msgstr ""

#: src/bare-metal/alloc.md
#, fuzzy
msgid ""
"To use `alloc` you must implement a [global (heap) allocator](https://doc."
"rust-lang.org/stable/std/alloc/trait.GlobalAlloc.html)."
msgstr ""
"Pour utiliser `alloc` vous devez impl√©menter un [allocateur global (de tas)]"
"(https://doc.rust-lang.org/stable/std/alloc/trait.GlobalAlloc.html)."

#: src/bare-metal/alloc.md
msgid ""
"// Safe because `HEAP` is only used here and `entry` is only called once.\n"
msgstr ""

#: src/bare-metal/alloc.md
msgid "// Give the allocator some memory to allocate.\n"
msgstr ""

#: src/bare-metal/alloc.md
msgid "// Now we can do things that require heap allocation.\n"
msgstr ""

#: src/bare-metal/alloc.md
#, fuzzy
msgid "\"A string\""
msgstr "String"

#: src/bare-metal/alloc.md
msgid ""
"`buddy_system_allocator` is a third-party crate implementing a basic buddy "
"system allocator. Other crates are available, or you can write your own or "
"hook into your existing allocator."
msgstr ""

#: src/bare-metal/alloc.md
msgid ""
"The const parameter of `LockedHeap` is the max order of the allocator; i.e. "
"in this case it can allocate regions of up to 2\\*\\*32 bytes."
msgstr ""

#: src/bare-metal/alloc.md
msgid ""
"If any crate in your dependency tree depends on `alloc` then you must have "
"exactly one global allocator defined in your binary. Usually this is done in "
"the top-level binary crate."
msgstr ""

#: src/bare-metal/alloc.md
msgid ""
"`extern crate panic_halt as _` is necessary to ensure that the `panic_halt` "
"crate is linked in so we get its panic handler."
msgstr ""

#: src/bare-metal/alloc.md
msgid "This example will build but not run, as it doesn't have an entry point."
msgstr ""

#: src/bare-metal/microcontrollers.md
#, fuzzy
msgid ""
"The `cortex_m_rt` crate provides (among other things) a reset handler for "
"Cortex M microcontrollers."
msgstr ""
"La caisse `cortex_m_rt` fournit (entre autres) un gestionnaire de "
"r√©initialisation pour les microcontr√¥leurs Cortex M."

#: src/bare-metal/microcontrollers.md
#, fuzzy
msgid ""
"Next we'll look at how to access peripherals, with increasing levels of "
"abstraction."
msgstr ""
"Ensuite, nous verrons comment acc√©der aux p√©riph√©riques, avec des niveaux "
"d'abstraction croissants."

#: src/bare-metal/microcontrollers.md
#, fuzzy
msgid ""
"The `cortex_m_rt::entry` macro requires that the function have type `fn() -"
"> !`, because returning to the reset handler doesn't make sense."
msgstr ""
"La macro `cortex_m_rt::entry` n√©cessite que la fonction ait le type `fn() -"
"> !`, car le retour au gestionnaire de r√©initialisation n'a pas de sens."

#: src/bare-metal/microcontrollers.md
#, fuzzy
msgid "Run the example with `cargo embed --bin minimal`"
msgstr "Ex√©cutez l'exemple avec `cargo embed --bin minimal`"

#: src/bare-metal/microcontrollers/mmio.md
#, fuzzy
msgid ""
"Most microcontrollers access peripherals via memory-mapped IO. Let's try "
"turning on an LED on our micro:bit:"
msgstr ""
"La plupart des microcontr√¥leurs acc√®dent aux p√©riph√©riques via des E/S "
"mapp√©es en m√©moire. Essayons d'allumer une LED sur notre micro:bit:"

#: src/bare-metal/microcontrollers/mmio.md
msgid "/// GPIO port 0 peripheral address\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
msgid "// GPIO peripheral offsets\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
msgid "// PIN_CNF fields\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
#: src/bare-metal/microcontrollers/pacs.md
#: src/bare-metal/microcontrollers/hals.md
msgid "// Configure GPIO 0 pins 21 and 28 as push-pull outputs.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
msgid ""
"// Safe because the pointers are to valid peripheral control registers, and\n"
"    // no aliases exist.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
#: src/bare-metal/microcontrollers/pacs.md
#: src/bare-metal/microcontrollers/hals.md
msgid "// Set pin 28 low and pin 21 high to turn the LED on.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
#, fuzzy
msgid ""
"GPIO 0 pin 21 is connected to the first column of the LED matrix, and pin 28 "
"to the first row."
msgstr ""
"La broche 21 du GPIO 0 est connect√©e √† la premi√®re colonne de la matrice LED "
"et la broche 28 √† la premi√®re rang√©e."

#: src/bare-metal/microcontrollers/mmio.md
#: src/bare-metal/microcontrollers/pacs.md
#: src/bare-metal/microcontrollers/hals.md
#: src/bare-metal/microcontrollers/board-support.md
#, fuzzy
msgid "Run the example with:"
msgstr "Ex√©cutez l'exemple avec¬†:"

#: src/bare-metal/microcontrollers/pacs.md
#, fuzzy
msgid "Peripheral Access Crates"
msgstr "Caisses d'acc√®s p√©riph√©rique"

#: src/bare-metal/microcontrollers/pacs.md
#, fuzzy
msgid ""
"[`svd2rust`](https://crates.io/crates/svd2rust) generates mostly-safe Rust "
"wrappers for memory-mapped peripherals from [CMSIS-SVD](https://www.keil.com/"
"pack/doc/CMSIS/SVD/html/index.html) files."
msgstr ""
"[`svd2rust`](https://crates.io/crates/svd2rust) g√©n√®re des wrappers Rust "
"principalement s√ªrs pour p√©riph√©riques mapp√©s en m√©moire de [CMSIS-SVD]"
"(https://www.keil.com/pack/doc/CMSIS/SVD/html/index.html) des dossiers."

#: src/bare-metal/microcontrollers/pacs.md
#, fuzzy
msgid ""
"SVD (System View Description) files are XML files typically provided by "
"silicon vendors which describe the memory map of the device."
msgstr ""
"Les fichiers SVD (System View Description) sont des fichiers XML "
"g√©n√©ralement fournis par les fournisseurs de silicium qui d√©crire la carte "
"m√©moire de l'appareil."

#: src/bare-metal/microcontrollers/pacs.md
#, fuzzy
msgid ""
"They are organised by peripheral, register, field and value, with names, "
"descriptions, addresses and so on."
msgstr ""
"Ils sont organis√©s par p√©riph√©rique, registre, champ et valeur, avec noms, "
"descriptions, adresses et ainsi de suite."

#: src/bare-metal/microcontrollers/pacs.md
#, fuzzy
msgid ""
"SVD files are often buggy and incomplete, so there are various projects "
"which patch the mistakes, add missing details, and publish the generated "
"crates."
msgstr ""
"Les fichiers SVD sont souvent bogu√©s et incomplets, il existe donc divers "
"projets qui corrigent le erreurs, ajoutez les d√©tails manquants et publiez "
"les caisses g√©n√©r√©es."

#: src/bare-metal/microcontrollers/pacs.md
#, fuzzy
msgid "`cortex-m-rt` provides the vector table, among other things."
msgstr "`cortex-m-rt` fournit la table des vecteurs, entre autres choses."

#: src/bare-metal/microcontrollers/pacs.md
#, fuzzy
msgid ""
"If you `cargo install cargo-binutils` then you can run `cargo objdump --bin "
"pac -- -d --no-show-raw-insn` to see the resulting binary."
msgstr ""
"Si vous \"installez cargo cargo-binutils\", vous pouvez ex√©cuter `cargo "
"objdump --bin pac -- -d --no-show-raw-insn` pour voir le binaire r√©sultant."

#: src/bare-metal/microcontrollers/hals.md
#, fuzzy
msgid "HAL crates"
msgstr "caisses HAL"

#: src/bare-metal/microcontrollers/hals.md
#, fuzzy
msgid ""
"[HAL crates](https://github.com/rust-embedded/awesome-embedded-rust#hal-"
"implementation-crates) for many microcontrollers provide wrappers around "
"various peripherals. These generally implement traits from [`embedded-hal`]"
"(https://crates.io/crates/embedded-hal)."
msgstr ""
"[Caisses HAL](https://github.com/rust-embedded/awesome-embedded-rust#hal-"
"implementation-crates) pour de nombreux microcontr√¥leurs fournissent des "
"wrappers autour de divers p√©riph√©riques. Ceux-ci impl√©mentent g√©n√©ralement "
"des traits de [`embedded-hal`](https://crates.io/crates/embedded-hal)."

#: src/bare-metal/microcontrollers/hals.md
msgid "// Create HAL wrapper for GPIO port 0.\n"
msgstr ""

#: src/bare-metal/microcontrollers/hals.md
#, fuzzy
msgid ""
"`set_low` and `set_high` are methods on the `embedded_hal` `OutputPin` trait."
msgstr ""
"`set_low` et `set_high` sont des m√©thodes sur le trait `embedded_hal` "
"`OutputPin`."

#: src/bare-metal/microcontrollers/hals.md
#, fuzzy
msgid ""
"HAL crates exist for many Cortex-M and RISC-V devices, including various "
"STM32, GD32, nRF, NXP, MSP430, AVR and PIC microcontrollers."
msgstr ""
"Les caisses HAL existent pour de nombreux appareils Cortex-M et RISC-V, y "
"compris divers STM32, GD32, nRF, NXP, Microcontr√¥leurs MSP430, AVR et PIC."

#: src/bare-metal/microcontrollers/board-support.md
#, fuzzy
msgid "Board support crates"
msgstr "Caisses support planche"

#: src/bare-metal/microcontrollers/board-support.md
#, fuzzy
msgid ""
"Board support crates provide a further level of wrapping for a specific "
"board for convenience."
msgstr ""
"Les caisses de support de planche offrent un niveau suppl√©mentaire "
"d'emballage pour une planche sp√©cifique pour plus de commodit√©."

#: src/bare-metal/microcontrollers/board-support.md
#, fuzzy
msgid ""
"In this case the board support crate is just providing more useful names, "
"and a bit of initialisation."
msgstr ""
"Dans ce cas, la caisse de support de carte fournit simplement des noms plus "
"utiles, et un peu de initialisation."

#: src/bare-metal/microcontrollers/board-support.md
#, fuzzy
msgid ""
"The crate may also include drivers for some on-board devices outside of the "
"microcontroller itself."
msgstr ""
"La caisse peut √©galement inclure des pilotes pour certains p√©riph√©riques "
"embarqu√©s en dehors du microcontr√¥leur lui-m√™me."

#: src/bare-metal/microcontrollers/board-support.md
#, fuzzy
msgid "`microbit-v2` includes a simple driver for the LED matrix."
msgstr "`microbit-v2` inclut un pilote simple pour la matrice LED."

#: src/bare-metal/microcontrollers/type-state.md
#, fuzzy
msgid "The type state pattern"
msgstr "Le mod√®le d'√©tat de type"

#: src/bare-metal/microcontrollers/type-state.md
msgid "// let gpio0_01_again = gpio0.p0_01; // Error, moved.\n"
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md
msgid "// pin_input.is_high(); // Error, moved.\n"
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md
#, fuzzy
msgid ""
"Pins don't implement `Copy` or `Clone`, so only one instance of each can "
"exist. Once a pin is moved out of the port struct nobody else can take it."
msgstr ""
"Les broches n'impl√©mentent pas `Copy` ou `Clone`, donc une seule instance de "
"chacun peut exister. Une fois qu'une broche est d√©plac√© hors de la structure "
"du port, personne d'autre ne peut le prendre."

#: src/bare-metal/microcontrollers/type-state.md
#, fuzzy
msgid ""
"Changing the configuration of a pin consumes the old pin instance, so you "
"can‚Äôt keep use the old instance afterwards."
msgstr ""
"La modification de la configuration d'une broche consomme l'ancienne "
"instance de broche, vous ne pouvez donc pas continuer √† utiliser l'ancienne "
"exemple par la suite."

#: src/bare-metal/microcontrollers/type-state.md
#, fuzzy
msgid ""
"The type of a value indicates the state that it is in: e.g. in this case, "
"the configuration state of a GPIO pin. This encodes the state machine into "
"the type system, and ensures that you don't try to use a pin in a certain "
"way without properly configuring it first. Illegal state transitions are "
"caught at compile time."
msgstr ""
"Le type d'une valeur indique l'√©tat dans lequel elle se trouve¬†: par ex. "
"dans ce cas, l'√©tat de la configuration d'une broche GPIO. Cela encode la "
"machine d'√©tat dans le syst√®me de type et garantit que vous ne essayez "
"d'utiliser une broche d'une certaine mani√®re sans la configurer correctement "
"au pr√©alable. √âtat ill√©gal les transitions sont intercept√©es au moment de la "
"compilation."

#: src/bare-metal/microcontrollers/type-state.md
#, fuzzy
msgid ""
"You can call `is_high` on an input pin and `set_high` on an output pin, but "
"not vice-versa."
msgstr ""
"Vous pouvez appeler `is_high` sur une broche d'entr√©e et `set_high` sur une "
"broche de sortie, mais pas l'inverse."

#: src/bare-metal/microcontrollers/type-state.md
#, fuzzy
msgid "Many HAL crates follow this pattern."
msgstr "De nombreuses caisses HAL suivent ce mod√®le."

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid ""
"The [`embedded-hal`](https://crates.io/crates/embedded-hal) crate provides a "
"number of traits covering common microcontroller peripherals."
msgstr ""
"La caisse [`embedded-hal`](https://crates.io/crates/embedded-hal) fournit un "
"certain nombre de caract√©ristiques couvrant les p√©riph√©riques de "
"microcontr√¥leur courants."

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid "GPIO"
msgstr "GPIO"

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid "ADC"
msgstr "ADC"

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid "I2C, SPI, UART, CAN"
msgstr "I2C, SPI, UART, PEUT"

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid "RNG"
msgstr "GNA"

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid "Timers"
msgstr "Minuteries"

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid "Watchdogs"
msgstr "Chiens de garde"

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid ""
"Other crates then implement [drivers](https://github.com/rust-embedded/"
"awesome-embedded-rust#driver-crates) in terms of these traits, e.g. an "
"accelerometer driver might need an I2C or SPI bus implementation."
msgstr ""
"D'autres caisses mettent alors en ≈ìuvre [pilotes](https://github.com/rust-"
"embedded/awesome-embedded-rust#driver-crates) en ce qui concerne ces traits, "
"par ex. un pilote d'acc√©l√©rom√®tre peut n√©cessiter une impl√©mentation de bus "
"I2C ou SPI."

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid ""
"There are implementations for many microcontrollers, as well as other "
"platforms such as Linux on Raspberry Pi."
msgstr ""
"Il existe des impl√©mentations pour de nombreux microcontr√¥leurs, ainsi que "
"pour d'autres plates-formes telles que Linux sur Tarte aux framboises."

#: src/bare-metal/microcontrollers/embedded-hal.md
#, fuzzy
msgid ""
"There is work in progress on an `async` version of `embedded-hal`, but it "
"isn't stable yet."
msgstr ""
"Il y a des travaux en cours sur une version `async` de `embedded-hal`, mais "
"ce n'est pas encore stable."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"[probe-rs](https://probe.rs/) is a handy toolset for embedded debugging, "
"like OpenOCD but better integrated."
msgstr ""
"[probe-rs](https://probe.rs/) est un ensemble d'outils pratique pour le "
"d√©bogage int√©gr√©, comme OpenOCD mais en mieux int√©gr√©."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"SWD (Serial Wire Debug) and JTAG via CMSIS-DAP, ST-Link and J-Link probes"
msgstr " et JTAG via les sondes CMSIS-DAP, ST-Link et J-Link"

#: src/bare-metal/microcontrollers/probe-rs.md
msgid "GDB stub and Microsoft DAP (Debug Adapter Protocol) server"
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md
msgid "Cargo integration"
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"`cargo-embed` is a cargo subcommand to build and flash binaries, log RTT "
"(Real Time Transfers) output and connect GDB. It's configured by an `Embed."
"toml` file in your project directory."
msgstr ""
" et connectez GDB. Il est configur√© par un Fichier `Embed.toml` dans votre "
"r√©pertoire de projet."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"[CMSIS-DAP](https://arm-software.github.io/CMSIS_5/DAP/html/index.html) is "
"an Arm standard protocol over USB for an in-circuit debugger to access the "
"CoreSight Debug Access Port of various Arm Cortex processors. It's what the "
"on-board debugger on the BBC micro:bit uses."
msgstr ""
"[CMSIS-DAP](https://arm-software.github.io/CMSIS_5/DAP/html/index.html) est "
"une norme Arm protocole sur USB pour un d√©bogueur en circuit pour acc√©der au "
"port d'acc√®s de d√©bogage CoreSight de divers Processeurs Arm Cortex. C'est "
"ce que le d√©bogueur embarqu√© sur le BBC micro:bit utilise."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"ST-Link is a range of in-circuit debuggers from ST Microelectronics, J-Link "
"is a range from SEGGER."
msgstr ""
"ST-Link est une gamme de d√©bogueurs en circuit de ST Microelectronics, J-"
"Link est une gamme de SEGER."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"The Debug Access Port is usually either a 5-pin JTAG interface or 2-pin "
"Serial Wire Debug."
msgstr ""
"Le port d'acc√®s au d√©bogage est g√©n√©ralement une interface JTAG √† 5 broches "
"ou un d√©bogage de fil s√©rie √† 2 broches."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"probe-rs is a library which you can integrate into your own tools if you "
"want to."
msgstr ""
"probe-rs est une biblioth√®que que vous pouvez int√©grer dans vos propres "
"outils si vous le souhaitez."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"The [Microsoft Debug Adapter Protocol](https://microsoft.github.io/debug-"
"adapter-protocol/) lets VSCode and other IDEs debug code running on any "
"supported microcontroller."
msgstr ""
"Le \\[protocole de l'adaptateur de d√©bogage Microsoft\\] (https://microsoft."
"github.io/debug-adapter-protocol/) permet VSCode et d'autres IDE d√©boguent "
"le code s'ex√©cutant sur n'importe quel microcontr√¥leur pris en charge."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid "cargo-embed is a binary built using the probe-rs library."
msgstr ""
"cargo-embed est un binaire construit √† l'aide de la biblioth√®que probe-rs."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"RTT (Real Time Transfers) is a mechanism to transfer data between the debug "
"host and the target through a number of ringbuffers."
msgstr ""
"RTT (Real Time Transfers) est un m√©canisme de transfert de donn√©es entre "
"l'h√¥te de d√©bogage et la cible √† travers un certain nombre de tampons "
"circulaires."

#: src/bare-metal/microcontrollers/debugging.md
#, fuzzy
msgid "_Embed.toml_:"
msgstr "Int√©grer.toml¬†:"

#: src/bare-metal/microcontrollers/debugging.md
#, fuzzy
msgid "In one terminal under `src/bare-metal/microcontrollers/examples/`:"
msgstr "Dans un terminal sous `src/bare-metal/microcontrollers/examples/`¬†:"

#: src/bare-metal/microcontrollers/debugging.md
#, fuzzy
msgid "In another terminal in the same directory:"
msgstr "Dans un autre terminal du m√™me r√©pertoire¬†:"

#: src/bare-metal/microcontrollers/debugging.md
msgid "On gLinux or Debian:"
msgstr ""

#: src/bare-metal/microcontrollers/debugging.md
#, fuzzy
msgid "In GDB, try running:"
msgstr "Dans GDB, essayez d'ex√©cuter¬†:"

#: src/bare-metal/microcontrollers/other-projects.md
#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid "Other projects"
msgstr "Autres projets"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "[RTIC](https://rtic.rs/)"
msgstr "\\*¬†[RTIC](https://rtic.rs/)"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "\"Real-Time Interrupt-driven Concurrency\""
msgstr "\"Concurrence pilot√©e par interruption en temps r√©el\""

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid ""
"Shared resource management, message passing, task scheduling, timer queue"
msgstr ""
"Gestion des ressources partag√©es, transmission de messages, planification "
"des t√¢ches, file d'attente du minuteur"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "[Embassy](https://embassy.dev/)"
msgstr "[Ambassade](https://embassy.dev/)"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "`async` executors with priorities, timers, networking, USB"
msgstr ""
"Ex√©cuteurs \"asynchrones\" avec priorit√©s, minuteries, mise en r√©seau, USB"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "[TockOS](https://www.tockos.org/documentation/getting-started)"
msgstr "[TockOS](https://www.tockos.org/documentation/getting-started)"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid ""
"Security-focused RTOS with preemptive scheduling and Memory Protection Unit "
"support"
msgstr ""
"RTOS ax√© sur la s√©curit√© avec planification pr√©emptive et prise en charge de "
"l'unit√© de protection de la m√©moire"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "[Hubris](https://hubris.oxide.computer/)"
msgstr "[Hubris](https://hubris.oxide.computer/)"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid ""
"Microkernel RTOS from Oxide Computer Company with memory protection, "
"unprivileged drivers, IPC"
msgstr ""
"Microkernel RTOS d'Oxide Computer Company avec protection de la m√©moire, "
"pilotes non privil√©gi√©s, IPC"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "[Bindings for FreeRTOS](https://github.com/lobaro/FreeRTOS-rust)"
msgstr "[Liaisons pour FreeRTOS](https://github.com/lobaro/FreeRTOS-rust)"

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid ""
"Some platforms have `std` implementations, e.g. [esp-idf](https://esp-rs."
"github.io/book/overview/using-the-standard-library.html)."
msgstr ""
"Certaines plates-formes ont des impl√©mentations \"std\", par ex. [esp-idf]"
"(https://esp-rs.github.io/book/overview/using-the-standard-library.html)."

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "RTIC can be considered either an RTOS or a concurrency framework."
msgstr "RTIC peut √™tre consid√©r√© comme un RTOS ou un cadre de concurrence."

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "It doesn't include any HALs."
msgstr "Il n'inclut aucun HAL."

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid ""
"It uses the Cortex-M NVIC (Nested Virtual Interrupt Controller) for "
"scheduling rather than a proper kernel."
msgstr ""
"Il utilise le Cortex-M NVIC (Nested Virtual Interrupt Controller) pour la "
"planification plut√¥t qu'un noyau appropri√©."

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid "Cortex-M only."
msgstr "Cortex-M uniquement."

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid ""
"Google uses TockOS on the Haven microcontroller for Titan security keys."
msgstr ""
"Google utilise TockOS sur le microcontr√¥leur Haven pour les cl√©s de s√©curit√© "
"Titan."

#: src/bare-metal/microcontrollers/other-projects.md
#, fuzzy
msgid ""
"FreeRTOS is mostly written in C, but there are Rust bindings for writing "
"applications."
msgstr ""
"FreeRTOS est principalement √©crit en C, mais il existe des liaisons Rust "
"pour √©crire des applications."

#: src/exercises/bare-metal/morning.md
#, fuzzy
msgid ""
"We will read the direction from an I2C compass, and log the readings to a "
"serial port."
msgstr ""
"Nous lirons la direction √† partir d'une boussole I2C et enregistrerons les "
"lectures sur un port s√©rie."

#: src/exercises/bare-metal/morning.md src/exercises/concurrency/morning.md
#, fuzzy
msgid ""
"After looking at the exercises, you can look at the [solutions](solutions-"
"morning.md) provided."
msgstr ""
"Apr√®s avoir regard√© l'exercice, vous pouvez regarder la [solution](solutions-"
"afternoon.md) fournie."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"We will read the direction from an I2C compass, and log the readings to a "
"serial port. If you have time, try displaying it on the LEDs somehow too, or "
"use the buttons somehow."
msgstr ""
"Nous lirons la direction √† partir d'une boussole I2C et enregistrerons les "
"lectures sur un port s√©rie. Si tu as temps, essayez de l'afficher sur les "
"LED d'une mani√®re ou d'une autre, ou utilisez les boutons d'une mani√®re ou "
"d'une autre."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid "Hints:"
msgstr "Astuces:"

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"Check the documentation for the [`lsm303agr`](https://docs.rs/lsm303agr/"
"latest/lsm303agr/) and [`microbit-v2`](https://docs.rs/microbit-v2/latest/"
"microbit/) crates, as well as the [micro:bit hardware](https://tech.microbit."
"org/hardware/)."
msgstr ""
"Consultez la documentation du [`lsm303agr`](https://docs.rs/lsm303agr/latest/"
"lsm303agr/) et [`microbit-v2`](https://docs.rs/microbit-v2/latest/microbit/) "
"caisses, ainsi que les [mat√©riel micro:bit](https://tech.microbit.org/"
"hardware/)."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"The LSM303AGR Inertial Measurement Unit is connected to the internal I2C bus."
msgstr ""
"La centrale de mesure inertielle LSM303AGR est connect√©e au bus interne I2C."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"TWI is another name for I2C, so the I2C master peripheral is called TWIM."
msgstr ""
"TWI est un autre nom pour I2C, donc le p√©riph√©rique ma√Ætre I2C s'appelle "
"TWIM."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"The LSM303AGR driver needs something implementing the `embedded_hal::"
"blocking::i2c::WriteRead` trait. The [`microbit::hal::Twim`](https://docs.rs/"
"microbit-v2/latest/microbit/hal/struct.Twim.html) struct implements this."
msgstr ""
"Le pilote LSM303AGR a besoin de quelque chose impl√©mentant `embedded_hal::"
"blocking::i2c::WriteRead` trait. Le [`microbit::hal::Twim`](https://docs.rs/"
"microbit-v2/latest/microbit/hal/struct.Twim.html) structure impl√©mente cela."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"You have a [`microbit::Board`](https://docs.rs/microbit-v2/latest/microbit/"
"struct.Board.html) struct with fields for the various pins and peripherals."
msgstr ""
"Vous avez un [`microbit::Board`](https://docs.rs/microbit-v2/latest/microbit/"
"struct.Board.html) structure avec des champs pour les diff√©rentes broches et "
"p√©riph√©riques."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"You can also look at the [nRF52833 datasheet](https://infocenter.nordicsemi."
"com/pdf/nRF52833_PS_v1.5.pdf) if you want, but it shouldn't be necessary for "
"this exercise."
msgstr ""
"Vous pouvez √©galement consulter le [fiche technique nRF52833](https://"
"infocenter.nordicsemi.com/pdf/nRF52833_PS_v1.5.pdf) si vous le souhaitez, "
"mais cela ne devrait pas √™tre n√©cessaire pour cet exercice."

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"Download the [exercise template](../../comprehensive-rust-exercises.zip) and "
"look in the `compass` directory for the following files."
msgstr ""
"T√©l√©chargez le \\[mod√®le d'exercice\\] (../../comprehensive-rust-exercises."
"zip) et regardez dans la `boussole` r√©pertoire pour les fichiers suivants."

#: src/exercises/bare-metal/compass.md src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_src/main.rs_:"
msgstr "`src/main.rs`¬†:"

#: src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "// Configure serial port.\n"
msgstr ""

#: src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "// Use the system timer as a delay provider.\n"
msgstr ""

#: src/exercises/bare-metal/compass.md
msgid ""
"// Set up the I2C controller and Inertial Measurement Unit.\n"
"    // TODO\n"
msgstr ""

#: src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "\"Ready.\""
msgstr ""

#: src/exercises/bare-metal/compass.md
msgid ""
"// Read compass data and log it to the serial port.\n"
"        // TODO\n"
msgstr ""

#: src/exercises/bare-metal/compass.md src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_Cargo.toml_ (you shouldn't need to change this):"
msgstr "`Cargo.toml` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid "_Embed.toml_ (you shouldn't need to change this):"
msgstr "`Embed.toml` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/compass.md src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_.cargo/config.toml_ (you shouldn't need to change this):"
msgstr ""
"`.cargo/config.toml` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid "See the serial output on Linux with:"
msgstr "Voir la sortie s√©rie sur Linux avec¬†:"

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid ""
"Or on Mac OS something like (the device name may be slightly different):"
msgstr ""
"Ou sur Mac OS quelque chose comme (le nom de l'appareil peut √™tre l√©g√®rement "
"diff√©rent) :"

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid "Use Ctrl+A Ctrl+Q to quit picocom."
msgstr "Utilisez Ctrl+A Ctrl+Q pour quitter picocom."

#: src/exercises/bare-metal/solutions-morning.md
msgid "Bare Metal Rust Morning Exercise"
msgstr "Exercice du matin avec Rust sur bare metal"

#: src/exercises/bare-metal/solutions-morning.md
#, fuzzy
msgid "([back to exercise](compass.md))"
msgstr "([retour √† l'exercice](compass.md))"

#: src/exercises/bare-metal/solutions-morning.md
msgid "// Set up the I2C controller and Inertial Measurement Unit.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "\"Setting up IMU...\""
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "// Set up display and timer.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "// Read compass data and log it to the serial port.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "\"{},{},{}\\t{},{},{}\""
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid ""
"// If button A is pressed, switch to the next mode and briefly blink all "
"LEDs\n"
"        // on.\n"
msgstr ""

#: src/bare-metal/aps.md
#, fuzzy
msgid "Application processors"
msgstr "Processeurs d'application"

#: src/bare-metal/aps.md
#, fuzzy
msgid ""
"So far we've talked about microcontrollers, such as the Arm Cortex-M series. "
"Now let's try writing something for Cortex-A. For simplicity we'll just work "
"with QEMU's aarch64 ['virt'](https://qemu-project.gitlab.io/qemu/system/arm/"
"virt.html) board."
msgstr ""
"Jusqu'√† pr√©sent, nous avons parl√© de microcontr√¥leurs, tels que la s√©rie Arm "
"Cortex-M. Essayons maintenant d'√©crire quelque chose pour Cortex-A. Pour "
"plus de simplicit√©, nous allons simplement travailler avec aarch64 de QEMU "
"['virt'](https://qemu-project.gitlab.io/qemu/system/arm/virt.html)."

#: src/bare-metal/aps.md
#, fuzzy
msgid ""
"Broadly speaking, microcontrollers don't have an MMU or multiple levels of "
"privilege (exception levels on Arm CPUs, rings on x86), while application "
"processors do."
msgstr ""
"D'une mani√®re g√©n√©rale, les microcontr√¥leurs n'ont pas de MMU ou plusieurs "
"niveaux de privil√®ge (exception niveaux sur les processeurs Arm, sonne sur "
"x86), contrairement aux processeurs d'application."

#: src/bare-metal/aps.md
#, fuzzy
msgid ""
"QEMU supports emulating various different machines or board models for each "
"architecture. The 'virt' board doesn't correspond to any particular real "
"hardware, but is designed purely for virtual machines."
msgstr ""
"QEMU prend en charge l'√©mulation de diff√©rentes machines ou mod√®les de "
"cartes pour chaque architecture. Le La carte 'virt' ne correspond √† aucun "
"mat√©riel r√©el particulier, mais est con√ßue uniquement pour machines "
"virtuelles."

#: src/bare-metal/aps/entry-point.md
msgid ""
"Before we can start running Rust code, we need to do some initialisation."
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"```armasm\n"
".section .init.entry, \"ax\"\n"
".global entry\n"
"entry:\n"
"    /*\n"
"     * Load and apply the memory management configuration, ready to enable "
"MMU and\n"
"     * caches.\n"
"     */\n"
"    adrp x30, idmap\n"
"    msr ttbr0_el1, x30\n"
"\n"
"    mov_i x30, .Lmairval\n"
"    msr mair_el1, x30\n"
"\n"
"    mov_i x30, .Ltcrval\n"
"    /* Copy the supported PA range into TCR_EL1.IPS. */\n"
"    mrs x29, id_aa64mmfr0_el1\n"
"    bfi x30, x29, #32, #4\n"
"\n"
"    msr tcr_el1, x30\n"
"\n"
"    mov_i x30, .Lsctlrval\n"
"\n"
"    /*\n"
"     * Ensure everything before this point has completed, then invalidate "
"any\n"
"     * potentially stale local TLB entries before they start being used.\n"
"     */\n"
"    isb\n"
"    tlbi vmalle1\n"
"    ic iallu\n"
"    dsb nsh\n"
"    isb\n"
"\n"
"    /*\n"
"     * Configure sctlr_el1 to enable MMU and cache and don't proceed until "
"this\n"
"     * has completed.\n"
"     */\n"
"    msr sctlr_el1, x30\n"
"    isb\n"
"\n"
"    /* Disable trapping floating point access in EL1. */\n"
"    mrs x30, cpacr_el1\n"
"    orr x30, x30, #(0x3 << 20)\n"
"    msr cpacr_el1, x30\n"
"    isb\n"
"\n"
"    /* Zero out the bss section. */\n"
"    adr_l x29, bss_begin\n"
"    adr_l x30, bss_end\n"
"0:  cmp x29, x30\n"
"    b.hs 1f\n"
"    stp xzr, xzr, [x29], #16\n"
"    b 0b\n"
"\n"
"1:  /* Prepare the stack. */\n"
"    adr_l x30, boot_stack_end\n"
"    mov sp, x30\n"
"\n"
"    /* Set up exception vector. */\n"
"    adr x30, vector_table_el1\n"
"    msr vbar_el1, x30\n"
"\n"
"    /* Call into Rust code. */\n"
"    bl main\n"
"\n"
"    /* Loop forever waiting for interrupts. */\n"
"2:  wfi\n"
"    b 2b\n"
"```"
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"This is the same as it would be for C: initialising the processor state, "
"zeroing the BSS, and setting up the stack pointer."
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"The BSS (block starting symbol, for historical reasons) is the part of the "
"object file which containing statically allocated variables which are "
"initialised to zero. They are omitted from the image, to avoid wasting space "
"on zeroes. The compiler assumes that the loader will take care of zeroing "
"them."
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"The BSS may already be zeroed, depending on how memory is initialised and "
"the image is loaded, but we zero it to be sure."
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"We need to enable the MMU and cache before reading or writing any memory. If "
"we don't:"
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"Unaligned accesses will fault. We build the Rust code for the `aarch64-"
"unknown-none` target which sets `+strict-align` to prevent the compiler "
"generating unaligned accesses, so it should be fine in this case, but this "
"is not necessarily the case in general."
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"If it were running in a VM, this can lead to cache coherency issues. The "
"problem is that the VM is accessing memory directly with the cache disabled, "
"while the host has cacheable aliases to the same memory. Even if the host "
"doesn't explicitly access the memory, speculative accesses can lead to cache "
"fills, and then changes from one or the other will get lost when the cache "
"is cleaned or the VM enables the cache. (Cache is keyed by physical address, "
"not VA or IPA.)"
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"For simplicity, we just use a hardcoded pagetable (see `idmap.S`) which "
"identity maps the first 1 GiB of address space for devices, the next 1 GiB "
"for DRAM, and another 1 GiB higher up for more devices. This matches the "
"memory layout that QEMU uses."
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"We also set up the exception vector (`vbar_el1`), which we'll see more about "
"later."
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"All examples this afternoon assume we will be running at exception level 1 "
"(EL1). If you need to run at a different exception level you'll need to "
"modify `entry.S` accordingly."
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid "Inline assembly"
msgstr "Assemblage en ligne"

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"Sometimes we need to use assembly to do things that aren't possible with "
"Rust code. For example, to make an HVC (hypervisor call) to tell the "
"firmware to power off the system:"
msgstr ""
"Parfois, nous devons utiliser l'assemblage pour faire des choses qui ne sont "
"pas possibles avec le code Rust. Par exemple, pour effectuer un "

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"// Safe because this only uses the declared registers and doesn't do\n"
"    // anything with memory.\n"
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"hvc #0\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w0\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w1\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w2\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w3\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w4\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w5\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w6\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w7\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"(If you actually want to do this, use the [`smccc`](https://crates.io/crates/"
"smccc) crate which has wrappers for all these functions.)"
msgstr ""
"(Si vous voulez vraiment faire cela, utilisez le crate [`psci`](https://"
"crates.io/crates/smccc) qui contient des wrappers pour toutes ces fonctions.)"

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"PSCI is the Arm Power State Coordination Interface, a standard set of "
"functions to manage system and CPU power states, among other things. It is "
"implemented by EL3 firmware and hypervisors on many systems."
msgstr ""
"PSCI est l'interface de coordination de l'√©tat de l'alimentation du bras, un "
"ensemble standard de fonctions pour g√©rer le syst√®me et les √©tats "
"d'alimentation du processeur, entre autres. Il est impl√©ment√© par le "
"firmware EL3 et les hyperviseurs sur de nombreux syst√®mes."

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"The `0 => _` syntax means initialise the register to 0 before running the "
"inline assembly code, and ignore its contents afterwards. We need to use "
"`inout` rather than `in` because the call could potentially clobber the "
"contents of the registers."
msgstr ""
"La syntaxe `0 => _` signifie initialiser le registre √† 0 avant d'ex√©cuter le "
"code assembleur en ligne, et ignorer son contenu par la suite. Nous devons "
"utiliser `inout` plut√¥t que `in` car l'appel pourrait potentiellement "
"encombrer le contenu des registres."

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"This `main` function needs to be `#[no_mangle]` and `extern \"C\"` because "
"it is called from our entry point in `entry.S`."
msgstr ""
"Cette fonction `main` doit √™tre `#[no_mangle]` et `extern \"C\"` car elle "
"est appel√©e depuis notre point d'entr√©e dans `entry.S`."

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"`_x0`‚Äì`_x3` are the values of registers `x0`‚Äì`x3`, which are conventionally "
"used by the bootloader to pass things like a pointer to the device tree. "
"According to the standard aarch64 calling convention (which is what `extern "
"\"C\"` specifies to use), registers `x0`‚Äì`x7` are used for the first 8 "
"arguments passed to a function, so `entry.S` doesn't need to do anything "
"special except make sure it doesn't change these registers."
msgstr ""
"`_x0`‚Äì`_x3` sont les valeurs des registres `x0`‚Äì`x3`, qui sont classiquement "
"utilis√©s par le bootloader pour passer des choses comme un pointeur vers "
"l'arborescence des p√©riph√©riques. Selon l'appel standard aarch64 convention "
"(qui est ce que `extern \"C\"` sp√©cifie d'utiliser), les registres `x0`‚Äì`x7` "
"sont utilis√©s pour la 8 premiers arguments pass√©s √† une fonction, donc "
"`entry.S` n'a rien de sp√©cial √† faire sauf assurez-vous qu'il ne modifie pas "
"ces registres."

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"Run the example in QEMU with `make qemu_psci` under `src/bare-metal/aps/"
"examples`."
msgstr ""
"Ex√©cutez l'exemple dans QEMU avec `make qemu_psci` sous `src/bare-metal/aps/"
"examples`."

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid "Volatile memory access for MMIO"
msgstr "Acc√®s m√©moire volatile pour MMIO"

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid "Use `pointer::read_volatile` and `pointer::write_volatile`."
msgstr "Utilisez `pointer::read_volatile` et `pointer::write_volatile`."

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid "Never hold a reference."
msgstr "Ne d√©tenez jamais une r√©f√©rence."

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid ""
"`addr_of!` lets you get fields of structs without creating an intermediate "
"reference."
msgstr ""
"`addr_of!` vous permet d'obtenir des champs de structures sans cr√©er de "
"r√©f√©rence interm√©diaire."

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid ""
"Volatile access: read or write operations may have side-effects, so prevent "
"the compiler or hardware from reordering, duplicating or eliding them."
msgstr ""
"Acc√®s volatile : les op√©rations de lecture ou d'√©criture peuvent avoir des "
"effets secondaires, √©vitez donc que le compilateur ou mat√©riel de les "
"r√©organiser, de les dupliquer ou de les supprimer."

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid ""
"Usually if you write and then read, e.g. via a mutable reference, the "
"compiler may assume that the value read is the same as the value just "
"written, and not bother actually reading memory."
msgstr ""
"Habituellement, si vous √©crivez puis lisez, par ex. via une r√©f√©rence "
"mutable, le compilateur peut supposer que la valeur lue est la m√™me que la "
"valeur que vous venez d'√©crire et ne vous souciez pas de lire la m√©moire."

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid ""
"Some existing crates for volatile access to hardware do hold references, but "
"this is unsound. Whenever a reference exist, the compiler may choose to "
"dereference it."
msgstr ""
"Certaines caisses existantes pour l'acc√®s volatile au mat√©riel contiennent "
"des r√©f√©rences, mais ce n'est pas valable. Chaque fois qu'une r√©f√©rence "
"existe, le compilateur peut choisir de la d√©r√©f√©rencer."

#: src/bare-metal/aps/mmio.md
#, fuzzy
msgid ""
"Use the `addr_of!` macro to get struct field pointers from a pointer to the "
"struct."
msgstr ""
"Utilisez la macro `addr_of!` pour obtenir des pointeurs de champ struct √† "
"partir d'un pointeur vers la struct."

#: src/bare-metal/aps/uart.md
#, fuzzy
msgid "Let's write a UART driver"
msgstr "√âcrivons un pilote UART"

#: src/bare-metal/aps/uart.md
#, fuzzy
msgid ""
"The QEMU 'virt' machine has a [PL011](https://developer.arm.com/"
"documentation/ddi0183/g) UART, so let's write a driver for that."
msgstr ""
"La machine QEMU 'virt' a un [PL011](https://developer.arm.com/documentation/"
"ddi0183/g) UART, √©crivons donc un pilote pour cela."

#: src/bare-metal/aps/uart.md
msgid "/// Minimal driver for a PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
msgid ""
"/// Constructs a new instance of the UART driver for a PL011 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the 8 MMIO control registers of "
"a\n"
"    /// PL011 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "/// Writes a single byte to the UART.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "// Wait until there is room in the TX buffer.\n"
msgstr ""

#: src/bare-metal/aps/uart.md
msgid ""
"// Safe because we know that the base address points to the control\n"
"        // registers of a PL011 device which is appropriately mapped.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "// Write to the TX buffer.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "// Wait until the UART is no longer busy.\n"
msgstr ""

#: src/bare-metal/aps/uart.md
#, fuzzy
msgid ""
"Note that `Uart::new` is unsafe while the other methods are safe. This is "
"because as long as the caller of `Uart::new` guarantees that its safety "
"requirements are met (i.e. that there is only ever one instance of the "
"driver for a given UART, and nothing else aliasing its address space), then "
"it is always safe to call `write_byte` later because we can assume the "
"necessary preconditions."
msgstr ""
"Notez que `Uart::new` n'est pas s√ªr alors que les autres m√©thodes sont "
"s√ªres. C'est parce que tant que le l'appelant de `Uart::new` garantit que "
"ses exigences de s√©curit√© sont respect√©es (c'est-√†-dire qu'il n'y a jamais "
"une instance du pilote pour un UART donn√©, et rien d'autre aliasant son "
"espace d'adressage), alors il est toujours s√ªr d'appeler `write_byte` plus "
"tard car nous pouvons supposer que le n√©cessaire conditions pr√©alables."

#: src/bare-metal/aps/uart.md
#, fuzzy
msgid ""
"We could have done it the other way around (making `new` safe but "
"`write_byte` unsafe), but that would be much less convenient to use as every "
"place that calls `write_byte` would need to reason about the safety"
msgstr ""
"Nous aurions pu faire l'inverse (rendre `new` s√ªr mais `write_byte` non "
"s√ªr), mais cela serait beaucoup moins pratique √† utiliser car chaque endroit "
"qui appelle `write_byte` aurait besoin de raisonner sur la s√©curit√©"

#: src/bare-metal/aps/uart.md
#, fuzzy
msgid ""
"This is a common pattern for writing safe wrappers of unsafe code: moving "
"the burden of proof for soundness from a large number of places to a smaller "
"number of places."
msgstr ""
"Il s'agit d'un mod√®le courant pour √©crire des wrappers s√ªrs de code non "
"s√©curis√©¬†: d√©placer la charge de la preuve pour solidit√© d'un grand nombre "
"d'endroits √† un plus petit nombre d'endroits."

#: src/bare-metal/aps/uart/traits.md
#, fuzzy
msgid "More traits"
msgstr "Plus de traits"

#: src/bare-metal/aps/uart/traits.md
#, fuzzy
msgid ""
"We derived the `Debug` trait. It would be useful to implement a few more "
"traits too."
msgstr ""
"Nous avons d√©riv√© le trait `Debug`. Il serait √©galement utile de mettre en "
"≈ìuvre quelques traits suppl√©mentaires."

#: src/bare-metal/aps/uart/traits.md src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because it just contains a pointer to device memory, which can be\n"
"// accessed from any context.\n"
msgstr ""

#: src/bare-metal/aps/uart/traits.md
#, fuzzy
msgid ""
"Implementing `Write` lets us use the `write!` and `writeln!` macros with our "
"`Uart` type."
msgstr ""
"L'impl√©mentation de `Write` nous permet d'utiliser les macros `write!` et "
"`writeln!` avec notre type `Uart`."

#: src/bare-metal/aps/uart/traits.md
#, fuzzy
msgid ""
"Run the example in QEMU with `make qemu_minimal` under `src/bare-metal/aps/"
"examples`."
msgstr ""
"Ex√©cutez l'exemple dans QEMU avec `make qemu_minimal` sous `src/bare-metal/"
"aps/examples`."

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "A better UART driver"
msgstr "Un meilleur pilote UART"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid ""
"The PL011 actually has [a bunch more registers](https://developer.arm.com/"
"documentation/ddi0183/g/programmers-model/summary-of-registers), and adding "
"offsets to construct pointers to access them is error-prone and hard to "
"read. Plus, some of them are bit fields which would be nice to access in a "
"structured way."
msgstr ""
"Le PL011 a en fait \\[un tas de registres suppl√©mentaires\\] [1](https://"
"developer.arm.com/documentation/ddi0183/g/programmers-model/summary-of-"
"registers), et ajoute des d√©calages pour construire des pointeurs pour "
"acc√©der est sujette aux erreurs et difficile √† lire. De plus, certains "
"d'entre eux sont des champs de bits, ce qui serait bien de acc√©der de "
"mani√®re structur√©e."

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "Offset"
msgstr "D√©calage"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "Register name"
msgstr "Nom du registre"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "Width"
msgstr "Largeur"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x00"
msgstr "0x00"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "DR"
msgstr "DR"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "12"
msgstr "12"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x04"
msgstr "0x04"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "RSR"
msgstr "RSR"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x18"
msgstr "0x18"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "FR"
msgstr "EN"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "9"
msgstr "9"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x20"
msgstr "0x20"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "ILPR"
msgstr "ILPR"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x24"
msgstr "0x24"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "IBRD"
msgstr "BIRD"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "16"
msgstr "16"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x28"
msgstr "0x28"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "FBRD"
msgstr "FBRD"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x2c"
msgstr "0x2c"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "LCR_H"
msgstr "LCR_H"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x30"
msgstr "0x30"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "CR"
msgstr "CR"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x34"
msgstr "0x34"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "IFLS"
msgstr "IFLS"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x38"
msgstr "0x38"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "IMSC"
msgstr "IMSC"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "11"
msgstr "11"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x3c"
msgstr "0x3c"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "RIS"
msgstr "SIR"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x40"
msgstr "0x40"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "MIS"
msgstr "SIG"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x44"
msgstr "0x44"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "ICR"
msgstr "RIC"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "0x48"
msgstr "0x48"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "DMACR"
msgstr "DMACR"

#: src/bare-metal/aps/better-uart.md
#, fuzzy
msgid "There are also some ID registers which have been omitted for brevity."
msgstr ""
"Il existe √©galement des registres d'identification qui ont √©t√© omis par "
"souci de bri√®vet√©."

#: src/bare-metal/aps/better-uart/bitflags.md
#, fuzzy
msgid ""
"The [`bitflags`](https://crates.io/crates/bitflags) crate is useful for "
"working with bitflags."
msgstr ""
"Le crate [`bitflags`](https://crates.io/crates/bitflags) est utile pour "
"travailler avec les bitflags."

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Flags from the UART flag register.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Clear to send.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Data set ready.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Data carrier detect.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// UART busy transmitting data.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Receive FIFO is empty.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Transmit FIFO is full.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Receive FIFO is full.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Transmit FIFO is empty.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Ring indicator.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md
#, fuzzy
msgid ""
"The `bitflags!` macro creates a newtype something like `Flags(u16)`, along "
"with a bunch of method implementations to get and set flags."
msgstr ""
"La macro `bitflags!` cr√©e un nouveau type quelque chose comme `Flags(u16)`, "
"avec un tas de m√©thodes impl√©mentations pour obtenir et d√©finir des drapeaux."

#: src/bare-metal/aps/better-uart/registers.md
#, fuzzy
msgid "Multiple registers"
msgstr "Plusieurs registres"

#: src/bare-metal/aps/better-uart/registers.md
#, fuzzy
msgid ""
"We can use a struct to represent the memory layout of the UART's registers."
msgstr ""
"Nous pouvons utiliser une structure pour repr√©senter la disposition de la "
"m√©moire des registres de l'UART."

#: src/bare-metal/aps/better-uart/registers.md
#, fuzzy
msgid ""
"[`#[repr(C)]`](https://doc.rust-lang.org/reference/type-layout.html#the-c-"
"representation) tells the compiler to lay the struct fields out in order, "
"following the same rules as C. This is necessary for our struct to have a "
"predictable layout, as default Rust representation allows the compiler to "
"(among other things) reorder fields however it sees fit."
msgstr ""
"[`#[repr(C)]`](https://doc.rust-lang.org/reference/type-layout.html#the-c-"
"representation) indique le compilateur pour disposer les champs struct dans "
"l'ordre, en suivant les m√™mes r√®gles que C. Ceci est n√©cessaire pour que "
"notre structure ait une mise en page pr√©visible, car la repr√©sentation Rust "
"par d√©faut permet compilateur pour (entre autres) r√©organiser les champs "
"comme bon lui semble."

#: src/bare-metal/aps/better-uart/driver.md
#, fuzzy
msgid "Now let's use the new `Registers` struct in our driver."
msgstr ""
"Utilisons maintenant la nouvelle structure `Registers` dans notre pilote."

#: src/bare-metal/aps/better-uart/driver.md
msgid "/// Driver for a PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md src/exercises/bare-metal/rtc.md
msgid ""
"// Safe because we know that self.registers points to the control\n"
"        // registers of a PL011 device which is appropriately mapped.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md src/exercises/bare-metal/rtc.md
msgid ""
"/// Reads and returns a pending byte, or `None` if nothing has been\n"
"    /// received.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md src/exercises/bare-metal/rtc.md
msgid "// TODO: Check for error conditions in bits 8-11.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md
#, fuzzy
msgid ""
"Note the use of `addr_of!` / `addr_of_mut!` to get pointers to individual "
"fields without creating an intermediate reference, which would be unsound."
msgstr ""
"Notez l'utilisation de `addr_of!` / `addr_of_mut!` pour obtenir des "
"pointeurs vers des champs individuels sans cr√©er une r√©f√©rence "
"interm√©diaire, qui serait malsaine."

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
#, fuzzy
msgid "Using it"
msgstr "En l'utilisant"

#: src/bare-metal/aps/better-uart/using.md
#, fuzzy
msgid ""
"Let's write a small program using our driver to write to the serial console, "
"and echo incoming bytes."
msgstr ""
"√âcrivons un petit programme en utilisant notre pilote pour √©crire sur la "
"console s√©rie et √©cho entrant octets."

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Base address of the primary PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because `PL011_BASE_ADDRESS` is the base address of a PL011 device,\n"
"    // and nothing else accesses that address range.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
msgid "\"main({x0:#x}, {x1:#x}, {x2:#x}, {x3:#x})\""
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
msgid "b'\\r'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md src/async/pitfalls/cancellation.md
msgid "b'\\n'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
msgid "b'q'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
msgid "\"Bye!\""
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
#, fuzzy
msgid ""
"As in the [inline assembly](../inline-assembly.md) example, this `main` "
"function is called from our entry point code in `entry.S`. See the speaker "
"notes there for details."
msgstr ""
"Comme dans l'exemple [inline assembly](../inline-assembly.md), cette "
"fonction `main` est appel√©e depuis notre code du point d'entr√©e dans `entry."
"S`. Voir les notes du formateur pour plus de d√©tails."

#: src/bare-metal/aps/better-uart/using.md
#, fuzzy
msgid ""
"Run the example in QEMU with `make qemu` under `src/bare-metal/aps/examples`."
msgstr ""
"Ex√©cutez l'exemple dans QEMU avec `make qemu` sous `src/bare-metal/aps/"
"examples`."

#: src/bare-metal/aps/logging.md
#, fuzzy
msgid ""
"It would be nice to be able to use the logging macros from the [`log`]"
"(https://crates.io/crates/log) crate. We can do this by implementing the "
"`Log` trait."
msgstr ""
"Ce serait bien de pouvoir utiliser les macros de journalisation du crate "
"[`log`](https://crates.io/crates/log). Nous pouvons le faire en impl√©mentant "
"le trait `Log`."

#: src/bare-metal/aps/logging.md src/exercises/bare-metal/rtc.md
msgid "\"[{}] {}\""
msgstr ""

#: src/bare-metal/aps/logging.md src/exercises/bare-metal/rtc.md
msgid "/// Initialises UART logger.\n"
msgstr ""

#: src/bare-metal/aps/logging.md
#, fuzzy
msgid ""
"The unwrap in `log` is safe because we initialise `LOGGER` before calling "
"`set_logger`."
msgstr ""
"Le d√©ballage dans `log` est s√ªr car nous initialisons `LOGGER` avant "
"d'appeler `set_logger`."

#: src/bare-metal/aps/logging/using.md
#, fuzzy
msgid "We need to initialise the logger before we use it."
msgstr "Nous devons initialiser l'enregistreur avant de l'utiliser."

#: src/bare-metal/aps/logging/using.md src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"{info}\""
msgstr ""

#: src/bare-metal/aps/logging/using.md
#, fuzzy
msgid "Note that our panic handler can now log details of panics."
msgstr ""
"Notez que notre gestionnaire de panique peut d√©sormais enregistrer les "
"d√©tails des paniques."

#: src/bare-metal/aps/logging/using.md
#, fuzzy
msgid ""
"Run the example in QEMU with `make qemu_logger` under `src/bare-metal/aps/"
"examples`."
msgstr ""
"Ex√©cutez l'exemple dans QEMU avec `make qemu_logger` sous `src/bare-metal/"
"aps/examples`."

#: src/bare-metal/aps/exceptions.md
msgid ""
"AArch64 defines an exception vector table with 16 entries, for 4 types of "
"exceptions (synchronous, IRQ, FIQ, SError) from 4 states (current EL with "
"SP0, current EL with SPx, lower EL using AArch64, lower EL using AArch32). "
"We implement this in assembly to save volatile registers to the stack before "
"calling into Rust code:"
msgstr ""

#: src/bare-metal/aps/exceptions.md
msgid "EL is exception level; all our examples this afternoon run in EL1."
msgstr ""

#: src/bare-metal/aps/exceptions.md
msgid ""
"For simplicity we aren't distinguishing between SP0 and SPx for the current "
"EL exceptions, or between AArch32 and AArch64 for the lower EL exceptions."
msgstr ""

#: src/bare-metal/aps/exceptions.md
msgid ""
"For this example we just log the exception and power down, as we don't "
"expect any of them to actually happen."
msgstr ""

#: src/bare-metal/aps/exceptions.md
msgid ""
"We can think of exception handlers and our main execution context more or "
"less like different threads. [`Send` and `Sync`](../../concurrency/send-sync."
"md) will control what we can share between them, just like with threads. For "
"example, if we want to share some value between exception handlers and the "
"rest of the program, and it's `Send` but not `Sync`, then we'll need to wrap "
"it in something like a `Mutex` and put it in a static."
msgstr ""

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid "[oreboot](https://github.com/oreboot/oreboot)"
msgstr "[oreboot](https://github.com/oreboot/oreboot)"

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid "\"coreboot without the C\""
msgstr "\"coreboot sans le C\""

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid "Supports x86, aarch64 and RISC-V."
msgstr "Prend en charge x86, aarch64 et RISC-V."

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid "Relies on LinuxBoot rather than having many drivers itself."
msgstr ""
"S'appuie sur LinuxBoot plut√¥t que d'avoir lui-m√™me de nombreux pilotes."

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid ""
"[Rust RaspberryPi OS tutorial](https://github.com/rust-embedded/rust-"
"raspberrypi-OS-tutorials)"
msgstr ""
"\\[Tutoriel Rust RaspberryPi OS\\] (https://github.com/rust-embedded/rust-"
"raspberrypi-OS-tutorials)"

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid ""
"Initialisation, UART driver, simple bootloader, JTAG, exception levels, "
"exception handling, page tables"
msgstr ""
"Initialisation, pilote UART, chargeur de d√©marrage simple, JTAG, niveaux "
"d'exception, gestion des exceptions, tables de pages"

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid ""
"Some dodginess around cache maintenance and initialisation in Rust, not "
"necessarily a good example to copy for production code."
msgstr "Pas tous tr√®s bien √©crits, alors m√©fiez-vous."

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid "[`cargo-call-stack`](https://crates.io/crates/cargo-call-stack)"
msgstr "[`pile-appel-cargo`](https://crates.io/crates/pile-appel-cargo)"

#: src/bare-metal/aps/other-projects.md
#, fuzzy
msgid "Static analysis to determine maximum stack usage."
msgstr "Analyse statique pour d√©terminer l'utilisation maximale de la pile."

#: src/bare-metal/aps/other-projects.md
msgid ""
"The RaspberryPi OS tutorial runs Rust code before the MMU and caches are "
"enabled. This will read and write memory (e.g. the stack). However:"
msgstr ""

#: src/bare-metal/aps/other-projects.md
msgid ""
"Without the MMU and cache, unaligned accesses will fault. It builds with "
"`aarch64-unknown-none` which sets `+strict-align` to prevent the compiler "
"generating unaligned accesses so it should be alright, but this is not "
"necessarily the case in general."
msgstr ""

#: src/bare-metal/aps/other-projects.md
msgid ""
"If it were running in a VM, this can lead to cache coherency issues. The "
"problem is that the VM is accessing memory directly with the cache disabled, "
"while the host has cacheable aliases to the same memory. Even if the host "
"doesn't explicitly access the memory, speculative accesses can lead to cache "
"fills, and then changes from one or the other will get lost. Again this is "
"alright in this particular case (running directly on the hardware with no "
"hypervisor), but isn't a good pattern in general."
msgstr ""

#: src/bare-metal/useful-crates.md
msgid "Useful crates"
msgstr "Crates utiles"

#: src/bare-metal/useful-crates.md
#, fuzzy
msgid ""
"We'll go over a few crates which solve some common problems in bare-metal "
"programming."
msgstr ""
"Nous allons passer en revue quelques caisses qui r√©solvent certains "
"probl√®mes courants de la programmation bare-metal."

#: src/bare-metal/useful-crates/zerocopy.md
#, fuzzy
msgid ""
"The [`zerocopy`](https://docs.rs/zerocopy/) crate (from Fuchsia) provides "
"traits and macros for safely converting between byte sequences and other "
"types."
msgstr ""
"La caisse [`zerocopy`](https://docs.rs/zerocopy/) (de Fuchsia) fournit des "
"traits et des macros pour convertir en toute s√©curit√© entre s√©quences "
"d'octets et autres types."

#: src/bare-metal/useful-crates/zerocopy.md
#, fuzzy
msgid ""
"This is not suitable for MMIO (as it doesn't use volatile reads and writes), "
"but can be useful for working with structures shared with hardware e.g. by "
"DMA, or sent over some external interface."
msgstr ""
"Ce n'est pas adapt√© pour MMIO (car il n'utilise pas de lectures et "
"d'√©critures volatiles), mais peut √™tre utile pour travailler avec des "
"structures partag√©es avec du mat√©riel, par ex. par DMA, ou envoy√© sur une "
"interface externe."

#: src/bare-metal/useful-crates/zerocopy.md
#, fuzzy
msgid ""
"`FromBytes` can be implemented for types for which any byte pattern is "
"valid, and so can safely be converted from an untrusted sequence of bytes."
msgstr ""
"`FromBytes` peut √™tre impl√©ment√© pour les types pour lesquels n'importe quel "
"mod√®le d'octet est valide, et peut donc √™tre en toute s√©curit√© converti √† "
"partir d'une s√©quence d'octets non fiable."

#: src/bare-metal/useful-crates/zerocopy.md
#, fuzzy
msgid ""
"Attempting to derive `FromBytes` for these types would fail, because "
"`RequestType` doesn't use all possible u32 values as discriminants, so not "
"all byte patterns are valid."
msgstr ""
"Tenter de d√©river `FromBytes` pour ces types √©chouerait, car `RequestType` "
"n'utilise pas tous les valeurs u32 possibles comme discriminants, donc tous "
"les mod√®les d'octets ne sont pas valides."

#: src/bare-metal/useful-crates/zerocopy.md
#, fuzzy
msgid ""
"`zerocopy::byteorder` has types for byte-order aware numeric primitives."
msgstr ""
"`zerocopy::byteorder` a des types pour les primitives num√©riques sensibles √† "
"l'ordre des octets."

#: src/bare-metal/useful-crates/zerocopy.md
#, fuzzy
msgid ""
"Run the example with `cargo run` under `src/bare-metal/useful-crates/"
"zerocopy-example/`. (It won't run in the Playground because of the crate "
"dependency.)"
msgstr ""
"Ex√©cutez l'exemple avec `cargo run` sous `src/bare-metal/useful-crates/"
"zerocopy-example/`. (Ce ne sera pas ex√©cuter dans le Playground en raison de "
"la d√©pendance de la caisse.)"

#: src/bare-metal/useful-crates/aarch64-paging.md
#, fuzzy
msgid ""
"The [`aarch64-paging`](https://crates.io/crates/aarch64-paging) crate lets "
"you create page tables according to the AArch64 Virtual Memory System "
"Architecture."
msgstr ""
"La caisse [`aarch64-paging`](https://crates.io/crates/aarch64-paging) vous "
"permet de cr√©er des tables de pages en fonction de la m√©moire virtuelle "
"AArch64 Architecture du syst√®me."

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid "// Create a new page table with identity mapping.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid "// Map a 2 MiB region of memory as read-only.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid "// Set `TTBR0_EL1` to activate the page table.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md
#, fuzzy
msgid ""
"For now it only supports EL1, but support for other exception levels should "
"be straightforward to add."
msgstr ""
"Pour l'instant, il ne prend en charge que EL1, mais la prise en charge "
"d'autres niveaux d'exception devrait √™tre simple √† ajouter."

#: src/bare-metal/useful-crates/aarch64-paging.md
#, fuzzy
msgid ""
"This is used in Android for the [Protected VM Firmware](https://cs.android."
"com/android/platform/superproject/+/master:packages/modules/Virtualization/"
"pvmfw/)."
msgstr ""
"Ceci est utilis√© dans Android pour le \\[micrologiciel de la machine "
"virtuelle prot√©g√©e\\] [2](https://cs.android.com/android/platform/"
"superproject/+/master:packages/modules/Virtualization/pvmfw/)."

#: src/bare-metal/useful-crates/aarch64-paging.md
#, fuzzy
msgid ""
"There's no easy way to run this example, as it needs to run on real hardware "
"or under QEMU."
msgstr ""
"Il n'y a pas de moyen simple d'ex√©cuter cet exemple, car il doit √™tre "
"ex√©cut√© sur du mat√©riel r√©el ou sous QEMU."

#: src/bare-metal/useful-crates/buddy_system_allocator.md
#, fuzzy
msgid ""
"[`buddy_system_allocator`](https://crates.io/crates/buddy_system_allocator) "
"is a third-party crate implementing a basic buddy system allocator. It can "
"be used both for [`LockedHeap`](https://docs.rs/buddy_system_allocator/0.9.0/"
"buddy_system_allocator/struct.LockedHeap.html) implementing [`GlobalAlloc`]"
"(https://doc.rust-lang.org/core/alloc/trait.GlobalAlloc.html) so you can use "
"the standard `alloc` crate (as we saw [before](../alloc.md)), or for "
"allocating other address space. For example, we might want to allocate MMIO "
"space for PCI BARs:"
msgstr ""
"[`buddy_system_allocator`](https://crates.io/crates/buddy_system_allocator) "
"est une caisse tierce impl√©mentant un syst√®me d'allocation de copains de "
"base. Il peut √™tre utilis√© √† la fois pour [`LockedHeap`](https://docs.rs/"
"buddy_system_allocator/0.9.0/buddy_system_allocator/struct.LockedHeap.html) "
"impl√©mentant [`GlobalAlloc`](https://doc.rust-lang.org/core/alloc/trait."
"GlobalAlloc.html) afin que vous puissiez utiliser le caisse `alloc` standard "
"(comme nous l'avons vu \\[avant\\] [4](../alloc.md)), ou pour allouer un "
"autre espace d'adressage. Par exemple, nous pourrions vouloir allouer de "
"l'espace MMIO pour les PCI BAR¬†:"

#: src/bare-metal/useful-crates/buddy_system_allocator.md
#, fuzzy
msgid "PCI BARs always have alignment equal to their size."
msgstr "Les PCI BAR ont toujours un alignement √©gal √† leur taille."

#: src/bare-metal/useful-crates/buddy_system_allocator.md
#, fuzzy
msgid ""
"Run the example with `cargo run` under `src/bare-metal/useful-crates/"
"allocator-example/`. (It won't run in the Playground because of the crate "
"dependency.)"
msgstr ""
"Ex√©cutez l'exemple avec `cargo run` sous `src/bare-metal/useful-crates/"
"allocator-example/`. (Ce ne sera pas ex√©cuter dans le Playground en raison "
"de la d√©pendance de la caisse.)"

#: src/bare-metal/useful-crates/tinyvec.md
#, fuzzy
msgid ""
"Sometimes you want something which can be resized like a `Vec`, but without "
"heap allocation. [`tinyvec`](https://crates.io/crates/tinyvec) provides "
"this: a vector backed by an array or slice, which could be statically "
"allocated or on the stack, which keeps track of how many elements are used "
"and panics if you try to use more than are allocated."
msgstr ""
"Parfois, vous voulez quelque chose qui peut √™tre redimensionn√© comme un "
"`Vec`, mais sans allocation de tas. [`tinyvec`](https://crates.io/crates/"
"tinyvec) fournit ceci¬†: un vecteur soutenu par un tableau ou une tranche, "
"qui pourrait √™tre statiquement allou√© ou sur la pile, qui garde une trace du "
"nombre d'√©l√©ments utilis√©s et panique si vous essayez de utiliser plus que "
"ce qui est allou√©."

#: src/bare-metal/useful-crates/tinyvec.md
#, fuzzy
msgid ""
"`tinyvec` requires that the element type implement `Default` for "
"initialisation."
msgstr ""
"`tinyvec` n√©cessite que le type d'√©l√©ment impl√©mente `Default` pour "
"l'initialisation."

#: src/bare-metal/useful-crates/tinyvec.md
#, fuzzy
msgid ""
"The Rust Playground includes `tinyvec`, so this example will run fine inline."
msgstr ""
"Le Rust Playground inclut `tinyvec`, donc cet exemple fonctionnera bien en "
"ligne."

#: src/bare-metal/useful-crates/spin.md
#, fuzzy
msgid ""
"`std::sync::Mutex` and the other synchronisation primitives from `std::sync` "
"are not available in `core` or `alloc`. How can we manage synchronisation or "
"interior mutability, such as for sharing state between different CPUs?"
msgstr ""
"`std::sync::Mutex` et les autres primitives de synchronisation de `std::"
"sync` ne sont pas disponibles dans `core` ou `alloc`. Comment g√©rer la "
"synchronisation ou la mutabilit√© int√©rieure, comme pour le partage √©tat "
"entre diff√©rents processeurs¬†?"

#: src/bare-metal/useful-crates/spin.md
#, fuzzy
msgid ""
"The [`spin`](https://crates.io/crates/spin) crate provides spinlock-based "
"equivalents of many of these primitives."
msgstr ""
"Le crate [`spin`](https://crates.io/crates/spin) fournit des √©quivalents "
"bas√©s sur des verrous d'attente de plusieurs de ces primitives."

#: src/bare-metal/useful-crates/spin.md
msgid "Be careful to avoid deadlock if you take locks in interrupt handlers."
msgstr ""

#: src/bare-metal/useful-crates/spin.md
msgid ""
"`spin` also has a ticket lock mutex implementation; equivalents of `RwLock`, "
"`Barrier` and `Once` from `std::sync`; and `Lazy` for lazy initialisation."
msgstr ""

#: src/bare-metal/useful-crates/spin.md
msgid ""
"The [`once_cell`](https://crates.io/crates/once_cell) crate also has some "
"useful types for late initialisation with a slightly different approach to "
"`spin::once::Once`."
msgstr ""

#: src/bare-metal/useful-crates/spin.md
msgid ""
"The Rust Playground includes `spin`, so this example will run fine inline."
msgstr ""

#: src/bare-metal/android.md
#, fuzzy
msgid ""
"To build a bare-metal Rust binary in AOSP, you need to use a "
"`rust_ffi_static` Soong rule to build your Rust code, then a `cc_binary` "
"with a linker script to produce the binary itself, and then a `raw_binary` "
"to convert the ELF to a raw binary ready to be run."
msgstr ""
"Pour construire un binaire Rust bare-metal dans AOSP, vous devez utiliser "
"une r√®gle Soong `rust_ffi_static` pour construire votre code Rust, puis un "
"`cc_binary` avec un script de liaison pour produire le binaire lui-m√™me, "
"puis un `raw_binary` pour convertir l'ELF en un binaire brut pr√™t √† √™tre "
"ex√©cut√©."

#: src/bare-metal/android/vmbase.md
msgid "vmbase"
msgstr "vmbase"

#: src/bare-metal/android/vmbase.md
#, fuzzy
msgid ""
"For VMs running under crosvm on aarch64, the [vmbase](https://android."
"googlesource.com/platform/packages/modules/Virtualization/+/refs/heads/"
"master/vmbase/) library provides a linker script and useful defaults for the "
"build rules, along with an entry point, UART console logging and more."
msgstr ""
"Pour les machines virtuelles ex√©cut√©es sous crosvm sur aarch64, la "
"biblioth√®que [vmbase](https://android.googlesource.com/platform/packages/"
"modules/Virtualization/+/refs/heads/master/vmbase/) fournit un script de "
"liaison et des informations utiles. valeurs par d√©faut pour les r√®gles de "
"construction, ainsi qu'un point d'entr√©e, la journalisation de la console "
"UART et plus encore."

#: src/bare-metal/android/vmbase.md
#, fuzzy
msgid ""
"The `main!` macro marks your main function, to be called from the `vmbase` "
"entry point."
msgstr ""
"La macro `main!` marque votre fonction principale, √† appeler depuis le point "
"d'entr√©e `vmbase`."

#: src/bare-metal/android/vmbase.md
#, fuzzy
msgid ""
"The `vmbase` entry point handles console initialisation, and issues a "
"PSCI_SYSTEM_OFF to shutdown the VM if your main function returns."
msgstr ""
"Le point d'entr√©e `vmbase` g√®re l'initialisation de la console et √©met un "
"PSCI_SYSTEM_OFF pour l'arr√™t la VM si votre fonction principale revient."

#: src/exercises/bare-metal/afternoon.md
#, fuzzy
msgid "We will write a driver for the PL031 real-time clock device."
msgstr ""
"Nous allons √©crire un pilote pour le dispositif d'horloge en temps r√©el "
"PL031."

#: src/exercises/bare-metal/afternoon.md src/exercises/concurrency/afternoon.md
#, fuzzy
msgid ""
"After looking at the exercises, you can look at the [solutions](solutions-"
"afternoon.md) provided."
msgstr ""
"Apr√®s avoir regard√© l'exercice, vous pouvez regarder la [solution](solutions-"
"afternoon.md) fournie."

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "RTC driver"
msgstr "Pilote RTC"

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid ""
"The QEMU aarch64 virt machine has a [PL031](https://developer.arm.com/"
"documentation/ddi0224/c) real-time clock at 0x9010000. For this exercise, "
"you should write a driver for it."
msgstr ""
"La machine QEMU aarch64 virt a une horloge en temps r√©el \\[PL031\\] [1]"
"(https://developer.arm.com/documentation/ddi0224/c) √† 0x9010000. Pour cet "
"exercice, vous devrait √©crire un pilote pour cela et l'utiliser pour "
"imprimer l'heure actuelle sur la console s√©rie. Vous pouvez utiliser la "
"caisse [`chrono`](https://crates.io/crates/chrono) pour le formatage de la "
"date/heure."

#: src/exercises/bare-metal/rtc.md
msgid ""
"Use it to print the current time to the serial console. You can use the "
"[`chrono`](https://crates.io/crates/chrono) crate for date/time formatting."
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"Use the match register and raw interrupt status to busy-wait until a given "
"time, e.g. 3 seconds in the future. (Call [`core::hint::spin_loop`](https://"
"doc.rust-lang.org/core/hint/fn.spin_loop.html) inside the loop.)"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"_Extension if you have time:_ Enable and handle the interrupt generated by "
"the RTC match. You can use the driver provided in the [`arm-gic`](https://"
"docs.rs/arm-gic/) crate to configure the Arm Generic Interrupt Controller."
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "Use the RTC interrupt, which is wired to the GIC as `IntId::spi(2)`."
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"Once the interrupt is enabled, you can put the core to sleep via `arm_gic::"
"wfi()`, which will cause the core to sleep until it receives an interrupt."
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid ""
"Download the [exercise template](../../comprehensive-rust-exercises.zip) and "
"look in the `rtc` directory for the following files."
msgstr ""
"T√©l√©chargez le \\[mod√®le d'exercice\\] (../../comprehensive-rust-exercises."
"zip) et regardez dans le `rtc` r√©pertoire pour les fichiers suivants."

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Base addresses of the GICv3.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"main({:#x}, {:#x}, {:#x}, {:#x})\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because `GICD_BASE_ADDRESS` and `GICR_BASE_ADDRESS` are the base\n"
"    // addresses of a GICv3 distributor and redistributor respectively, and\n"
"    // nothing else accesses those address ranges.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// TODO: Create instance of RTC driver and print current time.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// TODO: Wait for 3 seconds.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid ""
"_src/exceptions.rs_ (you should only need to change this for the 3rd part of "
"the exercise):"
msgstr ""
"`src/exceptions.rs` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid ""
"// Copyright 2023 Google LLC\n"
"//\n"
"// Licensed under the Apache License, Version 2.0 (the \"License\");\n"
"// you may not use this file except in compliance with the License.\n"
"// You may obtain a copy of the License at\n"
"//\n"
"//      http://www.apache.org/licenses/LICENSE-2.0\n"
"//\n"
"// Unless required by applicable law or agreed to in writing, software\n"
"// distributed under the License is distributed on an \"AS IS\" BASIS,\n"
"// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
"// See the License for the specific language governing permissions and\n"
"// limitations under the License.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"sync_exception_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"irq_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"No pending interrupt\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"IRQ {intid:?}\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"fiq_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"serr_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"sync_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"irq_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"fiq_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"serr_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_src/logger.rs_ (you shouldn't need to change this):"
msgstr "`src/logger.rs` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR: main\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_src/pl011.rs_ (you shouldn't need to change this):"
msgstr "`src/pl011.rs` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR: Flags\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR_END: Flags\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"/// Flags from the UART Receive Status Register / Error Clear Register.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Framing error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Parity error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Break error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Overrun error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR: Registers\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR_END: Registers\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"// ANCHOR: Uart\n"
"/// Driver for a PL011 UART.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"/// Constructs a new instance of the UART driver for a PL011 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the MMIO control registers of "
"a\n"
"    /// PL011 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR_END: Uart\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_build.rs_ (you shouldn't need to change this):"
msgstr "`build.rs` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid "\"linux\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"CROSS_COMPILE\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "\"aarch64-linux-gnu\""
msgstr "aarch64-paging"

#: src/exercises/bare-metal/rtc.md
msgid "\"aarch64-none-elf\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"entry.S\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "\"exceptions.S\""
msgstr "Exceptions"

#: src/exercises/bare-metal/rtc.md
msgid "\"idmap.S\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"empty\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_entry.S_ (you shouldn't need to change this):"
msgstr "`entry.S` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
".macro adr_l, reg:req, sym:req\n"
"\tadrp \\reg, \\sym\n"
"\tadd \\reg, \\reg, :lo12:\\sym\n"
".endm\n"
"\n"
".macro mov_i, reg:req, imm:req\n"
"\tmovz \\reg, :abs_g3:\\imm\n"
"\tmovk \\reg, :abs_g2_nc:\\imm\n"
"\tmovk \\reg, :abs_g1_nc:\\imm\n"
"\tmovk \\reg, :abs_g0_nc:\\imm\n"
".endm\n"
"\n"
".set .L_MAIR_DEV_nGnRE,\t0x04\n"
".set .L_MAIR_MEM_WBWA,\t0xff\n"
".set .Lmairval, .L_MAIR_DEV_nGnRE | (.L_MAIR_MEM_WBWA << 8)\n"
"\n"
"/* 4 KiB granule size for TTBR0_EL1. */\n"
".set .L_TCR_TG0_4KB, 0x0 << 14\n"
"/* 4 KiB granule size for TTBR1_EL1. */\n"
".set .L_TCR_TG1_4KB, 0x2 << 30\n"
"/* Disable translation table walk for TTBR1_EL1, generating a translation "
"fault instead. */\n"
".set .L_TCR_EPD1, 0x1 << 23\n"
"/* Translation table walks for TTBR0_EL1 are inner sharable. */\n"
".set .L_TCR_SH_INNER, 0x3 << 12\n"
"/*\n"
" * Translation table walks for TTBR0_EL1 are outer write-back read-allocate "
"write-allocate\n"
" * cacheable.\n"
" */\n"
".set .L_TCR_RGN_OWB, 0x1 << 10\n"
"/*\n"
" * Translation table walks for TTBR0_EL1 are inner write-back read-allocate "
"write-allocate\n"
" * cacheable.\n"
" */\n"
".set .L_TCR_RGN_IWB, 0x1 << 8\n"
"/* Size offset for TTBR0_EL1 is 2**39 bytes (512 GiB). */\n"
".set .L_TCR_T0SZ_512, 64 - 39\n"
".set .Ltcrval, .L_TCR_TG0_4KB | .L_TCR_TG1_4KB | .L_TCR_EPD1 | ."
"L_TCR_RGN_OWB\n"
".set .Ltcrval, .Ltcrval | .L_TCR_RGN_IWB | .L_TCR_SH_INNER | ."
"L_TCR_T0SZ_512\n"
"\n"
"/* Stage 1 instruction access cacheability is unaffected. */\n"
".set .L_SCTLR_ELx_I, 0x1 << 12\n"
"/* SP alignment fault if SP is not aligned to a 16 byte boundary. */\n"
".set .L_SCTLR_ELx_SA, 0x1 << 3\n"
"/* Stage 1 data access cacheability is unaffected. */\n"
".set .L_SCTLR_ELx_C, 0x1 << 2\n"
"/* EL0 and EL1 stage 1 MMU enabled. */\n"
".set .L_SCTLR_ELx_M, 0x1 << 0\n"
"/* Privileged Access Never is unchanged on taking an exception to EL1. */\n"
".set .L_SCTLR_EL1_SPAN, 0x1 << 23\n"
"/* SETEND instruction disabled at EL0 in aarch32 mode. */\n"
".set .L_SCTLR_EL1_SED, 0x1 << 8\n"
"/* Various IT instructions are disabled at EL0 in aarch32 mode. */\n"
".set .L_SCTLR_EL1_ITD, 0x1 << 7\n"
".set .L_SCTLR_EL1_RES1, (0x1 << 11) | (0x1 << 20) | (0x1 << 22) | (0x1 << "
"28) | (0x1 << 29)\n"
".set .Lsctlrval, .L_SCTLR_ELx_M | .L_SCTLR_ELx_C | .L_SCTLR_ELx_SA | ."
"L_SCTLR_EL1_ITD | .L_SCTLR_EL1_SED\n"
".set .Lsctlrval, .Lsctlrval | .L_SCTLR_ELx_I | .L_SCTLR_EL1_SPAN | ."
"L_SCTLR_EL1_RES1\n"
"\n"
"/**\n"
" * This is a generic entry point for an image. It carries out the operations "
"required to prepare the\n"
" * loaded image to be run. Specifically, it zeroes the bss section using "
"registers x25 and above,\n"
" * prepares the stack, enables floating point, and sets up the exception "
"vector. It preserves x0-x3\n"
" * for the Rust entry point, as these may contain boot parameters.\n"
" */\n"
".section .init.entry, \"ax\"\n"
".global entry\n"
"entry:\n"
"\t/* Load and apply the memory management configuration, ready to enable MMU "
"and caches. */\n"
"\tadrp x30, idmap\n"
"\tmsr ttbr0_el1, x30\n"
"\n"
"\tmov_i x30, .Lmairval\n"
"\tmsr mair_el1, x30\n"
"\n"
"\tmov_i x30, .Ltcrval\n"
"\t/* Copy the supported PA range into TCR_EL1.IPS. */\n"
"\tmrs x29, id_aa64mmfr0_el1\n"
"\tbfi x30, x29, #32, #4\n"
"\n"
"\tmsr tcr_el1, x30\n"
"\n"
"\tmov_i x30, .Lsctlrval\n"
"\n"
"\t/*\n"
"\t * Ensure everything before this point has completed, then invalidate any "
"potentially stale\n"
"\t * local TLB entries before they start being used.\n"
"\t */\n"
"\tisb\n"
"\ttlbi vmalle1\n"
"\tic iallu\n"
"\tdsb nsh\n"
"\tisb\n"
"\n"
"\t/*\n"
"\t * Configure sctlr_el1 to enable MMU and cache and don't proceed until "
"this has completed.\n"
"\t */\n"
"\tmsr sctlr_el1, x30\n"
"\tisb\n"
"\n"
"\t/* Disable trapping floating point access in EL1. */\n"
"\tmrs x30, cpacr_el1\n"
"\torr x30, x30, #(0x3 << 20)\n"
"\tmsr cpacr_el1, x30\n"
"\tisb\n"
"\n"
"\t/* Zero out the bss section. */\n"
"\tadr_l x29, bss_begin\n"
"\tadr_l x30, bss_end\n"
"0:\tcmp x29, x30\n"
"\tb.hs 1f\n"
"\tstp xzr, xzr, [x29], #16\n"
"\tb 0b\n"
"\n"
"1:\t/* Prepare the stack. */\n"
"\tadr_l x30, boot_stack_end\n"
"\tmov sp, x30\n"
"\n"
"\t/* Set up exception vector. */\n"
"\tadr x30, vector_table_el1\n"
"\tmsr vbar_el1, x30\n"
"\n"
"\t/* Call into Rust code. */\n"
"\tbl main\n"
"\n"
"\t/* Loop forever waiting for interrupts. */\n"
"2:\twfi\n"
"\tb 2b\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_exceptions.S_ (you shouldn't need to change this):"
msgstr "`exceptions.S` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
"/**\n"
" * Saves the volatile registers onto the stack. This currently takes 14\n"
" * instructions, so it can be used in exception handlers with 18 "
"instructions\n"
" * left.\n"
" *\n"
" * On return, x0 and x1 are initialised to elr_el2 and spsr_el2 "
"respectively,\n"
" * which can be used as the first and second arguments of a subsequent "
"call.\n"
" */\n"
".macro save_volatile_to_stack\n"
"\t/* Reserve stack space and save registers x0-x18, x29 & x30. */\n"
"\tstp x0, x1, [sp, #-(8 * 24)]!\n"
"\tstp x2, x3, [sp, #8 * 2]\n"
"\tstp x4, x5, [sp, #8 * 4]\n"
"\tstp x6, x7, [sp, #8 * 6]\n"
"\tstp x8, x9, [sp, #8 * 8]\n"
"\tstp x10, x11, [sp, #8 * 10]\n"
"\tstp x12, x13, [sp, #8 * 12]\n"
"\tstp x14, x15, [sp, #8 * 14]\n"
"\tstp x16, x17, [sp, #8 * 16]\n"
"\tstr x18, [sp, #8 * 18]\n"
"\tstp x29, x30, [sp, #8 * 20]\n"
"\n"
"\t/*\n"
"\t * Save elr_el1 & spsr_el1. This such that we can take nested exception\n"
"\t * and still be able to unwind.\n"
"\t */\n"
"\tmrs x0, elr_el1\n"
"\tmrs x1, spsr_el1\n"
"\tstp x0, x1, [sp, #8 * 22]\n"
".endm\n"
"\n"
"/**\n"
" * Restores the volatile registers from the stack. This currently takes 14\n"
" * instructions, so it can be used in exception handlers while still leaving "
"18\n"
" * instructions left; if paired with save_volatile_to_stack, there are 4\n"
" * instructions to spare.\n"
" */\n"
".macro restore_volatile_from_stack\n"
"\t/* Restore registers x2-x18, x29 & x30. */\n"
"\tldp x2, x3, [sp, #8 * 2]\n"
"\tldp x4, x5, [sp, #8 * 4]\n"
"\tldp x6, x7, [sp, #8 * 6]\n"
"\tldp x8, x9, [sp, #8 * 8]\n"
"\tldp x10, x11, [sp, #8 * 10]\n"
"\tldp x12, x13, [sp, #8 * 12]\n"
"\tldp x14, x15, [sp, #8 * 14]\n"
"\tldp x16, x17, [sp, #8 * 16]\n"
"\tldr x18, [sp, #8 * 18]\n"
"\tldp x29, x30, [sp, #8 * 20]\n"
"\n"
"\t/* Restore registers elr_el1 & spsr_el1, using x0 & x1 as scratch. */\n"
"\tldp x0, x1, [sp, #8 * 22]\n"
"\tmsr elr_el1, x0\n"
"\tmsr spsr_el1, x1\n"
"\n"
"\t/* Restore x0 & x1, and release stack space. */\n"
"\tldp x0, x1, [sp], #8 * 24\n"
".endm\n"
"\n"
"/**\n"
" * This is a generic handler for exceptions taken at the current EL while "
"using\n"
" * SP0. It behaves similarly to the SPx case by first switching to SPx, "
"doing\n"
" * the work, then switching back to SP0 before returning.\n"
" *\n"
" * Switching to SPx and calling the Rust handler takes 16 instructions. To\n"
" * restore and return we need an additional 16 instructions, so we can "
"implement\n"
" * the whole handler within the allotted 32 instructions.\n"
" */\n"
".macro current_exception_sp0 handler:req\n"
"\tmsr spsel, #1\n"
"\tsave_volatile_to_stack\n"
"\tbl \\handler\n"
"\trestore_volatile_from_stack\n"
"\tmsr spsel, #0\n"
"\teret\n"
".endm\n"
"\n"
"/**\n"
" * This is a generic handler for exceptions taken at the current EL while "
"using\n"
" * SPx. It saves volatile registers, calls the Rust handler, restores "
"volatile\n"
" * registers, then returns.\n"
" *\n"
" * This also works for exceptions taken from EL0, if we don't care about\n"
" * non-volatile registers.\n"
" *\n"
" * Saving state and jumping to the Rust handler takes 15 instructions, and\n"
" * restoring and returning also takes 15 instructions, so we can fit the "
"whole\n"
" * handler in 30 instructions, under the limit of 32.\n"
" */\n"
".macro current_exception_spx handler:req\n"
"\tsave_volatile_to_stack\n"
"\tbl \\handler\n"
"\trestore_volatile_from_stack\n"
"\teret\n"
".endm\n"
"\n"
".section .text.vector_table_el1, \"ax\"\n"
".global vector_table_el1\n"
".balign 0x800\n"
"vector_table_el1:\n"
"sync_cur_sp0:\n"
"\tcurrent_exception_sp0 sync_exception_current\n"
"\n"
".balign 0x80\n"
"irq_cur_sp0:\n"
"\tcurrent_exception_sp0 irq_current\n"
"\n"
".balign 0x80\n"
"fiq_cur_sp0:\n"
"\tcurrent_exception_sp0 fiq_current\n"
"\n"
".balign 0x80\n"
"serr_cur_sp0:\n"
"\tcurrent_exception_sp0 serr_current\n"
"\n"
".balign 0x80\n"
"sync_cur_spx:\n"
"\tcurrent_exception_spx sync_exception_current\n"
"\n"
".balign 0x80\n"
"irq_cur_spx:\n"
"\tcurrent_exception_spx irq_current\n"
"\n"
".balign 0x80\n"
"fiq_cur_spx:\n"
"\tcurrent_exception_spx fiq_current\n"
"\n"
".balign 0x80\n"
"serr_cur_spx:\n"
"\tcurrent_exception_spx serr_current\n"
"\n"
".balign 0x80\n"
"sync_lower_64:\n"
"\tcurrent_exception_spx sync_lower\n"
"\n"
".balign 0x80\n"
"irq_lower_64:\n"
"\tcurrent_exception_spx irq_lower\n"
"\n"
".balign 0x80\n"
"fiq_lower_64:\n"
"\tcurrent_exception_spx fiq_lower\n"
"\n"
".balign 0x80\n"
"serr_lower_64:\n"
"\tcurrent_exception_spx serr_lower\n"
"\n"
".balign 0x80\n"
"sync_lower_32:\n"
"\tcurrent_exception_spx sync_lower\n"
"\n"
".balign 0x80\n"
"irq_lower_32:\n"
"\tcurrent_exception_spx irq_lower\n"
"\n"
".balign 0x80\n"
"fiq_lower_32:\n"
"\tcurrent_exception_spx fiq_lower\n"
"\n"
".balign 0x80\n"
"serr_lower_32:\n"
"\tcurrent_exception_spx serr_lower\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_idmap.S_ (you shouldn't need to change this):"
msgstr "`idmap.S` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
".set .L_TT_TYPE_BLOCK, 0x1\n"
".set .L_TT_TYPE_PAGE,  0x3\n"
".set .L_TT_TYPE_TABLE, 0x3\n"
"\n"
"/* Access flag. */\n"
".set .L_TT_AF, 0x1 << 10\n"
"/* Not global. */\n"
".set .L_TT_NG, 0x1 << 11\n"
".set .L_TT_XN, 0x3 << 53\n"
"\n"
".set .L_TT_MT_DEV, 0x0 << 2\t\t\t// MAIR #0 (DEV_nGnRE)\n"
".set .L_TT_MT_MEM, (0x1 << 2) | (0x3 << 8)\t// MAIR #1 (MEM_WBWA), inner "
"shareable\n"
"\n"
".set .L_BLOCK_DEV, .L_TT_TYPE_BLOCK | .L_TT_MT_DEV | .L_TT_AF | .L_TT_XN\n"
".set .L_BLOCK_MEM, .L_TT_TYPE_BLOCK | .L_TT_MT_MEM | .L_TT_AF | .L_TT_NG\n"
"\n"
".section \".rodata.idmap\", \"a\", %progbits\n"
".global idmap\n"
".align 12\n"
"idmap:\n"
"\t/* level 1 */\n"
"\t.quad\t\t.L_BLOCK_DEV | 0x0\t\t    // 1 GiB of device mappings\n"
"\t.quad\t\t.L_BLOCK_MEM | 0x40000000\t// 1 GiB of DRAM\n"
"\t.fill\t\t254, 8, 0x0\t\t\t// 254 GiB of unmapped VA space\n"
"\t.quad\t\t.L_BLOCK_DEV | 0x4000000000 // 1 GiB of device mappings\n"
"\t.fill\t\t255, 8, 0x0\t\t\t// 255 GiB of remaining VA space\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_image.ld_ (you shouldn't need to change this):"
msgstr "`image.ld` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```ld\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
"/*\n"
" * Code will start running at this symbol which is placed at the start of "
"the\n"
" * image.\n"
" */\n"
"ENTRY(entry)\n"
"\n"
"MEMORY\n"
"{\n"
"\timage : ORIGIN = 0x40080000, LENGTH = 2M\n"
"}\n"
"\n"
"SECTIONS\n"
"{\n"
"\t/*\n"
"\t * Collect together the code.\n"
"\t */\n"
"\t.init : ALIGN(4096) {\n"
"\t\ttext_begin = .;\n"
"\t\t*(.init.entry)\n"
"\t\t*(.init.*)\n"
"\t} >image\n"
"\t.text : {\n"
"\t\t*(.text.*)\n"
"\t} >image\n"
"\ttext_end = .;\n"
"\n"
"\t/*\n"
"\t * Collect together read-only data.\n"
"\t */\n"
"\t.rodata : ALIGN(4096) {\n"
"\t\trodata_begin = .;\n"
"\t\t*(.rodata.*)\n"
"\t} >image\n"
"\t.got : {\n"
"\t\t*(.got)\n"
"\t} >image\n"
"\trodata_end = .;\n"
"\n"
"\t/*\n"
"\t * Collect together the read-write data including .bss at the end which\n"
"\t * will be zero'd by the entry code.\n"
"\t */\n"
"\t.data : ALIGN(4096) {\n"
"\t\tdata_begin = .;\n"
"\t\t*(.data.*)\n"
"\t\t/*\n"
"\t\t * The entry point code assumes that .data is a multiple of 32\n"
"\t\t * bytes long.\n"
"\t\t */\n"
"\t\t. = ALIGN(32);\n"
"\t\tdata_end = .;\n"
"\t} >image\n"
"\n"
"\t/* Everything beyond this point will not be included in the binary. */\n"
"\tbin_end = .;\n"
"\n"
"\t/* The entry point code assumes that .bss is 16-byte aligned. */\n"
"\t.bss : ALIGN(16)  {\n"
"\t\tbss_begin = .;\n"
"\t\t*(.bss.*)\n"
"\t\t*(COMMON)\n"
"\t\t. = ALIGN(16);\n"
"\t\tbss_end = .;\n"
"\t} >image\n"
"\n"
"\t.stack (NOLOAD) : ALIGN(4096) {\n"
"\t\tboot_stack_begin = .;\n"
"\t\t. += 40 * 4096;\n"
"\t\t. = ALIGN(4096);\n"
"\t\tboot_stack_end = .;\n"
"\t} >image\n"
"\n"
"\t. = ALIGN(4K);\n"
"\tPROVIDE(dma_region = .);\n"
"\n"
"\t/*\n"
"\t * Remove unused sections from the image.\n"
"\t */\n"
"\t/DISCARD/ : {\n"
"\t\t/* The image loads itself so doesn't need these sections. */\n"
"\t\t*(.gnu.hash)\n"
"\t\t*(.hash)\n"
"\t\t*(.interp)\n"
"\t\t*(.eh_frame_hdr)\n"
"\t\t*(.eh_frame)\n"
"\t\t*(.note.gnu.build-id)\n"
"\t}\n"
"}\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_Makefile_ (you shouldn't need to change this):"
msgstr "`Makefile` (vous ne devriez pas avoir besoin de le modifier)¬†:"

#: src/exercises/bare-metal/rtc.md
msgid "# Copyright 2023 Google LLC"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "$(shell uname -s)"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "aarch64-linux-gnu"
msgstr "aarch64-paging"

#: src/exercises/bare-metal/rtc.md
msgid "stdio -display none -kernel $< -s"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "cargo clean"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "Run the code in QEMU with `make qemu`."
msgstr "Ex√©cutez le code dans QEMU avec `make qemu`."

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "Bare Metal Rust Afternoon"
msgstr "Bare Metal Rust Apr√®s-midi"

#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "([back to exercise](rtc.md))"
msgstr "([retour √† l'exercice](rtc.md))"

#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "_main.rs_:"
msgstr "`main.rs`¬†:"

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Base address of the PL031 RTC.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// The IRQ used by the PL031 RTC.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because `PL031_BASE_ADDRESS` is the base address of a PL031 device,\n"
"    // and nothing else accesses that address range.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"RTC: {time}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "// Wait for 3 seconds, without interrupts.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"Waiting for {}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"matched={}, interrupt_pending={}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"Finished waiting\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "// Wait another 3 seconds for an interrupt.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "_pl031.rs_:"
msgstr "`pl031.rs`¬†:"

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Data register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Match register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Load register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Control register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Interrupt Mask Set or Clear register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Raw Interrupt Status\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Masked Interrupt Status\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Interrupt Clear Register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "/// Driver for a PL031 real-time clock.\n"
msgstr ""
"Nous allons √©crire un pilote pour le dispositif d'horloge en temps r√©el "
"PL031."

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Constructs a new instance of the RTC driver for a PL031 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the MMIO control registers of "
"a\n"
"    /// PL031 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Reads the current RTC value.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because we know that self.registers points to the control\n"
"        // registers of a PL031 device which is appropriately mapped.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Writes a match value. When the RTC value matches this then an interrupt\n"
"    /// will be generated (if it is enabled).\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Returns whether the match register matches the RTC value, whether or "
"not\n"
"    /// the interrupt is enabled.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Returns whether there is currently an interrupt pending.\n"
"    ///\n"
"    /// This should be true if and only if `matched` returns true and the\n"
"    /// interrupt is masked.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Sets or clears the interrupt mask.\n"
"    ///\n"
"    /// When the mask is true the interrupt is enabled; when it is false "
"the\n"
"    /// interrupt is disabled.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Clears a pending interrupt, if any.\n"
msgstr ""

#: src/concurrency.md
#, fuzzy
msgid "Welcome to Concurrency in Rust"
msgstr "Bienvenue √† Comprehensive Rust(le guide complet de Rust) ü¶Ä"

#: src/concurrency.md
#, fuzzy
msgid ""
"Rust has full support for concurrency using OS threads with mutexes and "
"channels."
msgstr ""
"Rust prend enti√®rement en charge la concurrence en utilisant des threads de "
"syst√®me d'exploitation avec des mutex et canaux."

#: src/concurrency.md
#, fuzzy
msgid ""
"The Rust type system plays an important role in making many concurrency bugs "
"compile time bugs. This is often referred to as _fearless concurrency_ since "
"you can rely on the compiler to ensure correctness at runtime."
msgstr ""
"Le syst√®me de type Rust joue un r√¥le important dans la cr√©ation de nombreux "
"bugs de concurrence bogues de temps de compilation. Ceci est souvent appel√© "
"_concurrence sans peur_ puisque vous peut compter sur le compilateur pour "
"assurer l'exactitude au moment de l'ex√©cution."

#: src/concurrency/threads.md
#, fuzzy
msgid "Rust threads work similarly to threads in other languages:"
msgstr ""
"Les threads Rust fonctionnent de la m√™me mani√®re que les threads dans "
"d'autres langages¬†:"

#: src/concurrency/threads.md
msgid "\"Count in thread: {i}!\""
msgstr ""

#: src/concurrency/threads.md
msgid "\"Main thread: {i}\""
msgstr ""

#: src/concurrency/threads.md
#, fuzzy
msgid "Threads are all daemon threads, the main thread does not wait for them."
msgstr ""
"Les threads sont tous des threads d√©mons, le thread principal ne les attend "
"pas."

#: src/concurrency/threads.md
#, fuzzy
msgid "Thread panics are independent of each other."
msgstr "Les thread panics sont ind√©pendants les uns des autres."

#: src/concurrency/threads.md
#, fuzzy
msgid "Panics can carry a payload, which can be unpacked with `downcast_ref`."
msgstr ""
"Les paniques peuvent transporter une charge utile, qui peut √™tre "
"d√©compress√©e avec `downcast_ref`."

#: src/concurrency/threads.md
#, fuzzy
msgid ""
"Notice that the thread is stopped before it reaches 10 --- the main thread "
"is not waiting."
msgstr ""
"Notez que le thread est arr√™t√© avant d'atteindre 10 ‚Äî le thread principal "
"est pas attendre."

#: src/concurrency/threads.md
#, fuzzy
msgid ""
"Use `let handle = thread::spawn(...)` and later `handle.join()` to wait for "
"the thread to finish."
msgstr ""
"Utilisez `let handle = thread::spawn(...)` et plus tard `handle.join()` pour "
"attendre le fil pour finir."

#: src/concurrency/threads.md
#, fuzzy
msgid "Trigger a panic in the thread, notice how this doesn't affect `main`."
msgstr ""
"D√©clenchez une panique dans le fil, notez que cela n'affecte pas `main`."

#: src/concurrency/threads.md
#, fuzzy
msgid ""
"Use the `Result` return value from `handle.join()` to get access to the "
"panic payload. This is a good time to talk about [`Any`](https://doc.rust-"
"lang.org/std/any/index.html)."
msgstr ""
"Utilisez la valeur de retour `Result` de `handle.join()` pour acc√©der √† la "
"panique charge utile. C'est le bon moment pour parler de \\[`Tous`\\]."

#: src/concurrency/scoped-threads.md
#, fuzzy
msgid "Normal threads cannot borrow from their environment:"
msgstr "Les threads normaux ne peuvent pas emprunter √† leur environnement¬†:"

#: src/concurrency/scoped-threads.md
#, fuzzy
msgid ""
"However, you can use a [scoped thread](https://doc.rust-lang.org/std/thread/"
"fn.scope.html) for this:"
msgstr ""
"Cependant, vous pouvez utiliser un [fil de discussion de port√©e](https://doc."
"rust-lang.org/std/thread/fn.scope.html) pour cela¬†:"

#: src/concurrency/scoped-threads.md
#, fuzzy
msgid ""
"The reason for that is that when the `thread::scope` function completes, all "
"the threads are guaranteed to be joined, so they can return borrowed data."
msgstr ""
"La raison en est que lorsque la fonction `thread::scope` se termine, tous "
"les threads sont garantis d'√™tre joints, afin qu'ils puissent renvoyer des "
"donn√©es emprunt√©es."

#: src/concurrency/scoped-threads.md
#, fuzzy
msgid ""
"Normal Rust borrowing rules apply: you can either borrow mutably by one "
"thread, or immutably by any number of threads."
msgstr ""
"Les r√®gles d'emprunt normales de Rust s'appliquent¬†: vous pouvez soit "
"emprunter de mani√®re mutable par un thread, soit de mani√®re immuable par "
"n'importe quel nombre de threads."

#: src/concurrency/channels.md
#, fuzzy
msgid ""
"Rust channels have two parts: a `Sender<T>` and a `Receiver<T>`. The two "
"parts are connected via the channel, but you only see the end-points."
msgstr ""
"Les canaux Rust ont deux parties¬†: un `Sender<T>` et un `Receiver<T>`. Les "
"deux parties sont connect√©s via le canal, mais vous ne voyez que les "
"extr√©mit√©s."

#: src/concurrency/channels.md
msgid "\"Received: {:?}\""
msgstr ""

#: src/concurrency/channels.md
#, fuzzy
msgid ""
"`mpsc` stands for Multi-Producer, Single-Consumer. `Sender` and `SyncSender` "
"implement `Clone` (so you can make multiple producers) but `Receiver` does "
"not."
msgstr ""
"`mpsc` signifie Multi-Producer, Single-Consumer. `Sender` et `SyncSender` "
"impl√©mentent `Clone` (donc vous pouvez cr√©er plusieurs producteurs) mais "
"`Receiver` ne le fait pas."

#: src/concurrency/channels.md
#, fuzzy
msgid ""
"`send()` and `recv()` return `Result`. If they return `Err`, it means the "
"counterpart `Sender` or `Receiver` is dropped and the channel is closed."
msgstr ""
"`send()` et `recv()` renvoient `Result`. S'ils renvoient `Err`, cela "
"signifie que la contrepartie `Sender` ou `Receiver` est supprim√© et le canal "
"est ferm√©."

#: src/concurrency/channels/unbounded.md
#, fuzzy
msgid "You get an unbounded and asynchronous channel with `mpsc::channel()`:"
msgstr "Vous obtenez un canal illimit√© et asynchrone avec `mpsc::channel()`¬†:"

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"Message {i}\""
msgstr ""

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"{thread_id:?}: sent Message {i}\""
msgstr ""

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"{thread_id:?}: done\""
msgstr ""

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"Main: got {msg}\""
msgstr ""

#: src/concurrency/channels/bounded.md
#, fuzzy
msgid ""
"With bounded (synchronous) channels, `send` can block the current thread:"
msgstr ""
"Les canaux born√©s et synchrones font que \"send\" bloque le thread actuel¬†:"

#: src/concurrency/channels/bounded.md
msgid ""
"Calling `send` will block the current thread until there is space in the "
"channel for the new message. The thread can be blocked indefinitely if there "
"is nobody who reads from the channel."
msgstr ""

#: src/concurrency/channels/bounded.md
msgid ""
"A call to `send` will abort with an error (that is why it returns `Result`) "
"if the channel is closed. A channel is closed when the receiver is dropped."
msgstr ""

#: src/concurrency/channels/bounded.md
msgid ""
"A bounded channel with a size of zero is called a \"rendezvous channel\". "
"Every send will block the current thread until another thread calls `read`."
msgstr ""

#: src/concurrency/send-sync.md
#, fuzzy
msgid ""
"How does Rust know to forbid shared access across threads? The answer is in "
"two traits:"
msgstr ""
"Comment Rust sait-il interdire l'acc√®s partag√© √† travers le thread? La "
"r√©ponse est en deux traits :"

#: src/concurrency/send-sync.md
#, fuzzy
msgid ""
"[`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html): a type `T` "
"is `Send` if it is safe to move a `T` across a thread boundary."
msgstr ""
"[`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html)¬†: un type `T` "
"est `Send` s'il est s√ªr de d√©placer un `T` √† travers un thread fronti√®re."

#: src/concurrency/send-sync.md
#, fuzzy
msgid ""
"[`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html): a type `T` "
"is `Sync` if it is safe to move a `&T` across a thread boundary."
msgstr ""
"[`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html)¬†: un type `T` "
"est `Sync` s'il est s√ªr de d√©placer un `&T` √† travers un thread fronti√®re."

#: src/concurrency/send-sync.md
#, fuzzy
msgid ""
"`Send` and `Sync` are [unsafe traits](../unsafe/unsafe-traits.md). The "
"compiler will automatically derive them for your types as long as they only "
"contain `Send` and `Sync` types. You can also implement them manually when "
"you know it is valid."
msgstr ""
"`Send` et `Sync` sont des \\[caract√©ristiques non s√©curis√©es\\] [3](../"
"unsafe/unsafe-traits.md). Le compilateur les d√©rivera automatiquement pour "
"vos types tant qu'ils ne contiennent que les types `Send` et `Sync`. Vous "
"pouvez √©galement les impl√©menter manuellement lorsque vous sachez qu'il est "
"valide."

#: src/concurrency/send-sync.md
#, fuzzy
msgid ""
"One can think of these traits as markers that the type has certain thread-"
"safety properties."
msgstr ""
"On peut consid√©rer ces traits comme des marqueurs indiquant que le type "
"poss√®de certaines propri√©t√©s de s√©curit√© des threads."

#: src/concurrency/send-sync.md
#, fuzzy
msgid "They can be used in the generic constraints as normal traits."
msgstr ""
"Ils peuvent √™tre utilis√©s dans les contraintes g√©n√©riques comme des traits "
"normaux."

#: src/concurrency/send-sync/send.md
#, fuzzy
msgid ""
"A type `T` is [`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html) "
"if it is safe to move a `T` value to another thread."
msgstr ""
"Un type `T` est [`Send`](https://doc.rust-lang.org/std/marker/trait.Send."
"html) s'il est s√ªr de d√©placer une valeur `T` vers un autre thread."

#: src/concurrency/send-sync/send.md
#, fuzzy
msgid ""
"The effect of moving ownership to another thread is that _destructors_ will "
"run in that thread. So the question is when you can allocate a value in one "
"thread and deallocate it in another."
msgstr ""
"L'effet du d√©placement de la propri√©t√© vers un autre thread est que "
"_destructors_ s'ex√©cutera dans ce fil. La question est donc de savoir quand "
"vous pouvez allouer une valeur dans un thread et le d√©sallouer dans un autre."

#: src/concurrency/send-sync/send.md
msgid ""
"As an example, a connection to the SQLite library must only be accessed from "
"a single thread."
msgstr ""

#: src/concurrency/send-sync/sync.md
#, fuzzy
msgid ""
"A type `T` is [`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html) "
"if it is safe to access a `T` value from multiple threads at the same time."
msgstr ""
"Un type `T` est [`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync."
"html) s'il est s√ªr d'acc√©der √† une valeur `T` √† partir de plusieurs fils en "
"m√™me temps."

#: src/concurrency/send-sync/sync.md
#, fuzzy
msgid "More precisely, the definition is:"
msgstr "Plus pr√©cis√©ment, la d√©finition est :"

#: src/concurrency/send-sync/sync.md
#, fuzzy
msgid "`T` is `Sync` if and only if `&T` is `Send`"
msgstr "`T` est `Sync` si et seulement si `&T` est `Envoyer`"

#: src/concurrency/send-sync/sync.md
#, fuzzy
msgid ""
"This statement is essentially a shorthand way of saying that if a type is "
"thread-safe for shared use, it is also thread-safe to pass references of it "
"across threads."
msgstr ""
"Cette d√©claration est essentiellement une mani√®re abr√©g√©e de dire que si un "
"type est thread-safe pour une utilisation partag√©e, il est √©galement thread-"
"safe pour en passer des r√©f√©rences √† travers les threads."

#: src/concurrency/send-sync/sync.md
#, fuzzy
msgid ""
"This is because if a type is Sync it means that it can be shared across "
"multiple threads without the risk of data races or other synchronization "
"issues, so it is safe to move it to another thread. A reference to the type "
"is also safe to move to another thread, because the data it references can "
"be accessed from any thread safely."
msgstr ""
"En effet, si un type est Sync, cela signifie qu'il peut √™tre partag√© sur "
"plusieurs threads sans risque de courses de donn√©es ou d'autres probl√®mes de "
"synchronisation, il est donc s√ªr de le d√©placer vers un autre thread. Une "
"r√©f√©rence au type peut √©galement √™tre d√©plac√©e en toute s√©curit√© vers un "
"autre thread, car les donn√©es auxquelles elle fait r√©f√©rence sont "
"accessibles √† partir de n'importe quel thread en toute s√©curit√©."

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`Send + Sync`"
msgstr "`Envoyer + Synchroniser`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "Most types you come across are `Send + Sync`:"
msgstr "La plupart des types que vous rencontrez sont `Send + Sync`¬†:"

#: src/concurrency/send-sync/examples.md
msgid "`i8`, `f32`, `bool`, `char`, `&str`, ..."
msgstr ""

#: src/concurrency/send-sync/examples.md
msgid "`(T1, T2)`, `[T; N]`, `&[T]`, `struct { x: T }`, ..."
msgstr ""

#: src/concurrency/send-sync/examples.md
msgid "`String`, `Option<T>`, `Vec<T>`, `Box<T>`, ..."
msgstr ""

#: src/concurrency/send-sync/examples.md
msgid "`Arc<T>`: Explicitly thread-safe via atomic reference count."
msgstr ""

#: src/concurrency/send-sync/examples.md
msgid "`Mutex<T>`: Explicitly thread-safe via internal locking."
msgstr ""

#: src/concurrency/send-sync/examples.md
msgid "`AtomicBool`, `AtomicU8`, ...: Uses special atomic instructions."
msgstr ""

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid ""
"The generic types are typically `Send + Sync` when the type parameters are "
"`Send + Sync`."
msgstr ""
"Les types g√©n√©riques sont g√©n√©ralement \"Send + Sync\" lorsque les "
"param√®tres de type sont `Envoyer + Synchroniser`."

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`Send + !Sync`"
msgstr "`Envoyer +¬†!Sync`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid ""
"These types can be moved to other threads, but they're not thread-safe. "
"Typically because of interior mutability:"
msgstr ""
"Ces types peuvent √™tre d√©plac√©s vers d'autres threads, mais ils ne sont pas "
"thread-safe. Typiquement √† cause de la mutabilit√© int√©rieure :"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`mpsc::Sender<T>`"
msgstr "`mpsc::Exp√©diteur<T>`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`mpsc::Receiver<T>`"
msgstr "`mpsc::R√©cepteur<T>`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`Cell<T>`"
msgstr "`Cellule<T>`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`RefCell<T>`"
msgstr "`RefCell<T>`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`!Send + Sync`"
msgstr "`¬†!Envoyer + Synchroniser`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid ""
"These types are thread-safe, but they cannot be moved to another thread:"
msgstr ""
"Ces types sont thread-safe, mais ils ne peuvent pas √™tre d√©plac√©s vers un "
"autre thread¬†:"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid ""
"`MutexGuard<T: Sync>`: Uses OS level primitives which must be deallocated on "
"the thread which created them."
msgstr ""
"`MutexGuard<T>`¬†: utilise des primitives au niveau du syst√®me d'exploitation "
"qui doivent √™tre d√©sallou√©es sur le fil qui les a cr√©√©s."

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "`!Send + !Sync`"
msgstr "`!Envoyer + !Synchroniser`"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid "These types are not thread-safe and cannot be moved to other threads:"
msgstr ""
"Ces types ne sont pas thread-safe et ne peuvent pas √™tre d√©plac√©s vers "
"d'autres threads¬†:"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid ""
"`Rc<T>`: each `Rc<T>` has a reference to an `RcBox<T>`, which contains a non-"
"atomic reference count."
msgstr ""
"`Rc<T>`¬†: chaque `Rc<T>` a une r√©f√©rence √† un `RcBox<T>`, qui contient un "
"comptage de r√©f√©rence non atomique."

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid ""
"`*const T`, `*mut T`: Rust assumes raw pointers may have special concurrency "
"considerations."
msgstr ""
"`*const T`, `*mut T`¬†: Rust suppose que les pointeurs bruts peuvent avoir "
"des consid√©rations de concurrence."

#: src/concurrency/shared_state.md
#, fuzzy
msgid ""
"Rust uses the type system to enforce synchronization of shared data. This is "
"primarily done via two types:"
msgstr ""
"Rust utilise le syst√®me de type pour appliquer la synchronisation des "
"donn√©es partag√©es. C'est se fait principalement via deux types:"

#: src/concurrency/shared_state.md
#, fuzzy
msgid ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html), atomic "
"reference counted `T`: handles sharing between threads and takes care to "
"deallocate `T` when the last reference is dropped,"
msgstr ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html), r√©f√©rence "
"atomique compt√©e `T`¬†: g√®re le partage entre les threads et prend soin de "
"d√©sallouer 'T' lorsque la derni√®re r√©f√©rence est supprim√©e,"

#: src/concurrency/shared_state.md
#, fuzzy
msgid ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html): ensures "
"mutually exclusive access to the `T` value."
msgstr ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) : "
"garantit un acc√®s mutuellement exclusif √† la valeur `T`."

#: src/concurrency/shared_state/arc.md
#, fuzzy
msgid ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html) allows shared "
"read-only access via `Arc::clone`:"
msgstr ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html) permet un "
"acc√®s partag√© en lecture seule via sa m√©thode `clone`¬†:"

#: src/concurrency/shared_state/arc.md
msgid "\"{thread_id:?}: {v:?}\""
msgstr ""

#: src/concurrency/shared_state/arc.md src/concurrency/shared_state/example.md
msgid "\"v: {v:?}\""
msgstr ""

#: src/concurrency/shared_state/arc.md
#, fuzzy
msgid ""
"`Arc` stands for \"Atomic Reference Counted\", a thread safe version of `Rc` "
"that uses atomic operations."
msgstr ""
"`Arc` signifie \"Atomic Reference Counted\", une version thread-safe de `Rc` "
"qui utilise op√©rations."

#: src/concurrency/shared_state/arc.md
#, fuzzy
msgid ""
"`Arc<T>` implements `Clone` whether or not `T` does. It implements `Send` "
"and `Sync` if and only if `T` implements them both."
msgstr ""
"`Arc<T>` impl√©mente `Clone` que `T` le fasse ou non. Il impl√©mente `Send` et "
"`Sync` ssi `T` les met en ≈ìuvre tous les deux."

#: src/concurrency/shared_state/arc.md
#, fuzzy
msgid ""
"`Arc::clone()` has the cost of atomic operations that get executed, but "
"after that the use of the `T` is free."
msgstr ""
"`Arc::clone()` a le co√ªt des op√©rations atomiques qui sont ex√©cut√©es, mais "
"apr√®s cela, l'utilisation du 'T' est libre."

#: src/concurrency/shared_state/arc.md
#, fuzzy
msgid ""
"Beware of reference cycles, `Arc` does not use a garbage collector to detect "
"them."
msgstr ""
"M√©fiez-vous des cycles de r√©f√©rence, `Arc` n'utilise pas de ramasse-miettes "
"pour les d√©tecter."

#: src/concurrency/shared_state/arc.md
#, fuzzy
msgid "`std::sync::Weak` can help."
msgstr "`std::sync::Weak` peut aider."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) ensures "
"mutual exclusion _and_ allows mutable access to `T` behind a read-only "
"interface (another form of [interior mutability](../../borrowing/interior-"
"mutability)):"
msgstr ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) garantit "
"l'exclusion mutuelle _et_ permet un acc√®s mutable √† `T` derri√®re une "
"interface en lecture seule¬†:"

#: src/concurrency/shared_state/mutex.md
msgid "\"v: {:?}\""
msgstr ""

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"Notice how we have a [`impl<T: Send> Sync for Mutex<T>`](https://doc.rust-"
"lang.org/std/sync/struct.Mutex.html#impl-Sync-for-Mutex%3CT%3E) blanket "
"implementation."
msgstr ""
"Remarquez comment nous avons une couverture [`impl<T¬†: Send> Sync for "
"Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html#impl-Sync-"
"for-Mutex%3CT%3E) mise en ≈ìuvre."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"`Mutex` in Rust looks like a collection with just one element --- the "
"protected data."
msgstr ""
"`Mutex` dans Rust ressemble √† une collection avec un seul √©l√©ment - les "
"donn√©es prot√©g√©es."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"It is not possible to forget to acquire the mutex before accessing the "
"protected data."
msgstr ""
"Il n'est pas possible d'oublier d'acqu√©rir le mutex avant d'acc√©der aux "
"donn√©es prot√©g√©es."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"You can get an `&mut T` from an `&Mutex<T>` by taking the lock. The "
"`MutexGuard` ensures that the `&mut T` doesn't outlive the lock being held."
msgstr ""
"Vous pouvez obtenir un `&mut T` √† partir d'un `&Mutex<T>` en prenant le "
"verrou. Le `MutexGuard` garantit que le `&mut T` ne survit pas au "
"verrouillage en cours."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"`Mutex<T>` implements both `Send` and `Sync` iff (if and only if) `T` "
"implements `Send`."
msgstr ""
"`Mutex<T>` impl√©mente √† la fois `Send` et `Sync` ssi `T` impl√©mente `Send`."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid "A read-write lock counterpart: `RwLock`."
msgstr "Un homologue de verrouillage en lecture-√©criture - `RwLock`."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid "Why does `lock()` return a `Result`?"
msgstr "Pourquoi `lock()` renvoie-t-il un `Result`¬†?"

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"If the thread that held the `Mutex` panicked, the `Mutex` becomes "
"\"poisoned\" to signal that the data it protected might be in an "
"inconsistent state. Calling `lock()` on a poisoned mutex fails with a "
"[`PoisonError`](https://doc.rust-lang.org/std/sync/struct.PoisonError.html). "
"You can call `into_inner()` on the error to recover the data regardless."
msgstr ""
"Si le thread qui contenait le `Mutex` a paniqu√©, le `Mutex` devient "
"\"empoisonn√©\" pour signaler que les donn√©es qu'il prot√®ge peuvent √™tre dans "
"un √©tat incoh√©rent. Appel de `lock()` sur un mutex empoisonn√© √©choue avec "
"une [`PoisonError`](https://doc.rust-lang.org/std/sync/struct.PoisonError."
"html). Vous pouvez appeler `into_inner()` sur l'erreur pour r√©cup√©rer les "
"donn√©es ind√©pendamment de."

#: src/concurrency/shared_state/example.md
#, fuzzy
msgid "Let us see `Arc` and `Mutex` in action:"
msgstr "Voyons `Arc` et `Mutex` en action¬†:"

#: src/concurrency/shared_state/example.md
msgid "// use std::sync::{Arc, Mutex};\n"
msgstr ""

#: src/concurrency/shared_state/example.md
#, fuzzy
msgid "Possible solution:"
msgstr "Solution possible:"

#: src/concurrency/shared_state/example.md
#, fuzzy
msgid "Notable parts:"
msgstr "Parties notables :"

#: src/concurrency/shared_state/example.md
#, fuzzy
msgid ""
"`v` is wrapped in both `Arc` and `Mutex`, because their concerns are "
"orthogonal."
msgstr ""
"`v` est envelopp√© √† la fois dans `Arc` et `Mutex`, car leurs pr√©occupations "
"sont orthogonales."

#: src/concurrency/shared_state/example.md
#, fuzzy
msgid ""
"Wrapping a `Mutex` in an `Arc` is a common pattern to share mutable state "
"between threads."
msgstr ""
"Envelopper un `Mutex` dans un `Arc` est un mod√®le courant pour partager un "
"√©tat mutable entre les threads."

#: src/concurrency/shared_state/example.md
#, fuzzy
msgid ""
"`v: Arc<_>` needs to be cloned as `v2` before it can be moved into another "
"thread. Note `move` was added to the lambda signature."
msgstr ""
"`v: Arc<_>` doit √™tre clon√© en tant que `v2` avant de pouvoir √™tre d√©plac√© "
"dans un autre thread. Remarque \"move\" a √©t√© ajout√© √† la signature lambda."

#: src/concurrency/shared_state/example.md
#, fuzzy
msgid ""
"Blocks are introduced to narrow the scope of the `LockGuard` as much as "
"possible."
msgstr ""
"Des blocs sont introduits pour r√©duire autant que possible la port√©e du "
"\"LockGuard\"."

#: src/exercises/concurrency/morning.md
#, fuzzy
msgid "Let us practice our new concurrency skills with"
msgstr ""
"Mettons en pratique nos nouvelles comp√©tences en mati√®re de concurrence avec"

#: src/exercises/concurrency/morning.md
#, fuzzy
msgid "Dining philosophers: a classic problem in concurrency."
msgstr "D√Æner des philosophes : un probl√®me classique de la concurrence."

#: src/exercises/concurrency/morning.md
#, fuzzy
msgid ""
"Multi-threaded link checker: a larger project where you'll use Cargo to "
"download dependencies and then check links in parallel."
msgstr ""
"V√©rificateur de liens multithread¬†: un projet plus vaste dans lequel vous "
"utiliserez Cargo pour t√©l√©charger les d√©pendances puis v√©rifier les liens en "
"parall√®le."

#: src/exercises/concurrency/dining-philosophers.md
#, fuzzy
msgid "The dining philosophers problem is a classic problem in concurrency:"
msgstr ""
"Le probl√®me du d√Æner des philosophes est un probl√®me classique en "
"concurrence :"

#: src/exercises/concurrency/dining-philosophers.md
#, fuzzy
msgid ""
"Five philosophers dine together at the same table. Each philosopher has "
"their own place at the table. There is a fork between each plate. The dish "
"served is a kind of spaghetti which has to be eaten with two forks. Each "
"philosopher can only alternately think and eat. Moreover, a philosopher can "
"only eat their spaghetti when they have both a left and right fork. Thus two "
"forks will only be available when their two nearest neighbors are thinking, "
"not eating. After an individual philosopher finishes eating, they will put "
"down both forks."
msgstr ""
"Cinq philosophes d√Ænent ensemble √† la m√™me table. Chaque philosophe a son "
"propre place √† table. Il y a une fourchette entre chaque assiette. Le plat "
"servi est une sorte de spaghetti qui se mange avec deux fourchettes. Chaque "
"philosophe peut seulement penser et manger alternativement. De plus, un "
"philosophe ne peut que manger leur des spaghettis lorsqu'ils ont √† la fois "
"une fourchette gauche et droite. Ainsi deux fourches ne feront que √™tre "
"disponible lorsque ses deux voisins les plus proches pensent, ne mangent "
"pas. Apr√®s un philosophe individuel finit de manger, ils poseront les deux "
"fourchettes."

#: src/exercises/concurrency/dining-philosophers.md
#, fuzzy
msgid ""
"You will need a local [Cargo installation](../../cargo/running-locally.md) "
"for this exercise. Copy the code below to a file called `src/main.rs`, fill "
"out the blanks, and test that `cargo run` does not deadlock:"
msgstr ""
"Vous aurez besoin d'une [installation Cargo](../../cargo/running-locally.md) "
"locale pour cet exercice. Copiez le code ci-dessous dans un fichier appel√© "
"`src/main.rs`, remplissez le vides, et testez que `cargo run` ne se bloque "
"pas¬†:"

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"// left_fork: ...\n"
"    // right_fork: ...\n"
"    // thoughts: ...\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Eureka! {} has a new idea!\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Pick up forks...\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"{} is eating...\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "\"Socrates\""
msgstr "caisses HAL"

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Hypatia\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Plato\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Aristotle\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Pythagoras\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Create forks\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Create philosophers\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
msgid "// Make each of them think and eat 100 times\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Output their thoughts\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#, fuzzy
msgid "You can use the following `Cargo.toml`:"
msgstr "Vous pouvez utiliser le fichier `Cargo.toml` suivant¬†:"

#: src/exercises/concurrency/dining-philosophers.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"dining-philosophers\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"```"
msgstr ""

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"Let us use our new knowledge to create a multi-threaded link checker. It "
"should start at a webpage and check that links on the page are valid. It "
"should recursively check other pages on the same domain and keep doing this "
"until all pages have been validated."
msgstr ""
"Utilisons nos nouvelles connaissances pour cr√©er un v√©rificateur de liens "
"multi-thread. Cela devrait commencez par une page Web et v√©rifiez que les "
"liens sur la page sont valides. Cela devrait v√©rifier r√©cursivement d'autres "
"pages sur le m√™me domaine et continuer √† le faire jusqu'√† ce que tous les "
"pages ont √©t√© valid√©es."

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"For this, you will need an HTTP client such as [`reqwest`](https://docs.rs/"
"reqwest/). Create a new Cargo project and `reqwest` it as a dependency with:"
msgstr ""
"Pour cela, vous aurez besoin d'un client HTTP tel que [`reqwest`](https://"
"docs.rs/reqwest/). Cr√©er un nouveau Projet Cargo et `reqwest` comme "
"d√©pendance avec¬†:"

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"If `cargo add` fails with `error: no such subcommand`, then please edit the "
"`Cargo.toml` file by hand. Add the dependencies listed below."
msgstr ""
"Si `cargo add` √©choue avec `error: no such subcommand`, veuillez modifier le "
"Fichier `Cargo.toml` √† la main. Ajoutez les d√©pendances r√©pertori√©es ci-"
"dessous."

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"You will also need a way to find links. We can use [`scraper`](https://docs."
"rs/scraper/) for that:"
msgstr ""
"Vous aurez √©galement besoin d'un moyen de trouver des liens. Nous pouvons "
"utiliser [`scraper`](https://docs.rs/scraper/) pour cela¬†:"

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"Finally, we'll need some way of handling errors. We use [`thiserror`]"
"(https://docs.rs/thiserror/) for that:"
msgstr ""
"Enfin, nous aurons besoin d'un moyen de g√©rer les erreurs. Nous utilisons "
"[`thiserror`](https://docs.rs/thiserror/) pour ce:"

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"The `cargo add` calls will update the `Cargo.toml` file to look like this:"
msgstr ""
"Les appels `cargo add` mettront √† jour le fichier `Cargo.toml` pour qu'il "
"ressemble √† ceci¬†:"

#: src/exercises/concurrency/link-checker.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"link-checker\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"publish = false\n"
"\n"
"[dependencies]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"
msgstr ""

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"You can now download the start page. Try with a small site such as `https://"
"www.google.org/`."
msgstr ""
"Vous pouvez maintenant t√©l√©charger la page de d√©marrage. Essayez avec un "
"petit site comme `https://www.google.org/`."

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid "Your `src/main.rs` file should look something like this:"
msgstr "Votre fichier `src/main.rs` devrait ressembler √† ceci¬†:"

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"request error: {0}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"bad http response: {0}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"Checking {:#}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"href\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"On {base_url:#}: ignored unparsable {href:?}: {err}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"https://www.google.org\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
msgid "\"Links: {links:#?}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
msgid "\"Could not extract links: {err:#}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid "Run the code in `src/main.rs` with"
msgstr "Ex√©cutez le code dans `src/main.rs` avec"

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"Use threads to check the links in parallel: send the URLs to be checked to a "
"channel and let a few threads check the URLs in parallel."
msgstr ""
"Utilisez des threads pour v√©rifier les liens en parall√®le¬†: envoyez les URL "
"√† v√©rifier √† un channel et laissez quelques threads v√©rifier les URL en "
"parall√®le."

#: src/exercises/concurrency/link-checker.md
#, fuzzy
msgid ""
"Extend this to recursively extract links from all pages on the `www.google."
"org` domain. Put an upper limit of 100 pages or so so that you don't end up "
"being blocked by the site."
msgstr ""
"√âtendez ceci pour extraire de mani√®re r√©cursive les liens de toutes les "
"pages du domaine \"www.google.org\". Fixez une limite sup√©rieure de 100 "
"pages environ afin que vous ne finissez pas par √™tre bloqu√© par le site."

#: src/exercises/concurrency/solutions-morning.md
#, fuzzy
msgid "Concurrency Morning Exercise"
msgstr "Jour 3 Exercice du matin"

#: src/exercises/concurrency/solutions-morning.md
#, fuzzy
msgid "([back to exercise](dining-philosophers.md))"
msgstr "([retour √† l'exercice](dining-philosophers.md))"

#: src/exercises/concurrency/solutions-morning.md
msgid "\"{} is trying to eat\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid ""
"// To avoid a deadlock, we have to break the symmetry\n"
"        // somewhere. This will swap the forks without deinitializing\n"
"        // either of them.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "\"{thought}\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
#, fuzzy
msgid "Link Checker"
msgstr "V√©rificateur de liens √† plusieurs threads"

#: src/exercises/concurrency/solutions-morning.md
#, fuzzy
msgid "([back to exercise](link-checker.md))"
msgstr "([retour √† l'exercice](luhn.md))"

#: src/exercises/concurrency/solutions-morning.md
msgid ""
"/// Determine whether links within the given page should be extracted.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid ""
"/// Mark the given page as visited, returning false if it had already\n"
"    /// been visited.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "// The sender got dropped. No more commands coming in.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "\"Got crawling error: {:#}\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "\"Bad URLs: {:#?}\""
msgstr ""

#: src/async.md
#, fuzzy
msgid "Async Rust"
msgstr "Pourquoi Rust ?"

#: src/async.md
msgid ""
"\"Async\" is a concurrency model where multiple tasks are executed "
"concurrently by executing each task until it would block, then switching to "
"another task that is ready to make progress. The model allows running a "
"larger number of tasks on a limited number of threads. This is because the "
"per-task overhead is typically very low and operating systems provide "
"primitives for efficiently identifying I/O that is able to proceed."
msgstr ""

#: src/async.md
msgid ""
"Rust's asynchronous operation is based on \"futures\", which represent work "
"that may be completed in the future. Futures are \"polled\" until they "
"signal that they are complete."
msgstr ""

#: src/async.md
msgid ""
"Futures are polled by an async runtime, and several different runtimes are "
"available."
msgstr ""

#: src/async.md
msgid ""
"Python has a similar model in its `asyncio`. However, its `Future` type is "
"callback-based, and not polled. Async Python programs require a \"loop\", "
"similar to a runtime in Rust."
msgstr ""

#: src/async.md
msgid ""
"JavaScript's `Promise` is similar, but again callback-based. The language "
"runtime implements the event loop, so many of the details of Promise "
"resolution are hidden."
msgstr ""

#: src/async/async-await.md
msgid ""
"At a high level, async Rust code looks very much like \"normal\" sequential "
"code:"
msgstr ""

#: src/async/async-await.md
msgid "\"Count is: {i}!\""
msgstr ""

#: src/async/async-await.md
msgid ""
"Note that this is a simplified example to show the syntax. There is no long "
"running operation or any real concurrency in it!"
msgstr ""

#: src/async/async-await.md
msgid "What is the return type of an async call?"
msgstr ""

#: src/async/async-await.md
msgid "Use `let future: () = async_main(10);` in `main` to see the type."
msgstr ""

#: src/async/async-await.md
msgid ""
"The \"async\" keyword is syntactic sugar. The compiler replaces the return "
"type with a future."
msgstr ""

#: src/async/async-await.md
msgid ""
"You cannot make `main` async, without additional instructions to the "
"compiler on how to use the returned future."
msgstr ""

#: src/async/async-await.md
msgid ""
"You need an executor to run async code. `block_on` blocks the current thread "
"until the provided future has run to completion."
msgstr ""

#: src/async/async-await.md
msgid ""
"`.await` asynchronously waits for the completion of another operation. "
"Unlike `block_on`, `.await` doesn't block the current thread."
msgstr ""

#: src/async/async-await.md
msgid ""
"`.await` can only be used inside an `async` function (or block; these are "
"introduced later)."
msgstr ""

#: src/async/futures.md
msgid ""
"[`Future`](https://doc.rust-lang.org/std/future/trait.Future.html) is a "
"trait, implemented by objects that represent an operation that may not be "
"complete yet. A future can be polled, and `poll` returns a [`Poll`](https://"
"doc.rust-lang.org/std/task/enum.Poll.html)."
msgstr ""

#: src/async/futures.md
msgid ""
"An async function returns an `impl Future`. It's also possible (but "
"uncommon) to implement `Future` for your own types. For example, the "
"`JoinHandle` returned from `tokio::spawn` implements `Future` to allow "
"joining to it."
msgstr ""

#: src/async/futures.md
msgid ""
"The `.await` keyword, applied to a Future, causes the current async function "
"to pause until that Future is ready, and then evaluates to its output."
msgstr ""

#: src/async/futures.md
msgid ""
"The `Future` and `Poll` types are implemented exactly as shown; click the "
"links to show the implementations in the docs."
msgstr ""

#: src/async/futures.md
msgid ""
"We will not get to `Pin` and `Context`, as we will focus on writing async "
"code, rather than building new async primitives. Briefly:"
msgstr ""

#: src/async/futures.md
msgid ""
"`Context` allows a Future to schedule itself to be polled again when an "
"event occurs."
msgstr ""

#: src/async/futures.md
msgid ""
"`Pin` ensures that the Future isn't moved in memory, so that pointers into "
"that future remain valid. This is required to allow references to remain "
"valid after an `.await`."
msgstr ""

#: src/async/runtimes.md
msgid ""
"A _runtime_ provides support for performing operations asynchronously (a "
"_reactor_) and is responsible for executing futures (an _executor_). Rust "
"does not have a \"built-in\" runtime, but several options are available:"
msgstr ""

#: src/async/runtimes.md
msgid ""
"[Tokio](https://tokio.rs/): performant, with a well-developed ecosystem of "
"functionality like [Hyper](https://hyper.rs/) for HTTP or [Tonic](https://"
"github.com/hyperium/tonic) for gRPC."
msgstr ""

#: src/async/runtimes.md
msgid ""
"[async-std](https://async.rs/): aims to be a \"std for async\", and includes "
"a basic runtime in `async::task`."
msgstr ""

#: src/async/runtimes.md
msgid "[smol](https://docs.rs/smol/latest/smol/): simple and lightweight"
msgstr ""

#: src/async/runtimes.md
msgid ""
"Several larger applications have their own runtimes. For example, [Fuchsia]"
"(https://fuchsia.googlesource.com/fuchsia/+/refs/heads/main/src/lib/fuchsia-"
"async/src/lib.rs) already has one."
msgstr ""

#: src/async/runtimes.md
msgid ""
"Note that of the listed runtimes, only Tokio is supported in the Rust "
"playground. The playground also does not permit any I/O, so most interesting "
"async things can't run in the playground."
msgstr ""

#: src/async/runtimes.md
msgid ""
"Futures are \"inert\" in that they do not do anything (not even start an I/O "
"operation) unless there is an executor polling them. This differs from JS "
"Promises, for example, which will run to completion even if they are never "
"used."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "Tokio provides:"
msgstr ""

#: src/async/runtimes/tokio.md
msgid "A multi-threaded runtime for executing asynchronous code."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "An asynchronous version of the standard library."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "A large ecosystem of libraries."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "\"Count in task: {i}!\""
msgstr ""

#: src/async/runtimes/tokio.md
msgid "\"Main task: {i}\""
msgstr ""

#: src/async/runtimes/tokio.md
msgid "With the `tokio::main` macro we can now make `main` async."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "The `spawn` function creates a new, concurrent \"task\"."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "Note: `spawn` takes a `Future`, you don't call `.await` on `count_to`."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "**Further exploration:**"
msgstr ""

#: src/async/runtimes/tokio.md
msgid ""
"Why does `count_to` not (usually) get to 10? This is an example of async "
"cancellation. `tokio::spawn` returns a handle which can be awaited to wait "
"until it finishes."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "Try `count_to(10).await` instead of spawning."
msgstr ""

#: src/async/runtimes/tokio.md
msgid "Try awaiting the task returned from `tokio::spawn`."
msgstr ""

#: src/async/tasks.md
msgid "Rust has a task system, which is a form of lightweight threading."
msgstr ""

#: src/async/tasks.md
msgid ""
"A task has a single top-level future which the executor polls to make "
"progress. That future may have one or more nested futures that its `poll` "
"method polls, corresponding loosely to a call stack. Concurrency within a "
"task is possible by polling multiple child futures, such as racing a timer "
"and an I/O operation."
msgstr ""

#: src/async/tasks.md
msgid "\"127.0.0.1:0\""
msgstr ""

#: src/async/tasks.md
msgid "\"listening on port {}\""
msgstr ""

#: src/async/tasks.md
msgid "\"connection from {addr:?}\""
msgstr ""

#: src/async/tasks.md
msgid "b\"Who are you?\\n\""
msgstr ""

#: src/async/tasks.md
msgid "\"socket error\""
msgstr ""

#: src/async/tasks.md
msgid "\"Thanks for dialing in, {name}!\\n\""
msgstr ""

#: src/async/tasks.md src/async/control-flow/join.md
msgid ""
"Copy this example into your prepared `src/main.rs` and run it from there."
msgstr ""

#: src/async/tasks.md
msgid ""
"Try connecting to it with a TCP connection tool like [nc](https://www.unix."
"com/man-page/linux/1/nc/) or [telnet](https://www.unix.com/man-page/linux/1/"
"telnet/)."
msgstr ""

#: src/async/tasks.md
msgid ""
"Ask students to visualize what the state of the example server would be with "
"a few connected clients. What tasks exist? What are their Futures?"
msgstr ""

#: src/async/tasks.md
msgid ""
"This is the first time we've seen an `async` block. This is similar to a "
"closure, but does not take any arguments. Its return value is a Future, "
"similar to an `async fn`."
msgstr ""

#: src/async/tasks.md
msgid ""
"Refactor the async block into a function, and improve the error handling "
"using `?`."
msgstr ""

#: src/async/channels.md
msgid ""
"Several crates have support for asynchronous channels. For instance `tokio`:"
msgstr ""

#: src/async/channels.md
msgid "\"Received {count} pings so far.\""
msgstr ""

#: src/async/channels.md
msgid "\"ping_handler complete\""
msgstr ""

#: src/async/channels.md
msgid "\"Failed to send ping.\""
msgstr ""

#: src/async/channels.md
msgid "\"Sent {} pings so far.\""
msgstr ""

#: src/async/channels.md
msgid "\"Something went wrong in ping handler task.\""
msgstr ""

#: src/async/channels.md
msgid "Change the channel size to `3` and see how it affects the execution."
msgstr ""

#: src/async/channels.md
msgid ""
"Overall, the interface is similar to the `sync` channels as seen in the "
"[morning class](concurrency/channels.md)."
msgstr ""

#: src/async/channels.md
msgid "Try removing the `std::mem::drop` call. What happens? Why?"
msgstr ""

#: src/async/channels.md
msgid ""
"The [Flume](https://docs.rs/flume/latest/flume/) crate has channels that "
"implement both `sync` and `async` `send` and `recv`. This can be convenient "
"for complex applications with both IO and heavy CPU processing tasks."
msgstr ""

#: src/async/channels.md
msgid ""
"What makes working with `async` channels preferable is the ability to "
"combine them with other `future`s to combine them and create complex control "
"flow."
msgstr ""

#: src/async/control-flow.md
#, fuzzy
msgid "Futures Control Flow"
msgstr "Flux de contr√¥le"

#: src/async/control-flow.md
msgid ""
"Futures can be combined together to produce concurrent compute flow graphs. "
"We have already seen tasks, that function as independent threads of "
"execution."
msgstr ""

#: src/async/control-flow.md
msgid "[Join](control-flow/join.md)"
msgstr ""

#: src/async/control-flow.md
msgid "[Select](control-flow/select.md)"
msgstr ""

#: src/async/control-flow/join.md
msgid ""
"A join operation waits until all of a set of futures are ready, and returns "
"a collection of their results. This is similar to `Promise.all` in "
"JavaScript or `asyncio.gather` in Python."
msgstr ""

#: src/async/control-flow/join.md
msgid "\"https://google.com\""
msgstr ""

#: src/async/control-flow/join.md
msgid "\"https://httpbin.org/ip\""
msgstr ""

#: src/async/control-flow/join.md
msgid "\"https://play.rust-lang.org/\""
msgstr ""

#: src/async/control-flow/join.md
msgid "\"BAD_URL\""
msgstr ""

#: src/async/control-flow/join.md
msgid ""
"For multiple futures of disjoint types, you can use `std::future::join!` but "
"you must know how many futures you will have at compile time. This is "
"currently in the `futures` crate, soon to be stabilised in `std::future`."
msgstr ""

#: src/async/control-flow/join.md
msgid ""
"The risk of `join` is that one of the futures may never resolve, this would "
"cause your program to stall."
msgstr ""

#: src/async/control-flow/join.md
msgid ""
"You can also combine `join_all` with `join!` for instance to join all "
"requests to an http service as well as a database query. Try adding a "
"`tokio::time::sleep` to the future, using `futures::join!`. This is not a "
"timeout (that requires `select!`, explained in the next chapter), but "
"demonstrates `join!`."
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"A select operation waits until any of a set of futures is ready, and "
"responds to that future's result. In JavaScript, this is similar to `Promise."
"race`. In Python, it compares to `asyncio.wait(task_set, return_when=asyncio."
"FIRST_COMPLETED)`."
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"Similar to a match statement, the body of `select!` has a number of arms, "
"each of the form `pattern = future => statement`. When a `future` is ready, "
"its return value is destructured by the `pattern`. The `statement` is then "
"run with the resulting variables. The `statement` result becomes the result "
"of the `select!` macro."
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Felix\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Failed to send cat.\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Rex\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Failed to send dog.\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Failed to receive winner\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Winner is {winner:?}\""
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"In this example, we have a race between a cat and a dog. "
"`first_animal_to_finish_race` listens to both channels and will pick "
"whichever arrives first. Since the dog takes 50ms, it wins against the cat "
"that take 500ms."
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"You can use `oneshot` channels in this example as the channels are supposed "
"to receive only one `send`."
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"Try adding a deadline to the race, demonstrating selecting different sorts "
"of futures."
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"Note that `select!` drops unmatched branches, which cancels their futures. "
"It is easiest to use when every execution of `select!` creates new futures."
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"An alternative is to pass `&mut future` instead of the future itself, but "
"this can lead to issues, further discussed in the pinning slide."
msgstr ""

#: src/async/pitfalls.md
msgid "Pitfalls of async/await"
msgstr ""

#: src/async/pitfalls.md
msgid ""
"Async / await provides convenient and efficient abstraction for concurrent "
"asynchronous programming. However, the async/await model in Rust also comes "
"with its share of pitfalls and footguns. We illustrate some of them in this "
"chapter:"
msgstr ""

#: src/async/pitfalls.md
msgid "[Blocking the Executor](pitfalls/blocking-executor.md)"
msgstr ""

#: src/async/pitfalls.md
msgid "[Pin](pitfalls/pin.md)"
msgstr ""

#: src/async/pitfalls.md
msgid "[Async Traits](pitfalls/async-traits.md)"
msgstr ""

#: src/async/pitfalls.md
msgid "[Cancellation](pitfalls/cancellation.md)"
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid "Blocking the executor"
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Most async runtimes only allow IO tasks to run concurrently. This means that "
"CPU blocking tasks will block the executor and prevent other tasks from "
"being executed. An easy workaround is to use async equivalent methods where "
"possible."
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid "\"future {id} slept for {duration_ms}ms, finished after {}ms\""
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid "\"current_thread\""
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Run the code and see that the sleeps happen consecutively rather than "
"concurrently."
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"The `\"current_thread\"` flavor puts all tasks on a single thread. This "
"makes the effect more obvious, but the bug is still present in the multi-"
"threaded flavor."
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Switch the `std::thread::sleep` to `tokio::time::sleep` and await its result."
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Another fix would be to `tokio::task::spawn_blocking` which spawns an actual "
"thread and transforms its handle into a future without blocking the executor."
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"You should not think of tasks as OS threads. They do not map 1 to 1 and most "
"executors will allow many tasks to run on a single OS thread. This is "
"particularly problematic when interacting with other libraries via FFI, "
"where that library might depend on thread-local storage or map to specific "
"OS threads (e.g., CUDA). Prefer `tokio::task::spawn_blocking` in such "
"situations."
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Use sync mutexes with care. Holding a mutex over an `.await` may cause "
"another task to block, and that task may be running on the same thread."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Async blocks and functions return types implementing the `Future` trait. The "
"type returned is the result of a compiler transformation which turns local "
"variables into data stored inside the future."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Some of those variables can hold pointers to other local variables. Because "
"of that, the future should never be moved to a different memory location, as "
"it would invalidate those pointers."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"To prevent moving the future type in memory, it can only be polled through a "
"pinned pointer. `Pin` is a wrapper around a reference that disallows all "
"operations that would move the instance it points to into a different memory "
"location."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"// A work item. In this case, just sleep for the given time and respond\n"
"// with a message on the `respond_on` channel.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// A worker which listens for work on a queue and performs it.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// Pretend to work.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"failed to send response\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// TODO: report number of iterations every 100ms\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// A requester which requests work and waits for it to complete.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"failed to send on work queue\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"failed waiting for response\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"work result for iteration {i}: {resp}\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"You may recognize this as an example of the actor pattern. Actors typically "
"call `select!` in a loop."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"This serves as a summation of a few of the previous lessons, so take your "
"time with it."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Naively add a `_ = sleep(Duration::from_millis(100)) => { println!(..) }` to "
"the `select!`. This will never execute. Why?"
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Instead, add a `timeout_fut` containing that future outside of the `loop`:"
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"This still doesn't work. Follow the compiler errors, adding `&mut` to the "
"`timeout_fut` in the `select!` to work around the move, then using `Box::"
"pin`:"
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"This compiles, but once the timeout expires it is `Poll::Ready` on every "
"iteration (a fused future would help with this). Update to reset "
"`timeout_fut` every time it expires."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Box allocates on the heap. In some cases, `std::pin::pin!` (only recently "
"stabilized, with older code often using `tokio::pin!`) is also an option, "
"but that is difficult to use for a future that is reassigned."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Another alternative is to not use `pin` at all but spawn another task that "
"will send to a `oneshot` channel every 100ms."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Data that contains pointers to itself is called self-referential. Normally, "
"the Rust borrow checker would prevent self-referential data from being "
"moved, as the references cannot outlive the data they point to. However, the "
"code transformation for async blocks and functions is not verified by the "
"borrow checker."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"`Pin` is a wrapper around a reference. An object cannot be moved from its "
"place using a pinned pointer. However, it can still be moved through an "
"unpinned pointer."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"The `poll` method of the `Future` trait uses `Pin<&mut Self>` instead of "
"`&mut Self` to refer to the instance. That's why it can only be called on a "
"pinned pointer."
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid ""
"Async methods in traits are not yet supported in the stable channel ([An "
"experimental feature exists in nightly and should be stabilized in the mid "
"term.](https://blog.rust-lang.org/inside-rust/2022/11/17/async-fn-in-trait-"
"nightly.html))"
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid ""
"The crate [async_trait](https://docs.rs/async-trait/latest/async_trait/) "
"provides a workaround through a macro:"
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid "\"running all sleepers..\""
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid "\"slept for {}ms\""
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid ""
"`async_trait` is easy to use, but note that it's using heap allocations to "
"achieve this. This heap allocation has performance overhead."
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid ""
"The challenges in language support for `async trait` are deep Rust and "
"probably not worth describing in-depth. Niko Matsakis did a good job of "
"explaining them in [this post](https://smallcultfollowing.com/babysteps/"
"blog/2019/10/26/async-fn-in-traits-are-hard/) if you are interested in "
"digging deeper."
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid ""
"Try creating a new sleeper struct that will sleep for a random amount of "
"time and adding it to the Vec."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"Dropping a future implies it can never be polled again. This is called "
"_cancellation_ and it can occur at any `await` point. Care is needed to "
"ensure the system works correctly even when futures are cancelled. For "
"example, it shouldn't deadlock or lose data."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid "\"not UTF-8\""
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid "\"hi\\nthere\\n\""
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid "\"tick!\""
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"The compiler doesn't help with cancellation-safety. You need to read API "
"documentation and consider what state your `async fn` holds."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"Unlike `panic` and `?`, cancellation is part of normal control flow (vs "
"error-handling)."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid "The example loses parts of the string."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"Whenever the `tick()` branch finishes first, `next()` and its `buf` are "
"dropped."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"`LinesReader` can be made cancellation-safe by making `buf` part of the "
"struct:"
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid "// prefix buf and bytes with self.\n"
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"[`Interval::tick`](https://docs.rs/tokio/latest/tokio/time/struct.Interval."
"html#method.tick) is cancellation-safe because it keeps track of whether a "
"tick has been 'delivered'."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"[`AsyncReadExt::read`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncReadExt.html#method.read) is cancellation-safe because it either "
"returns or doesn't read data."
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"[`AsyncBufReadExt::read_line`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncBufReadExt.html#method.read_line) is similar to the example and _isn't_ "
"cancellation-safe. See its documentation for details and alternatives."
msgstr ""

#: src/exercises/concurrency/afternoon.md
msgid ""
"To practice your Async Rust skills, we have again two exercises for you:"
msgstr ""

#: src/exercises/concurrency/afternoon.md
msgid ""
"Dining philosophers: we already saw this problem in the morning. This time "
"you are going to implement it with Async Rust."
msgstr ""

#: src/exercises/concurrency/afternoon.md
msgid ""
"A Broadcast Chat Application: this is a larger project that allows you "
"experiment with more advanced Async Rust features."
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "Dining Philosophers --- Async"
msgstr "D√Æner des philosophes - Asynchrone"

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"See [dining philosophers](dining-philosophers.md) for a description of the "
"problem."
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md
#, fuzzy
msgid ""
"As before, you will need a local [Cargo installation](../../cargo/running-"
"locally.md) for this exercise. Copy the code below to a file called `src/"
"main.rs`, fill out the blanks, and test that `cargo run` does not deadlock:"
msgstr ""
"Vous aurez besoin d'une [installation Cargo](../../cargo/running-locally.md) "
"locale pour cet exercice. Copiez le code ci-dessous dans un fichier appel√© "
"`src/main.rs`, remplissez le vides, et testez que `cargo run` ne se bloque "
"pas¬†:"

#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Make them think and eat\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"Since this time you are using Async Rust, you'll need a `tokio` dependency. "
"You can use the following `Cargo.toml`:"
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"dining-philosophers-async-dine\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"\n"
"[dependencies]\n"
"tokio = { version = \"1.26.0\", features = [\"sync\", \"time\", \"macros\", "
"\"rt-multi-thread\"] }\n"
"```"
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"Also note that this time you have to use the `Mutex` and the `mpsc` module "
"from the `tokio` crate."
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md
msgid "Can you make your implementation single-threaded?"
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"In this exercise, we want to use our new knowledge to implement a broadcast "
"chat application. We have a chat server that the clients connect to and "
"publish their messages. The client reads user messages from the standard "
"input, and sends them to the server. The chat server broadcasts each message "
"that it receives to all the clients."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"For this, we use [a broadcast channel](https://docs.rs/tokio/latest/tokio/"
"sync/broadcast/fn.channel.html) on the server, and [`tokio_websockets`]"
"(https://docs.rs/tokio-websockets/) for the communication between the client "
"and the server."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid "Create a new Cargo project and add the following dependencies:"
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid "_Cargo.toml_:"
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"chat-async\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"\n"
"[dependencies]\n"
"futures-util = { version = \"0.3.30\", features = [\"sink\"] }\n"
"http = \"1.0.0\"\n"
"tokio = { version = \"1.28.1\", features = [\"full\"] }\n"
"tokio-websockets = { version = \"0.5.1\", features = [\"client\", "
"\"fastrand\", \"server\", \"sha1_smol\"] }\n"
"```"
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid "The required APIs"
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"You are going to need the following functions from `tokio` and "
"[`tokio_websockets`](https://docs.rs/tokio-websockets/). Spend a few minutes "
"to familiarize yourself with the API."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"[StreamExt::next()](https://docs.rs/futures-util/0.3.28/futures_util/stream/"
"trait.StreamExt.html#method.next) implemented by `WebSocketStream`: for "
"asynchronously reading messages from a Websocket Stream."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"[SinkExt::send()](https://docs.rs/futures-util/0.3.28/futures_util/sink/"
"trait.SinkExt.html#method.send) implemented by `WebSocketStream`: for "
"asynchronously sending messages on a Websocket Stream."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"[Lines::next_line()](https://docs.rs/tokio/latest/tokio/io/struct.Lines."
"html#method.next_line): for asynchronously reading user messages from the "
"standard input."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"[Sender::subscribe()](https://docs.rs/tokio/latest/tokio/sync/broadcast/"
"struct.Sender.html#method.subscribe): for subscribing to a broadcast channel."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid "Two binaries"
msgstr "Deux binaires"

#: src/exercises/concurrency/chat-app.md
msgid ""
"Normally in a Cargo project, you can have only one binary, and one `src/main."
"rs` file. In this project, we need two binaries. One for the client, and one "
"for the server. You could potentially make them two separate Cargo projects, "
"but we are going to put them in a single Cargo project with two binaries. "
"For this to work, the client and the server code should go under `src/bin` "
"(see the [documentation](https://doc.rust-lang.org/cargo/reference/cargo-"
"targets.html#binaries))."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"Copy the following server and client code into `src/bin/server.rs` and `src/"
"bin/client.rs`, respectively. Your task is to complete these files as "
"described below."
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "_src/bin/server.rs_:"
msgstr "`src/main.rs`¬†:"

#: src/exercises/concurrency/chat-app.md
msgid "// TODO: For a hint, see the description of the task below.\n"
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"127.0.0.1:2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"listening on port 2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"New connection from {addr:?}\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Wrap the raw TCP stream into a websocket.\n"
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "_src/bin/client.rs_:"
msgstr "`src/main.rs`¬†:"

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"ws://127.0.0.1:2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid "Running the binaries"
msgstr "Ex√©cution du parcours"

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid "Run the server with:"
msgstr "Ex√©cutez l'exemple avec¬†:"

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid "and the client with:"
msgstr "Ex√©cutez l'exemple avec¬†:"

#: src/exercises/concurrency/chat-app.md
msgid "Implement the `handle_connection` function in `src/bin/server.rs`."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"Hint: Use `tokio::select!` for concurrently performing two tasks in a "
"continuous loop. One task receives messages from the client and broadcasts "
"them. The other sends messages received by the server to the client."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid "Complete the main function in `src/bin/client.rs`."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"Hint: As before, use `tokio::select!` in a continuous loop for concurrently "
"performing two tasks: (1) reading user messages from standard input and "
"sending them to the server, and (2) receiving messages from the server, and "
"displaying them for the user."
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid ""
"Optional: Once you are done, change the code to broadcast messages to all "
"clients, but the sender of the message."
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "Concurrency Afternoon Exercise"
msgstr "Exercices de l'apr√®s-midi du jour 1"

#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "([back to exercise](dining-philosophers-async.md))"
msgstr "([retour √† l'exercice](dining-philosophers.md))"

#: src/exercises/concurrency/solutions-afternoon.md
msgid ""
"// Add a delay before picking the second fork to allow the execution\n"
"        // to transfer to another task\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "// The locks are dropped here\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid ""
"// To avoid a deadlock, we have to break the symmetry\n"
"            // somewhere. This will swap the forks without deinitializing\n"
"            // either of them.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "// tx is dropped here, so we don't need to explicitly drop it later\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Here is a thought: {thought}\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "([back to exercise](chat-app.md))"
msgstr "([retour √† l'exercice](rtc.md))"

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Welcome to chat! Type a message\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid ""
"// A continuous loop for concurrently performing two tasks: (1) receiving\n"
"    // messages from `ws_stream` and broadcasting them, and (2) receiving\n"
"    // messages on `bcast_rx` and sending them to the client.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"From client {addr:?} {text:?}\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Continuous loop for concurrently sending and receiving messages.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"From server: {}\""
msgstr ""

#: src/thanks.md
msgid ""
"_Thank you for taking Comprehensive Rust ü¶Ä!_ We hope you enjoyed it and "
"that it was useful."
msgstr ""
"_Merci d'avoir pris Comprehensive Rust(le guide complet de Rust) ü¶Ä!_ Nous "
"esp√©rons que vous l'avez appr√©ci√© et qu'il √©tait utile."

#: src/thanks.md
#, fuzzy
msgid ""
"We've had a lot of fun putting the course together. The course is not "
"perfect, so if you spotted any mistakes or have ideas for improvements, "
"please get in [contact with us on GitHub](https://github.com/google/"
"comprehensive-rust/discussions). We would love to hear from you."
msgstr ""
"Nous nous sommes beaucoup amus√©s √† pr√©parer le cours. Le cours n'est pas "
"parfait, donc si vous avez rep√©r√© des erreurs ou avez des id√©es "
"d'am√©liorations, n'h√©sitez pas √† nous contacter [contactez-nous au GitHub]"
"(https://github.com/google/comprehensive-rust/discussions). Nous aimerions "
"d'avoir de tes nouvelles."

#: src/glossary.md
msgid ""
"The following is a glossary which aims to give a short definition of many "
"Rust terms. For translations, this also serves to connect the term back to "
"the English original."
msgstr ""

#: src/glossary.md
msgid ""
"allocate:  \n"
"Dynamic memory allocation on [the heap](memory-management/stack-vs-heap.md)."
msgstr ""

#: src/glossary.md
msgid ""
"argument:  \n"
"Information that is passed into a function or method."
msgstr ""

#: src/glossary.md
msgid ""
"Bare-metal Rust:  \n"
"Low-level Rust development, often deployed to a system without an operating "
"system. See [Bare-metal Rust](bare-metal.md)."
msgstr ""

#: src/glossary.md
msgid ""
"block:  \n"
"See [Blocks](control-flow/blocks.md) and _scope_."
msgstr ""

#: src/glossary.md
msgid ""
"borrow:  \n"
"See [Borrowing](ownership/borrowing.md)."
msgstr ""

#: src/glossary.md
msgid ""
"borrow checker:  \n"
"The part of the Rust compiler which checks that all borrows are valid."
msgstr ""

#: src/glossary.md
msgid ""
"brace:  \n"
"`{` and `}`. Also called _curly brace_, they delimit _blocks_."
msgstr ""

#: src/glossary.md
msgid ""
"build:  \n"
"The process of converting source code into executable code or a usable "
"program."
msgstr ""

#: src/glossary.md
msgid ""
"call:  \n"
"To invoke or execute a function or method."
msgstr ""

#: src/glossary.md
msgid ""
"channel:  \n"
"Used to safely pass messages [between threads](concurrency/channels.md)."
msgstr ""

#: src/glossary.md
msgid ""
"Comprehensive Rust ü¶Ä:  \n"
"The courses here are jointly called Comprehensive Rust ü¶Ä."
msgstr ""

#: src/glossary.md
msgid ""
"concurrency:  \n"
"The execution of multiple tasks or processes at the same time."
msgstr ""

#: src/glossary.md
msgid ""
"Concurrency in Rust:  \n"
"See [Concurrency in Rust](concurrency.md)."
msgstr ""

#: src/glossary.md
msgid ""
"constant:  \n"
"A value that does not change during the execution of a program."
msgstr ""

#: src/glossary.md
msgid ""
"control flow:  \n"
"The order in which the individual statements or instructions are executed in "
"a program."
msgstr ""

#: src/glossary.md
msgid ""
"crash:  \n"
"An unexpected and unhandled failure or termination of a program."
msgstr ""

#: src/glossary.md
msgid ""
"enumeration:  \n"
"A data type that holds one of several named constants, possibly with an "
"associated tuple or struct."
msgstr ""

#: src/glossary.md
msgid ""
"error:  \n"
"An unexpected condition or result that deviates from the expected behavior."
msgstr ""

#: src/glossary.md
msgid ""
"error handling:  \n"
"The process of managing and responding to errors that occur during program "
"execution."
msgstr ""

#: src/glossary.md
msgid ""
"exercise:  \n"
"A task or problem designed to practice and test programming skills."
msgstr ""

#: src/glossary.md
msgid ""
"function:  \n"
"A reusable block of code that performs a specific task."
msgstr ""

#: src/glossary.md
msgid ""
"garbage collector:  \n"
"A mechanism that automatically frees up memory occupied by objects that are "
"no longer in use."
msgstr ""

#: src/glossary.md
msgid ""
"generics:  \n"
"A feature that allows writing code with placeholders for types, enabling "
"code reuse with different data types."
msgstr ""

#: src/glossary.md
msgid ""
"immutable:  \n"
"Unable to be changed after creation."
msgstr ""

#: src/glossary.md
msgid ""
"integration test:  \n"
"A type of test that verifies the interactions between different parts or "
"components of a system."
msgstr ""

#: src/glossary.md
msgid ""
"keyword:  \n"
"A reserved word in a programming language that has a specific meaning and "
"cannot be used as an identifier."
msgstr ""

#: src/glossary.md
msgid ""
"library:  \n"
"A collection of precompiled routines or code that can be used by programs."
msgstr ""

#: src/glossary.md
msgid ""
"macro:  \n"
"Rust macros can be recognized by a `!` in the name. Macros are used when "
"normal functions are not enough. A typical example is `format!`, which takes "
"a variable number of arguments, which isn't supported by Rust functions."
msgstr ""

#: src/glossary.md
msgid ""
"`main` function:  \n"
"Rust programs start executing with the `main` function."
msgstr ""

#: src/glossary.md
msgid ""
"match:  \n"
"A control flow construct in Rust that allows for pattern matching on the "
"value of an expression."
msgstr ""

#: src/glossary.md
msgid ""
"memory leak:  \n"
"A situation where a program fails to release memory that is no longer "
"needed, leading to a gradual increase in memory usage."
msgstr ""

#: src/glossary.md
msgid ""
"method:  \n"
"A function associated with an object or a type in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"module:  \n"
"A namespace that contains definitions, such as functions, types, or traits, "
"to organize code in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"move:  \n"
"The transfer of ownership of a value from one variable to another in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"mutable:  \n"
"A property in Rust that allows variables to be modified after they have been "
"declared."
msgstr ""

#: src/glossary.md
msgid ""
"ownership:  \n"
"The concept in Rust that defines which part of the code is responsible for "
"managing the memory associated with a value."
msgstr ""

#: src/glossary.md
msgid ""
"panic:  \n"
"An unrecoverable error condition in Rust that results in the termination of "
"the program."
msgstr ""

#: src/glossary.md
msgid ""
"parameter:  \n"
"A value that is passed into a function or method when it is called."
msgstr ""

#: src/glossary.md
msgid ""
"pattern:  \n"
"A combination of values, literals, or structures that can be matched against "
"an expression in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"payload:  \n"
"The data or information carried by a message, event, or data structure."
msgstr ""

#: src/glossary.md
msgid ""
"program:  \n"
"A set of instructions that a computer can execute to perform a specific task "
"or solve a particular problem."
msgstr ""

#: src/glossary.md
msgid ""
"programming language:  \n"
"A formal system used to communicate instructions to a computer, such as Rust."
msgstr ""

#: src/glossary.md
msgid ""
"receiver:  \n"
"The first parameter in a Rust method that represents the instance on which "
"the method is called."
msgstr ""

#: src/glossary.md
msgid ""
"reference counting:  \n"
"A memory management technique in which the number of references to an object "
"is tracked, and the object is deallocated when the count reaches zero."
msgstr ""

#: src/glossary.md
msgid ""
"return:  \n"
"A keyword in Rust used to indicate the value to be returned from a function."
msgstr ""

#: src/glossary.md
msgid ""
"Rust:  \n"
"A systems programming language that focuses on safety, performance, and "
"concurrency."
msgstr ""

#: src/glossary.md
msgid ""
"Rust Fundamentals:  \n"
"Days 1 to 3 of this course."
msgstr ""

#: src/glossary.md
msgid ""
"Rust in Android:  \n"
"See [Rust in Android](android.md)."
msgstr ""

#: src/glossary.md
msgid ""
"Rust in Chromium:  \n"
"See [Rust in Chromium](chromium.md)."
msgstr ""

#: src/glossary.md
msgid ""
"safe:  \n"
"Refers to code that adheres to Rust's ownership and borrowing rules, "
"preventing memory-related errors."
msgstr ""

#: src/glossary.md
msgid ""
"scope:  \n"
"The region of a program where a variable is valid and can be used."
msgstr ""

#: src/glossary.md
msgid ""
"standard library:  \n"
"A collection of modules providing essential functionality in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"static:  \n"
"A keyword in Rust used to define static variables or items with a `'static` "
"lifetime."
msgstr ""

#: src/glossary.md
msgid ""
"string:  \n"
"A data type storing textual data. See [`String` vs `str`](basic-syntax/"
"string-slices.html) for more."
msgstr ""

#: src/glossary.md
msgid ""
"struct:  \n"
"A composite data type in Rust that groups together variables of different "
"types under a single name."
msgstr ""

#: src/glossary.md
msgid ""
"test:  \n"
"A Rust module containing functions that test the correctness of other "
"functions."
msgstr ""

#: src/glossary.md
msgid ""
"thread:  \n"
"A separate sequence of execution in a program, allowing concurrent execution."
msgstr ""

#: src/glossary.md
msgid ""
"thread safety:  \n"
"The property of a program that ensures correct behavior in a multithreaded "
"environment."
msgstr ""

#: src/glossary.md
msgid ""
"trait:  \n"
"A collection of methods defined for an unknown type, providing a way to "
"achieve polymorphism in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"trait bound:  \n"
"An abstraction where you can require types to implement some traits of your "
"interest."
msgstr ""

#: src/glossary.md
msgid ""
"tuple:  \n"
"A composite data type that contains variables of different types. Tuple "
"fields have no names, and are accessed by their ordinal numbers."
msgstr ""

#: src/glossary.md
msgid ""
"type:  \n"
"A classification that specifies which operations can be performed on values "
"of a particular kind in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"type inference:  \n"
"The ability of the Rust compiler to deduce the type of a variable or "
"expression."
msgstr ""

#: src/glossary.md
msgid ""
"undefined behavior:  \n"
"Actions or conditions in Rust that have no specified result, often leading "
"to unpredictable program behavior."
msgstr ""

#: src/glossary.md
msgid ""
"union:  \n"
"A data type that can hold values of different types but only one at a time."
msgstr ""

#: src/glossary.md
msgid ""
"unit test:  \n"
"Rust comes with built-in support for running small unit tests and larger "
"integration tests. See [Unit Tests](testing/unit-tests.html)."
msgstr ""

#: src/glossary.md
msgid ""
"unit type:  \n"
"Type that holds no data, written as a tuple with no members."
msgstr ""

#: src/glossary.md
msgid ""
"unsafe:  \n"
"The subset of Rust which allows you to trigger _undefined behavior_. See "
"[Unsafe Rust](unsafe.html)."
msgstr ""

#: src/glossary.md
msgid ""
"variable:  \n"
"A memory location storing data. Variables are valid in a _scope_."
msgstr ""

#: src/other-resources.md
msgid "Other Rust Resources"
msgstr "Autres ressources Rust"

#: src/other-resources.md
#, fuzzy
msgid ""
"The Rust community has created a wealth of high-quality and free resources "
"online."
msgstr ""
"La communaut√© Rust a cr√©√© une multitude de ressources gratuites et de haute "
"qualit√© en ligne."

#: src/other-resources.md
#, fuzzy
msgid "Official Documentation"
msgstr "Documents officiels"

#: src/other-resources.md
#, fuzzy
msgid "The Rust project hosts many resources. These cover Rust in general:"
msgstr ""
"Le projet Rust h√©berge de nombreuses ressources. Celles-ci couvrent Rust en "
"g√©n√©ral¬†:"

#: src/other-resources.md
#, fuzzy
msgid ""
"[The Rust Programming Language](https://doc.rust-lang.org/book/): the "
"canonical free book about Rust. Covers the language in detail and includes a "
"few projects for people to build."
msgstr ""
"[Le langage de programmation Rust](https://doc.rust-lang.org/book/) : le "
"livre canonique gratuit sur Rust. Couvre la langue en d√©tail et comprend un "
"peu de projets √† construire."

#: src/other-resources.md
msgid ""
"[Rust By Example](https://doc.rust-lang.org/rust-by-example/): covers the "
"Rust syntax via a series of examples which showcase different constructs. "
"Sometimes includes small exercises where you are asked to expand on the code "
"in the examples."
msgstr ""
"[Rust By Example](https://doc.rust-lang.org/rust-by-example/)¬†: couvre la "
"syntaxe de Rust via une s√©rie d'exemples qui pr√©sentent diff√©rentes "
"constructions. Parfois comprend de petits exercices o√π l'on vous demande de "
"d√©velopper le code de l'exemple."

#: src/other-resources.md
#, fuzzy
msgid ""
"[Rust Standard Library](https://doc.rust-lang.org/std/): full documentation "
"of the standard library for Rust."
msgstr ""
"[Biblioth√®que standard Rust](https://doc.rust-lang.org/std/) : documentation "
"compl√®te de la biblioth√®que standard de Rust."

#: src/other-resources.md
#, fuzzy
msgid ""
"[The Rust Reference](https://doc.rust-lang.org/reference/): an incomplete "
"book which describes the Rust grammar and memory model."
msgstr ""
"[The Rust Reference](https://doc.rust-lang.org/reference/) : un livre "
"incomplet qui d√©crit la grammaire et le mod√®le de m√©moire de Rust."

#: src/other-resources.md
#, fuzzy
msgid "More specialized guides hosted on the official Rust site:"
msgstr "Des guides plus sp√©cialis√©s h√©berg√©s sur le site officiel de Rust :"

#: src/other-resources.md
msgid ""
"[The Rustonomicon](https://doc.rust-lang.org/nomicon/): covers unsafe Rust, "
"including working with raw pointers and interfacing with other languages "
"(FFI)."
msgstr ""
"[The Rustonomicon](https://doc.rust-lang.org/nomicon/)¬†: couvre le Rust non "
"securis√© (_unsafe_), y compris les pointeurs nus et l'interfa√ßage avec "
"d'autres langages (FFI)."

#: src/other-resources.md
msgid ""
"[Asynchronous Programming in Rust](https://rust-lang.github.io/async-book/): "
"covers the new asynchronous programming model which was introduced after the "
"Rust Book was written."
msgstr ""
"[Programmation asynchrone avec Rust](https://rust-lang.github.io/async-"
"book/) : couvre le nouveau mod√®le de programmation asynchrone qui a √©t√© "
"introduit apr√®s la publication du livre Rust."

#: src/other-resources.md
#, fuzzy
msgid ""
"[The Embedded Rust Book](https://doc.rust-lang.org/stable/embedded-book/): "
"an introduction to using Rust on embedded devices without an operating "
"system."
msgstr ""
"[The Embedded Rust Book](https://doc.rust-lang.org/stable/embedded-book/) : "
"un introduction √† l'utilisation de Rust sur des appareils embarqu√©s sans "
"syst√®me d'exploitation."

#: src/other-resources.md
#, fuzzy
msgid "Unofficial Learning Material"
msgstr "Mat√©riel d'apprentissage non officiel"

#: src/other-resources.md
#, fuzzy
msgid "A small selection of other guides and tutorial for Rust:"
msgstr "Une petite s√©lection d'autres guides et tutoriels pour Rust :"

#: src/other-resources.md
#, fuzzy
msgid ""
"[Learn Rust the Dangerous Way](http://cliffle.com/p/dangerust/): covers Rust "
"from the perspective of low-level C programmers."
msgstr ""
"[Learn Rust the Dangerous Way](http://cliffle.com/p/dangerust/) : couvre "
"Rust du point de vue des programmeurs C de bas niveau."

#: src/other-resources.md
msgid ""
"[Rust for Embedded C Programmers](https://docs.opentitan.org/doc/ug/"
"rust_for_c/): covers Rust from the perspective of developers who write "
"firmware in C."
msgstr ""
"\\[Rust pour Programmeurs C Embarqu√©\\] (https://docs.opentitan.org/doc/ug/"
"rust_for_c/) : couvre Rust du point de vue des d√©veloppeurs qui √©crivent des "
"firmwares en C."

#: src/other-resources.md
#, fuzzy
msgid ""
"[Rust for professionals](https://overexact.com/rust-for-professionals/): "
"covers the syntax of Rust using side-by-side comparisons with other "
"languages such as C, C++, Java, JavaScript, and Python."
msgstr ""
"[Rust pour les professionnels](https://overexact.com/rust-for-"
"professionals/): couvre la syntaxe de Rust en utilisant des comparaisons "
"c√¥te √† c√¥te avec d'autres langages tels que C, C++, Java, JavaScript et "
"Python."

#: src/other-resources.md
#, fuzzy
msgid ""
"[Rust on Exercism](https://exercism.org/tracks/rust): 100+ exercises to help "
"you learn Rust."
msgstr ""
"[Rust on Exercism](https://exercism.org/tracks/rust) : plus de 100 exercices "
"pour vous aider vous apprenez Rust."

#: src/other-resources.md
msgid ""
"[Ferrous Teaching Material](https://ferrous-systems.github.io/teaching-"
"material/index.html): a series of small presentations covering both basic "
"and advanced part of the Rust language. Other topics such as WebAssembly, "
"and async/await are also covered."
msgstr ""
"\\[Mat√©riel de Ferrous Teaching\\] (https://ferrous-systems.github.io/"
"teaching-material/index.html)¬†: un s√©rie de petites pr√©sentations couvrant √† "
"la fois la partie de base et avanc√©e de Rust. D'autres sujets tels que "
"WebAssembly et async/wait sont √©galement couvert."

#: src/other-resources.md
#, fuzzy
msgid ""
"[Beginner's Series to Rust](https://docs.microsoft.com/en-us/shows/beginners-"
"series-to-rust/) and [Take your first steps with Rust](https://docs."
"microsoft.com/en-us/learn/paths/rust-first-steps/): two Rust guides aimed at "
"new developers. The first is a set of 35 videos and the second is a set of "
"11 modules which covers Rust syntax and basic constructs."
msgstr ""
"[S√©rie d√©butant √† Rust](https://docs.microsoft.com/en-us/shows/beginners-"
"series-to-rust/) et [Faites vos premiers pas avec Rust](https://docs."
"microsoft.com/en-us/learn/paths/rust-first-steps/) : deux Guides Rust "
"destin√©s aux nouveaux d√©veloppeurs. Le premier est un ensemble de 35 vid√©os "
"et le le second est un ensemble de 11 modules qui couvre la syntaxe Rust et "
"les constructions de base."

#: src/other-resources.md
#, fuzzy
msgid ""
"[Learn Rust With Entirely Too Many Linked Lists](https://rust-unofficial."
"github.io/too-many-lists/): in-depth exploration of Rust's memory management "
"rules, through implementing a few different types of list structures."
msgstr ""
"\\[Apprenez Rust avec trop de liens Listes\\] (https://rust-unofficial."
"github.io/too-many-lists/) : en profondeur exploration des r√®gles de gestion "
"de la m√©moire de Rust, en impl√©mentant quelques diff√©rents types de "
"structures de liste."

#: src/other-resources.md
#, fuzzy
msgid ""
"Please see the [Little Book of Rust Books](https://lborb.github.io/book/) "
"for even more Rust books."
msgstr ""
"Veuillez consulter le [Little Book of Rust Books](https://lborb.github.io/"
"book/) pour encore plus de livres Rust."

#: src/credits.md
#, fuzzy
msgid ""
"The material here builds on top of the many great sources of Rust "
"documentation. See the page on [other resources](other-resources.md) for a "
"full list of useful resources."
msgstr ""
"Le mat√©riel ici s'appuie sur les nombreuses sources de documentation de "
"Rust. Voir la page sur \\[autres ressources\\] (other-resources.md) pour une "
"liste compl√®te des ressources utiles ressources."

#: src/credits.md
#, fuzzy
msgid ""
"The material of Comprehensive Rust is licensed under the terms of the Apache "
"2.0 license, please see [`LICENSE`](https://github.com/google/comprehensive-"
"rust/blob/main/LICENSE) for details."
msgstr ""
"Le mat√©riel de Comprehensive Rust(le guide complet de Rust) est sous licence "
"sous les termes de la licence d'Apache 2.0, veuillez consulter [`LICENSE`]"
"(../LICENSE) pour plus de d√©tails."

#: src/credits.md
msgid "Rust by Example"
msgstr "Rust by Example"

#: src/credits.md
#, fuzzy
msgid ""
"Some examples and exercises have been copied and adapted from [Rust by "
"Example](https://doc.rust-lang.org/rust-by-example/). Please see the "
"`third_party/rust-by-example/` directory for details, including the license "
"terms."
msgstr ""
"Quelques exemples et exercices ont √©t√© copi√©s et adapt√©s de [Rust by Exemple]"
"(https://doc.rust-lang.org/rust-by-example/). Veuillez consulter le "
"R√©pertoire `third_party/rust-by-example/` pour plus de d√©tails, y compris la "
"licence conditions."

#: src/credits.md
msgid "Rust on Exercism"
msgstr "Rust sur Exercism"

#: src/credits.md
msgid ""
"Some exercises have been copied and adapted from [Rust on Exercism](https://"
"exercism.org/tracks/rust). Please see the `third_party/rust-on-exercism/` "
"directory for details, including the license terms."
msgstr ""
"Certains exercices ont √©t√© copi√©s et adapt√©s de \\[Rust on Exercism\\] "
"(https://exercism.org/tracks/rust). Veuillez consulter le R√©pertoire "
"`third_party/rust-on-exercism/` pour plus de d√©tails, y compris les "
"conditions  de la licence."

#: src/credits.md
#, fuzzy
msgid "CXX"
msgstr "\\##¬†CXX"

#: src/credits.md
#, fuzzy
msgid ""
"The [Interoperability with C++](android/interoperability/cpp.md) section "
"uses an image from [CXX](https://cxx.rs/). Please see the `third_party/cxx/` "
"directory for details, including the license terms."
msgstr ""
"La section [Interop√©rabilit√© avec C++](android/interoperability/cpp.md) "
"utilise un image de [CXX](https://cxx.rs/). Veuillez consulter le r√©pertoire "
"`third_party/cxx/` pour plus de d√©tails, y compris les termes de la licence."

#, fuzzy
#~ msgid "With C++)"
#~ msgstr "Avec C++"

#, fuzzy
#~ msgid "{{%course outline Fundamentals}}"
#~ msgstr "Fondamentaux de Rust"

#, fuzzy
#~ msgid ""
#~ "Let us design a classical GUI library using our new knowledge of traits "
#~ "and trait objects. We'll only implement the drawing of it (as text) for "
#~ "simplicity."
#~ msgstr ""
#~ "Concevons une biblioth√®que d'interface graphique classique en utilisant "
#~ "nos nouvelles connaissances sur les traits et objets trait."

#, fuzzy
#~ msgid "We will have a number of widgets in our library:"
#~ msgstr "Nous aurons un certain nombre de widgets dans notre biblioth√®que¬†:"

#, fuzzy
#~ msgid "`Window`: has a `title` and contains other widgets."
#~ msgstr "`Window`¬†: a un `title` et contient d'autres widgets."

#, fuzzy
#~ msgid "`Label`: has a `label`."
#~ msgstr "`Label`¬†: a un `label`."

#, fuzzy
#~ msgid "The widgets will implement a `Widget` trait, see below."
#~ msgstr "Les widgets impl√©menteront un trait `Widget`, voir ci-dessous."

#, fuzzy
#~ msgid ""
#~ "Copy the code below to <https://play.rust-lang.org/>, fill in the missing "
#~ "`draw_into` methods so that you implement the `Widget` trait:"
#~ msgstr ""
#~ "Copiez le code ci-dessous sur <https://play.rust-lang.org/>, remplissez "
#~ "les champs manquants m√©thodes `draw_into` afin que vous impl√©mentiez le "
#~ "trait `Widget`¬†:"

#, fuzzy
#~ msgid "The output of the above program can be something simple like this:"
#~ msgstr ""
#~ "La sortie du programme ci-dessus peut √™tre quelque chose de simple comme "
#~ "ceci¬†:"

#, fuzzy
#~ msgid ""
#~ "If you want to draw aligned text, you can use the [fill/alignment]"
#~ "(https://doc.rust-lang.org/std/fmt/index.html#fillalignment) formatting "
#~ "operators. In particular, notice how you can pad with different "
#~ "characters (here a `'/'`) and how you can control alignment:"
#~ msgstr ""
#~ "Si vous voulez dessiner du texte align√©, vous pouvez utiliser le "
#~ "[remplissage/alignement](https://doc.rust-lang.org/std/fmt/index."
#~ "html#fillalignment) op√©rateurs de formatage. En particulier, notez "
#~ "comment vous pouvez compl√©ter avec diff√©rents caract√®res (ici un `'/'`) "
#~ "et comment vous pouvez contr√¥ler l'alignement¬†:"

#, fuzzy
#~ msgid ""
#~ "Using such alignment tricks, you can for example produce output like this:"
#~ msgstr ""
#~ "En utilisant de telles astuces d'alignement, vous pouvez par exemple "
#~ "produire une sortie comme celle-ci¬†:"

#, fuzzy
#~ msgid ""
#~ "In the above example, you can even leave out the `*` in the `println!` "
#~ "statement thanks to `Deref`."
#~ msgstr ""
#~ "Dans l'exemple ci-dessus, vous pouvez m√™me omettre le `*` dans "
#~ "l'instruction `println!` gr√¢ce √† `Deref`."

#, fuzzy
#~ msgid ""
#~ "[`Cell`](https://doc.rust-lang.org/std/cell/struct.Cell.html) and "
#~ "[`RefCell`](https://doc.rust-lang.org/std/cell/struct.RefCell.html) "
#~ "implement what Rust calls _interior mutability:_ mutation of values in an "
#~ "immutable context."
#~ msgstr ""
#~ "En utilisant [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) "
#~ "et [`BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html), vous "
#~ "pouvez r√©sumer les sources `u8`¬†:"

#~ msgid "Lifetimes"
#~ msgstr "Dur√©es de vie"

#, fuzzy
#~ msgid ""
#~ "It's generally helpful for them to implement `Clone` and `Eq` too where "
#~ "possible, to make life easier for tests and consumers of your library. In "
#~ "this case we can't easily do so, because `io::Error` doesn't implement "
#~ "them."
#~ msgstr ""
#~ "C'est une bonne pratique pour tous les types d'erreurs d'impl√©menter "
#~ "`std::error::Error`, qui n√©cessite `Debug` et 'Affichage'. Il est "
#~ "g√©n√©ralement utile pour eux d'impl√©menter `Clone` et `Eq` aussi lorsque "
#~ "cela est possible, pour faire la vie plus facile pour les testeurs et les "
#~ "consommateurs de votre biblioth√®que. Dans ce cas, nous ne pouvons pas le "
#~ "faire facilement, car `io::Error` ne les impl√©mente pas."

#, fuzzy
#~ msgid "`thiserror`  and `anyhow`"
#~ msgstr "`De` et `Dans`"

#~ msgid "Small Example"
#~ msgstr "Petit exemple"

#~ msgid "Why Rust?"
#~ msgstr "Pourquoi Rust ?"

#, fuzzy
#~ msgid "An Example in C"
#~ msgstr "C Exemple"

#~ msgid "Compile Time Guarantees"
#~ msgstr "Garanties √† la compilation"

#~ msgid "Runtime Guarantees"
#~ msgstr "Garanties √† l'ex√©cution"

#~ msgid "Modern Features"
#~ msgstr "Fonctionnalit√©s modernes"

#~ msgid "Basic Syntax"
#~ msgstr "Syntaxe de base"

#~ msgid "String vs str"
#~ msgstr "String vs str"

#~ msgid "Rustdoc"
#~ msgstr "Rustdoc"

#~ msgid "Overloading"
#~ msgstr "Surcharge"

#~ msgid "Arrays and for Loops"
#~ msgstr "Tableaux et boucles for"

#~ msgid "if expressions"
#~ msgstr "expressions `if`"

#~ msgid "for expressions"
#~ msgstr "expressions `for`"

#~ msgid "while expressions"
#~ msgstr "expressions `while`"

#~ msgid "break & continue"
#~ msgstr "break & continue"

#~ msgid "loop expressions"
#~ msgstr "expressions `loop`"

#~ msgid "Variant Payloads"
#~ msgstr "Contenu variable"

#~ msgid "Enum Sizes"
#~ msgstr "Tailles d'√©num√©ration"

#~ msgid "Novel Control Flow"
#~ msgstr "Nouvelles structures de contr√¥le"

#~ msgid "if let expressions"
#~ msgstr "Expressions `if let`"

#~ msgid "while let expressions"
#~ msgstr "Expressions `while let`"

#~ msgid "match expressions"
#~ msgstr "Expressions `match`"

#~ msgid "Destructuring Structs"
#~ msgstr "D√©structuration des structures"

#~ msgid "Destructuring Arrays"
#~ msgstr "D√©structuration des tableaux"

#~ msgid "Match Guards"
#~ msgstr "Contr√¥le de correspondance"

#~ msgid "Stack vs Heap"
#~ msgstr "Pile et Tas"

#~ msgid "Stack Memory"
#~ msgstr "M√©moire de pile"

#~ msgid "Manual Memory Management"
#~ msgstr "Gestion manuelle de la m√©moire"

#~ msgid "Scope-Based Memory Management"
#~ msgstr "Gestion de la m√©moire bas√©e sur la port√©e"

#~ msgid "Garbage Collection"
#~ msgstr "Ramasse-miettes"

#~ msgid "Rust Memory Management"
#~ msgstr "Gestion de la m√©moire avec Rust"

#~ msgid "Moved Strings in Rust"
#~ msgstr "String d√©plac√©s avec Rust"

#~ msgid "Double Frees in Modern C++"
#~ msgstr "Double lib√©ration de m√©moire en C++ moderne"

#~ msgid "Moves in Function Calls"
#~ msgstr "D√©placements dans les appels de fonction"

#~ msgid "Copying and Cloning"
#~ msgstr "Copie et clonage"

#~ msgid "Shared and Unique Borrows"
#~ msgstr "Emprunts partag√©s et uniques"

#~ msgid "Field Shorthand Syntax"
#~ msgstr "Syntaxe abr√©g√©e des champs"

#~ msgid "Method Receiver"
#~ msgstr "R√©cepteur de m√©thode"

#~ msgid "Storing Books"
#~ msgstr "Stockage des livres"

#~ msgid "Option and Result"
#~ msgstr "Option et Result"

#~ msgid "Vec"
#~ msgstr "Vec"

#~ msgid "HashMap"
#~ msgstr "HashMap"

#~ msgid "Box"
#~ msgstr "Box"

#~ msgid "Recursive Data Types"
#~ msgstr "Types de donn√©es r√©cursifs"

#~ msgid "Rc"
#~ msgstr "Rc"

#~ msgid "Iterators and Ownership"
#~ msgstr "It√©rateurs et propri√©t√©"

#~ msgid "Strings and Iterators"
#~ msgstr "Strings et Iterateurs"

#~ msgid "Generic Methods"
#~ msgstr "M√©thodes g√©n√©riques"

#~ msgid "Monomorphization"
#~ msgstr "Monomorphisation"

#~ msgid "Default Methods"
#~ msgstr "M√©thodes par d√©faut"

#~ msgid "impl Trait"
#~ msgstr "impl Trait"

#~ msgid "Important Traits"
#~ msgstr "Traits importants"

#~ msgid "From and Into"
#~ msgstr "From et Into"

#~ msgid "Default"
#~ msgstr "Default"

#~ msgid "Operators: Add, Mul, ..."
#~ msgstr "Op√©rateurs : Add, Mul, ..."

#~ msgid "Closures: Fn, FnMut, FnOnce"
#~ msgstr "Fermetures: Fn, FnMut, FnOnce"

#~ msgid "Points and Polygons"
#~ msgstr "Points et polygones"

#~ msgid "Catching Stack Unwinding"
#~ msgstr "Suspension du d√©roulement de la pile"

#~ msgid "Structured Error Handling"
#~ msgstr "Gestion structur√©e des erreurs"

#~ msgid "Propagating Errors with ?"
#~ msgstr "Propagation des erreurs avec ?"

#~ msgid "Converting Error Types"
#~ msgstr "Conversion des types d'erreur"

#~ msgid "Deriving Error Enums"
#~ msgstr "D√©rivation des √©num√©rations d'erreur"

#~ msgid "Adding Context to Errors"
#~ msgstr "Ajout de contexte aux erreurs"

#~ msgid "no_std"
#~ msgstr "no_std"

#~ msgid "alloc"
#~ msgstr "alloc"

#~ msgid "embedded-hal"
#~ msgstr "embedded-hal"

#~ msgid "probe-rs, cargo-embed"
#~ msgstr "probe-rs, cargo-embed"

#~ msgid "zerocopy"
#~ msgstr "zerocopy"

#~ msgid "buddy_system_allocator"
#~ msgstr "buddy_system_allocator"

#~ msgid "tinyvec"
#~ msgstr "tinyvec"

#~ msgid "spin"
#~ msgstr "spin"

#~ msgid "Send and Sync"
#~ msgstr "Send et Sync"

#~ msgid "Send"
#~ msgstr "Send"

#~ msgid "Sync"
#~ msgstr "Sync"

#~ msgid "Arc"
#~ msgstr "Arc"

#~ msgid "Mutex"
#~ msgstr "Mutex"

#~ msgid "async/await"
#~ msgstr "async/await"

#~ msgid "Day 1 Morning"
#~ msgstr "Jour 1 Matin"

#~ msgid "Day 1 Afternoon"
#~ msgstr "Jour 1 Apr√®s-midi"

#~ msgid "Day 2 Morning"
#~ msgstr "Jour 2 Matin"

#~ msgid "Day 2 Afternoon"
#~ msgstr "Jour 2 Apr√®s-midi"

#~ msgid "Day 3 Morning"
#~ msgstr "Jour 3 Matin"

#~ msgid "Day 3 Afternoon"
#~ msgstr "Jour 3 Apr√®s-midi"

#~ msgid "Bare Metal Rust Morning"
#~ msgstr "Bare Metal Rust Matin"

#~ msgid "Concurrency Morning"
#~ msgstr "Matin concurrence"

#~ msgid "Concurrency Afternoon"
#~ msgstr "Apr√®s-midi concurrence"

#~ msgid ""
#~ "Day 1: Basic Rust, syntax, control flow, creating and consuming values."
#~ msgstr ""
#~ "Jour 1 : bases de Rust, syntaxe, flux de contr√¥le, cr√©ation et "
#~ "consommation de valeurs."

#~ msgid ""
#~ "Day 2: Memory management, ownership, compound data types, and the "
#~ "standard library."
#~ msgstr ""
#~ "Jour 2 : gestion de la m√©moire, possession, types compos√©s, biblioth√®que "
#~ "standard."

#~ msgid "Day 3: Generics, traits, error handling, testing, and unsafe Rust."
#~ msgstr ""
#~ "Jour 3 : g√©n√©riques, caract√©ristiques, gestion des erreurs, tests, Rust "
#~ "non s√©curis√© (_unsafe_)."

#, fuzzy
#~ msgid ""
#~ "Control flow constructs: `if`, `if let`, `while`, `while let`, `break`, "
#~ "and `continue`."
#~ msgstr ""
#~ "Constructions de flux de contr√¥le¬†: `if`, `if let`, `while`, `while let`, "
#~ "`break` et 'continuer'."

#~ msgid ""
#~ "The idea for the first day is to show _just enough_ of Rust to be able to "
#~ "speak about the famous borrow checker. The way Rust handles memory is a "
#~ "major feature and we should show students this right away."
#~ msgstr ""
#~ "L'id√©e du premier jour est de montrer _juste assez_ de Rust pour pouvoir "
#~ "parler du c√©l√®bre v√©rificateur d'emprunt. La fa√ßon dont Rust g√®re la "
#~ "m√©moire est une caract√©ristique majeure et nous devrions montrer cela aux "
#~ "√©l√®ves tout de suite."

#~ msgid ""
#~ "If you're teaching this in a classroom, this is a good place to go over "
#~ "the schedule. We suggest splitting the day into two parts (following the "
#~ "slides):"
#~ msgstr ""
#~ "Si vous enseignez cela dans une salle de classe, c'est un bon endroit "
#~ "pour passer en revue le calendrier. Nous sugg√©rons de diviser la journ√©e "
#~ "en deux parties (suivant les diapositives) :"

#~ msgid "Morning: 9:00 to 12:00,"
#~ msgstr "Matin : 9h00 √† 12h00,"

#~ msgid "Afternoon: 13:00 to 16:00."
#~ msgstr "Apr√®s-midi : 13h00 √† 16h00."

#~ msgid ""
#~ "You can of course adjust this as necessary. Please make sure to include "
#~ "breaks, we recommend a break every hour!"
#~ msgstr ""
#~ "Vous pouvez bien s√ªr ajuster cela si n√©cessaire. Assurez-vous d'inclure "
#~ "les pauses, nous recommandons une pause toutes les heures !"

#, fuzzy
#~ msgid ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    println!(\"Hello üåç!\");\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust\n"
#~ "fn main() {\n"
#~ "    println!(\"Bonjour üåç!\");\n"
#~ "}\n"
#~ "```"

#~ msgid "Here is a small example program in Rust:"
#~ msgstr "Voici un petit exemple de programme en Rust :"

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn main() {              // Program entry point\n"
#~ "    let mut x: i32 = 6;  // Mutable variable binding\n"
#~ "    print!(\"{x}\");       // Macro for printing, like printf\n"
#~ "    while x != 1 {       // No parenthesis around expression\n"
#~ "        if x % 2 == 0 {  // Math like in other languages\n"
#~ "            x = x / 2;\n"
#~ "        } else {\n"
#~ "            x = 3 * x + 1;\n"
#~ "        }\n"
#~ "        print!(\" -> {x}\");\n"
#~ "    }\n"
#~ "    println!();\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn main() {              // Entr√©e du programme\n"
#~ "    let mut x: i32 = 6;  // Liaison mutable de variable\n"
#~ "    print!(\"{x}\");       // Macro pour impression, comme printf\n"
#~ "    while x != 1 {       // Pas de parenth√®ses autour des expressions\n"
#~ "        if x % 2 == 0 {  // Les math√©matiques comme dans d'autre "
#~ "langages\n"
#~ "            x = x / 2;\n"
#~ "        } else {\n"
#~ "            x = 3 * x + 1;\n"
#~ "        }\n"
#~ "        print!(\" -> {x}\");\n"
#~ "    }\n"
#~ "    println!();\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "The code implements the Collatz conjecture: it is believed that the loop "
#~ "will always end, but this is not yet proved. Edit the code and play with "
#~ "different inputs."
#~ msgstr ""
#~ "Le code impl√©mente la conjecture de Collatz : on pense que la boucle "
#~ "finissent toujours, mais cela n'est pas encore prouv√©. Modifiez le code "
#~ "et jouez avec diff√©rentes entr√©es."

#, fuzzy
#~ msgid ""
#~ "Explain that all variables are statically typed. Try removing `i32` to "
#~ "trigger type inference. Try with `i8` instead and trigger a runtime "
#~ "integer overflow."
#~ msgstr ""
#~ "Expliquez que toutes les variables sont typ√©es statiquement. Essayez de "
#~ "supprimer `i32` pour d√©clencher l'inf√©rence de type. Essayez avec `i8` √† "
#~ "la place et d√©clenchez un d√©bordement d'entier √† l'ex√©cution."

#, fuzzy
#~ msgid "Change `let mut x` to `let x`, discuss the compiler error."
#~ msgstr ""
#~ "Remplacez `let mut x` par `let x`, discutez de l'erreur du compilateur."

#, fuzzy
#~ msgid ""
#~ "Show how `print!` gives a compilation error if the arguments don't match "
#~ "the format string."
#~ msgstr ""
#~ "Montrez comment `print!` g√©n√®re une erreur de compilation si les "
#~ "arguments ne correspondent pas aux format des string."

#, fuzzy
#~ msgid ""
#~ "Show how you need to use `{}` as a placeholder if you want to print an "
#~ "expression which is more complex than just a single variable."
#~ msgstr ""
#~ "Montrez comment vous devez utiliser `{}` comme espace r√©serv√© si vous "
#~ "souhaitez imprimer une expression qui est plus complexe qu'une simple "
#~ "variable."

#, fuzzy
#~ msgid ""
#~ "Show the students the standard library, show them how to search for `std::"
#~ "fmt` which has the rules of the formatting mini-language. It's important "
#~ "that the students become familiar with searching in the standard library."
#~ msgstr ""
#~ "Montrez aux √©tudiants la biblioth√®que standard, montrez-leur comment "
#~ "rechercher `std :: fmt` qui a les r√®gles du mini-langage de formatage. Il "
#~ "est important que le les √©tudiants se familiarisent avec la recherche "
#~ "dans la biblioth√®que standard."

#~ msgid "Compile time memory safety."
#~ msgstr "S√©curit√© de la m√©moire √† la compilation."

#~ msgid "Lack of undefined runtime behavior."
#~ msgstr "Absence de comportement d'ex√©cution ind√©fini."

#~ msgid "Modern language features."
#~ msgstr "Caract√©ristiques d'un langage moderne."

#~ msgid "Static memory management at compile time:"
#~ msgstr "Gestion de la m√©moire statique √† la compilation :"

#~ msgid "No memory leaks (_mostly_, see notes)."
#~ msgstr "Aucune fuite de m√©moire (_surtout_, voir les notes)."

#~ msgid ""
#~ "It is possible to produce memory leaks in (safe) Rust. Some examples are:"
#~ msgstr ""
#~ "Il est possible de produire des fuites de m√©moire avec Rust (s√ªr). "
#~ "Quelques exemples sont:"

#, fuzzy
#~ msgid ""
#~ "You can use [`Box::leak`](https://doc.rust-lang.org/std/boxed/struct.Box."
#~ "html#method.leak) to leak a pointer. A use of this could be to get "
#~ "runtime-initialized and runtime-sized static variables"
#~ msgstr ""
#~ "Vous pouvez utiliser [`Box::leak`](https://doc.rust-lang.org/std/boxed/"
#~ "struct.Box.html#method.leak) pour divulguer un pointeur. Une utilisation "
#~ "de cela pourrait √™tre d'obtenir des variables statiques initialis√©es et "
#~ "dimensionn√©es √† l'ex√©cution"

#, fuzzy
#~ msgid ""
#~ "You can use [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn."
#~ "forget.html) to make the compiler \"forget\" about a value (meaning the "
#~ "destructor is never run)."
#~ msgstr ""
#~ "Vous pouvez utiliser [`std::mem::forget`](https://doc.rust-lang.org/std/"
#~ "mem/fn.forget.html) pour que le compilateur \"oublie\" une valeur (ce qui "
#~ "signifie que le destructeur n'est jamais ex√©cut√©)."

#, fuzzy
#~ msgid ""
#~ "You can also accidentally create a [reference cycle](https://doc.rust-"
#~ "lang.org/book/ch15-06-reference-cycles.html) with `Rc` or `Arc`."
#~ msgstr ""
#~ "Vous pouvez √©galement cr√©er accidentellement un \\[cycle de r√©f√©rence\\] "
#~ "avec `Rc` ou \"Arc\"."

#, fuzzy
#~ msgid ""
#~ "In fact, some will consider infinitely populating a collection a memory "
#~ "leak and Rust does not protect from those."
#~ msgstr ""
#~ "En fait, certains consid√©reront le fait de peupler √† l'infini une "
#~ "collection tel qu'une fuite de m√©moire et Rust ne prot√®ge pas de celles-"
#~ "ci."

#~ msgid ""
#~ "For the purpose of this course, \"No memory leaks\" should be understood "
#~ "as \"Pretty much no _accidental_ memory leaks\"."
#~ msgstr ""
#~ "Pour les besoins de ce cours, \"Aucune fuite de m√©moire\" doit √™tre "
#~ "compris comme \"Pratiquement pas de fuites de m√©moire _accidentelles_\"."

#, fuzzy
#~ msgid ""
#~ "Integer overflow is defined via the [`overflow-checks`](https://doc.rust-"
#~ "lang.org/rustc/codegen-options/index.html#overflow-checks) compile-time "
#~ "flag. If enabled, the program will panic (a controlled crash of the "
#~ "program), otherwise you get wrap-around semantics. By default, you get "
#~ "panics in debug mode (`cargo build`) and wrap-around in release mode "
#~ "(`cargo build --release`)."
#~ msgstr ""
#~ "Le d√©bordement d'entier est d√©fini via un indicateur de compilation. Les "
#~ "options sont soit une panique (un plantage contr√¥l√© du programme) ou un "
#~ "bouclage s√©mantique. Par d√©faut, vous obtenez des paniques en mode "
#~ "d√©bogage (`cargo build`) et bouclage en mode release (`cargo build --"
#~ "release`)."

#, fuzzy
#~ msgid ""
#~ "Bounds checking cannot be disabled with a compiler flag. It can also not "
#~ "be disabled directly with the `unsafe` keyword. However, `unsafe` allows "
#~ "you to call functions such as `slice::get_unchecked` which does not do "
#~ "bounds checking."
#~ msgstr ""
#~ "La v√©rification des limites ne peut pas √™tre d√©sactiv√©e avec un "
#~ "indicateur de compilateur. √áa peut aussi ne pas √™tre d√©sactiv√© "
#~ "directement avec le mot-cl√© `unsafe`. Cependant, `unsafe` vous permet "
#~ "d'appeler des fonctions telles que `slice::get_unchecked` qui ne v√©rifie "
#~ "pas les bornes."

#, fuzzy
#~ msgid "Rust is built with all the experience gained in the last decades."
#~ msgstr ""
#~ "Rust est construit avec toute l'exp√©rience acquise au cours des 40 "
#~ "derni√®res ann√©es."

#, fuzzy
#~ msgid "Language Features"
#~ msgstr "Caract√©ristiques linguistiques"

#, fuzzy
#~ msgid "Tooling"
#~ msgstr "Outillage"

#, fuzzy
#~ msgid ""
#~ "Zero-cost abstractions, similar to C++, means that you don't have to "
#~ "'pay' for higher-level programming constructs with memory or CPU. For "
#~ "example, writing a loop using `for` should result in roughly the same low "
#~ "level instructions as using the `.iter().fold()` construct."
#~ msgstr ""
#~ "Les abstractions √† co√ªt nul, similaires √† C++, signifient que vous n'avez "
#~ "pas √† \"payer\" pour les constructions de programmation de niveau "
#~ "sup√©rieur avec m√©moire ou CPU. Par exemple, √©crire une boucle en "
#~ "utilisant `for` devrait aboutir √† peu pr√®s au m√™me niveau bas "
#~ "instructions comme utilisant la construction `.iter().fold()`."

#, fuzzy
#~ msgid ""
#~ "It may be worth mentioning that Rust enums are 'Algebraic Data Types', "
#~ "also known as 'sum types', which allow the type system to express things "
#~ "like `Option<T>` and `Result<T, E>`."
#~ msgstr ""
#~ "Il peut √™tre utile de mentionner que les √©num√©rations Rust sont des "
#~ "\"types de donn√©es alg√©briques\", √©galement connus sous le nom de \"types "
#~ "de somme\", qui permettent au syst√®me de type d'exprimer des choses comme "
#~ "`Option<T>` et `R√©sultat<T, E>`."

#, fuzzy
#~ msgid ""
#~ "Remind people to read the errors --- many developers have gotten used to "
#~ "ignore lengthy compiler output. The Rust compiler is significantly more "
#~ "talkative than other compilers. It will often provide you with "
#~ "_actionable_ feedback, ready to copy-paste into your code."
#~ msgstr ""
#~ "Rappelez aux gens de lire les erreurs --- de nombreux d√©veloppeurs se "
#~ "sont habitu√©s √† ignorer la longue sortie du compilateur. Le compilateur "
#~ "Rust est beaucoup plus bavard que les autres compilateurs. Il vous "
#~ "fournira souvent _actionnable_ feedback, pr√™t √† copier-coller dans votre "
#~ "code."

#~ msgid ""
#~ "The Rust standard library is small compared to languages like Java, "
#~ "Python, and Go. Rust does not come with several things you might consider "
#~ "standard and essential:"
#~ msgstr ""
#~ "La biblioth√®que standard de Rust est petite compar√©e √† des langages comme "
#~ "Java, Python, et Go. Rust n'est pas distribu√© avec certains √©l√©ments que "
#~ "vous pourriez consid√©rer comme standard et essentiel:"

#, fuzzy
#~ msgid "a random number generator, but see [rand](https://docs.rs/rand/)."
#~ msgstr ""
#~ "un g√©n√©rateur de nombres al√©atoires, mais voir [rand](https://docs.rs/"
#~ "rand/)."

#, fuzzy
#~ msgid "support for SSL or TLS, but see [rusttls](https://docs.rs/rustls/)."
#~ msgstr ""
#~ "prise en charge de SSL ou TLS, mais voir [rusttls](https://docs.rs/"
#~ "rustls/)."

#, fuzzy
#~ msgid "support for JSON, but see [serde_json](https://docs.rs/serde_json/)."
#~ msgstr ""
#~ "support pour JSON, mais voir [serde_json](https://docs.rs/serde_json/)."

#, fuzzy
#~ msgid ""
#~ "The reasoning behind this is that functionality in the standard library "
#~ "cannot go away, so it has to be very stable. For the examples above, the "
#~ "Rust community is still working on finding the best solution --- and "
#~ "perhaps there isn't a single \"best solution\" for some of these things."
#~ msgstr ""
#~ "Le raisonnement sous-jacent est que la fonctionnalit√© de la biblioth√®que "
#~ "standard ne peut pas s'en aller, il doit donc √™tre tr√®s stable. Pour les "
#~ "exemples ci-dessus, le Rust la communaut√© travaille toujours √† trouver la "
#~ "meilleure solution --- et peut-√™tre l√† n'est pas une seule \"meilleure "
#~ "solution\" pour certaines de ces choses."

#, fuzzy
#~ msgid ""
#~ "Rust comes with a built-in package manager in the form of Cargo and this "
#~ "makes it trivial to download and compile third-party crates. A "
#~ "consequence of this is that the standard library can be smaller."
#~ msgstr ""
#~ "Rust est livr√© avec un gestionnaire de packages int√©gr√© sous la forme de "
#~ "Cargo, ce qui rend il est trivial de t√©l√©charger et de compiler des "
#~ "caisses tierces. Une cons√©quence de ce est que la biblioth√®que standard "
#~ "peut √™tre plus petite."

#, fuzzy
#~ msgid ""
#~ "Discovering good third-party crates can be a problem. Sites like <https://"
#~ "lib.rs/> help with this by letting you compare health metrics for crates "
#~ "to find a good and trusted one."
#~ msgstr ""
#~ "D√©couvrir de bonnes caisses tierces peut √™tre un probl√®me. Des sites "
#~ "comme <https://lib.rs/> aide √† cela en vous permettant de comparer les "
#~ "mesures de sant√© pour caisses pour en trouver une bonne et de confiance."

#, fuzzy
#~ msgid ""
#~ "[rust-analyzer](https://rust-analyzer.github.io/) is a well supported LSP "
#~ "implementation used in major IDEs and text editors."
#~ msgstr ""
#~ "[rust-analyzer](https://rust-analyzer.github.io/) est une impl√©mentation "
#~ "LSP bien prise en charge utilis√©e dans les principaux IDE et √©diteurs de "
#~ "texte."

#, fuzzy
#~ msgid "`\"foo\"`, `\"two\\nlines\"`"
#~ msgstr "`\"foo\"`, `r#\"\\\\\"#`"

#, fuzzy
#~ msgid "Like C++, Rust has references:"
#~ msgstr "Comme C++, Rust a des r√©f√©rences :"

#, fuzzy
#~ msgid ""
#~ "We must dereference `ref_x` when assigning to it, similar to C and C++ "
#~ "pointers."
#~ msgstr ""
#~ "Nous devons d√©r√©f√©rencer `ref_x` lors de son affectation, comme pour les "
#~ "pointeurs C et C++."

#, fuzzy
#~ msgid ""
#~ "References that are declared as `mut` can be bound to different values "
#~ "over their lifetime."
#~ msgstr ""
#~ "Les r√©f√©rences d√©clar√©es comme \"mut\" peuvent √™tre li√©es √† diff√©rentes "
#~ "valeurs au cours de leur dur√©e de vie."

#, fuzzy
#~ msgid "A reference is said to \"borrow\" the value it refers to."
#~ msgstr ""
#~ "Une r√©f√©rence est dite \"emprunter\" la valeur √† laquelle elle se r√©f√®re."

#, fuzzy
#~ msgid ""
#~ "Rust is tracking the lifetimes of all references to ensure they live long "
#~ "enough."
#~ msgstr ""
#~ "Rust suit la dur√©e de vie de toutes les r√©f√©rences pour s'assurer "
#~ "qu'elles durent longtemps assez."

#, fuzzy
#~ msgid "`String` vs `str`"
#~ msgstr "`Cha√Æne` vs `cha√Æne`"

#, fuzzy
#~ msgid "We can now understand the two string types in Rust:"
#~ msgstr ""
#~ "Nous pouvons maintenant comprendre les deux types de string avec Rust¬†:"

#, fuzzy
#~ msgid ""
#~ "A Rust version of the famous [FizzBuzz](https://en.wikipedia.org/wiki/"
#~ "Fizz_buzz) interview question:"
#~ msgstr ""
#~ "Une version Rust de la c√©l√®bre question d'entrevue [FizzBuzz](https://en."
#~ "wikipedia.org/wiki/Fizz_buzz)¬†:"

#, fuzzy
#~ msgid ""
#~ "All language items in Rust can be documented using special `///` syntax."
#~ msgstr ""
#~ "Tous les √©l√©ments de langage de Rust peuvent √™tre document√©s √† l'aide de "
#~ "la syntaxe sp√©ciale `///`."

#, fuzzy
#~ msgid ""
#~ "This course does not include rustdoc on slides, just to save space, but "
#~ "in real code they should be present."
#~ msgstr ""
#~ "Ce cours n'inclut pas rustdoc sur les diapositives, juste pour √©conomiser "
#~ "de l'espace, mais dans code r√©el, ils doivent √™tre pr√©sents."

#, fuzzy
#~ msgid ""
#~ "Inner doc comments are discussed later (in the page on modules) and need "
#~ "not be addressed here."
#~ msgstr ""
#~ "Les commentaires de la documentation interne sont discut√©s plus tard "
#~ "(dans la page sur les modules) et n'ont pas besoin √™tre abord√© ici."

#, fuzzy
#~ msgid ""
#~ "Methods are functions associated with a type. The `self` argument of a "
#~ "method is an instance of the type it is associated with:"
#~ msgstr ""
#~ "Rust a des m√©thodes, ce sont simplement des fonctions qui sont associ√©es "
#~ "√† un type particulier. Le le premier argument d'une m√©thode est une "
#~ "instance du type auquel elle est associ√©e¬†:"

#, fuzzy
#~ msgid ""
#~ "We will look much more at methods in today's exercise and in tomorrow's "
#~ "class."
#~ msgstr ""
#~ "Nous nous pencherons beaucoup plus sur les m√©thodes dans l'exercice "
#~ "d'aujourd'hui et dans le cours de demain."

#, fuzzy
#~ msgid "Function Overloading"
#~ msgstr "Surcharge de fonction"

#, fuzzy
#~ msgid "Overloading is not supported:"
#~ msgstr "La surcharge n'est pas prise en charge¬†:"

#, fuzzy
#~ msgid "Always takes a fixed number of parameters."
#~ msgstr "Prend toujours un nombre fixe de param√®tres."

#, fuzzy
#~ msgid "Default values are not supported:"
#~ msgstr "Les valeurs par d√©faut ne sont pas prises en charge¬†:"

#, fuzzy
#~ msgid "All call sites have the same number of arguments."
#~ msgstr "Tous les sites d'appel ont le m√™me nombre d'arguments."

#, fuzzy
#~ msgid "Macros are sometimes used as an alternative."
#~ msgstr "Les macros sont parfois utilis√©es comme alternative."

#, fuzzy
#~ msgid "However, function parameters can be generic:"
#~ msgstr "Cependant, les param√®tres de fonction peuvent √™tre g√©n√©riques¬†:"

#, fuzzy
#~ msgid ""
#~ "When using generics, the standard library's `Into<T>` can provide a kind "
#~ "of limited polymorphism on argument types. We will see more details in a "
#~ "later section."
#~ msgstr ""
#~ "Lors de l'utilisation de g√©n√©riques, la biblioth√®que standard `Into<T>` "
#~ "peut fournir une sorte de polymorphisme sur les types d'arguments. Nous "
#~ "verrons plus de d√©tails dans une section ult√©rieure."

#, fuzzy
#~ msgid "Day 1: Morning Exercises"
#~ msgstr "Jour 1 : Exercices du matin"

#, fuzzy
#~ msgid "In these exercises, we will explore two parts of Rust:"
#~ msgstr "Dans ces exercices, nous allons explorer deux parties de Rust¬†:"

#, fuzzy
#~ msgid "Implicit conversions between types."
#~ msgstr "Conversions implicites entre les types."

#, fuzzy
#~ msgid "Arrays and `for` loops."
#~ msgstr "Tableaux et boucles \"for\"."

#, fuzzy
#~ msgid "A few things to consider while solving the exercises:"
#~ msgstr "Quelques points √† consid√©rer lors de la r√©solution des exercices¬†:"

#, fuzzy
#~ msgid ""
#~ "Use a local Rust installation, if possible. This way you can get auto-"
#~ "completion in your editor. See the page about [Using Cargo](../../cargo."
#~ "md) for details on installing Rust."
#~ msgstr ""
#~ "Utilisez une installation Rust locale, si possible. De cette fa√ßon, vous "
#~ "pouvez obtenir auto-compl√©tion dans votre √©diteur. Voir la page sur "
#~ "\\[Utiliser Cargo\\] pour plus de d√©tails lors de l'installation de Rust."

#, fuzzy
#~ msgid "Alternatively, use the Rust Playground."
#~ msgstr "Vous pouvez √©galement utiliser le Rust Playground."

#, fuzzy
#~ msgid ""
#~ "The code snippets are not editable on purpose: the inline code snippets "
#~ "lose their state if you navigate away from the page."
#~ msgstr ""
#~ "Les extraits de code ne sont pas modifiables √† dessein¬†: les extraits de "
#~ "code en ligne perdent leur √©tat si vous quittez la page."

#, fuzzy
#~ msgid ""
#~ "Rust will not automatically apply _implicit conversions_ between types "
#~ "([unlike C++](https://en.cppreference.com/w/cpp/language/"
#~ "implicit_conversion)). You can see this in a program like this:"
#~ msgstr ""
#~ "Rust n'appliquera pas automatiquement les _conversions implicites_ entre "
#~ "les types ([contrairement √† C++](https://en.cppreference.com/w/cpp/"
#~ "language/implicit_conversion)). Vous pouvez le voir dans un programme "
#~ "comme celui-ci :"

#, fuzzy
#~ msgid ""
#~ "The Rust integer types all implement the [`From<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.From.html) and [`Into<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.Into.html) traits to let us convert between "
#~ "them. The `From<T>` trait has a single `from()` method and similarly, the "
#~ "`Into<T>` trait has a single `into()` method. Implementing these traits "
#~ "is how a type expresses that it can be converted into another type."
#~ msgstr ""
#~ "Les types entiers Rust impl√©mentent tous les [`From<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.From.html) et [`Into<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.Into.html) traits pour nous permettre de "
#~ "convertir entre eux. Le trait `From<T>` a un seul `from()` et de m√™me, le "
#~ "trait `Into<T>` a une seule m√©thode `into()`. La mise en ≈ìuvre de ces "
#~ "traits est la fa√ßon dont un type exprime qu'il peut √™tre converti en un "
#~ "autre type."

#, fuzzy
#~ msgid ""
#~ "The standard library has an implementation of `From<i8> for i16`, which "
#~ "means that we can convert a variable `x` of type `i8` to an `i16` by "
#~ "calling  `i16::from(x)`. Or, simpler, with `x.into()`, because `From<i8> "
#~ "for i16` implementation automatically create an implementation of "
#~ "`Into<i16> for i8`."
#~ msgstr ""
#~ "La biblioth√®que standard a une impl√©mentation de `From<i8> for i16`, ce "
#~ "qui signifie que nous pouvons convertir une variable `x` de type `i8` en "
#~ "un `i16` en appelant `i16::from(x)`. Ou, plus simple, avec `x.into()`, "
#~ "car `From<i8> for i16` cr√©er automatiquement une impl√©mentation de "
#~ "`Into<i16> for i8`."

#, fuzzy
#~ msgid ""
#~ "The same applies for your own `From` implementations for your own types, "
#~ "so it is sufficient to only implement `From` to get a respective `Into` "
#~ "implementation automatically."
#~ msgstr ""
#~ "Il en va de m√™me pour vos propres impl√©mentations `From` pour vos propres "
#~ "types, il est donc suffisant pour impl√©menter uniquement `From` pour "
#~ "obtenir automatiquement une impl√©mentation `Into` respective."

#, fuzzy
#~ msgid "Execute the above program and look at the compiler error."
#~ msgstr ""
#~ "Ex√©cutez le programme ci-dessus et examinez l'erreur du compilateur."

#, fuzzy
#~ msgid "Update the code above to use `into()` to do the conversion."
#~ msgstr ""
#~ "Mettez √† jour le code ci-dessus pour utiliser `into()` pour effectuer la "
#~ "conversion."

#, fuzzy
#~ msgid ""
#~ "Change the types of `x` and `y` to other things (such as `f32`, `bool`, "
#~ "`i128`) to see which types you can convert to which other types. Try "
#~ "converting small types to big types and the other way around. Check the "
#~ "[standard library documentation](https://doc.rust-lang.org/std/convert/"
#~ "trait.From.html) to see if `From<T>` is implemented for the pairs you "
#~ "check."
#~ msgstr ""
#~ "Remplacez les types de `x` et `y` par d'autres √©l√©ments (tels que `f32`, "
#~ "`bool`, `i128`) pour voir quels types vous pouvez convertir vers quels "
#~ "autres types. Essayer convertir de petits types en grands types et "
#~ "inversement. V√©rifier la [documentation de la biblioth√®que standard]"
#~ "(https://doc.rust-lang.org/std/convert/trait.From.html) pour voir si "
#~ "`From<T>` est impl√©ment√© pour les paires que vous cochez."

#, fuzzy
#~ msgid "Arrays and `for` Loops"
#~ msgstr "Tableaux et boucles `for`"

#, fuzzy
#~ msgid "We saw that an array can be declared like this:"
#~ msgstr "Nous avons vu qu'un tableau peut √™tre d√©clar√© comme ceci :"

#, fuzzy
#~ msgid ""
#~ "You can print such an array by asking for its debug representation with "
#~ "`{:?}`:"
#~ msgstr ""
#~ "Vous pouvez imprimer un tel tableau en demandant sa repr√©sentation de "
#~ "d√©bogage avec `{:?}`¬†:"

#, fuzzy
#~ msgid ""
#~ "Rust lets you iterate over things like arrays and ranges using the `for` "
#~ "keyword:"
#~ msgstr ""
#~ "Rust vous permet d'it√©rer sur des choses comme des tableaux et des plages "
#~ "en utilisant le `for` mot-cl√©:"

#, fuzzy
#~ msgid "Bonus Question"
#~ msgstr "Question bonus"

#, fuzzy
#~ msgid ""
#~ "Could you use `&[i32]` slices instead of hard-coded 3 √ó 3 matrices for "
#~ "your argument and return types? Something like `&[&[i32]]` for a two-"
#~ "dimensional slice-of-slices. Why or why not?"
#~ msgstr ""
#~ "Pourriez-vous utiliser des tranches `&[i32]` au lieu de matrices 3 √ó 3 "
#~ "cod√©es en dur pour votre types d'argument et de retour¬†? Quelque chose "
#~ "comme `&[&[i32]]` pour un fichier bidimensionnel tranche de tranches. "
#~ "Pourquoi ou pourquoi pas?"

#, fuzzy
#~ msgid ""
#~ "See the [`ndarray` crate](https://docs.rs/ndarray/) for a production "
#~ "quality implementation."
#~ msgstr ""
#~ "Voir le [`ndarray` crate](https://docs.rs/ndarray/) pour une qualit√© de "
#~ "production mise en ≈ìuvre."

#, fuzzy
#~ msgid ""
#~ "The solution and the answer to the bonus section are available in the  "
#~ "[Solution](solutions-morning.md#arrays-and-for-loops) section."
#~ msgstr ""
#~ "La solution et la r√©ponse √† la section bonus sont disponibles dans le "
#~ "Section [Solution](solutions-morning.md#arrays-and-for-loops)."

#, fuzzy
#~ msgid ""
#~ "As we have seen, `if` is an expression in Rust. It is used to "
#~ "conditionally evaluate one of two blocks, but the blocks can have a value "
#~ "which then becomes the value of the `if` expression. Other control flow "
#~ "expressions work similarly in Rust."
#~ msgstr ""
#~ "Comme nous l'avons vu, `if` est une expression en Rust. Il est utilis√© "
#~ "pour conditionnellement √©valuer l'un des deux blocs, mais les blocs "
#~ "peuvent avoir une valeur qui devient alors la valeur de l'expression "
#~ "\"if\". D'autres expressions de flux de contr√¥le fonctionnent de mani√®re "
#~ "similaire √† Rust."

#, fuzzy
#~ msgid ""
#~ "The same rule is used for functions: the value of the function body is "
#~ "the return value:"
#~ msgstr ""
#~ "La m√™me r√®gle est utilis√©e pour les fonctions : la valeur du corps de la "
#~ "fonction est le valeur de retour¬†:"

#, fuzzy
#~ msgid ""
#~ "The point of this slide is to show that blocks have a type and value in "
#~ "Rust. "
#~ msgstr ""
#~ "Le but de cette diapositive est de montrer que les blocs ont un type et "
#~ "une valeur dans Rust."

#, fuzzy
#~ msgid ""
#~ "The [`for` loop](https://doc.rust-lang.org/std/keyword.for.html) is "
#~ "closely related to the [`while let` loop](while-let-expressions.md). It "
#~ "will automatically call `into_iter()` on the expression and then iterate "
#~ "over it:"
#~ msgstr ""
#~ "L'expression `for` est √©troitement li√©e √† l'expression `while let`. Ce "
#~ "sera appelez automatiquement `into_iter()` sur l'expression, puis "
#~ "parcourez-la¬†:"

#, fuzzy
#~ msgid "You can use `break` and `continue` here as usual."
#~ msgstr "Vous pouvez utiliser `break` et `continue` ici comme d'habitude."

#, fuzzy
#~ msgid "Index iteration is not a special syntax in Rust for just that case."
#~ msgstr ""
#~ "L'it√©ration d'index n'est pas une syntaxe sp√©ciale dans Rust pour ce cas "
#~ "pr√©cis."

#, fuzzy
#~ msgid "`(0..10)` is a range that implements an `Iterator` trait. "
#~ msgstr "`(0..10)` est une plage qui impl√©mente un trait `Iterator`."

#, fuzzy
#~ msgid ""
#~ "`step_by` is a method that returns another `Iterator` that skips every "
#~ "other element. "
#~ msgstr ""
#~ "`step_by` est une m√©thode qui renvoie un autre `Iterator` qui saute tous "
#~ "les autres √©l√©ments."

#, fuzzy
#~ msgid ""
#~ "Modify the elements in the vector and explain the compiler errors. Change "
#~ "vector `v` to be mutable and the for loop to `for x in v.iter_mut()`."
#~ msgstr ""
#~ "Modifier les √©l√©ments du vecteur et expliquer les erreurs du compilateur. "
#~ "Modifiez le vecteur `v` pour qu'il soit modifiable et la boucle for en "
#~ "`for x in v.iter_mut()`."

#, fuzzy
#~ msgid "`loop` expressions"
#~ msgstr "\\#¬†expressions de \"boucle\""

#, fuzzy
#~ msgid "Here you must either `break` or `return` to stop the loop:"
#~ msgstr ""
#~ "Enfin, il existe un mot-cl√© `loop` qui cr√©e une boucle sans fin. Ici, "
#~ "vous devez soit `break` ou `return` pour arr√™ter la boucle¬†:"

#, fuzzy
#~ msgid ""
#~ "Due to type inference the `i32` is optional. We will gradually show the "
#~ "types less and less as the course progresses."
#~ msgstr ""
#~ "En raison de l'inf√©rence de type, le `i32` est facultatif. Nous "
#~ "montrerons progressivement les types de moins en moins au fur et √† mesure "
#~ "que le cours avance."

#, fuzzy
#~ msgid ""
#~ "The following code tells the compiler to copy into a certain generic "
#~ "container without the code ever explicitly specifying the contained type, "
#~ "using `_` as a placeholder:"
#~ msgstr ""
#~ "Le code suivant indique au compilateur de copier dans un certain "
#~ "conteneur g√©n√©rique sans que le code ne sp√©cifie jamais explicitement le "
#~ "type contenu, en utilisant `_` comme espace r√©serv√©¬†:"

#, fuzzy
#~ msgid ""
#~ "[`collect`](https://doc.rust-lang.org/stable/std/iter/trait.Iterator."
#~ "html#method.collect) relies on [`FromIterator`](https://doc.rust-lang.org/"
#~ "std/iter/trait.FromIterator.html), which [`HashSet`](https://doc.rust-"
#~ "lang.org/std/collections/struct.HashSet.html#impl-FromIterator%3CT%3E-for-"
#~ "HashSet%3CT,+S%3E) implements."
#~ msgstr ""
#~ "[`collect`](https://doc.rust-lang.org/stable/std/iter/trait.Iterator."
#~ "html#method.collect) repose sur `FromIterator`, qui \\[`HashSet`\\]"
#~ "(https:/ /doc.rust-lang.org/std/iter/trait.FromIterator.html) impl√©mente."

#, fuzzy
#~ msgid "Static and Constant Variables"
#~ msgstr "Variables statiques et constantes"

#, fuzzy
#~ msgid ""
#~ "The following code demonstrates why the compiler can't simply reuse "
#~ "memory locations when shadowing an immutable variable in a scope, even if "
#~ "the type does not change."
#~ msgstr ""
#~ "Le code suivant montre pourquoi le compilateur ne peut pas simplement "
#~ "r√©utiliser les emplacements de m√©moire lors de l'observation d'une "
#~ "variable immuable dans une port√©e, m√™me si le type ne change pas."

#, fuzzy
#~ msgid ""
#~ "This page offers an enum type `CoinFlip` with two variants `Heads` and "
#~ "`Tails`. You might note the namespace when using variants."
#~ msgstr ""
#~ "Cette page propose un type d'√©num√©ration `CoinFlip` avec deux variantes "
#~ "`Heads` et `Tail`. Vous pouvez noter l'espace de noms lors de "
#~ "l'utilisation de variantes."

#, fuzzy
#~ msgid "In both, associated functions are defined within an `impl` block."
#~ msgstr ""
#~ "Dans les deux cas, les fonctions associ√©es sont d√©finies dans un bloc "
#~ "`impl`."

#, fuzzy
#~ msgid ""
#~ "You can define richer enums where the variants carry data. You can then "
#~ "use the `match` statement to extract the data from each variant:"
#~ msgstr ""
#~ "Vous pouvez d√©finir des √©num√©rations plus riches o√π les variantes "
#~ "transportent des donn√©es. Vous pouvez ensuite utiliser le instruction "
#~ "`match` pour extraire les donn√©es de chaque variante¬†:"

#, fuzzy
#~ msgid ""
#~ "The expression is matched against the patterns from top to bottom. There "
#~ "is no fall-through like in C or C++."
#~ msgstr ""
#~ "L'expression est compar√©e aux mod√®les de haut en bas. Il n'y a pas de "
#~ "basculement comme en C ou C++."

#, fuzzy
#~ msgid ""
#~ "The match expression has a value. The value is the last expression in the "
#~ "match arm which was executed."
#~ msgstr ""
#~ "L'expression de correspondance a une valeur. La valeur est la derni√®re "
#~ "expression du bras de correspondance qui a √©t√© ex√©cut√©e."

#, fuzzy
#~ msgid ""
#~ "Starting from the top we look for what pattern matches the value then run "
#~ "the code following the arrow. Once we find a match, we stop. "
#~ msgstr ""
#~ "En partant du haut, nous cherchons quel mod√®le correspond √† la valeur, "
#~ "puis ex√©cutons le code en suivant la fl√®che. Une fois que nous trouvons "
#~ "une correspondance, nous nous arr√™tons."

#, fuzzy
#~ msgid "`match` inspects a hidden discriminant field in the `enum`."
#~ msgstr "`match` inspecte un champ discriminant cach√© dans `enum`."

#, fuzzy
#~ msgid ""
#~ "It is possible to retrieve the discriminant by calling `std::mem::"
#~ "discriminant()`"
#~ msgstr ""
#~ "Il est possible de r√©cup√©rer le discriminant en appelant `std::mem::"
#~ "discriminant()`"

#, fuzzy
#~ msgid ""
#~ "This is useful, for example, if implementing `PartialEq` for structs "
#~ "where comparing field values doesn't affect equality."
#~ msgstr ""
#~ "Ceci est utile, par exemple, si vous impl√©mentez `PartialEq` pour des "
#~ "structures o√π la comparaison des valeurs de champ n'affecte pas l'√©galit√©."

#, fuzzy
#~ msgid ""
#~ "`WebEvent::Click { ... }` is not exactly the same as `WebEvent::"
#~ "Click(Click)` with a top level `struct Click { ... }`. The inlined "
#~ "version cannot implement traits, for example."
#~ msgstr ""
#~ "`WebEvent::Click { ... }` n'est pas exactement le m√™me que `WebEvent::"
#~ "Click(Click)` avec un niveau sup√©rieur `struct Click { ... }`. La version "
#~ "en ligne ne peut pas impl√©menter de traits, par exemple."

#~ msgid ""
#~ "Rust enums are packed tightly, taking constraints due to alignment into "
#~ "account:"
#~ msgstr ""
#~ "Les √©num√©rations de Rust sont emball√©es √©troitement, en tenant compte des "
#~ "contraintes d'alignement¬†:"

#, fuzzy
#~ msgid ""
#~ "The [`match` keyword](https://doc.rust-lang.org/reference/expressions/"
#~ "match-expr.html) is used to match a value against one or more patterns. "
#~ "In that sense, it works like a series of `if let` expressions:"
#~ msgstr ""
#~ "Le mot cl√© `match` est utilis√© pour faire correspondre une valeur √† un ou "
#~ "plusieurs mod√®les. Dans en ce sens, cela fonctionne comme une s√©rie "
#~ "d'expressions \"if let\":"

#, fuzzy
#~ msgid "Save the match expression to a variable and print it out."
#~ msgstr ""
#~ "Enregistrez l'expression de correspondance dans une variable et imprimez-"
#~ "la."

#, fuzzy
#~ msgid "Remove `.as_deref()` and explain the error."
#~ msgstr "Supprimez `.as_deref()` et expliquez l'erreur."

#, fuzzy
#~ msgid ""
#~ "`std::env::args().next()` returns an `Option<String>`, but we cannot "
#~ "match against `String`."
#~ msgstr ""
#~ "`std::env::args().next()` renvoie une `Option<String>`, mais nous ne "
#~ "pouvons pas comparer `String`."

#, fuzzy
#~ msgid ""
#~ "`as_deref()` transforms an `Option<T>` to `Option<&T::Target>`. In our "
#~ "case, this turns `Option<String>` into `Option<&str>`."
#~ msgstr ""
#~ "`as_deref()` transforme une `Option<T>` en `Option<&T::Target>`. Dans "
#~ "notre cas, cela transforme `Option<String>` en `Option<&str>`."

#, fuzzy
#~ msgid ""
#~ "We can now use pattern matching to match against the `&str` inside "
#~ "`Option`."
#~ msgstr ""
#~ "Nous pouvons maintenant utiliser le filtrage par motif pour faire "
#~ "correspondre le `&str` √† l'int√©rieur de `Option`."

#, fuzzy
#~ msgid "The `_` pattern is a wildcard pattern which matches any value."
#~ msgstr ""
#~ "Le mod√®le `_` est un mod√®le g√©n√©rique qui correspond √† n'importe quelle "
#~ "valeur."

#, fuzzy
#~ msgid ""
#~ "It can be useful to show how binding works, by for instance replacing a "
#~ "wildcard character with a variable, or removing the quotes around `q`."
#~ msgstr ""
#~ "Il peut √™tre utile de montrer comment fonctionne la liaison, par exemple "
#~ "en rempla√ßant un caract√®re g√©n√©rique par une variable ou en supprimant "
#~ "les guillemets autour de `q`."

#, fuzzy
#~ msgid "You can demonstrate matching on a reference."
#~ msgstr "Vous pouvez d√©montrer la correspondance sur une r√©f√©rence."

#, fuzzy
#~ msgid ""
#~ "This might be a good time to bring up the concept of irrefutable "
#~ "patterns, as the term can show up in error messages."
#~ msgstr ""
#~ "C'est peut-√™tre le bon moment pour √©voquer le concept de mod√®les "
#~ "irr√©futables, car le terme peut appara√Ætre dans les messages d'erreur."

#, fuzzy
#~ msgid "You can also destructure `structs`:"
#~ msgstr "Vous pouvez √©galement d√©structurer les `structs`¬†:"

#, fuzzy
#~ msgid ""
#~ "When matching, you can add a _guard_ to a pattern. This is an arbitrary "
#~ "Boolean expression which will be executed if the pattern matches:"
#~ msgstr ""
#~ "Lors de la correspondance, vous pouvez ajouter un _guard_ √† un motif. "
#~ "Ceci est un bool√©en arbitraire expression qui sera ex√©cut√©e si le motif "
#~ "correspond √†¬†:"

#, fuzzy
#~ msgid ""
#~ "You can use the variables defined in the pattern in your if expression."
#~ msgstr ""
#~ "Vous pouvez utiliser les variables d√©finies dans le mod√®le dans votre "
#~ "expression if."

#, fuzzy
#~ msgid "Day 1: Afternoon Exercises"
#~ msgstr "Jour 1 : Exercices de l'apr√®s-midi"

#, fuzzy
#~ msgid "We will look at two things:"
#~ msgstr "Nous allons regarder deux choses :"

#, fuzzy
#~ msgid "The Luhn algorithm,"
#~ msgstr "Algorithme de Luhn"

#, fuzzy
#~ msgid "An exercise on pattern matching."
#~ msgstr "√ânum√©rations et filtrage par motif."

#, fuzzy
#~ msgid ""
#~ "Copy the code below to <https://play.rust-lang.org/> and implement the "
#~ "function."
#~ msgstr ""
#~ "Copiez le code ci-dessous sur <https://play.rust-lang.org/> et "
#~ "impl√©mentez le les fonctions:"

#~ msgid ""
#~ "Memory management: stack vs heap, manual memory management, scope-based "
#~ "memory management, and garbage collection."
#~ msgstr ""
#~ "Gestion de la m√©moire¬†: pile contre tas, gestion manuelle de la m√©moire, "
#~ "gestion de la m√©moire bas√©e sur la port√©e et le ramassage des ordures."

#~ msgid ""
#~ "Ownership: move semantics, copying and cloning, borrowing, and lifetimes."
#~ msgstr ""
#~ "Propri√©t√©¬†: s√©mantique de d√©placement, copie et clonage, emprunt et dur√©e "
#~ "de vie."

#, fuzzy
#~ msgid "Structs and methods."
#~ msgstr "Structures, √©num√©rations, m√©thodes."

#, fuzzy
#~ msgid ""
#~ "The Standard Library: `String`, `Option` and `Result`, `Vec`, `HashMap`, "
#~ "`Rc` and `Arc`."
#~ msgstr ""
#~ "La biblioth√®que standard : `String`, `Option` et `Result`, `Vec`, "
#~ "`HashMap`, `Rc` et \"Arc\"."

#, fuzzy
#~ msgid "Modules: visibility, paths, and filesystem hierarchy."
#~ msgstr "Modules¬†: visibilit√©, chemins et hi√©rarchie du syst√®me de fichiers."

#, fuzzy
#~ msgid "First, let's refresh how memory management works."
#~ msgstr ""
#~ "Tout d'abord, rafra√Æchissons le fonctionnement de la gestion de la "
#~ "m√©moire."

#, fuzzy
#~ msgid "The Stack vs The Heap"
#~ msgstr "La pile contre le tas"

#, fuzzy
#~ msgid "Stack and Heap Example"
#~ msgstr "Pile et Tas"

#, fuzzy
#~ msgid "You allocate and deallocate heap memory yourself."
#~ msgstr "Vous allouez et d√©sallouez vous-m√™me la m√©moire de tas."

#, fuzzy
#~ msgid ""
#~ "If not done with care, this can lead to crashes, bugs, security "
#~ "vulnerabilities, and memory leaks."
#~ msgstr ""
#~ "Si cela n'est pas fait avec soin, cela peut entra√Æner des plantages, des "
#~ "bogues, des failles de s√©curit√© et des fuites de m√©moire."

#, fuzzy
#~ msgid "C Example"
#~ msgstr "C Exemple"

#, fuzzy
#~ msgid "You must call `free` on every pointer you allocate with `malloc`:"
#~ msgstr ""
#~ "Vous devez appeler `free` sur chaque pointeur que vous allouez avec "
#~ "`malloc`¬†:"

#, fuzzy
#~ msgid ""
#~ "Memory is leaked if the function returns early between `malloc` and "
#~ "`free`: the pointer is lost and we cannot deallocate the memory. Worse, "
#~ "freeing the pointer twice, or accessing a freed pointer can lead to "
#~ "exploitable security vulnerabilities."
#~ msgstr ""
#~ "La m√©moire est perdue si la fonction revient t√¥t entre `malloc` et "
#~ "`free`¬†: le pointeur est perdu et nous ne pouvons pas d√©sallouer la "
#~ "m√©moire."

#, fuzzy
#~ msgid ""
#~ "Constructors and destructors let you hook into the lifetime of an object."
#~ msgstr ""
#~ "Les constructeurs et les destructeurs vous permettent de vous connecter √† "
#~ "la dur√©e de vie d'un objet."

#, fuzzy
#~ msgid ""
#~ "By wrapping a pointer in an object, you can free memory when the object "
#~ "is destroyed. The compiler guarantees that this happens, even if an "
#~ "exception is raised."
#~ msgstr ""
#~ "En enveloppant un pointeur dans un objet, vous pouvez lib√©rer de la "
#~ "m√©moire lorsque l'objet est d√©truit. Le compilateur garantit que cela se "
#~ "produit, m√™me si une exception est soulev√©."

#, fuzzy
#~ msgid ""
#~ "This is often called _resource acquisition is initialization_ (RAII) and "
#~ "gives you smart pointers."
#~ msgstr ""
#~ "Ceci est souvent appel√© _l'acquisition de ressources est initialis√©e_ "
#~ "(RAII) et donne vous pointeurs intelligents."

#, fuzzy
#~ msgid ""
#~ "The `std::unique_ptr` object is allocated on the stack, and points to "
#~ "memory allocated on the heap."
#~ msgstr ""
#~ "L'objet `std::unique_ptr` est allou√© sur la pile et pointe vers m√©moire "
#~ "allou√©e sur le tas."

#, fuzzy
#~ msgid ""
#~ "At the end of `say_hello`, the `std::unique_ptr` destructor will run."
#~ msgstr ""
#~ "√Ä la fin de `say_hello`, le destructeur `std::unique_ptr` s'ex√©cutera."

#, fuzzy
#~ msgid "The destructor frees the `Person` object it points to."
#~ msgstr "Le destructeur lib√®re l'objet `Person` vers lequel il pointe."

#, fuzzy
#~ msgid ""
#~ "Special move constructors are used when passing ownership to a function:"
#~ msgstr ""
#~ "Des constructeurs de mouvement sp√©ciaux sont utilis√©s lors du transfert "
#~ "de propri√©t√© √† une fonction¬†:"

#, fuzzy
#~ msgid ""
#~ "An alternative to manual and scope-based memory management is automatic "
#~ "memory management:"
#~ msgstr ""
#~ "Une alternative √† la gestion manuelle et bas√©e sur la port√©e de la "
#~ "m√©moire est la m√©moire automatique gestion:"

#, fuzzy
#~ msgid "The programmer never allocates or deallocates memory explicitly."
#~ msgstr ""
#~ "Le programmeur n'alloue ou ne lib√®re jamais de m√©moire explicitement."

#, fuzzy
#~ msgid ""
#~ "A garbage collector finds unused memory and deallocates it for the "
#~ "programmer."
#~ msgstr ""
#~ "Un ramasse-miettes trouve la m√©moire inutilis√©e et la lib√®re pour le "
#~ "programmeur."

#, fuzzy
#~ msgid "Java Example"
#~ msgstr "Exemple Java"

#, fuzzy
#~ msgid "The `person` object is not deallocated after `sayHello` returns:"
#~ msgstr ""
#~ "L'objet `person` n'est pas d√©sallou√© apr√®s le retour de `sayHello`¬†:"

#, fuzzy
#~ msgid "Memory Management in Rust"
#~ msgstr "Gestion de la m√©moire avec Rust"

#, fuzzy
#~ msgid "Memory management in Rust is a mix:"
#~ msgstr "La gestion de la m√©moire avec Rust est un m√©lange¬†:"

#, fuzzy
#~ msgid "Safe and correct like Java, but without a garbage collector."
#~ msgstr "S√ªr et correct comme Java, mais sans ramasse-miettes."

#, fuzzy
#~ msgid "Scope-based like C++, but the compiler enforces full adherence."
#~ msgstr ""
#~ "Bas√© sur la port√©e comme C++, mais le compilateur applique une adh√©sion "
#~ "totale."

#, fuzzy
#~ msgid ""
#~ "A Rust user can choose the right abstraction for the situation, some even "
#~ "have no cost at runtime like C."
#~ msgstr ""
#~ "Un utilisateur de Rust peut choisir la bonne abstraction pour la "
#~ "situation, certains n'ont m√™me aucun co√ªt √† l'ex√©cution comme C."

#, fuzzy
#~ msgid "Rust achieves this by modeling _ownership_ explicitly."
#~ msgstr "Il y parvient en mod√©lisant explicitement _ownership_."

#, fuzzy
#~ msgid ""
#~ "If asked how at this point, you can mention that in Rust this is usually "
#~ "handled by RAII wrapper types such as [Box](https://doc.rust-lang.org/std/"
#~ "boxed/struct.Box.html), [Vec](https://doc.rust-lang.org/std/vec/struct."
#~ "Vec.html), [Rc](https://doc.rust-lang.org/std/rc/struct.Rc.html), or [Arc]"
#~ "(https://doc.rust-lang.org/std/sync/struct.Arc.html). These encapsulate "
#~ "ownership and memory allocation via various means, and prevent the "
#~ "potential errors in C."
#~ msgstr ""
#~ "Si on vous demande comment √† ce stade, vous pouvez mentionner qu'avec "
#~ "Rust, cela est g√©n√©ralement g√©r√© par des types de wrapper RAII tels que "
#~ "[Box](https://doc.rust-lang.org/std/boxed/struct.Box.html), [Vec](https://"
#~ "doc.rust-lang.org/std/vec/struct.Vec.html), [Rc](https://doc.rust-lang."
#~ "org/std/rc/struct.Rc.html) ou [Arc](https://doc.rust-lang.org/std/sync/"
#~ "struct.Arc.html). Ceux-ci encapsulent la propri√©t√© et l'allocation de "
#~ "m√©moire par divers moyens et emp√™chent les erreurs potentielles dans C."

#, fuzzy
#~ msgid ""
#~ "You may be asked about destructors here, the [Drop](https://doc.rust-lang."
#~ "org/std/ops/trait.Drop.html) trait is the Rust equivalent."
#~ msgstr ""
#~ "Vous pouvez √™tre interrog√© sur les destructeurs ici, le trait [Drop]"
#~ "(https://doc.rust-lang.org/std/ops/trait.Drop.html) est l'√©quivalent de "
#~ "Rust."

#, fuzzy
#~ msgid "A destructor can run here to free up resources."
#~ msgstr "Un destructeur peut s'ex√©cuter ici pour lib√©rer des ressources."

#, fuzzy
#~ msgid "There is always _exactly_ one variable binding which owns a value."
#~ msgstr ""
#~ "Il y a toujours _exactement_ une liaison de variable qui poss√®de une "
#~ "valeur."

#, fuzzy
#~ msgid "The heap data from `s1` is reused for `s2`."
#~ msgstr "Les donn√©es de tas de `s1` sont r√©utilis√©es pour `s2`."

#, fuzzy
#~ msgid ""
#~ "When `s1` goes out of scope, nothing happens (it has been moved from)."
#~ msgstr ""
#~ "Lorsque `s1` sort de la port√©e, rien ne se passe (il a √©t√© d√©plac√© de)."

#, fuzzy
#~ msgid ""
#~ "If students ask about `derive`, it is sufficient to say that this is a "
#~ "way to generate code in Rust at compile time. In this case the default "
#~ "implementations of `Copy` and `Clone` traits are generated."
#~ msgstr ""
#~ "Si les √©tudiants posent des questions sur \"d√©river\", il suffit de dire "
#~ "que c'est un moyen de g√©n√©rer du code dans Rust au moment de la "
#~ "compilation. Dans ce cas, les impl√©mentations par d√©faut des traits "
#~ "`Copy` et `Clone` sont g√©n√©r√©es."

#, fuzzy
#~ msgid "A borrowed value has a _lifetime_:"
#~ msgstr "Une valeur emprunt√©e a une _dur√©e de vie_¬†:"

#, fuzzy
#~ msgid ""
#~ "Read `&'a Point` as \"a borrowed `Point` which is valid for at least the "
#~ "lifetime `a`\"."
#~ msgstr ""
#~ "Lire `&'a Point` comme \"un `Point` emprunt√© qui est valide pour au moins "
#~ "dur√©e de vie 'a'\"."

#, fuzzy
#~ msgid ""
#~ "In addition to borrowing its arguments, a function can return a borrowed "
#~ "value:"
#~ msgstr ""
#~ "En plus d'emprunter ses arguments, une fonction peut renvoyer une valeur "
#~ "emprunt√©e¬†:"

#, fuzzy
#~ msgid "`'a` is a generic parameter, it is inferred by the compiler."
#~ msgstr "`'a` est un param√®tre g√©n√©rique, il est d√©duit par le compilateur."

#, fuzzy
#~ msgid "Lifetimes start with `'` and `'a` is a typical default name."
#~ msgstr ""
#~ "Les dur√©es de vie commencent par `'` et `'a` est un nom par d√©faut "
#~ "typique."

#, fuzzy
#~ msgid ""
#~ "The _at least_ part is important when parameters are in different scopes."
#~ msgstr ""
#~ "La partie _au moins_ est importante lorsque les param√®tres sont dans des "
#~ "port√©es diff√©rentes."

#, fuzzy
#~ msgid "We describe the distinction between method receivers next."
#~ msgstr ""
#~ "Nous d√©crivons ensuite la distinction entre les r√©cepteurs de m√©thode."

#, fuzzy
#~ msgid ""
#~ "Consider emphasizing \"shared and immutable\" and \"unique and mutable\". "
#~ "These constraints always come together in Rust due to borrow checker "
#~ "rules, and `self` is no exception. It isn't possible to reference a "
#~ "struct from multiple locations and call a mutating (`&mut self`) method "
#~ "on it."
#~ msgstr ""
#~ "Pensez √† mettre l'accent sur \"partag√© et immuable\" et \"unique et "
#~ "modifiable\". Ces contraintes viennent toujours ensemble dans Rust en "
#~ "raison des r√®gles du v√©rificateur d'emprunt, et \"self\" ne fait pas "
#~ "exception. Il n'est pas possible de r√©f√©rencez une structure √† partir de "
#~ "plusieurs emplacements et appelez une m√©thode de mutation (`&mut self`) "
#~ "sur celle-ci."

#, fuzzy
#~ msgid "All four methods here use a different method receiver."
#~ msgstr ""
#~ "Les quatre m√©thodes ici utilisent un r√©cepteur de m√©thode diff√©rent."

#, fuzzy
#~ msgid ""
#~ "You can point out how that changes what the function can do with the "
#~ "variable values and if/how it can be used again in `main`."
#~ msgstr ""
#~ "Vous pouvez indiquer comment cela change ce que la fonction peut faire "
#~ "avec les valeurs des variables et si/comment elle peut √™tre r√©utilis√©e "
#~ "dans `main`."

#, fuzzy
#~ msgid ""
#~ "You can showcase the error that appears when trying to call `finish` "
#~ "twice."
#~ msgstr ""
#~ "Vous pouvez afficher l'erreur qui appara√Æt lorsque vous essayez d'appeler "
#~ "\"finish\" deux fois."

#, fuzzy
#~ msgid ""
#~ "Note that although the method receivers are different, the non-static "
#~ "functions are called the same way in the main body. Rust enables "
#~ "automatic referencing and dereferencing when calling methods. Rust "
#~ "automatically adds in the `&`, `*`, `muts` so that that object matches "
#~ "the method signature."
#~ msgstr ""
#~ "Notez que bien que les r√©cepteurs de m√©thode soient diff√©rents, les "
#~ "fonctions non statiques sont appel√©es de la m√™me mani√®re dans le corps "
#~ "principal. Rust permet le r√©f√©rencement et le d√©r√©f√©rencement automatique "
#~ "lors de l'appel de m√©thodes. Rust ajoute automatiquement les `&`, `*`, "
#~ "`muts` afin que cet objet corresponde √† la signature de la m√©thode."

#, fuzzy
#~ msgid ""
#~ "You might point out that `print_laps` is using a vector that is iterated "
#~ "over. We describe vectors in more detail in the afternoon. "
#~ msgstr ""
#~ "Vous pourriez remarquer que `print_laps` utilise un vecteur qui est "
#~ "it√©r√©. Nous d√©crivons les vecteurs plus en d√©tail dans l'apr√®s-midi."

#, fuzzy
#~ msgid "Day 2: Morning Exercises"
#~ msgstr "Jour 2 : Exercices du matin"

#, fuzzy
#~ msgid "We will look at implementing methods in two contexts:"
#~ msgstr ""
#~ "Nous nous int√©resserons √† la mise en ≈ìuvre des m√©thodes dans deux "
#~ "contextes :"

#, fuzzy
#~ msgid ""
#~ "We will learn much more about structs and the `Vec<T>` type tomorrow. For "
#~ "now, you just need to know part of its API:"
#~ msgstr ""
#~ "Nous en apprendrons beaucoup plus sur les structures et le type `Vec<T>` "
#~ "demain. Pour l'instant, vous avez juste besoin de conna√Ætre une partie de "
#~ "son API¬†:"

#, fuzzy
#~ msgid ""
#~ "Use this to model a library's book collection. Copy the code below to "
#~ "<https://play.rust-lang.org/> and update the types to make it compile:"
#~ msgstr ""
#~ "Utilisez-le pour cr√©er une application de biblioth√®que. Copiez le code ci-"
#~ "dessous pour <https://play.rust-lang.org/> et mettez √† jour les types "
#~ "pour le faire compiler¬†:"

#, fuzzy
#~ msgid "The common vocabulary types include:"
#~ msgstr "Les types de vocabulaire courants comprennent¬†:"

#, fuzzy
#~ msgid ""
#~ "[`Option` and `Result`](std/option-result.md) types: used for optional "
#~ "values and [error handling](error-handling.md)."
#~ msgstr ""
#~ "Types [`Option` et `Result`](std/option-result.md)¬†: utilis√©s pour les "
#~ "valeurs facultatives et \\[gestion des erreurs\\] (error-handling.md)."

#, fuzzy
#~ msgid ""
#~ "[`String`](std/string.md): the default string type used for owned data."
#~ msgstr ""
#~ "[`String`](std/string.md)¬†: le type de cha√Æne par d√©faut utilis√© pour les "
#~ "donn√©es d√©tenues."

#, fuzzy
#~ msgid "[`Vec`](std/vec.md): a standard extensible vector."
#~ msgstr "[`Vec`](std/vec.md) : un vecteur extensible standard."

#, fuzzy
#~ msgid ""
#~ "[`HashMap`](std/hashmap.md): a hash map type with a configurable hashing "
#~ "algorithm."
#~ msgstr ""
#~ "[`HashMap`](std/hashmap.md)¬†: un type de carte de hachage avec un hachage "
#~ "configurable algorithme."

#, fuzzy
#~ msgid "[`Box`](std/box.md): an owned pointer for heap-allocated data."
#~ msgstr ""
#~ "[`Box`](std/box.md)¬†: un pointeur propri√©taire pour les donn√©es allou√©es "
#~ "par tas."

#, fuzzy
#~ msgid ""
#~ "[`Rc`](std/rc.md): a shared reference-counted pointer for heap-allocated "
#~ "data."
#~ msgstr ""
#~ "[`Rc`](std/rc.md)¬†: un pointeur partag√© compt√© par r√©f√©rence pour les "
#~ "donn√©es allou√©es par tas."

#, fuzzy
#~ msgid "`Option` and `Result`"
#~ msgstr "`Option` et `R√©sultat`"

#, fuzzy
#~ msgid "The types represent optional data:"
#~ msgstr "Les types repr√©sentent des donn√©es facultatives¬†:"

#, fuzzy
#~ msgid "`Option<&T>` has zero space overhead compared to `&T`."
#~ msgstr "`Option<&T>` n'a aucune surcharge d'espace par rapport √† `&T`."

#, fuzzy
#~ msgid "Box with Recursive Data Structures"
#~ msgstr "Bo√Æte avec des structures de donn√©es r√©cursives"

#, fuzzy
#~ msgid "Day 2: Afternoon Exercises"
#~ msgstr "Jour 2 : Exercices de l'apr√®s-midi"

#, fuzzy
#~ msgid ""
#~ "The exercises for this afternoon will focus on strings and iterators."
#~ msgstr ""
#~ "Les exercices de cet apr√®s-midi porteront sur les cha√Ænes et les "
#~ "it√©rateurs."

#, fuzzy
#~ msgid ""
#~ "The ownership model of Rust affects many APIs. An example of this is the "
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) and "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) traits."
#~ msgstr ""
#~ "Le mod√®le de propri√©t√© de Rust affecte de nombreuses API. Un exemple en "
#~ "est le [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator."
#~ "html) et [`IntoIterator`](https://doc.rust-lang.org/std/iter/trait."
#~ "IntoIterator.html) caract√©ristiques."

#, fuzzy
#~ msgid ""
#~ "Traits are like interfaces: they describe behavior (methods) for a type. "
#~ "The `Iterator` trait simply says that you can call `next` until you get "
#~ "`None` back:"
#~ msgstr ""
#~ "Les traits sont comme des interfaces : ils d√©crivent le comportement "
#~ "(m√©thodes) d'un type. Le Le trait `Iterator` indique simplement que vous "
#~ "pouvez appeler `next` jusqu'√† ce que vous obteniez `None`¬†:"

#, fuzzy
#~ msgid "You use this trait like this:"
#~ msgstr "Vous utilisez ce trait comme ceci¬†:"

#, fuzzy
#~ msgid "What is the type returned by the iterator? Test your answer here:"
#~ msgstr ""
#~ "Quel est le type retourn√© par l'it√©rateur ? Testez votre r√©ponse ici¬†:"

#, fuzzy
#~ msgid "Why is this type used?"
#~ msgstr "Pourquoi ce type est-il utilis√© ?"

#, fuzzy
#~ msgid "Like before, what  is the type returned by the iterator?"
#~ msgstr "Comme pr√©c√©demment, quel est le type retourn√© par l'it√©rateur ?"

#, fuzzy
#~ msgid ""
#~ "Now that we know both `Iterator` and `IntoIterator`, we can build `for` "
#~ "loops. They call `into_iter()` on an expression and iterates over the "
#~ "resulting iterator:"
#~ msgstr ""
#~ "Maintenant que nous connaissons √† la fois `Iterator` et `IntoIterator`, "
#~ "nous pouvons construire des boucles `for`. Ils appellent `into_iter()` "
#~ "sur une expression et it√®rent sur le r√©sultat it√©rateur¬†:"

#, fuzzy
#~ msgid ""
#~ "Experiment with the code above and then consult the documentation for "
#~ "[`impl IntoIterator for &Vec<T>`](https://doc.rust-lang.org/std/vec/"
#~ "struct.Vec.html#impl-IntoIterator-for-%26'a+Vec%3CT,+A%3E) and [`impl "
#~ "IntoIterator for Vec<T>`](https://doc.rust-lang.org/std/vec/struct.Vec."
#~ "html#impl-IntoIterator-for-Vec%3CT,+A%3E) to check your answers."
#~ msgstr ""
#~ "Exp√©rimentez avec le code ci-dessus, puis consultez la documentation de "
#~ "[`impl IntoIterator pour &Vec<T>`](https://doc.rust-lang.org/std/vec/"
#~ "struct.Vec.html#impl-IntoIterator-for-%26%27a%20Vec%3CT%2C%20A%3E) et "
#~ "[`impl IntoIterator for Vec<T>`](https://doc.rust-lang.org/std/vec/struct."
#~ "Vec.html#impl-IntoIterator-for-Vec%3CT%2C%20A%3E) pour v√©rifier vos "
#~ "r√©ponses."

#, fuzzy
#~ msgid ""
#~ "In this exercise, you are implementing a routing component of a web "
#~ "server. The server is configured with a number of _path prefixes_ which "
#~ "are matched against _request paths_. The path prefixes can contain a "
#~ "wildcard character which matches a full segment. See the unit tests below."
#~ msgstr ""
#~ "Dans cet exercice, vous impl√©mentez un composant de routage d'un serveur "
#~ "Web. Le le serveur est configur√© avec un certain nombre de _pr√©fixes de "
#~ "chemin_ qui sont mis en correspondance _demander des chemins_. Les "
#~ "pr√©fixes de chemin peuvent contenir un caract√®re g√©n√©rique qui correspond "
#~ "√† un segment complet. Voir les tests unitaires ci-dessous."

#, fuzzy
#~ msgid ""
#~ "Traits: deriving traits, default methods, and important standard library "
#~ "traits."
#~ msgstr ""
#~ "Traits¬†: traits d√©riv√©s, m√©thodes par d√©faut et biblioth√®que standard "
#~ "importante caract√©ristiques."

#, fuzzy
#~ msgid ""
#~ "Generics: generic data types, generic methods, monomorphization, and "
#~ "trait objects."
#~ msgstr ""
#~ "G√©n√©riques : types de donn√©es g√©n√©riques, m√©thodes g√©n√©riques, "
#~ "monomorphisation et trait objets."

#, fuzzy
#~ msgid "Testing: unit tests, documentation tests, and integration tests."
#~ msgstr ""
#~ "Tests : tests unitaires, tests de documentation et tests d'int√©gration."

#, fuzzy
#~ msgid ""
#~ "Unsafe Rust: raw pointers, static variables, unsafe functions, and extern "
#~ "functions."
#~ msgstr ""
#~ "Unsafe Rust¬†: pointeurs bruts, variables statiques, fonctions non "
#~ "s√©curis√©es et extern les fonctions."

#, fuzzy
#~ msgid "You can declare a generic type on your `impl` block:"
#~ msgstr "Vous pouvez d√©clarer un type g√©n√©rique sur votre bloc `impl`¬†:"

#, fuzzy
#~ msgid ""
#~ "Generic code is turned into non-generic code based on the call sites:"
#~ msgstr ""
#~ "Le code g√©n√©rique est transform√© en code non g√©n√©rique bas√© sur les sites "
#~ "d'appel¬†:"

#, fuzzy
#~ msgid "behaves as if you wrote"
#~ msgstr "se comporte comme si vous √©criviez"

#, fuzzy
#~ msgid "You can let the compiler derive a number of traits as follows:"
#~ msgstr ""
#~ "Vous pouvez laisser le compilateur d√©river un certain nombre de traits¬†:"

#, fuzzy
#~ msgid "Traits can implement behavior in terms of other trait methods:"
#~ msgstr ""
#~ "Les traits peuvent impl√©menter un comportement en termes d'autres "
#~ "m√©thodes de trait¬†:"

#, fuzzy
#~ msgid "Move method `not_equals` to a new trait `NotEquals`."
#~ msgstr "D√©placez la m√©thode `not_equal` vers un nouveau trait `NotEqual`."

#, fuzzy
#~ msgid "Make `Equals` a super trait for `NotEquals`."
#~ msgstr "Faites de `NotEqual` un super trait pour `Equal`."

#, fuzzy
#~ msgid "Provide a blanket implementation of `NotEquals` for `Equals`."
#~ msgstr ""
#~ "Avec l'impl√©mentation globale, vous n'avez plus besoin de `NotEqual` "
#~ "comme super trait pour `Equal`."

#, fuzzy
#~ msgid "`impl Trait` allows you to work with types which you cannot name."
#~ msgstr ""
#~ "`impl Trait` vous permet de travailler avec des types que vous ne pouvez "
#~ "pas nommer."

#, fuzzy
#~ msgid ""
#~ "This example is great, because it uses `impl Display` twice. It helps to "
#~ "explain that nothing here enforces that it is _the same_ `impl Display` "
#~ "type. If we used a single  `T: Display`, it would enforce the constraint "
#~ "that input `T` and return `T` type are the same type. It would not work "
#~ "for this particular function, as the type we expect as input is likely "
#~ "not what `format!` returns. If we wanted to do the same via `: Display` "
#~ "syntax, we'd need two independent generic parameters."
#~ msgstr ""
#~ "Cet exemple est g√©nial, car il utilise `impl Display` deux fois. Cela "
#~ "aide √† expliquer que rien ici n'impose qu'il s'agisse du _m√™me_ type "
#~ "`impl Display`. Si nous utilisions un seul `T: Display`, cela imposerait "
#~ "la contrainte selon laquelle l'entr√©e `T` et le type de retour `T` sont "
#~ "du m√™me type. Cela ne fonctionnerait pas pour cette fonction "
#~ "particuli√®re, car le type que nous attendons en entr√©e n'est probablement "
#~ "pas quel `format!` renvoie. Si nous voulions faire la m√™me chose via la "
#~ "syntaxe `: Display`, nous aurions besoin de deux param√®tres g√©n√©riques "
#~ "ind√©pendants."

#, fuzzy
#~ msgid ""
#~ "We will now look at some of the most common traits of the Rust standard "
#~ "library:"
#~ msgstr ""
#~ "Nous allons maintenant examiner certaines des caract√©ristiques les plus "
#~ "courantes de la biblioth√®que standard Rust¬†:"

#, fuzzy
#~ msgid ""
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) and "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) used in `for` loops,"
#~ msgstr ""
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) et "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) utilis√©s dans les boucles `for`,"

#, fuzzy
#~ msgid ""
#~ "[`From`](https://doc.rust-lang.org/std/convert/trait.From.html) and "
#~ "[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) used to "
#~ "convert values,"
#~ msgstr ""
#~ "[`From`](https://doc.rust-lang.org/std/convert/trait.From.html) et "
#~ "[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) utilis√©s "
#~ "pour convertir les valeurs,"

#, fuzzy
#~ msgid ""
#~ "[`Add`](https://doc.rust-lang.org/std/ops/trait.Add.html), [`Mul`]"
#~ "(https://doc.rust-lang.org/std/ops/trait.Mul.html), ... used for operator "
#~ "overloading, and"
#~ msgstr ""
#~ "[`Add`](https://doc.rust-lang.org/std/ops/trait.Add.html), [`Mul`]"
#~ "(https://doc.rust-lang.org/std/ops/trait.Mul.html), ... utilis√© pour la "
#~ "surcharge de l'op√©rateur, et"

#, fuzzy
#~ msgid ""
#~ "[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) "
#~ "used to construct a default instance of a type."
#~ msgstr ""
#~ "[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) "
#~ "utilis√© pour construire une instance par d√©faut d'un type."

#, fuzzy
#~ msgid ""
#~ "`Iterator` implements `fn collect<B>(self) -> B where B: "
#~ "FromIterator<Self::Item>, Self: Sized`"
#~ msgstr ""
#~ "Impl√©mente `Iterator` \\`fn collect\n"
#~ "\n"
#~ "(soi) -> B o√π B¬†: FromIterator<Self::Item>, Auto¬†: dimensionn√©"

#, fuzzy
#~ msgid "`Add`, `Mul`, ..."
#~ msgstr "`Ajouter`, `Mul`, ..."

#, fuzzy
#~ msgid "Day 3: Morning Exercises"
#~ msgstr "Jour 3 : Exercices du matin"

#, fuzzy
#~ msgid ""
#~ "We will design a classical GUI library using traits and trait objects."
#~ msgstr ""
#~ "Nous allons concevoir une biblioth√®que de traits et d'objets de traits "
#~ "d'interface graphique classique."

#, fuzzy
#~ msgid "Drawing A Simple GUI"
#~ msgstr "Une biblioth√®que d'interface graphique"

#, fuzzy
#~ msgid "Polygon Struct"
#~ msgstr "Structure Polygone"

#, fuzzy
#~ msgid ""
#~ "We will create a `Polygon` struct which contain some points. Copy the "
#~ "code below to <https://play.rust-lang.org/> and fill in the missing "
#~ "methods to make the tests pass:"
#~ msgstr ""
#~ "Nous allons cr√©er une structure `Polygon` contenant des points. Copiez le "
#~ "code ci-dessous √† <https://play.rust-lang.org/> et remplissez les "
#~ "m√©thodes manquantes pour faire le les tests passent :"

#, fuzzy
#~ msgid ""
#~ "Since the method signatures are missing from the problem statements, the "
#~ "key part of the exercise is to specify those correctly. You don't have to "
#~ "modify the tests."
#~ msgstr ""
#~ "√âtant donn√© que les signatures de m√©thode manquent dans les √©nonc√©s de "
#~ "probl√®me, la partie cl√© de l'exercice consiste √† les sp√©cifier "
#~ "correctement. Vous n'avez pas √† modifier les tests."

#, fuzzy
#~ msgid "Other interesting parts of the exercise:"
#~ msgstr "Autres parties int√©ressantes de l'exercice :"

#, fuzzy
#~ msgid ""
#~ "Derive a `Copy` trait for some structs, as in tests the methods sometimes "
#~ "don't borrow their arguments."
#~ msgstr ""
#~ "D√©rivez un trait `Copy` pour certaines structures, car dans les tests, "
#~ "les m√©thodes n'empruntent parfois pas leurs arguments."

#, fuzzy
#~ msgid ""
#~ "Discover that `Add` trait must be implemented for two objects to be "
#~ "addable via \"+\". Note that we do not discuss generics until Day 3."
#~ msgstr ""
#~ "D√©couvrez que le trait `Add` doit √™tre impl√©ment√© pour que deux objets "
#~ "puissent √™tre ajout√©s via \"+\". Notez que nous ne discutons pas des "
#~ "g√©n√©riques avant le Jour 3."

#, fuzzy
#~ msgid "Error handling in Rust is done using explicit control flow:"
#~ msgstr ""
#~ "La gestion des erreurs dans Rust est effectu√©e √† l'aide d'un flux de "
#~ "contr√¥le explicite¬†:"

#, fuzzy
#~ msgid "Functions that can have errors list this in their return type,"
#~ msgstr ""
#~ "Les fonctions qui peuvent avoir des erreurs le listent dans leur type de "
#~ "retour,"

#, fuzzy
#~ msgid "There are no exceptions."
#~ msgstr "Il n'y a aucune exception."

#, fuzzy
#~ msgid "Catching the Stack Unwinding"
#~ msgstr "Attraper la pile qui se d√©roule"

#, fuzzy
#~ msgid ""
#~ "We have already seen the `Result` enum. This is used pervasively when "
#~ "errors are expected as part of normal operation:"
#~ msgstr ""
#~ "Nous avons d√©j√† vu l'√©num√©ration `Result`. Ceci est utilis√© partout "
#~ "lorsque des erreurs sont pr√©vu dans le cadre d'un fonctionnement normal¬†:"

#, fuzzy
#~ msgid "Propagating Errors with `?`"
#~ msgstr "Propagation des erreurs avec `?`"

#, fuzzy
#~ msgid ""
#~ "The try-operator `?` is used to return errors to the caller. It lets you "
#~ "turn the common"
#~ msgstr ""
#~ "L'op√©rateur try `?` est utilis√© pour renvoyer des erreurs √† l'appelant. "
#~ "Il vous permet de tourner le commun"

#, fuzzy
#~ msgid ""
#~ "`thiserror`'s derive macro automatically implements `std::error::Error`, "
#~ "and optionally `Display` (if the `#[error(...)]` attributes are provided) "
#~ "and `From` (if the `#[from]` attribute is added). It also works for "
#~ "structs."
#~ msgstr ""
#~ "La macro de d√©rivation de `thiserror` impl√©mente automatiquement `std::"
#~ "error::Error` et √©ventuellement `Display` (si les attributs "
#~ "`#[error(...)]` sont fournis) et `From` (si l'attribut `#[from]` est "
#~ "ajout√©). Cela fonctionne √©galement pour les structures."

#, fuzzy
#~ msgid ""
#~ "It doesn't affect your public API, which makes it good for libraries."
#~ msgstr ""
#~ "Cela n'affecte pas votre API publique, ce qui le rend bon pour les "
#~ "biblioth√®ques."

#, fuzzy
#~ msgid ""
#~ "The widely used [anyhow](https://docs.rs/anyhow/) crate can help you add "
#~ "contextual information to your errors and allows you to have fewer custom "
#~ "error types:"
#~ msgstr ""
#~ "La caisse [anyhow](https://docs.rs/anyhow/) largement utilis√©e peut vous "
#~ "aider √† ajouter des informations contextuelles √† vos erreurs et vous "
#~ "permet d'avoir moins types d'erreur personnalis√©s¬†:"

#, fuzzy
#~ msgid "Mark unit tests with `#[test]`:"
#~ msgstr "Marquez les tests unitaires avec `#[test]`¬†:"

#, fuzzy
#~ msgid "Use `cargo test` to find and run the unit tests."
#~ msgstr ""
#~ "Utilisez `cargo test` pour rechercher et ex√©cuter les tests unitaires."

#, fuzzy
#~ msgid ""
#~ "Unit tests are often put in a nested module (run tests on the [Playground]"
#~ "(https://play.rust-lang.org/)):"
#~ msgstr ""
#~ "Les tests unitaires sont souvent plac√©s dans un module imbriqu√© (ex√©cuter "
#~ "des tests sur le [Terrain de jeu](https://play.rust-lang.org/))¬†:"

#, fuzzy
#~ msgid "Useful crates for writing tests"
#~ msgstr "Caisses utiles"

#, fuzzy
#~ msgid "Calling External Code"
#~ msgstr "Appeler le code externe"

#, fuzzy
#~ msgid ""
#~ "Functions from other languages might violate the guarantees of Rust. "
#~ "Calling them is thus unsafe:"
#~ msgstr ""
#~ "Les fonctions d'autres langages peuvent violer les garanties de Rust. "
#~ "Appel eux est donc dangereux :"

#, fuzzy
#~ msgid "Day 3: Afternoon Exercises"
#~ msgstr "Jour 3 : Exercices de l'apr√®s-midi"

#, fuzzy
#~ msgid "Let us build a safe wrapper for reading directory content!"
#~ msgstr "Construisons un wrapper s√ªr pour lire le contenu du r√©pertoire¬†!"

#, fuzzy
#~ msgid ""
#~ "After looking at the exercise, you can look at the [solution](solutions-"
#~ "afternoon.md) provided."
#~ msgstr ""
#~ "Apr√®s avoir regard√© l'exercice, vous pouvez regarder la [solution]"
#~ "(solutions-afternoon.md) fournie."

#, fuzzy
#~ msgid "concurrency:"
#~ msgstr "Concurrence"

#, fuzzy
#~ msgid "control flow:"
#~ msgstr "Flux de contr√¥le"

#, fuzzy
#~ msgid "enumeration:"
#~ msgstr "`Dur√©e`"

#, fuzzy
#~ msgid "error:"
#~ msgstr "\"Erreur\""

#, fuzzy
#~ msgid "error handling:"
#~ msgstr "Gestion des erreurs"

#, fuzzy
#~ msgid "garbage collector:"
#~ msgstr "Ramasse-miettes"

#, fuzzy
#~ msgid "generics:"
#~ msgstr "G√©n√©riques"

#, fuzzy
#~ msgid "integration test:"
#~ msgstr "Tests d'int√©gration"

#, fuzzy
#~ msgid "main function:"
#~ msgstr "Appel de fonctions non s√©curis√©es"

#, fuzzy
#~ msgid "memory leak:"
#~ msgstr "Fuites de m√©moire."

#, fuzzy
#~ msgid "method:"
#~ msgstr "M√©thodes"

#, fuzzy
#~ msgid "module:"
#~ msgstr "Modules"

#, fuzzy
#~ msgid "ownership:"
#~ msgstr "Possession"

#, fuzzy
#~ msgid "panic:"
#~ msgstr "Paniques"

#, fuzzy
#~ msgid "receiver:"
#~ msgstr "Pilote"

#, fuzzy
#~ msgid "standard library:"
#~ msgstr "Biblioth√®que standard"

#, fuzzy
#~ msgid "static:"
#~ msgstr "`statique`"

#, fuzzy
#~ msgid "struct:"
#~ msgstr "Structures"

#, fuzzy
#~ msgid "thread:"
#~ msgstr "Threads"

#, fuzzy
#~ msgid "trait:"
#~ msgstr "Traits"

#, fuzzy
#~ msgid "union:"
#~ msgstr "Unions"

#, fuzzy
#~ msgid "unit test:"
#~ msgstr "Tests unitaires"

#, fuzzy
#~ msgid "variable:\\"
#~ msgstr "Variables"

#, fuzzy
#~ msgid "You will find solutions to the exercises on the following pages."
#~ msgstr ""
#~ "Vous trouverez les solutions aux exercices dans les pages suivantes."

#, fuzzy
#~ msgid ""
#~ "Feel free to ask questions about the solutions [on GitHub](https://github."
#~ "com/google/comprehensive-rust/discussions). Let us know if you have a "
#~ "different or better solution than what is presented here."
#~ msgstr ""
#~ "N'h√©sitez pas √† poser des questions sur les solutions [sur GitHub]"
#~ "(https://github.com/google/comprehensive-rust/discussions). Faites le "
#~ "nous savoir si vous avez une solution diff√©rente ou meilleure que celle "
#~ "pr√©sent√©e ici."

#, fuzzy
#~ msgid "Day 1 Morning Exercises"
#~ msgstr "Exercices du matin du jour 1"

#, fuzzy
#~ msgid "([back to exercise](for-loops.md))"
#~ msgstr "([retour √† l'exercice](for-loops.md))"

#, fuzzy
#~ msgid "Bonus question"
#~ msgstr "Question bonus"

#, fuzzy
#~ msgid ""
#~ "It requires more advanced concepts. It might seem that we could use a "
#~ "slice-of-slices (`&[&[i32]]`) as the input type to transpose and thus "
#~ "make our function handle any size of matrix. However, this quickly breaks "
#~ "down: the return type cannot be `&[&[i32]]` since it needs to own the "
#~ "data you return."
#~ msgstr ""
#~ "Cela n√©cessite des concepts plus avanc√©s. Il pourrait sembler que nous "
#~ "pourrions utiliser une tranche de tranches (`&[&[i32]]`) comme type "
#~ "d'entr√©e √† transposer et ainsi faire en sorte que notre fonction g√®re "
#~ "n'importe quelle taille de matrice. Cependant, cela tombe rapidement en "
#~ "panne¬†: le type de retour ne peut pas √™tre `&[&[i32]]` car il doit "
#~ "poss√©der les donn√©es que vous renvoyez."

#, fuzzy
#~ msgid ""
#~ "You can attempt to use something like `Vec<Vec<i32>>`, but this doesn't "
#~ "work out-of-the-box either: it's hard to convert from `Vec<Vec<i32>>` to "
#~ "`&[&[i32]]` so now you cannot easily use `pretty_print` either."
#~ msgstr ""
#~ "Vous pouvez essayer d'utiliser quelque chose comme `Vec<Vec<i32>>`, mais "
#~ "cela ne fonctionne pas non plus¬†: il est difficile de convertir "
#~ "`Vec<Vec<i32>>` en `&[ &[i32]]` vous ne pouvez donc plus utiliser "
#~ "facilement `pretty_print` non plus."

#, fuzzy
#~ msgid ""
#~ "Once we get to traits and generics, we'll be able to use the [`std::"
#~ "convert::AsRef`](https://doc.rust-lang.org/std/convert/trait.AsRef.html) "
#~ "trait to abstract over anything that can be referenced as a slice."
#~ msgstr ""
#~ "Une fois arriv√©s aux traits et aux g√©n√©riques, nous pourrons utiliser le "
#~ "trait [`std::convert::AsRef`](https://doc.rust-lang.org/std/convert/trait."
#~ "AsRef.html) pour faire abstraction de tout ce qui peut √™tre r√©f√©renc√© en "
#~ "tant que tranche."

#, fuzzy
#~ msgid ""
#~ "In addition, the type itself would not enforce that the child slices are "
#~ "of the same length, so such variable could contain an invalid matrix."
#~ msgstr ""
#~ "De plus, le type lui-m√™me n'imposerait pas que les tranches enfants aient "
#~ "la m√™me longueur, de sorte qu'une telle variable pourrait contenir une "
#~ "matrice non valide."

#, fuzzy
#~ msgid "Day 1 Afternoon Exercises"
#~ msgstr "Exercices de l'apr√®s-midi du jour 1"

#, fuzzy
#~ msgid "([back to exercise](luhn.md))"
#~ msgstr "([retour √† l'exercice](luhn.md))"

#, fuzzy
#~ msgid "Pattern matching"
#~ msgstr "filtrage par motif"

#, fuzzy
#~ msgid "Day 2 Morning Exercises"
#~ msgstr "Exercices du matin du jour 2"

#, fuzzy
#~ msgid "Designing a Library"
#~ msgstr "Conception d'une biblioth√®que"

#, fuzzy
#~ msgid "([back to exercise](book-library.md))"
#~ msgstr "([retour √† l'exercice](book-library.md))"

#, fuzzy
#~ msgid "([back to exercise](health-statistics.md))"
#~ msgstr "([retour √† l'exercice](rtc.md))"

#, fuzzy
#~ msgid "([back to exercise](strings-iterators.md))"
#~ msgstr "([retour √† l'exercice](strings-iterators.md))"

#, fuzzy
#~ msgid "Day 3 Morning Exercise"
#~ msgstr "Jour 3 Exercice du matin"

#, fuzzy
#~ msgid "([back to exercise](simple-gui.md))"
#~ msgstr "([retour √† l'exercice](simple-gui.md))"

#, fuzzy
#~ msgid "([back to exercise](points-polygons.md))"
#~ msgstr "([retour √† l'exercice](points-polygones.md))"

#, fuzzy
#~ msgid "Day 3 Afternoon Exercises"
#~ msgstr "Exercices de l'apr√®s-midi du jour 3"

#, fuzzy
#~ msgid "([back to exercise](safe-ffi-wrapper.md))"
#~ msgstr "([retour √† l'exercice](safe-ffi-wrapper.md))"

#~ msgid "Pattern Matching (TBD)"
#~ msgstr "Filtrage par motif"

#~ msgid ""
#~ "```shell\n"
#~ "cargo init concurrency\n"
#~ "cd concurrency\n"
#~ "cargo add tokio --features full\n"
#~ "cargo run\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "cargo init concurrency\n"
#~ "cd concurrency\n"
#~ "cargo add tokio --features full\n"
#~ "cargo run\n"
#~ "```"

#, fuzzy
#~ msgid ""
#~ "We suggest using [VS Code](https://code.visualstudio.com/) to edit the "
#~ "code (but any LSP compatible editor works with rust-analyzer[3](https://"
#~ "rust-analyzer.github.io/))."
#~ msgstr ""
#~ "Cela permettra √† \\[rust-analyzer\\]\\[1\\] de passer directement aux "
#~ "d√©finitions. Nous sugg√©rons d'utiliser [VS Code](https://code."
#~ "visualstudio.com/) pour modifier le code (mais tout √©diteur LSP "
#~ "compatible fonctionne)."

#~ msgid ""
#~ "Some folks also like to use the [JetBrains](https://www.jetbrains.com/"
#~ "clion/) family of IDEs, which do their own analysis but have their own "
#~ "tradeoffs. If you prefer them, you can install the [Rust Plugin](https://"
#~ "www.jetbrains.com/rust/). Please take note that as of January 2023 "
#~ "debugging only works on the CLion version of the JetBrains IDEA suite."
#~ msgstr ""
#~ "Certaines personnes aiment √©galement utiliser la famille d'IDE "
#~ "\\[JetBrains\\] [4](https://www.jetbrains.com/clion/), qui effectuent "
#~ "leur propre analyse mais ont leurs propres compromis. Si vous les "
#~ "pr√©f√©rez, vous pouvez installer le [Plugin Rust](https://www.jetbrains."
#~ "com/rust/). Veuillez noter qu'√† partir de janvier 2023, le d√©bogage ne "
#~ "fonctionne que sur la version CLion de la suite JetBrains IDEA."

#, fuzzy
#~ msgid "Extra Work in Modern C++"
#~ msgstr "Double lib√©ration de m√©moire en C++ moderne"

#, fuzzy
#~ msgid "[Solution](solutions-afternoon.md#designing-a-library)"
#~ msgstr "[Solution](solutions-afternoon.md#designing-a-library)"

#, fuzzy
#~ msgid "`binary_search` returns `Result<usize, usize>`."
#~ msgstr "`binary_search` renvoie `Result<usize, usize>`."

#, fuzzy
#~ msgid "If found, `Result::Ok` holds the index where the element is found."
#~ msgstr "Si trouv√©, `Result::Ok` contient l'index o√π se trouve l'√©l√©ment."

#, fuzzy
#~ msgid ""
#~ "Otherwise, `Result::Err` contains the index where such an element should "
#~ "be inserted."
#~ msgstr ""
#~ "Sinon, `Result::Err` contient l'index o√π un tel √©l√©ment doit √™tre ins√©r√©."

#, fuzzy
#~ msgid ""
#~ "```rust,editable,compile_fail\n"
#~ "trait NotEquals: Equals {\n"
#~ "    fn not_equals(&self, other: &Self) -> bool {\n"
#~ "        !self.equals(other)\n"
#~ "    }\n"
#~ "}\n"
#~ "```"
#~ msgstr "Fournir une impl√©mentation globale de `NotEqual` pour `Equal`."

#, fuzzy
#~ msgid ""
#~ "```rust,editable,compile_fail\n"
#~ "trait NotEquals {\n"
#~ "    fn not_equals(&self, other: &Self) -> bool;\n"
#~ "}\n"
#~ "\n"
#~ "impl<T> NotEquals for T where T: Equals {\n"
#~ "    fn not_equals(&self, other: &Self) -> bool {\n"
#~ "        !self.equals(other)\n"
#~ "    }\n"
#~ "}\n"
#~ "```"
#~ msgstr "Fournir une impl√©mentation globale de `NotEqual` pour `Equal`."

#, fuzzy
#~ msgid ""
#~ "`Button`: has a `label` and a callback function which is invoked when the "
#~ "button is pressed."
#~ msgstr ""
#~ "`Button`¬†: a un `label` et une fonction de rappel qui est invoqu√©e "
#~ "lorsque le bouton est enfonc√©."

#, fuzzy
#~ msgid "SWD"
#~ msgstr "SWD"

#, fuzzy
#~ msgid "GDB stub and Microsoft "
#~ msgstr "Stub GDB et serveur Microsoft "

#, fuzzy
#~ msgid "DAP"
#~ msgstr "DAP"

#, fuzzy
#~ msgid " server"
#~ msgstr "Int√©gration du fret"

#, fuzzy
#~ msgid ""
#~ "`cargo-embed` is a cargo subcommand to build and flash binaries, log "
#~ msgstr ""
#~ "`cargo-embed` est une sous-commande cargo pour construire et flasher des "
#~ "binaires, enregistrer Sortie "

#, fuzzy
#~ msgid "RTT"
#~ msgstr "RTT"

#, fuzzy
#~ msgid "HVC"
#~ msgstr "HVC"

#, fuzzy
#~ msgid " to tell the firmware to power off the system:"
#~ msgstr " pour indiquer au micrologiciel d'√©teindre le syst√®me¬†:"

#, fuzzy
#~ msgid ""
#~ "**Note:** Please ignore the `// ANCHOR: label` and `// ANCHOR_END: label` "
#~ "comments you see in the solutions. They are there to make it possible to "
#~ "re-use parts of the solutions as the exercises."
#~ msgstr ""
#~ "**Remarque¬†:** Veuillez ignorer `// ANCHOR¬†: libell√©` et `// ANCHOR_END¬†: "
#~ "libell√©` commentaires que vous voyez dans les solutions. Ils sont l√† pour "
#~ "permettre de r√©utiliser des parties des solutions comme exercices."

#~ msgid "Comparison"
#~ msgstr "Comparaison"

#~ msgid ""
#~ "[![Build workflow](https://img.shields.io/github/actions/workflow/status/"
#~ "google/comprehensive-rust/build.yml?style=flat-square)](https://github."
#~ "com/google/comprehensive-rust/actions/workflows/build.yml?"
#~ "query=branch%3Amain)"
#~ msgstr ""
#~ "[![Flux de construction](https://img.shields.io/github/actions/workflow/"
#~ "status/google/comprehensive-rust/build.yml?style=flat-square)](https://"
#~ "github.com/google/comprehensive-rust/actions/workflows/build.yml?"
#~ "query=branch%3Amain)"

#~ msgid "Build workflow"
#~ msgstr "Flux de construction"

#~ msgid "GitHub contributors"
#~ msgstr "Contributeurs GitHub"

#~ msgid ""
#~ "[![GitHub contributors](https://img.shields.io/github/contributors/google/"
#~ "comprehensive-rust?style=flat-square)](https://github.com/google/"
#~ "comprehensive-rust/graphs/contributors) [![GitHub stars](https://img."
#~ "shields.io/github/stars/google/comprehensive-rust?style=flat-square)]"
#~ "(https://github.com/google/comprehensive-rust/stargazers)"
#~ msgstr ""
#~ "[![Contributeurs GitHub](https://img.shields.io/github/contributors/"
#~ "google/comprehensive-rust?style=flat-square)](https://github.com/google/"
#~ "comprehensive-rust/graphs/contributors) [![GitHub √©toiles](https://img."
#~ "shields.io/github/stars/google/comprehensive-rust?style=flat-square)]"
#~ "(https://github.com/google/comprehensive-rust/stargazers)"

#~ msgid "GitHub stars"
#~ msgstr "√âtoiles GitHub"

#~ msgid ""
#~ "[![GitHub stars](https://img.shields.io/github/stars/google/comprehensive-"
#~ "rust?style=flat-square)](https://github.com/google/comprehensive-rust/"
#~ "stargazers)"
#~ msgstr ""
#~ "[![GitHub √©toiles](https://img.shields.io/github/stars/google/"
#~ "comprehensive-rust?style=flat-square)](https://github.com/google/"
#~ "comprehensive-rust/stargazers)"

#~ msgid "The course is fast paced and covers a lot of ground:"
#~ msgstr "Le cours est rapide et couvre beaucoup de terrain:"

#, fuzzy
#~ msgid "Day 1: Basic Rust, ownership and the borrow checker."
#~ msgstr "Jour 1 : Rust de base, propri√©t√© et v√©rificateur d'emprunt."

#~ msgid "Rustup (Recommended)"
#~ msgstr "Rustup (recommand√©)"

#~ msgid ""
#~ "You can follow the instructions to install cargo and rust compiler, among "
#~ "other standard ecosystem tools with the [rustup](https://rust-analyzer."
#~ "github.io/) tool, which is maintained by the Rust Foundation."
#~ msgstr ""
#~ "Vous pouvez suivre les instructions pour installer Cargo et le "
#~ "compilateur Rust, parmi d'autres outils de l'√©cosyst√®me standard avec "
#~ "l'outil [rustup](https://rust-analyzer.github.io/), qui est maintenu par "
#~ "la Foundation Rust."

#~ msgid "Package Managers"
#~ msgstr "\\###¬†Gestionnaires de packages"

#~ msgid "Debian"
#~ msgstr "Debian"

#, fuzzy
#~ msgid ""
#~ "After looking at the exercises, you can look at the \\[solutions\\] "
#~ "provided."
#~ msgstr ""
#~ "Apr√®s avoir regard√© les exercices, vous pouvez regarder les "
#~ "\\[solutions\\] fournies."

#, fuzzy
#~ msgid ""
#~ "Note that since `println!` is a macro, `x` is not moved, even using the "
#~ "function like syntax of `println!(\"x: {}\", x)`"
#~ msgstr ""
#~ "Notez que puisque `println!` est une macro, `x` n'est pas d√©plac√©, m√™me "
#~ "en utilisant la fonction comme syntaxe de `println!(\"x: {}\", x)`"

#, fuzzy
#~ msgid "Global state is managed with static and constant variables."
#~ msgstr "L'√©tat global est g√©r√© avec des variables statiques et constantes."

#, fuzzy
#~ msgid "You can declare compile-time constants:"
#~ msgstr "Vous pouvez d√©clarer des constantes de compilation¬†:"

#, fuzzy
#~ msgid "You can also declare static variables:"
#~ msgstr "Vous pouvez √©galement d√©clarer des variables statiques¬†:"

#, fuzzy
#~ msgid ""
#~ "We will look at mutating static data in the [chapter on Unsafe Rust](../"
#~ "unsafe.md)."
#~ msgstr ""
#~ "Nous examinerons la mutation des donn√©es statiques dans le [chapitre sur "
#~ "Unsafe Rust](../unsafe.md)."

#, fuzzy
#~ msgid ""
#~ "Depending on which abstraction (or combination of abstractions) you "
#~ "choose, can be a single unique pointer, reference counted, or atomically "
#~ "reference counted."
#~ msgstr ""
#~ "Selon l'abstraction (ou la combinaison d'abstractions) que vous "
#~ "choisissez, il peut s'agir d'un seul pointeur unique, d'une r√©f√©rence "
#~ "compt√©e ou d'une r√©f√©rence atomique compt√©e."

#, fuzzy
#~ msgid "Here is a rough comparison of the memory management techniques."
#~ msgstr ""
#~ "Voici une comparaison approximative des techniques de gestion de la "
#~ "m√©moire."

#, fuzzy
#~ msgid "Pros of Different Memory Management Techniques"
#~ msgstr "Avantages des diff√©rentes techniques de gestion de la m√©moire"

#, fuzzy
#~ msgid "Manual like C:"
#~ msgstr "Manuel comme C :"

#, fuzzy
#~ msgid "No runtime overhead."
#~ msgstr "Aucune surcharge d'ex√©cution."

#, fuzzy
#~ msgid "Automatic like Java:"
#~ msgstr "Automatique comme Java¬†:"

#, fuzzy
#~ msgid "Fully automatic."
#~ msgstr "Enti√®rement automatique."

#, fuzzy
#~ msgid "Safe and correct."
#~ msgstr "S√ªr et correct."

#, fuzzy
#~ msgid "Scope-based like C++:"
#~ msgstr "Bas√© sur la port√©e comme C++¬†:"

#, fuzzy
#~ msgid "Partially automatic."
#~ msgstr "Partiellement automatique."

#, fuzzy
#~ msgid "Compiler-enforced scope-based like Rust:"
#~ msgstr "Bas√© sur la port√©e impos√©e par le compilateur comme Rust¬†:"

#, fuzzy
#~ msgid "Enforced by compiler."
#~ msgstr "Appliqu√© par le compilateur."

#, fuzzy
#~ msgid "Cons of Different Memory Management Techniques"
#~ msgstr "Inconv√©nients des diff√©rentes techniques de gestion de la m√©moire"

#, fuzzy
#~ msgid "Use-after-free."
#~ msgstr "Utiliser-apr√®s-libre."

#, fuzzy
#~ msgid "Double-frees."
#~ msgstr "Double-gratuit."

#, fuzzy
#~ msgid "Garbage collection pauses."
#~ msgstr "La collecte des ordures s'arr√™te."

#, fuzzy
#~ msgid "Destructor delays."
#~ msgstr "Retards de destructeur."

#, fuzzy
#~ msgid "Complex, opt-in by programmer."
#~ msgstr "Complexe, opt-in par le programmeur."

#, fuzzy
#~ msgid "Potential for use-after-free."
#~ msgstr "Potentiel d'utilisation-apr√®s-libre."

#, fuzzy
#~ msgid "Compiler-enforced and scope-based like Rust:"
#~ msgstr "Renforc√© par le compilateur et bas√© sur la port√©e comme Rust¬†:"

#, fuzzy
#~ msgid "Some upfront complexity."
#~ msgstr "Une certaine complexit√© initiale."

#, fuzzy
#~ msgid "Can reject valid programs."
#~ msgstr "Peut rejeter les programmes valides."

#, fuzzy
#~ msgid "The data was _moved_ from `s1` and `s1` is no longer accessible."
#~ msgstr ""
#~ "Les donn√©es ont √©t√© _d√©plac√©es_ de `s1` et `s1` n'est plus accessible."

#, fuzzy
#~ msgid "A small book library,"
#~ msgstr "Une petite biblioth√®que de livres,"

#, fuzzy
#~ msgid "Iterators and ownership (hard)."
#~ msgstr "It√©rateurs et propri√©t√© (difficile)."

#, fuzzy
#~ msgid "Simple struct which tracks health statistics."
#~ msgstr "Structure simple qui suit les statistiques de sant√©."

#, fuzzy
#~ msgid "Multiple structs and enums for a drawing library."
#~ msgstr ""
#~ "Plusieurs structures et √©num√©rations pour une biblioth√®que de dessins."

#, fuzzy
#~ msgid ""
#~ "If you need to mutate the data inside an `Rc`, you will need to wrap the "
#~ "data in a type such as [`Cell` or `RefCell`](../concurrency/shared_state/"
#~ "arc.md)."
#~ msgstr ""
#~ "Si vous avez besoin de muter les donn√©es √† l'int√©rieur d'un `Rc`, vous "
#~ "devrez envelopper les donn√©es dans un type tel que [`Cell` ou `RefCell`]"
#~ "(../concurrency/shared_state/arc.md)."

#, fuzzy
#~ msgid ""
#~ "Compare the different datatypes mentioned. `Box` enables (im)mutable "
#~ "borrows that are enforced at compile time. `RefCell` enables (im)mutable "
#~ "borrows that are enforced at run time and will panic if it fails at "
#~ "runtime."
#~ msgstr ""
#~ "Comparez les diff√©rents types de donn√©es mentionn√©s. `Box` active les "
#~ "emprunts (im)mutables qui sont appliqu√©s au moment de la compilation. "
#~ "`RefCell` active les emprunts (im)mutables qui sont appliqu√©s au moment "
#~ "de l'ex√©cution et paniqueront s'ils √©chouent au moment de l'ex√©cution."

#, fuzzy
#~ msgid "The module content can be omitted:"
#~ msgstr "Le contenu du module peut √™tre omis¬†:"

#, fuzzy
#~ msgid "The `garden` module content is found at:"
#~ msgstr "Le contenu du module \"jardin\" se trouve √†¬†:"

#, fuzzy
#~ msgid "`src/garden.rs` (modern Rust 2018 style)"
#~ msgstr "`src/garden.rs` (style Rust 2018 moderne)"

#, fuzzy
#~ msgid "`src/garden/mod.rs` (older Rust 2015 style)"
#~ msgstr "`src/garden/mod.rs` (ancien style Rust 2015)"

#, fuzzy
#~ msgid "Similarly, a `garden::vegetables` module can be found at:"
#~ msgstr "De m√™me, un module `garden::legumes` peut √™tre trouv√© √† :"

#, fuzzy
#~ msgid "`src/garden/vegetables.rs` (modern Rust 2018 style)"
#~ msgstr "`src/garden/vegetables.rs` (style Rust 2018 moderne)"

#, fuzzy
#~ msgid "`src/garden/vegetables/mod.rs` (older Rust 2015 style)"
#~ msgstr "`src/garden/vegetables/mod.rs` (ancien style Rust 2015)"

#, fuzzy
#~ msgid ""
#~ "Copy the following code to <https://play.rust-lang.org/> and implement "
#~ "the function:"
#~ msgstr ""
#~ "Copiez le code suivant sur <https://play.rust-lang.org/> et impl√©mentez "
#~ "le fonction:"
