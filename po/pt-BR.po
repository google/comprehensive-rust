msgid ""
msgstr ""
"Project-Id-Version: Comprehensive Rust ü¶Ä\n"
"POT-Creation-Date: 2024-01-09T17:24:45-08:00\n"
"PO-Revision-Date: 2023-08-25 09:32-0700\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: src/SUMMARY.md:3 src/index.md:1
msgid "Welcome to Comprehensive Rust ü¶Ä"
msgstr "Bem-vindo ao Comprehensive Rust ü¶Ä"

#: src/SUMMARY.md:5 src/running-the-course.md:1
msgid "Running the Course"
msgstr "Conduzindo o Curso"

#: src/SUMMARY.md:6 src/running-the-course/course-structure.md:1
msgid "Course Structure"
msgstr "Estrutura do Curso"

#: src/SUMMARY.md:7 src/running-the-course/keyboard-shortcuts.md:1
msgid "Keyboard Shortcuts"
msgstr "Atalhos de Teclado"

#: src/SUMMARY.md:8 src/running-the-course/translations.md:1
msgid "Translations"
msgstr "Tradu√ß√µes"

#: src/SUMMARY.md:9 src/cargo.md:1
msgid "Using Cargo"
msgstr "Usando o Cargo"

#: src/SUMMARY.md:10
msgid "Rust Ecosystem"
msgstr "O Ecossistema do Rust"

#: src/SUMMARY.md:11
msgid "Code Samples"
msgstr "Exemplos de C√≥digo"

#: src/SUMMARY.md:12
msgid "Running Cargo Locally"
msgstr "Executando o Cargo Localmente"

#: src/SUMMARY.md:16
msgid "Day 1: Morning"
msgstr "Dia 1: Manh√£"

#: src/SUMMARY.md:18 src/SUMMARY.md:44 src/SUMMARY.md:70 src/SUMMARY.md:93
#: src/SUMMARY.md:119 src/SUMMARY.md:138 src/SUMMARY.md:158 src/SUMMARY.md:184
#: src/SUMMARY.md:207 src/SUMMARY.md:244 src/SUMMARY.md:286 src/SUMMARY.md:337
msgid "Welcome"
msgstr "Bem-vindo"

#: src/SUMMARY.md:19 src/SUMMARY.md:21 src/hello-world.md:1
#: src/hello-world/hello-world.md:1
#, fuzzy
msgid "Hello, World"
msgstr "Ol√°, Mundo"

#: src/SUMMARY.md:20 src/hello-world/what-is-rust.md:1
msgid "What is Rust?"
msgstr "O que √© Rust?"

#: src/SUMMARY.md:22 src/hello-world/benefits.md:1
msgid "Benefits of Rust"
msgstr "Benef√≠cios do Rust"

#: src/SUMMARY.md:23 src/hello-world/playground.md:1
msgid "Playground"
msgstr "Playground"

#: src/SUMMARY.md:24 src/types-and-values.md:1
msgid "Types and Values"
msgstr "Tipos e Valores"

#: src/SUMMARY.md:25 src/types-and-values/variables.md:1
msgid "Variables"
msgstr "Vari√°veis"

#: src/SUMMARY.md:26 src/types-and-values/values.md:1
msgid "Values"
msgstr "Valores"

#: src/SUMMARY.md:27 src/types-and-values/arithmetic.md:1
msgid "Arithmetic"
msgstr "Aritim√©tica"

#: src/SUMMARY.md:28 src/types-and-values/strings.md:1
msgid "Strings"
msgstr "Strings"

#: src/SUMMARY.md:29 src/types-and-values/inference.md:1
msgid "Type Inference"
msgstr "Infer√™ncia de Tipo"

#: src/SUMMARY.md:30 src/types-and-values/exercise.md:1
msgid "Exercise: Fibonacci"
msgstr "Exerc√≠cio: Fibonacci"

#: src/SUMMARY.md:31 src/SUMMARY.md:40 src/SUMMARY.md:51 src/SUMMARY.md:56
#: src/SUMMARY.md:64 src/SUMMARY.md:75 src/SUMMARY.md:82 src/SUMMARY.md:89
#: src/SUMMARY.md:103 src/SUMMARY.md:113 src/SUMMARY.md:129 src/SUMMARY.md:134
#: src/SUMMARY.md:144 src/SUMMARY.md:152 src/SUMMARY.md:164 src/SUMMARY.md:171
#: src/SUMMARY.md:180 src/SUMMARY.md:192 src/SUMMARY.md:201
#: src/types-and-values/solution.md:1 src/control-flow-basics/solution.md:1
#: src/tuples-and-arrays/solution.md:1 src/references/solution.md:1
#: src/user-defined-types/solution.md:1 src/pattern-matching/solution.md:1
#: src/methods-and-traits/solution.md:1 src/generics/solution.md:1
#: src/std-types/solution.md:1 src/std-traits/solution.md:1
#: src/memory-management/solution.md:1 src/smart-pointers/solution.md:1
#: src/borrowing/solution.md:1 src/slices-and-lifetimes/solution.md:1
#: src/iterators/solution.md:1 src/modules/solution.md:1
#: src/testing/solution.md:1 src/error-handling/solution.md:1
#: src/unsafe-rust/solution.md:1
msgid "Solution"
msgstr "Solu√ß√£o"

#: src/SUMMARY.md:32 src/control-flow-basics.md:1
msgid "Control Flow Basics"
msgstr "Fundamentos de Controle de Fluxo"

#: src/SUMMARY.md:33 src/control-flow-basics/conditionals.md:1
msgid "Conditionals"
msgstr "Condicionais"

#: src/SUMMARY.md:34 src/control-flow-basics/loops.md:1
msgid "Loops"
msgstr "_Loops_"

#: src/SUMMARY.md:35 src/control-flow-basics/break-continue.md:1
msgid "`break` and `continue`"
msgstr "`break` e `continue`"

#: src/SUMMARY.md:36 src/control-flow-basics/blocks-and-scopes.md:1
msgid "Blocks and Scopes"
msgstr "Blocos e Escopos"

#: src/SUMMARY.md:37 src/control-flow-basics/functions.md:1
msgid "Functions"
msgstr "Fun√ß√µes"

#: src/SUMMARY.md:38 src/control-flow-basics/macros.md:1
msgid "Macros"
msgstr "Macros"

#: src/SUMMARY.md:39 src/control-flow-basics/exercise.md:1
msgid "Exercise: Collatz Sequence"
msgstr "Exerc√≠cio: Sequ√™ncia de Collatz"

#: src/SUMMARY.md:42
msgid "Day 1: Afternoon"
msgstr "Dia 1: Tarde"

#: src/SUMMARY.md:45 src/SUMMARY.md:46 src/tuples-and-arrays.md:1
#: src/tuples-and-arrays/tuples-and-arrays.md:1
msgid "Tuples and Arrays"
msgstr "Tuplas e Matrizes"

#: src/SUMMARY.md:47 src/tuples-and-arrays/iteration.md:1
msgid "Array Iteration"
msgstr "Iterator de Matrizes"

#: src/SUMMARY.md:48 src/SUMMARY.md:71 src/tuples-and-arrays/match.md:1
#: src/pattern-matching.md:1
msgid "Pattern Matching"
msgstr "Correspond√™ncia de Padr√µes"

#: src/SUMMARY.md:49 src/SUMMARY.md:72 src/tuples-and-arrays/destructuring.md:1
#: src/pattern-matching/destructuring.md:1
#, fuzzy
msgid "Destructuring"
msgstr "Desestruturando"

#: src/SUMMARY.md:50 src/tuples-and-arrays/exercise.md:1
msgid "Exercise: Nested Arrays"
msgstr "Exerc√≠cio: Matrizes Aninhadas"

#: src/SUMMARY.md:52 src/references.md:1
msgid "References"
msgstr "Refer√™ncias"

#: src/SUMMARY.md:53 src/references/shared.md:1
msgid "Shared References"
msgstr "Refer√™ncias Compartilhadas"

#: src/SUMMARY.md:54 src/references/exclusive.md:1
msgid "Exclusive References"
msgstr "Refer√™ncias Exclusivas"

#: src/SUMMARY.md:55 src/references/exercise.md:1
msgid "Exercise: Geometry"
msgstr "Exerc√≠cio: Geometria"

#: src/SUMMARY.md:57 src/user-defined-types.md:1
msgid "User-Defined Types"
msgstr "Tipos Definidos pelo Usu√°rio"

#: src/SUMMARY.md:58 src/user-defined-types/named-structs.md:1
msgid "Named Structs"
msgstr "_Structs_ (Estruturas) Nomeadas"

#: src/SUMMARY.md:59 src/user-defined-types/tuple-structs.md:5
msgid "Tuple Structs"
msgstr "_Structs_ de Tuplas"

#: src/SUMMARY.md:60 src/user-defined-types/enums.md:1
#: src/pattern-matching/destructuring.md:24
#: src/pattern-matching/destructuring.md:66
msgid "Enums"
msgstr "_Enums_ (Enumera√ß√µes)"

#: src/SUMMARY.md:61 src/user-defined-types/static-and-const.md:1
msgid "Static and Const"
msgstr "Vari√°veis Est√°ticas e Constantes"

#: src/SUMMARY.md:62 src/user-defined-types/aliases.md:1
msgid "Type Aliases"
msgstr "_Aliases_ (Apelidos) de Tipo"

#: src/SUMMARY.md:63 src/user-defined-types/exercise.md:1
msgid "Exercise: Elevator Events"
msgstr "Exerc√≠cio: Eventos de Elevador"

#: src/SUMMARY.md:68
msgid "Day 2: Morning"
msgstr "Dia 2: Manh√£"

#: src/SUMMARY.md:73 src/pattern-matching/let-control-flow.md:1
msgid "Let Control Flow"
msgstr "Controle de Fluxo _Let_"

#: src/SUMMARY.md:74 src/pattern-matching/exercise.md:1
msgid "Exercise: Expression Evaluation"
msgstr "Exerc√≠cio: Avalia√ß√£o de Express√µes"

#: src/SUMMARY.md:76 src/methods-and-traits.md:1
msgid "Methods and Traits"
msgstr "M√©todos e _Traits_"

#: src/SUMMARY.md:77 src/methods-and-traits/methods.md:1
msgid "Methods"
msgstr "M√©todos"

#: src/SUMMARY.md:78 src/methods-and-traits/traits.md:1
msgid "Traits"
msgstr "_Traits_"

#: src/SUMMARY.md:79 src/methods-and-traits/deriving.md:1
msgid "Deriving"
msgstr "Derivando"

#: src/SUMMARY.md:80 src/methods-and-traits/trait-objects.md:1
msgid "Trait Objects"
msgstr "Objetos _Trait_"

#: src/SUMMARY.md:81 src/methods-and-traits/exercise.md:1
msgid "Exercise: GUI Library"
msgstr "Exerc√≠cio: Biblioteca GUI"

#: src/SUMMARY.md:83 src/generics.md:1
msgid "Generics"
msgstr "Gen√©ricos (_Generics_)"

#: src/SUMMARY.md:84 src/generics/generic-functions.md:1
msgid "Generic Functions"
msgstr "Fun√ß√µes Gen√©ricas"

#: src/SUMMARY.md:85 src/generics/generic-data.md:1
msgid "Generic Data Types"
msgstr "Tipos de Dados Gen√©ricos"

#: src/SUMMARY.md:86 src/generics/trait-bounds.md:1
msgid "Trait Bounds"
msgstr "_Trait Bounds_ (Limites de Trait)"

#: src/SUMMARY.md:87 src/generics/impl-trait.md:1
msgid "`impl Trait`"
msgstr "Trait `impl`"

#: src/SUMMARY.md:88 src/generics/exercise.md:1
msgid "Exercise: Generic `min`"
msgstr "Exerc√≠cio: `min` Gen√©rico"

#: src/SUMMARY.md:91
msgid "Day 2: Afternoon"
msgstr "Dia 2: Tarde"

#: src/SUMMARY.md:94 src/std-types.md:1
msgid "Standard Library Types"
msgstr "Tipos da Biblioteca Padr√£o"

#: src/SUMMARY.md:95 src/std-types/std.md:1
msgid "Standard Library"
msgstr "Biblioteca Padr√£o"

#: src/SUMMARY.md:96 src/std-types/docs.md:1
msgid "Documentation"
msgstr "Documenta√ß√£o"

#: src/SUMMARY.md:97
msgid "`Option`"
msgstr "`Option`"

#: src/SUMMARY.md:98
msgid "`Result`"
msgstr "`Result`"

#: src/SUMMARY.md:99 src/android/interoperability/cpp/type-mapping.md:5
msgid "`String`"
msgstr "`String`"

#: src/SUMMARY.md:100 src/std-types/vec.md:1
msgid "`Vec`"
msgstr "`Vec`"

#: src/SUMMARY.md:101 src/std-types/hashmap.md:1 src/bare-metal/no_std.md:46
msgid "`HashMap`"
msgstr "`HashMap`"

#: src/SUMMARY.md:102 src/std-types/exercise.md:1
msgid "Exercise: Counter"
msgstr "Exerc√≠cio: Contador"

#: src/SUMMARY.md:104 src/std-traits.md:1
msgid "Standard Library Traits"
msgstr "_Traits_ da Biblioteca Padr√£o"

#: src/SUMMARY.md:105 src/std-traits/comparisons.md:1 src/async.md:17
msgid "Comparisons"
msgstr "Compara√ß√µes"

#: src/SUMMARY.md:106 src/std-traits/operators.md:1
msgid "Operators"
msgstr "Operadores"

#: src/SUMMARY.md:107 src/std-traits/from-and-into.md:1
msgid "`From` and `Into`"
msgstr "`From` e `Into`"

#: src/SUMMARY.md:108 src/std-traits/casting.md:1
msgid "Casting"
msgstr "Convers√µes"

#: src/SUMMARY.md:109 src/std-traits/read-and-write.md:1
msgid "`Read` and `Write`"
msgstr "`Read` e `Write`"

#: src/SUMMARY.md:110
msgid "`Default`, struct update syntax"
msgstr "`Default`, sintaxe de atualiza√ß√£o de _struct_"

#: src/SUMMARY.md:111 src/std-traits/closures.md:1
msgid "Closures"
msgstr "Closures"

#: src/SUMMARY.md:112 src/std-traits/exercise.md:1
msgid "Exercise: ROT13"
msgstr "Exerc√≠cio: ROT13"

#: src/SUMMARY.md:117
msgid "Day 3: Morning"
msgstr "Dia 3: Manh√£"

#: src/SUMMARY.md:120 src/memory-management.md:1
msgid "Memory Management"
msgstr "Gerenciamento de Mem√≥ria"

#: src/SUMMARY.md:121 src/memory-management/review.md:1
msgid "Review of Program Memory"
msgstr "Revis√£o da Mem√≥ria de Programa"

#: src/SUMMARY.md:122 src/memory-management/approaches.md:1
msgid "Approaches to Memory Management"
msgstr "Abordagens para Gerenciamento de Mem√≥ria"

#: src/SUMMARY.md:123 src/memory-management/ownership.md:1
msgid "Ownership"
msgstr "Ownership"

#: src/SUMMARY.md:124 src/memory-management/move.md:1
msgid "Move Semantics"
msgstr "Sem√¢ntica de Movimento"

#: src/SUMMARY.md:125
msgid "`Clone`"
msgstr "`Clone`"

#: src/SUMMARY.md:126 src/memory-management/copy-types.md:5
msgid "Copy Types"
msgstr "Tipos Copi√°veis"

#: src/SUMMARY.md:127
msgid "`Drop`"
msgstr "`Drop`"

#: src/SUMMARY.md:128 src/memory-management/exercise.md:1
msgid "Exercise: Builder Type"
msgstr "Exerc√≠cio: Tipo Builder"

#: src/SUMMARY.md:130 src/smart-pointers.md:1
msgid "Smart Pointers"
msgstr "Ponteiros Inteligentes (_Smart Pointers_)"

#: src/SUMMARY.md:131 src/smart-pointers/box.md:1
#: src/android/interoperability/cpp/type-mapping.md:9
msgid "`Box<T>`"
msgstr "`Box<T>`"

#: src/SUMMARY.md:132 src/smart-pointers/rc.md:1
msgid "`Rc`"
msgstr "`Rc`"

#: src/SUMMARY.md:133 src/smart-pointers/exercise.md:1
msgid "Exercise: Binary Tree"
msgstr "Exerc√≠cio: √Årvore Bin√°ria"

#: src/SUMMARY.md:136
msgid "Day 3: Afternoon"
msgstr "Dia 3: Tarde"

#: src/SUMMARY.md:139 src/borrowing.md:1
msgid "Borrowing"
msgstr "Empr√©stimo (_Borrowing_)"

#: src/SUMMARY.md:140 src/borrowing/shared.md:1
msgid "Borrowing a Value"
msgstr "Emprestando um Valor"

#: src/SUMMARY.md:141 src/borrowing/borrowck.md:1
msgid "Borrow Checking"
msgstr "Verifica√ß√£o de Empr√©stimo"

#: src/SUMMARY.md:142 src/borrowing/interior-mutability.md:5
msgid "Interior Mutability"
msgstr "Mutabilidade Interior"

#: src/SUMMARY.md:143 src/borrowing/exercise.md:1
msgid "Exercise: Health Statistics"
msgstr "Exerc√≠cio: Estat√≠sticas de Sa√∫de"

#: src/SUMMARY.md:145 src/slices-and-lifetimes.md:1
msgid "Slices and Lifetimes"
msgstr "_Slices_ (Fatias) e Tempos de Vida (_Lifetimes_)"

#: src/SUMMARY.md:146
msgid "Slices: `&[T]`"
msgstr "Slices: `&[T]`"

#: src/SUMMARY.md:147 src/slices-and-lifetimes/str.md:5
msgid "String References"
msgstr "Refer√™ncias de String"

#: src/SUMMARY.md:148 src/slices-and-lifetimes/lifetime-annotations.md:1
msgid "Lifetime Annotations"
msgstr "Anota√ß√µes de Tempo de Vida"

#: src/SUMMARY.md:149
msgid "Lifetime Elision"
msgstr "Elis√£o de Tempo de Vida"

#: src/SUMMARY.md:150
msgid "Struct Lifetimes"
msgstr "Tempos de Vida de _Structs_"

#: src/SUMMARY.md:151 src/slices-and-lifetimes/exercise.md:1
msgid "Exercise: Protobuf Parsing"
msgstr "Exerc√≠cio: An√°lise de Protobuf"

#: src/SUMMARY.md:156
msgid "Day 4: Morning"
msgstr "Dia 4: Manh√£"

#: src/SUMMARY.md:159 src/iterators.md:1
msgid "Iterators"
msgstr "Iteradores"

#: src/SUMMARY.md:160 src/iterators/iterator.md:5 src/bare-metal/no_std.md:28
msgid "`Iterator`"
msgstr "`Iterator`"

#: src/SUMMARY.md:161 src/iterators/intoiterator.md:1
msgid "`IntoIterator`"
msgstr "`IntoIterator`"

#: src/SUMMARY.md:162
msgid "`FromIterator`"
msgstr "`FromIterator`"

#: src/SUMMARY.md:163 src/iterators/exercise.md:1
msgid "Exercise: Iterator Method Chaining"
msgstr "Exerc√≠cio: Encadeamento de M√©todos de Iterador"

#: src/SUMMARY.md:165 src/SUMMARY.md:166 src/modules.md:1
#: src/modules/modules.md:1
msgid "Modules"
msgstr "M√≥dulos"

#: src/SUMMARY.md:167 src/modules/filesystem.md:1
msgid "Filesystem Hierarchy"
msgstr "Hierarquia do Sistema de Arquivos"

#: src/SUMMARY.md:168 src/modules/visibility.md:1
msgid "Visibility"
msgstr "Visibilidade"

#: src/SUMMARY.md:169
msgid "`use`, `super`, `self`"
msgstr "`use`, `super`, `self`"

#: src/SUMMARY.md:170 src/modules/exercise.md:1
msgid "Exercise: Modules for the GUI Library"
msgstr "Exerc√≠cio: M√≥dulos para a Biblioteca GUI"

#: src/SUMMARY.md:172 src/SUMMARY.md:253 src/testing.md:1
#: src/chromium/testing.md:1
msgid "Testing"
msgstr "Testando"

#: src/SUMMARY.md:173
msgid "Test Modules"
msgstr "M√≥dulos de Teste"

#: src/SUMMARY.md:174 src/testing/other.md:1
msgid "Other Types of Tests"
msgstr "Outros Tipos de Testes"

#: src/SUMMARY.md:175 src/SUMMARY.md:321 src/testing/useful-crates.md:1
msgid "Useful Crates"
msgstr "_Crates_ √öteis"

#: src/SUMMARY.md:176 src/testing/googletest.md:1
msgid "GoogleTest"
msgstr "GoogleTest"

#: src/SUMMARY.md:177 src/testing/mocking.md:1
msgid "Mocking"
msgstr "_Mocking_"

#: src/SUMMARY.md:178 src/testing/lints.md:1
msgid "Compiler Lints and Clippy"
msgstr "_Lints_ do Compilador e Clippy"

#: src/SUMMARY.md:179 src/testing/exercise.md:1
msgid "Exercise: Luhn Algorithm"
msgstr "Exerc√≠cio: Algoritmo de Luhn"

#: src/SUMMARY.md:182
msgid "Day 4: Afternoon"
msgstr "Dia 4: Tarde"

#: src/SUMMARY.md:185 src/error-handling.md:1
msgid "Error Handling"
msgstr "Tratamento de Erros"

#: src/SUMMARY.md:186 src/error-handling/panics.md:1
msgid "Panics"
msgstr "P√¢nicos (_Panics_)"

#: src/SUMMARY.md:187 src/error-handling/try.md:1
msgid "Try Operator"
msgstr "Operador _Try_"

#: src/SUMMARY.md:188 src/error-handling/try-conversions.md:1
msgid "Try Conversions"
msgstr "Convers√µes _Try_"

#: src/SUMMARY.md:189
msgid "`Error` Trait"
msgstr "Trait `Error`"

#: src/SUMMARY.md:190 src/error-handling/thiserror-and-anyhow.md:1
msgid "`thiserror` and `anyhow`"
msgstr "`thiserror` e `anyhow`"

#: src/SUMMARY.md:191
msgid "Exercise: Rewriting with `Result`"
msgstr "Exerc√≠cio: Reescrevendo com `Result`"

#: src/SUMMARY.md:193 src/unsafe-rust.md:1 src/unsafe-rust/unsafe.md:1
msgid "Unsafe Rust"
msgstr "Rust Inseguro (_Unsafe_)"

#: src/SUMMARY.md:194
msgid "Unsafe"
msgstr "Inseguro (_Unsafe_)"

#: src/SUMMARY.md:195 src/unsafe-rust/dereferencing.md:1
msgid "Dereferencing Raw Pointers"
msgstr "Desreferenciando Ponteiros Brutos"

#: src/SUMMARY.md:196 src/unsafe-rust/mutable-static.md:1
msgid "Mutable Static Variables"
msgstr "Vari√°veis Est√°ticas Mut√°veis"

#: src/SUMMARY.md:197 src/unsafe-rust/unions.md:1
msgid "Unions"
msgstr "Uni√µes"

#: src/SUMMARY.md:198 src/unsafe-rust/unsafe-functions.md:1
msgid "Unsafe Functions"
msgstr "Fun√ß√µes Inseguras"

#: src/SUMMARY.md:199
msgid "Unsafe Traits"
msgstr "Traits Inseguros"

#: src/SUMMARY.md:200
msgid "Exercise: FFI Wrapper"
msgstr "Exerc√≠cio: _Wrapper_ FFI"

#: src/SUMMARY.md:203 src/SUMMARY.md:327 src/bare-metal/android.md:1
msgid "Android"
msgstr "Android"

#: src/SUMMARY.md:208 src/SUMMARY.md:245 src/android/setup.md:1
#: src/chromium/setup.md:1
msgid "Setup"
msgstr "Configura√ß√£o"

#: src/SUMMARY.md:209 src/SUMMARY.md:248 src/android/build-rules.md:1
msgid "Build Rules"
msgstr "Regras de Compila√ß√£o (_Build Rules_)"

#: src/SUMMARY.md:210
msgid "Binary"
msgstr "Bin√°rios"

#: src/SUMMARY.md:211
msgid "Library"
msgstr "Bibliotecas"

#: src/SUMMARY.md:212 src/android/aidl.md:1
msgid "AIDL"
msgstr "AIDL"

#: src/SUMMARY.md:213
msgid "Interface"
msgstr "Interface"

#: src/SUMMARY.md:214
msgid "Implementation"
msgstr "Implementa√ß√£o"

#: src/SUMMARY.md:215
msgid "Server"
msgstr "Servidor"

#: src/SUMMARY.md:216 src/android/aidl/deploy.md:1
msgid "Deploy"
msgstr "Implantar"

#: src/SUMMARY.md:217
msgid "Client"
msgstr "Cliente"

#: src/SUMMARY.md:218 src/android/aidl/changing.md:1
msgid "Changing API"
msgstr "Alterando API"

#: src/SUMMARY.md:219 src/SUMMARY.md:317 src/android/logging.md:1
#: src/bare-metal/aps/logging.md:1
msgid "Logging"
msgstr "Gerando Registros (Log)"

#: src/SUMMARY.md:220 src/android/interoperability.md:1
msgid "Interoperability"
msgstr "Interoperabilidade"

#: src/SUMMARY.md:221
msgid "With C"
msgstr "Com C"

#: src/SUMMARY.md:222
msgid "Calling C with Bindgen"
msgstr "Chamando C com Bindgen"

#: src/SUMMARY.md:223
msgid "Calling Rust from C"
msgstr "Chamando Rust do C"

#: src/SUMMARY.md:224 src/android/interoperability/cpp.md:1
msgid "With C++"
msgstr "Com C++"

#: src/SUMMARY.md:225 src/android/interoperability/cpp/bridge.md:1
msgid "The Bridge Module"
msgstr "O M√≥dulo _Bridge_"

#: src/SUMMARY.md:226
msgid "Rust Bridge"
msgstr "_Bridge_ Rust "

#: src/SUMMARY.md:227 src/android/interoperability/cpp/generated-cpp.md:1
msgid "Generated C++"
msgstr "C++ Gerado"

#: src/SUMMARY.md:228
msgid "C++ Bridge"
msgstr "Bridge C++"

#: src/SUMMARY.md:229 src/android/interoperability/cpp/shared-types.md:1
msgid "Shared Types"
msgstr "Tipos Compartilhados"

#: src/SUMMARY.md:230 src/android/interoperability/cpp/shared-enums.md:1
msgid "Shared Enums"
msgstr "_Enums_ Compartilhados"

#: src/SUMMARY.md:231 src/android/interoperability/cpp/rust-result.md:1
msgid "Rust Error Handling"
msgstr "Tratamento de Erros do Rust"

#: src/SUMMARY.md:232 src/android/interoperability/cpp/cpp-exception.md:1
#, fuzzy
msgid "C++ Error Handling"
msgstr "Tratamento de Erros do C++"

#: src/SUMMARY.md:233 src/android/interoperability/cpp/type-mapping.md:1
msgid "Additional Types"
msgstr "Tipos Adicionais"

#: src/SUMMARY.md:234
msgid "Building for Android: C++"
msgstr "Compilando para Android: C++"

#: src/SUMMARY.md:235
msgid "Building for Android: Genrules"
msgstr "Compilando para Android: Genrules"

#: src/SUMMARY.md:236
msgid "Building for Android: Rust"
msgstr "Compilando para Android: Rust"

#: src/SUMMARY.md:237
msgid "With Java"
msgstr "Com Java"

#: src/SUMMARY.md:238 src/SUMMARY.md:300 src/SUMMARY.md:329 src/SUMMARY.md:351
#: src/SUMMARY.md:373 src/exercises/android/morning.md:1
#: src/exercises/bare-metal/morning.md:1
#: src/exercises/bare-metal/afternoon.md:1
#: src/exercises/concurrency/morning.md:1
#: src/exercises/concurrency/afternoon.md:1
msgid "Exercises"
msgstr "Exerc√≠cios"

#: src/SUMMARY.md:240
msgid "Chromium"
msgstr "Chromium"

#: src/SUMMARY.md:246 src/chromium/cargo.md:1
msgid "Comparing Chromium and Cargo Ecosystems"
msgstr "Comparando os Ecossistemas do Chromium e do Cargo"

#: src/SUMMARY.md:247
msgid "Policy"
msgstr "Pol√≠tica"

#: src/SUMMARY.md:249
msgid "Unsafe Code"
msgstr "C√≥digo Inseguro (_Unsafe_)"

#: src/SUMMARY.md:250 src/chromium/build-rules/depending.md:1
msgid "Depending on Rust Code from Chromium C++"
msgstr "Dependendo de C√≥digo Rust do C++ do Chromium"

#: src/SUMMARY.md:251 src/chromium/build-rules/vscode.md:1
msgid "Visual Studio Code"
msgstr "Visual Studio Code"

#: src/SUMMARY.md:252 src/SUMMARY.md:257 src/SUMMARY.md:265 src/SUMMARY.md:278
#: src/exercises/chromium/third-party.md:1
msgid "Exercise"
msgstr "Exerc√≠cio"

#: src/SUMMARY.md:254 src/chromium/testing/rust-gtest-interop.md:1
msgid "`rust_gtest_interop` Library"
msgstr "Biblioteca `rust_gtest_interop`"

#: src/SUMMARY.md:255 src/chromium/testing/build-gn.md:1
msgid "GN Rules for Rust Tests"
msgstr "Regras GN para Testes em Rust"

#: src/SUMMARY.md:256 src/chromium/testing/chromium-import-macro.md:1
msgid "`chromium::import!` Macro"
msgstr "Macro `chromium::import!`"

#: src/SUMMARY.md:258 src/chromium/interoperability-with-cpp.md:1
msgid "Interoperability with C++"
msgstr "Interoperabilidade com C++"

#: src/SUMMARY.md:259
#: src/chromium/interoperability-with-cpp/example-bindings.md:1
msgid "Example Bindings"
msgstr "Exemplo de _Bindings_"

#: src/SUMMARY.md:260
#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:1
msgid "Limitations of CXX"
msgstr "Limita√ß√µes do CXX"

#: src/SUMMARY.md:261
#: src/chromium/interoperability-with-cpp/error-handling.md:1
msgid "CXX Error Handling"
msgstr "Tratamento de Erros do CXX"

#: src/SUMMARY.md:262
msgid "Error Handling: QR Example"
msgstr "Tratamento de Erros: Exemplo de QR"

#: src/SUMMARY.md:263
msgid "Error Handling: PNG Example"
msgstr "Tratamento de Erros: Exemplo de PNG"

#: src/SUMMARY.md:264
msgid "Using CXX in Chromium"
msgstr "Usando CXX no Chromium"

#: src/SUMMARY.md:266 src/chromium/adding-third-party-crates.md:1
msgid "Adding Third Party Crates"
msgstr "Adicionando _Crates_ de Terceiros"

#: src/SUMMARY.md:267
msgid "Configuring Cargo.toml"
msgstr "Configurando Cargo.toml"

#: src/SUMMARY.md:268
#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md:1
msgid "Configuring `gnrt_config.toml`"
msgstr "Configurando `gnrt_config.toml`"

#: src/SUMMARY.md:269
#: src/chromium/adding-third-party-crates/downloading-crates.md:1
msgid "Downloading Crates"
msgstr "Baixando _Crates_"

#: src/SUMMARY.md:270
#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:1
msgid "Generating `gn` Build Rules"
msgstr "Gerando Regras de Compila√ß√£o `gn`"

#: src/SUMMARY.md:271
#: src/chromium/adding-third-party-crates/resolving-problems.md:1
msgid "Resolving Problems"
msgstr "Resolvendo Problemas"

#: src/SUMMARY.md:272
#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md:1
msgid "Build Scripts Which Generate Code"
msgstr "Scripts de Compila√ß√£o que Geram C√≥digo"

#: src/SUMMARY.md:273
#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md:1
msgid "Build Scripts Which Build C++ or Take Arbitrary Actions"
msgstr "Scripts de Compila√ß√£o que Compilam C++ ou Tomam A√ß√µes Arbitr√°rias"

#: src/SUMMARY.md:274
#: src/chromium/adding-third-party-crates/depending-on-a-crate.md:1
msgid "Depending on a Crate"
msgstr "Dependendo de um _Crate_"

#: src/SUMMARY.md:275
msgid "Reviews and Audits"
msgstr "Revis√µes e Auditorias"

#: src/SUMMARY.md:276
msgid "Checking into Chromium Source Code"
msgstr "Submetendo ao C√≥digo Fonte do Chromium"

#: src/SUMMARY.md:277
#: src/chromium/adding-third-party-crates/keeping-up-to-date.md:1
msgid "Keeping Crates Up to Date"
msgstr "Mantendo _Crates_ Atualizados"

#: src/SUMMARY.md:279
msgid "Bringing It Together - Exercise"
msgstr "Juntando Tudo - Exerc√≠cio"

#: src/SUMMARY.md:280 src/exercises/chromium/solutions.md:1
msgid "Exercise Solutions"
msgstr "Solu√ß√µes dos Exerc√≠cios"

#: src/SUMMARY.md:282
msgid "Bare Metal: Morning"
msgstr "Bare Metal: Manh√£"

#: src/SUMMARY.md:287 src/bare-metal/no_std.md:1
msgid "`no_std`"
msgstr "`no_std`"

#: src/SUMMARY.md:288
msgid "A Minimal Example"
msgstr "Um Pequeno Exemplo"

#: src/SUMMARY.md:289 src/bare-metal/no_std.md:12 src/bare-metal/alloc.md:1
msgid "`alloc`"
msgstr "`alloc`"

#: src/SUMMARY.md:290 src/bare-metal/microcontrollers.md:1
msgid "Microcontrollers"
msgstr "Microcontroladores"

#: src/SUMMARY.md:291 src/bare-metal/microcontrollers/mmio.md:1
msgid "Raw MMIO"
msgstr "MMIO Bruto"

#: src/SUMMARY.md:292
msgid "PACs"
msgstr "PACs"

#: src/SUMMARY.md:293
msgid "HAL Crates"
msgstr "_Crates_ HAL"

#: src/SUMMARY.md:294
msgid "Board Support Crates"
msgstr "_Crates_ de Suporte √† Placa"

#: src/SUMMARY.md:295
msgid "The Type State Pattern"
msgstr "O Padr√£o de Estado de Tipo"

#: src/SUMMARY.md:296 src/bare-metal/microcontrollers/embedded-hal.md:1
msgid "`embedded-hal`"
msgstr "`embedded-hal`"

#: src/SUMMARY.md:297 src/bare-metal/microcontrollers/probe-rs.md:1
msgid "`probe-rs` and `cargo-embed`"
msgstr "`probe-rs` e `cargo-embed`"

#: src/SUMMARY.md:298 src/bare-metal/microcontrollers/debugging.md:1
msgid "Debugging"
msgstr "Depura√ß√£o"

#: src/SUMMARY.md:299 src/SUMMARY.md:320
msgid "Other Projects"
msgstr "Outros Projetos"

#: src/SUMMARY.md:301 src/exercises/bare-metal/compass.md:1
#: src/exercises/bare-metal/solutions-morning.md:3
msgid "Compass"
msgstr "B√∫ssola"

#: src/SUMMARY.md:302 src/SUMMARY.md:331 src/SUMMARY.md:354 src/SUMMARY.md:376
msgid "Solutions"
msgstr "Solu√ß√µes"

#: src/SUMMARY.md:304
msgid "Bare Metal: Afternoon"
msgstr "Bare Metal: Tarde"

#: src/SUMMARY.md:306
msgid "Application Processors"
msgstr "Processadores de Aplica√ß√£o"

#: src/SUMMARY.md:307 src/bare-metal/aps/entry-point.md:1
msgid "Getting Ready to Rust"
msgstr "Preparando-se para o Rust"

#: src/SUMMARY.md:308
msgid "Inline Assembly"
msgstr "Assembly In-line"

#: src/SUMMARY.md:309
msgid "MMIO"
msgstr "MMIO"

#: src/SUMMARY.md:310
msgid "Let's Write a UART Driver"
msgstr "Vamos Escrever um Driver UART"

#: src/SUMMARY.md:311
msgid "More Traits"
msgstr "Mais _Traits_"

#: src/SUMMARY.md:312
msgid "A Better UART Driver"
msgstr "Um Driver UART Melhor"

#: src/SUMMARY.md:313 src/bare-metal/aps/better-uart/bitflags.md:1
msgid "Bitflags"
msgstr "_Bitflags_"

#: src/SUMMARY.md:314
msgid "Multiple Registers"
msgstr "Registradores M√∫ltiplos"

#: src/SUMMARY.md:315 src/bare-metal/aps/better-uart/driver.md:1
msgid "Driver"
msgstr "_Driver_"

#: src/SUMMARY.md:316 src/SUMMARY.md:318
msgid "Using It"
msgstr "Usando-o"

#: src/SUMMARY.md:319 src/bare-metal/aps/exceptions.md:1
msgid "Exceptions"
msgstr "Exce√ß√µes"

#: src/SUMMARY.md:322 src/bare-metal/useful-crates/zerocopy.md:1
msgid "`zerocopy`"
msgstr "`zerocopy`"

#: src/SUMMARY.md:323 src/bare-metal/useful-crates/aarch64-paging.md:1
msgid "`aarch64-paging`"
msgstr "`aarch64-paging`"

#: src/SUMMARY.md:324 src/bare-metal/useful-crates/buddy_system_allocator.md:1
msgid "`buddy_system_allocator`"
msgstr "`buddy_system_allocator`"

#: src/SUMMARY.md:325 src/bare-metal/useful-crates/tinyvec.md:1
msgid "`tinyvec`"
msgstr "`tinyvec`"

#: src/SUMMARY.md:326 src/bare-metal/useful-crates/spin.md:1
msgid "`spin`"
msgstr "`spin`"

#: src/SUMMARY.md:328
msgid "`vmbase`"
msgstr "`vmbase`"

#: src/SUMMARY.md:330
msgid "RTC Driver"
msgstr "Driver RTC"

#: src/SUMMARY.md:333
msgid "Concurrency: Morning"
msgstr "Concorr√™ncia: Manh√£"

#: src/SUMMARY.md:338 src/concurrency/threads.md:1
msgid "Threads"
msgstr "Threads"

#: src/SUMMARY.md:339 src/concurrency/scoped-threads.md:1
msgid "Scoped Threads"
msgstr "Threads com Escopo"

#: src/SUMMARY.md:340 src/concurrency/channels.md:1
msgid "Channels"
msgstr "Canais (_Channels_)"

#: src/SUMMARY.md:341 src/concurrency/channels/unbounded.md:1
msgid "Unbounded Channels"
msgstr "Canais Ilimitados"

#: src/SUMMARY.md:342 src/concurrency/channels/bounded.md:1
msgid "Bounded Channels"
msgstr "Canais Delimitados"

#: src/SUMMARY.md:343 src/concurrency/send-sync.md:1
msgid "`Send` and `Sync`"
msgstr "`Send` e `Sync`"

#: src/SUMMARY.md:344 src/concurrency/send-sync/send.md:1
msgid "`Send`"
msgstr "`Send`"

#: src/SUMMARY.md:345 src/concurrency/send-sync/sync.md:1
msgid "`Sync`"
msgstr "`Sync`"

#: src/SUMMARY.md:346 src/concurrency/send-sync/examples.md:1
msgid "Examples"
msgstr "Exemplos"

#: src/SUMMARY.md:347 src/concurrency/shared_state.md:1
msgid "Shared State"
msgstr "Estado Compartilhado"

#: src/SUMMARY.md:348 src/concurrency/shared_state/arc.md:1
msgid "`Arc`"
msgstr "`Arc`"

#: src/SUMMARY.md:349 src/concurrency/shared_state/mutex.md:1
msgid "`Mutex`"
msgstr "`Mutex`"

#: src/SUMMARY.md:350 src/memory-management/review.md:16
#: src/error-handling/try-conversions.md:23
#: src/concurrency/shared_state/example.md:1
msgid "Example"
msgstr "Exemplo"

#: src/SUMMARY.md:352 src/SUMMARY.md:374
#: src/exercises/concurrency/dining-philosophers.md:1
#: src/exercises/concurrency/solutions-morning.md:3
msgid "Dining Philosophers"
msgstr "Fil√≥sofos Jantando"

#: src/SUMMARY.md:353 src/exercises/concurrency/link-checker.md:1
msgid "Multi-threaded Link Checker"
msgstr "Verificador de Links Multi-Threads"

#: src/SUMMARY.md:356
msgid "Concurrency: Afternoon"
msgstr "Concorr√™ncia: Tarde"

#: src/SUMMARY.md:358
msgid "Async Basics"
msgstr "Fundamentos de _Async_ (Assincronicidade)"

#: src/SUMMARY.md:359 src/async/async-await.md:1
msgid "`async`/`await`"
msgstr "`async`/`await`"

#: src/SUMMARY.md:360 src/async/futures.md:1
msgid "Futures"
msgstr "_Futures_"

#: src/SUMMARY.md:361 src/async/runtimes.md:1
msgid "Runtimes"
msgstr "Tempos de Execu√ß√£o"

#: src/SUMMARY.md:362 src/async/runtimes/tokio.md:1
msgid "Tokio"
msgstr "Tokio"

#: src/SUMMARY.md:363 src/exercises/concurrency/link-checker.md:127
#: src/async/tasks.md:1 src/exercises/concurrency/chat-app.md:143
msgid "Tasks"
msgstr "Tarefas"

#: src/SUMMARY.md:364 src/async/channels.md:1
msgid "Async Channels"
msgstr "Canais Ass√≠ncronos"

#: src/SUMMARY.md:365
msgid "Control Flow"
msgstr "Fluxo de Controle"

#: src/SUMMARY.md:366 src/async/control-flow/join.md:1
msgid "Join"
msgstr "Join"

#: src/SUMMARY.md:367 src/async/control-flow/select.md:1
msgid "Select"
msgstr "Select"

#: src/SUMMARY.md:368
msgid "Pitfalls"
msgstr "Armadilhas"

#: src/SUMMARY.md:369
msgid "Blocking the Executor"
msgstr "Bloqueando o Executor"

#: src/SUMMARY.md:370 src/async/pitfalls/pin.md:1
msgid "`Pin`"
msgstr "`Pin`"

#: src/SUMMARY.md:371 src/async/pitfalls/async-traits.md:1
msgid "Async Traits"
msgstr "Traits Ass√≠ncronos"

#: src/SUMMARY.md:372 src/async/pitfalls/cancellation.md:1
msgid "Cancellation"
msgstr "Cancelamento"

#: src/SUMMARY.md:375 src/exercises/concurrency/chat-app.md:1
#: src/exercises/concurrency/solutions-afternoon.md:95
msgid "Broadcast Chat Application"
msgstr "Aplia√ß√£o de Chat de Transmiss√£o"

#: src/SUMMARY.md:378
msgid "Final Words"
msgstr "Palavras Finais"

#: src/SUMMARY.md:382 src/thanks.md:1
msgid "Thanks!"
msgstr "Obrigado!"

#: src/SUMMARY.md:383 src/glossary.md:1
msgid "Glossary"
msgstr "Gloss√°rio"

#: src/SUMMARY.md:384
msgid "Other Resources"
msgstr "Outros recursos"

#: src/SUMMARY.md:385 src/credits.md:1
msgid "Credits"
msgstr "Cr√©ditos"

#: src/index.md:3
msgid ""
"[![Build workflow](https://img.shields.io/github/actions/workflow/status/"
"google/comprehensive-rust/build.yml?style=flat-square)](https://github.com/"
"google/comprehensive-rust/actions/workflows/build.yml?query=branch%3Amain) [!"
"[GitHub contributors](https://img.shields.io/github/contributors/google/"
"comprehensive-rust?style=flat-square)](https://github.com/google/"
"comprehensive-rust/graphs/contributors) [![GitHub stars](https://img.shields."
"io/github/stars/google/comprehensive-rust?style=flat-square)](https://github."
"com/google/comprehensive-rust/stargazers)"
msgstr ""
"[![Workflow do GitHub](https://img.shields.io/github/actions/workflow/status/"
"google/comprehensive-rust/build.yml?style=flat-square)](https://github.com/"
"google/comprehensive-rust/actions/workflows/build.yml?query=branch%3Amain) [!"
"[Contribui√ß√µes no GitHub](https://img.shields.io/github/contributors/google/"
"comprehensive-rust?style=flat-square)](https://github.com/google/"
"comprehensive-rust/graphs/contributors) [![Estrelas no GitHub](https://img."
"shields.io/github/stars/google/comprehensive-rust?style=flat-square)]"
"(https://github.com/google/comprehensive-rust/stargazers)"

#: src/index.md:7
msgid ""
"This is a free Rust course developed by the Android team at Google. The "
"course covers the full spectrum of Rust, from basic syntax to advanced "
"topics like generics and error handling."
msgstr ""
"Este √© um curso gratuito de Rust desenvolvido pela equipe do Android no "
"Google. O curso abrange o espectro completo da linguagem, desde sintaxe "
"b√°sica at√© t√≥picos avan√ßados como 'generics' e tratamento de erros."

#: src/index.md:11
msgid ""
"The latest version of the course can be found at <https://google.github.io/"
"comprehensive-rust/>. If you are reading somewhere else, please check there "
"for updates."
msgstr ""
"A vers√£o mais recente do curso pode ser encontrada em <https://google.github."
"io/comprehensive-rust/>. Se voc√™ estiver lendo em outro lugar, por favor "
"verifique l√° por atualiza√ß√µes."

#: src/index.md:15
msgid ""
"The goal of the course is to teach you Rust. We assume you don't know "
"anything about Rust and hope to:"
msgstr ""
"O objetivo do curso √© ensinar Rust a voc√™. N√≥s assumimos que voc√™ n√£o saiba "
"nada sobre Rust e esperamos:"

#: src/index.md:18
msgid "Give you a comprehensive understanding of the Rust syntax and language."
msgstr ""
"Dar a voc√™ uma compreens√£o abrangente da linguagem e da sintaxe de Rust."

#: src/index.md:19
msgid "Enable you to modify existing programs and write new programs in Rust."
msgstr ""
"Permitir que voc√™ modifique programas existentes e escreva novos programas "
"em Rust."

#: src/index.md:20
msgid "Show you common Rust idioms."
msgstr "Demonstrar express√µes idiom√°ticas comuns de Rust."

#: src/index.md:22
msgid "We call the first four course days Rust Fundamentals."
msgstr "N√≥s chamamos os quatro primeiros dias do curso de Fundamentos do Rust."

#: src/index.md:24
msgid ""
"Building on this, you're invited to dive into one or more specialized topics:"
msgstr ""
"Em seguida, voc√™ est√° convidado(a) a mergulhar a fundo em um ou mais t√≥picos "
"especializados:"

#: src/index.md:26
msgid ""
"[Android](android.md): a half-day course on using Rust for Android platform "
"development (AOSP). This includes interoperability with C, C++, and Java."
msgstr ""
"[Android](android.md): um curso de meio dia sobre a utiliza√ß√£o de Rust no "
"desenvolvimento para a plataforma Android (AOSP). Isto inclui "
"interoperabilidade com C, C++ e Java."

#: src/index.md:28
msgid ""
"[Chromium](chromium.md): a half-day course on using Rust within Chromium "
"based browsers. This includes interoperability with C++ and how to include "
"third-party crates in Chromium."
msgstr ""
"[Chromium](chromium.md): um curso de meio dia sobre a utiliza√ß√£o de Rust em "
"navegadores baseados em Chromium. Isto inclui interoperabilidade com C++ e "
"como incluir _crates_ de terceiros no Chromium."

#: src/index.md:31
msgid ""
"[Bare-metal](bare-metal.md): a whole-day class on using Rust for bare-metal "
"(embedded) development. Both microcontrollers and application processors are "
"covered."
msgstr ""
"[Bare-metal](bare-metal.md): uma aula de um dia sobre a utiliza√ß√£o de Rust "
"para o desenvolvimento \"bare metal\" (sistema embarcado). Tanto micro-"
"controladores quanto processadores de aplica√ß√£o s√£o cobertos."

#: src/index.md:34
msgid ""
"[Concurrency](concurrency.md): a whole-day class on concurrency in Rust. We "
"cover both classical concurrency (preemptively scheduling using threads and "
"mutexes) and async/await concurrency (cooperative multitasking using "
"futures)."
msgstr ""
"[Concorr√™ncia](concurrency.md): uma aula de um dia inteiro sobre "
"concorr√™ncia em Rust. N√≥s cobrimos tanto concorr√™ncia cl√°ssica "
"(escalonamento preemptivo utilizando threads e mutexes) quanto concorr√™ncia "
"async/await (multitarefa cooperativa utilizando _futures_)."

#: src/index.md:38
msgid "Non-Goals"
msgstr "Fora do escopo"

#: src/index.md:40
msgid ""
"Rust is a large language and we won't be able to cover all of it in a few "
"days. Some non-goals of this course are:"
msgstr ""
"Rust √© uma linguagem extensa e n√£o conseguiremos cobrir tudo em poucos dias. "
"Alguns assuntos que n√£o s√£o objetivos deste curso s√£o:"

#: src/index.md:43
msgid ""
"Learning how to develop macros: please see [Chapter 19.5 in the Rust Book]"
"(https://doc.rust-lang.org/book/ch19-06-macros.html) and [Rust by Example]"
"(https://doc.rust-lang.org/rust-by-example/macros.html) instead."
msgstr ""
"Aprender a criar macros: por favor confira [Cap√≠tulo 19.5 em Rust Book]"
"(https://doc.rust-lang.org/book/ch19-06-macros.html) e [Rust by Example]"
"(https://doc.rust-lang.org/rust-by-example/macros.html) para esse fim."

#: src/index.md:48
msgid "Assumptions"
msgstr "Premissas"

#: src/index.md:50
msgid ""
"The course assumes that you already know how to program. Rust is a "
"statically-typed language and we will sometimes make comparisons with C and "
"C++ to better explain or contrast the Rust approach."
msgstr ""
"O curso pressup√µe que voc√™ j√° saiba programar. Rust √© uma linguagem de "
"tipagem est√°tica e ocasionalmente faremos compara√ß√µes com C e C++ para "
"melhor explicar ou contrastar a abordagem do Rust."

#: src/index.md:54
msgid ""
"If you know how to program in a dynamically-typed language such as Python or "
"JavaScript, then you will be able to follow along just fine too."
msgstr ""
"Se voc√™ sabe programar em uma linguagem de tipagem din√¢mica, como Python ou "
"JavaScript, ent√£o voc√™ tamb√©m ser√° capaz de acompanhar."

#: src/index.md:59
msgid ""
"This is an example of a _speaker note_. We will use these to add additional "
"information to the slides. This could be key points which the instructor "
"should cover as well as answers to typical questions which come up in class."
msgstr ""
"Este √© um exemplo de uma _nota do instrutor_. N√≥s as usaremos para adicionar "
"informa√ß√µes complementares aos slides. Elas podem ser tanto pontos-chave que "
"o instrutor deve cobrir quanto respostas a perguntas t√≠picas que surgem em "
"sala de aula."

#: src/running-the-course.md:3 src/running-the-course/course-structure.md:3
msgid "This page is for the course instructor."
msgstr "Esta p√°gina √© para o instrutor do curso."

#: src/running-the-course.md:5
msgid ""
"Here is a bit of background information about how we've been running the "
"course internally at Google."
msgstr ""
"Aqui est√£o algumas informa√ß√µes b√°sicas sobre como estamos conduzindo o curso "
"internamente no Google."

#: src/running-the-course.md:8
msgid ""
"We typically run classes from 9:00 am to 4:00 pm, with a 1 hour lunch break "
"in the middle. This leaves 3 hours for the morning class and 3 hours for the "
"afternoon class. Both sessions contain multiple breaks and time for students "
"to work on exercises."
msgstr ""
"Normalmente realizamos as aulas das 9h √†s 16h, com uma pausa de 1 hora para "
"o almo√ßo no meio. Isso deixa 3 horas para a aula da manh√£ e 3 horas para a "
"aula da tarde. Ambas as sess√µes cont√™m v√°rias pausas e tempo para os alunos "
"trabalharem nos exerc√≠cios."

#: src/running-the-course.md:13
msgid "Before you run the course, you will want to:"
msgstr "Antes de oferecer o curso, voc√™ precisa:"

#: src/running-the-course.md:15
msgid ""
"Make yourself familiar with the course material. We've included speaker "
"notes to help highlight the key points (please help us by contributing more "
"speaker notes!). When presenting, you should make sure to open the speaker "
"notes in a popup (click the link with a little arrow next to \"Speaker "
"Notes\"). This way you have a clean screen to present to the class."
msgstr ""
"Familiarize-se com o material do curso. Inclu√≠mos notas do instrutor para "
"ajudar a destacar os pontos principais (ajude-nos contribuindo com mais "
"notas!). Ao apresentar, certifique-se de abrir as notas do instrutor em um "
"pop-up (clique no link com uma pequena seta ao lado de \"Speaker Notes\" ou "
"\"Notas do Instrutor\"). Desta forma voc√™ tem uma tela limpa para apresentar "
"√† turma."

#: src/running-the-course.md:21
msgid ""
"Decide on the dates. Since the course takes four days, we recommend that you "
"schedule the days over two weeks. Course participants have said that they "
"find it helpful to have a gap in the course since it helps them process all "
"the information we give them."
msgstr ""
"Decida as datas. Como o curso leva pelo menos quatro dias completos, "
"recomendamos que voc√™ agende os dias ao longo de duas semanas. Os "
"participantes do curso disseram que eles acham √∫til ter um espa√ßo no curso, "
"pois os ajuda a processar todas as informa√ß√µes que lhes damos."

#: src/running-the-course.md:26
msgid ""
"Find a room large enough for your in-person participants. We recommend a "
"class size of 15-25 people. That's small enough that people are comfortable "
"asking questions --- it's also small enough that one instructor will have "
"time to answer the questions. Make sure the room has _desks_ for yourself "
"and for the students: you will all need to be able to sit and work with your "
"laptops. In particular, you will be doing a lot of live-coding as an "
"instructor, so a lectern won't be very helpful for you."
msgstr ""
"Encontre uma sala grande o suficiente para seus participantes presenciais. "
"Recomendamos turmas de 15 a 25 pessoas. Isso √© pequeno o suficiente para que "
"as pessoas se sintam confort√°veis fazendo perguntas --- tamb√©m √© pequeno o "
"suficiente para que um instrutor tenha tempo para responder √†s perguntas. "
"Certifique-se de que a sala tenha _mesas_ para voc√™ e para os alunos: todos "
"voc√™s precisam ser capazes de sentar e trabalhar com seus laptops. Em "
"particular, voc√™ far√° muita codifica√ß√£o ao vivo como instrutor, portanto, um "
"p√≥dio n√£o ser√° muito √∫til para voc√™."

#: src/running-the-course.md:34
msgid ""
"On the day of your course, show up to the room a little early to set things "
"up. We recommend presenting directly using `mdbook serve` running on your "
"laptop (see the [installation instructions](https://github.com/google/"
"comprehensive-rust#building)). This ensures optimal performance with no lag "
"as you change pages. Using your laptop will also allow you to fix typos as "
"you or the course participants spot them."
msgstr ""
"No dia do seu curso, chegue um pouco mais cedo na sala para acertar as "
"coisas. Recomendamos apresentar diretamente usando `mdbook serve` rodando em "
"seu laptop (consulte as [instru√ß√µes de instala√ß√£o](https://github.com/google/"
"comprehensive-rust#building)). Isso garante um desempenho ideal sem atrasos "
"conforme voc√™ muda de p√°gina. Usar seu laptop tamb√©m permitir√° que voc√™ "
"corrija erros de digita√ß√£o enquanto voc√™ ou os participantes do curso os "
"identificam."

#: src/running-the-course.md:40
msgid ""
"Let people solve the exercises by themselves or in small groups. We "
"typically spend 30-45 minutes on exercises in the morning and in the "
"afternoon (including time to review the solutions). Make sure to ask people "
"if they're stuck or if there is anything you can help with. When you see "
"that several people have the same problem, call it out to the class and "
"offer a solution, e.g., by showing people where to find the relevant "
"information in the standard library."
msgstr ""
"Deixe as pessoas resolverem os exerc√≠cios sozinhas ou em pequenos grupos. "
"Normalmente gastamos de 30 a 45 minutos em exerc√≠cios pela manh√£ e √† tarde "
"(incluindo o tempo para revisar as solu√ß√µes). Tenha certeza de perguntar √†s "
"pessoas se elas est√£o em dificuldades ou se h√° algo em que voc√™ possa "
"ajudar. Quando voc√™ vir que v√°rias pessoas t√™m o mesmo problema, chame a "
"turma e ofere√ßa uma solu√ß√£o, por exemplo, mostrando √†s pessoas onde "
"encontrar as informa√ß√µes relevantes na biblioteca padr√£o (\"standard "
"library\")."

#: src/running-the-course.md:48
msgid ""
"That is all, good luck running the course! We hope it will be as much fun "
"for you as it has been for us!"
msgstr ""
"Isso √© tudo, boa sorte no curso! Esperamos que seja t√£o divertido para voc√™ "
"como tem sido para n√≥s!"

#: src/running-the-course.md:51
msgid ""
"Please [provide feedback](https://github.com/google/comprehensive-rust/"
"discussions/86) afterwards so that we can keep improving the course. We "
"would love to hear what worked well for you and what can be made better. "
"Your students are also very welcome to [send us feedback](https://github.com/"
"google/comprehensive-rust/discussions/100)!"
msgstr ""
"Por favor, [d√™ seu feedback](https://github.com/google/comprehensive-rust/"
"discussions/86) depois para que possamos continuar melhorando o curso. "
"Adorar√≠amos saber o que funcionou bem para voc√™ e o que pode ser melhorado. "
"Seus alunos tamb√©m s√£o muito bem-vindos para [nos enviar feedback](https://"
"github.com/google/comprehensive-rust/discussions/100)!"

#: src/running-the-course/course-structure.md:5
msgid "Rust Fundamentals"
msgstr "Fundamentos do Rust"

#: src/running-the-course/course-structure.md:7
msgid ""
"The first four days make up [Rust Fundamentals](../welcome-day-1.md). The "
"days are fast paced and we cover a lot of ground!"
msgstr ""
"Os primeiros quatro dias comp√µem os [Fundamentos do Rust](../welcome-day-1."
"md). Os dias s√£o r√°pidos e cobrimos bastante counte√∫do!"

#: src/running-the-course/course-structure.md:10
msgid "{{%course outline Fundamentals}}"
msgstr "{{%course outline Fundamentals}}"

#: src/running-the-course/course-structure.md:12
msgid "Deep Dives"
msgstr "An√°lises Detalhadas"

#: src/running-the-course/course-structure.md:14
msgid ""
"In addition to the 4-day class on Rust Fundamentals, we cover some more "
"specialized topics:"
msgstr ""
"Al√©m do curso de 4 dias sobre Fundamentos de Rust, n√≥s abordamos alguns "
"t√≥picos mais especializados:"

#: src/running-the-course/course-structure.md:17
msgid "Rust in Android"
msgstr "Rust para Android"

#: src/running-the-course/course-structure.md:19
msgid ""
"The [Rust in Android](../android.md) deep dive is a half-day course on using "
"Rust for Android platform development. This includes interoperability with "
"C, C++, and Java."
msgstr ""
"O [Rust para Android](../android.md) √© um curso de meio dia sobre o uso de "
"Rust para o desenvolvimento na plataforma Android. Isso inclui "
"interoperabilidade com C, C++ e Java."

#: src/running-the-course/course-structure.md:23
msgid ""
"You will need an [AOSP checkout](https://source.android.com/docs/setup/"
"download/downloading). Make a checkout of the [course repository](https://"
"github.com/google/comprehensive-rust) on the same machine and move the `src/"
"android/` directory into the root of your AOSP checkout. This will ensure "
"that the Android build system sees the `Android.bp` files in `src/android/`."
msgstr ""
"Voc√™ precisar√° de um [_checkout_ do AOSP](https://source.android.com/docs/"
"setup/download/downloading). Fa√ßa um checkout do [reposit√≥rio do curso]"
"(https://github.com/google/comprehensive-rust) no mesmo computador e mova o "
"diret√≥rio `src/android/` para a raiz do seu checkout do AOSP. Isso garantir√° "
"que o sistema de compila√ß√£o do Android veja os arquivos `Android.bp` em `src/"
"android/`."

#: src/running-the-course/course-structure.md:28
msgid ""
"Ensure that `adb sync` works with your emulator or real device and pre-build "
"all Android examples using `src/android/build_all.sh`. Read the script to "
"see the commands it runs and make sure they work when you run them by hand."
msgstr ""
"Certifique-se de que `adb sync` funcione com seu emulador ou dispositivo "
"f√≠sico e pr√©-compile todos os exemplos do Android usando `src/android/"
"build_all.sh`. Leia o roteiro para ver os comandos executados e verifique se "
"eles funcionam quando voc√™ os executa manualmente."

#: src/running-the-course/course-structure.md:35
msgid "Rust in Chromium"
msgstr "Rust para Chromium"

#: src/running-the-course/course-structure.md:37
msgid ""
"The [Rust in Chromium](../chromium.md) deep dive is a half-day course on "
"using Rust as part of the Chromium browser. It includes using Rust in "
"Chromium's `gn` build system, bringing in third-party libraries (\"crates\") "
"and C++ interoperability."
msgstr ""
"O [Rust para Chromium](../chromium.md) √© um curso de meio dia sobre o uso de "
"Rust como parte do navegador Chromium. Ele inclui o uso de Rust no sistema "
"de compila√ß√£o `gn` do Chromium, a inclus√£o de bibliotecas de terceiros "
"(\"_crates_\") e interoperabilidade com C++."

#: src/running-the-course/course-structure.md:42
msgid ""
"You will need to be able to build Chromium --- a debug, component build is "
"[recommended](../chromium/setup.md) for speed but any build will work. "
"Ensure that you can run the Chromium browser that you've built."
msgstr ""
"Voc√™ precisar√° ser capaz de compilar o Chromium --- uma compila√ß√£o de "
"componentes de depura√ß√£o √© [recomendada](../chromium/setup.md) para "
"velocidade, mas qualquer compila√ß√£o funcionar√°. Certifique-se de que voc√™ "
"possa executar o navegador Chromium que voc√™ compilou."

#: src/running-the-course/course-structure.md:46
msgid "Bare-Metal Rust"
msgstr "Rust _Bare-Metal_"

#: src/running-the-course/course-structure.md:48
msgid ""
"The [Bare-Metal Rust](../bare-metal.md) deep dive is a full day class on "
"using Rust for bare-metal (embedded) development. Both microcontrollers and "
"application processors are covered."
msgstr ""
"O [Rust _Bare-Metal_](../bare-metal.md) √© uma aula de um dia inteiro sobre o "
"uso de Rust para o desenvolvimento _bare-metal_ (sistema embarcado). Tanto "
"micro-controladores quanto processadores de aplica√ß√£o s√£o cobertos."

#: src/running-the-course/course-structure.md:52
msgid ""
"For the microcontroller part, you will need to buy the [BBC micro:bit]"
"(https://microbit.org/) v2 development board ahead of time. Everybody will "
"need to install a number of packages as described on the [welcome page](../"
"bare-metal.md)."
msgstr ""
"Para a parte do micro-controlador, voc√™ precisar√° comprar a placa de "
"desenvolvimento [BBC micro:bit](https://microbit.org/) v2 com anteced√™ncia. "
"Todos precisar√£o instalar v√°rios pacotes, conforme descrito na [p√°gina "
"inicial](../bare-metal.md)."

#: src/running-the-course/course-structure.md:57
msgid "Concurrency in Rust"
msgstr "Concorr√™ncia em Rust"

#: src/running-the-course/course-structure.md:59
msgid ""
"The [Concurrency in Rust](../concurrency.md) deep dive is a full day class "
"on classical as well as `async`/`await` concurrency."
msgstr ""
"[Concorr√™ncia em Rust](../concurrency.md) √© uma aula de um dia sobre "
"concorr√™ncia cl√°ssica e concorr√™ncia `async`/`await`."

#: src/running-the-course/course-structure.md:62
msgid ""
"You will need a fresh crate set up and the dependencies downloaded and ready "
"to go. You can then copy/paste the examples into `src/main.rs` to experiment "
"with them:"
msgstr ""
"Voc√™ precisar√° de um novo _crate_ configurado e as depend√™ncias baixadas e "
"prontas para uso. Voc√™ pode ent√£o copiar/colar os exemplos para `src/main."
"rs` para experiment√°-los:"

#: src/running-the-course/course-structure.md:73
msgid "Format"
msgstr "Formato"

#: src/running-the-course/course-structure.md:75
msgid ""
"The course is meant to be very interactive and we recommend letting the "
"questions drive the exploration of Rust!"
msgstr ""
"O curso foi projetado para ser bastante interativo e recomendamos deixar as "
"perguntas conduzirem a explora√ß√£o do Rust!"

#: src/running-the-course/keyboard-shortcuts.md:3
msgid "There are several useful keyboard shortcuts in mdBook:"
msgstr "Existem v√°rios atalhos de teclado √∫teis no _mdBook_:"

#: src/running-the-course/keyboard-shortcuts.md:5
msgid "Arrow-Left"
msgstr "Seta para a esquerda"

#: src/running-the-course/keyboard-shortcuts.md:5
msgid ": Navigate to the previous page."
msgstr ": Vai para a p√°gina anterior."

#: src/running-the-course/keyboard-shortcuts.md:6
msgid "Arrow-Right"
msgstr "Seta para a direita"

#: src/running-the-course/keyboard-shortcuts.md:6
msgid ": Navigate to the next page."
msgstr ": Vai para a pr√≥xima p√°gina."

#: src/running-the-course/keyboard-shortcuts.md:7 src/cargo/code-samples.md:19
msgid "Ctrl + Enter"
msgstr "Ctrl + Enter"

#: src/running-the-course/keyboard-shortcuts.md:7
msgid ": Execute the code sample that has focus."
msgstr ": Executa o exemplo de c√≥digo que tem o foco."

#: src/running-the-course/keyboard-shortcuts.md:8
msgid "s"
msgstr "s"

#: src/running-the-course/keyboard-shortcuts.md:8
msgid ": Activate the search bar."
msgstr ": Ativa a barra de pesquisa."

#: src/running-the-course/translations.md:3
msgid ""
"The course has been translated into other languages by a set of wonderful "
"volunteers:"
msgstr ""
"O curso foi traduzido para outros idiomas por um grupo de volunt√°rios "
"maravilhosos:"

#: src/running-the-course/translations.md:6
msgid ""
"[Brazilian Portuguese](https://google.github.io/comprehensive-rust/pt-BR/) "
"by [@rastringer](https://github.com/rastringer), [@hugojacob](https://github."
"com/hugojacob), [@joaovicmendes](https://github.com/joaovicmendes), and "
"[@henrif75](https://github.com/henrif75)."
msgstr ""
"[Portugu√™s do Brasil](https://google.github.io/comprehensive-rust/pt-BR/) "
"por [@rastringer](https://github.com/rastringer), [@hugojacob](https://"
"github.com/hugojacob), [@joaovicmendes](https://github.com/joaovicmendes) e "
"[@henrif75](https://github.com/henrif75)."

#: src/running-the-course/translations.md:8
msgid ""
"[Chinese (Simplified)](https://google.github.io/comprehensive-rust/zh-CN/) "
"by [@suetfei](https://github.com/suetfei), [@wnghl](https://github.com/"
"wnghl), [@anlunx](https://github.com/anlunx), [@kongy](https://github.com/"
"kongy), [@noahdragon](https://github.com/noahdragon), [@superwhd](https://"
"github.com/superwhd), [@SketchK](https://github.com/SketchK), and [@nodmp]"
"(https://github.com/nodmp)."
msgstr ""
"[Chin√™s (Simplificado)](https://google.github.io/comprehensive-rust/zh-CN/) "
"por [@suetfei](https://github.com/suetfei), [@wnghl](https://github.com/"
"wnghl), [@anlunx](https://github.com/anlunx), [@kongy](https://github.com/"
"kongy), [@noahdragon](https://github.com/noahdragon), [@superwhd](https://"
"github.com/superwhd), [@SketchK](https://github.com/SketchK) e [@nodmp]"
"(https://github.com/nodmp)."

#: src/running-the-course/translations.md:10
msgid ""
"[Chinese (Traditional)](https://google.github.io/comprehensive-rust/zh-TW/) "
"by [@hueich](https://github.com/hueich), [@victorhsieh](https://github.com/"
"victorhsieh), [@mingyc](https://github.com/mingyc), [@kuanhungchen](https://"
"github.com/kuanhungchen), and [@johnathan79717](https://github.com/"
"johnathan79717)."
msgstr ""
"[Chin√™s (Tradicional)](https://google.github.io/comprehensive-rust/zh-TW/) "
"por [@hueich](https://github.com/hueich), [@victorhsieh](https://github.com/"
"victorhsieh), [@mingyc](https://github.com/mingyc), [@kuanhungchen](https://"
"github.com/kuanhungchen) e [@johnathan79717](https://github.com/"
"johnathan79717)."

#: src/running-the-course/translations.md:12
msgid ""
"[Korean](https://google.github.io/comprehensive-rust/ko/) by [@keispace]"
"(https://github.com/keispace), [@jiyongp](https://github.com/jiyongp), and "
"[@jooyunghan](https://github.com/jooyunghan)."
msgstr ""
"[Coreano](https://google.github.io/comprehensive-rust/ko/) por [@keispace]"
"(https://github.com/keispace), [@jiyongp](https://github.com/jiyongp) e "
"[@jooyunghan](https://github.com/jooyunghan)."

#: src/running-the-course/translations.md:13
msgid ""
"[Spanish](https://google.github.io/comprehensive-rust/es/) by [@deavid]"
"(https://github.com/deavid)."
msgstr ""
"[Espanhol](https://google.github.io/comprehensive-rust/es/) por [@deavid]"
"(https://github.com/deavid)."

#: src/running-the-course/translations.md:15
msgid ""
"Use the language picker in the top-right corner to switch between languages."
msgstr ""
"Use o seletor de idioma no canto superior direito para alternar entre os "
"idiomas."

#: src/running-the-course/translations.md:17
msgid "Incomplete Translations"
msgstr "Tradu√ß√µes Incompletas"

#: src/running-the-course/translations.md:19
msgid ""
"There is a large number of in-progress translations. We link to the most "
"recently updated translations:"
msgstr ""
"H√° um grande n√∫mero de tradu√ß√µes em andamento. N√≥s referenciamos as "
"tradu√ß√µes mais recentemente atualizadas:"

#: src/running-the-course/translations.md:22
msgid ""
"[Bengali](https://google.github.io/comprehensive-rust/bn/) by [@raselmandol]"
"(https://github.com/raselmandol)."
msgstr ""
"[Bengali](https://google.github.io/comprehensive-rust/bn/) por [@raselmandol]"
"(https://github.com/raselmandol)."

#: src/running-the-course/translations.md:23
msgid ""
"[French](https://google.github.io/comprehensive-rust/fr/) by [@KookaS]"
"(https://github.com/KookaS) and [@vcaen](https://github.com/vcaen)."
msgstr ""
"[Franc√™s](https://google.github.io/comprehensive-rust/fr/) por [@KookaS]"
"(https://github.com/KookaS) e [@vcaen](https://github.com/vcaen)."

#: src/running-the-course/translations.md:24
msgid ""
"[German](https://google.github.io/comprehensive-rust/de/) by [@Throvn]"
"(https://github.com/Throvn) and [@ronaldfw](https://github.com/ronaldfw)."
msgstr ""
"[Alem√£o](https://google.github.io/comprehensive-rust/de/) por [@Throvn]"
"(https://github.com/Throvn) e [@ronaldfw](https://github.com/ronaldfw)."

#: src/running-the-course/translations.md:25
msgid ""
"[Japanese](https://google.github.io/comprehensive-rust/ja/) by [@CoinEZ-JPN]"
"(https://github.com/CoinEZ) and [@momotaro1105](https://github.com/"
"momotaro1105)."
msgstr ""
"[Japon√™s](https://google.github.io/comprehensive-rust/ja/) por [@CoinEZ-JPN]"
"(https://github.com/CoinEZ) e [@momotaro1105](https://github.com/"
"momotaro1105)."

#: src/running-the-course/translations.md:27
msgid ""
"If you want to help with this effort, please see [our instructions](https://"
"github.com/google/comprehensive-rust/blob/main/TRANSLATIONS.md) for how to "
"get going. Translations are coordinated on the [issue tracker](https://"
"github.com/google/comprehensive-rust/issues/282)."
msgstr ""
"Se voc√™ quiser ajudar com essa iniciativa, consulte [nossas instru√ß√µes]"
"(https://github.com/google/comprehensive-rust/blob/main/TRANSLATIONS.md) "
"sobre como proceder. As tradu√ß√µes s√£o coordenadas no _[issue tracker]"
"(https://github.com/google/comprehensive-rust/issues/282)_."

#: src/cargo.md:3
msgid ""
"When you start reading about Rust, you will soon meet [Cargo](https://doc."
"rust-lang.org/cargo/), the standard tool used in the Rust ecosystem to build "
"and run Rust applications. Here we want to give a brief overview of what "
"Cargo is and how it fits into the wider ecosystem and how it fits into this "
"training."
msgstr ""
"Quando voc√™ come√ßar a ler sobre Rust, logo conhecer√° o [Cargo](https://doc."
"rust-lang.org/cargo/), a ferramenta padr√£o usada no ecossistema Rust para "
"criar e executar aplicativos Rust. Aqui n√≥s queremos dar uma breve vis√£o "
"geral do que √© o Cargo e como ele se encaixa no ecossistema mais amplo e "
"como ele se encaixa neste treinamento."

#: src/cargo.md:9
msgid "Installation"
msgstr "Instala√ß√£o"

#: src/cargo.md:11
msgid "**Please follow the instructions on <https://rustup.rs/>.**"
msgstr "**Por favor, siga as instru√ß√µes em <https://rustup.rs/>.**"

#: src/cargo.md:13
msgid ""
"This will give you the Cargo build tool (`cargo`) and the Rust compiler "
"(`rustc`). You will also get `rustup`, a command line utility that you can "
"use to install to different compiler versions."
msgstr ""
"Isso fornecer√° a ferramenta de compila√ß√£o Cargo (`cargo`) e o compilador "
"Rust (`rustc`). Voc√™ tamb√©m obter√° o `rustup`, um utilit√°rio de linha de "
"comando que voc√™ pode usar para instalar diferentes vers√µes do compilador."

#: src/cargo.md:17
msgid ""
"After installing Rust, you should configure your editor or IDE to work with "
"Rust. Most editors do this by talking to [rust-analyzer](https://rust-"
"analyzer.github.io/), which provides auto-completion and jump-to-definition "
"functionality for [VS Code](https://code.visualstudio.com/), [Emacs](https://"
"rust-analyzer.github.io/manual.html#emacs), [Vim/Neovim](https://rust-"
"analyzer.github.io/manual.html#vimneovim), and many others. There is also a "
"different IDE available called [RustRover](https://www.jetbrains.com/rust/)."
msgstr ""
"Depois de instalar o Rust, voc√™ deve configurar seu editor ou IDE para "
"trabalhar com o Rust. A maioria dos editores faz isso conversando com o "
"[rust-analyzer](https://rust-analyzer.github.io/), que fornece auto-"
"completar e funcionalidade de salto para defini√ß√£o para [VS Code](https://"
"code.visualstudio.com/), [Emacs](https://rust-analyzer.github.io/manual."
"html#emacs), [Vim/Neovim](https://rust-analyzer.github.io/manual."
"html#vimneovim) e muitos outros. Tamb√©m h√° um IDE diferente dispon√≠vel "
"chamado [RustRover](https://www.jetbrains.com/rust/)."

#: src/cargo.md:25
msgid ""
"On Debian/Ubuntu, you can also install Cargo, the Rust source and the [Rust "
"formatter](https://github.com/rust-lang/rustfmt) via `apt`. However, this "
"gets you an outdated rust version and may lead to unexpected behavior. The "
"command would be:"
msgstr ""
"No Debian/Ubuntu, voc√™ tamb√©m pode instalar o Cargo, o c√≥digo-fonte do Rust "
"e o [formatador Rust](https://github.com/rust-lang/rustfmt) com `apt`. "
"Entretanto, isto lhe fornece uma vers√£o desatualizada do Rust e pode levar a "
"comportamentos inesperados. O comando seria:"

#: src/cargo/rust-ecosystem.md:1
msgid "The Rust Ecosystem"
msgstr "O Ecossistema Rust"

#: src/cargo/rust-ecosystem.md:3
msgid ""
"The Rust ecosystem consists of a number of tools, of which the main ones are:"
msgstr ""
"O ecossistema Rust consiste em v√°rias ferramentas, das quais as principais "
"s√£o:"

#: src/cargo/rust-ecosystem.md:5
msgid ""
"`rustc`: the Rust compiler which turns `.rs` files into binaries and other "
"intermediate formats."
msgstr ""
"`rustc`: o compilador Rust que converte arquivos `.rs` em bin√°rios e outros "
"formatos intermedi√°rios."

#: src/cargo/rust-ecosystem.md:8
msgid ""
"`cargo`: the Rust dependency manager and build tool. Cargo knows how to "
"download dependencies, usually hosted on <https://crates.io>, and it will "
"pass them to `rustc` when building your project. Cargo also comes with a "
"built-in test runner which is used to execute unit tests."
msgstr ""
"`cargo`: o gerenciador de depend√™ncias e ferramenta de compila√ß√£o do Rust. O "
"Cargo sabe como baixar depend√™ncias, normalmente hospedadas em <https://"
"crates.io>, e as passar√° para o `rustc` quando compilar o seu projeto. O "
"Cargo tamb√©m vem com um gerenciador de testes embutido que √© utilizado para "
"a execu√ß√£o de testes unit√°rios."

#: src/cargo/rust-ecosystem.md:13
msgid ""
"`rustup`: the Rust toolchain installer and updater. This tool is used to "
"install and update `rustc` and `cargo` when new versions of Rust are "
"released. In addition, `rustup` can also download documentation for the "
"standard library. You can have multiple versions of Rust installed at once "
"and `rustup` will let you switch between them as needed."
msgstr ""
"`rustup`: o instalador e atualizador do conjunto de ferramentas do Rust. "
"Esta ferramenta √© utilizada para instalar e atualizar o `rustc` e o `cargo` "
"quando novas vers√µes do Rust forem lan√ßadas. Al√©m disso, `rustup` tamb√©m "
"pode baixar a documenta√ß√£o da biblioteca padr√£o. Voc√™ pode ter m√∫ltiplas "
"vers√µes do Rust instaladas ao mesmo tempo e `rustup` permitir√° que voc√™ "
"alterne entre elas conforme necess√°rio."

#: src/cargo/rust-ecosystem.md:21 src/hello-world/hello-world.md:25
#: src/tuples-and-arrays/tuples-and-arrays.md:38 src/references/exclusive.md:19
#: src/pattern-matching/destructuring.md:68 src/memory-management/move.md:152
#: src/error-handling/try.md:52 src/android/setup.md:18
#: src/concurrency/threads.md:30 src/async/async-await.md:25
msgid "Key points:"
msgstr "Pontos chave:"

#: src/cargo/rust-ecosystem.md:23
msgid ""
"Rust has a rapid release schedule with a new release coming out every six "
"weeks. New releases maintain backwards compatibility with old releases --- "
"plus they enable new functionality."
msgstr ""
"O Rust tem um cronograma de lan√ßamento r√°pido com um novo lan√ßamento saindo "
"a cada seis semanas. Novos lan√ßamentos mant√™m compatibilidade com vers√µes "
"anteriores ‚Äî al√©m disso, eles habilitam novas funcionalidades."

#: src/cargo/rust-ecosystem.md:27
msgid ""
"There are three release channels: \"stable\", \"beta\", and \"nightly\"."
msgstr ""
"Existem tr√™s canais de lan√ßamento: _\"stable\"_, _\"beta\"_ e _\"nightly\"_."

#: src/cargo/rust-ecosystem.md:29
msgid ""
"New features are being tested on \"nightly\", \"beta\" is what becomes "
"\"stable\" every six weeks."
msgstr ""
"Novos recursos est√£o sendo testados em \"nightly\", \"beta\" √© o que se "
"torna \"stable\" a cada seis semanas."

#: src/cargo/rust-ecosystem.md:32
msgid ""
"Dependencies can also be resolved from alternative [registries](https://doc."
"rust-lang.org/cargo/reference/registries.html), git, folders, and more."
msgstr ""
"Depend√™ncias tamb√©m podem ser resolvidas a partir de [registros](https://doc."
"rust-lang.org/cargo/reference/registries.html) alternativos, git, pastas, e "
"outros mais."

#: src/cargo/rust-ecosystem.md:35
msgid ""
"Rust also has [editions](https://doc.rust-lang.org/edition-guide/): the "
"current edition is Rust 2021. Previous editions were Rust 2015 and Rust 2018."
msgstr ""
"O Rust tamb√©m tem [edi√ß√µes](https://doc.rust-lang.org/edition-guide/): a "
"edi√ß√£o atual √© o Rust 2021. As edi√ß√µes anteriores foram o Rust 2015 e o Rust "
"2018."

#: src/cargo/rust-ecosystem.md:38
msgid ""
"The editions are allowed to make backwards incompatible changes to the "
"language."
msgstr ""
"As edi√ß√µes podem fazer altera√ß√µes incompat√≠veis com vers√µes anteriores da "
"linguagem."

#: src/cargo/rust-ecosystem.md:41
msgid ""
"To prevent breaking code, editions are opt-in: you select the edition for "
"your crate via the `Cargo.toml` file."
msgstr ""
"Para evitar quebra de c√≥digo, as edi√ß√µes s√£o opcionais: voc√™ seleciona a "
"edi√ß√£o para o seu _crate_ atrav√©s do arquivo `Cargo.toml`."

#: src/cargo/rust-ecosystem.md:44
msgid ""
"To avoid splitting the ecosystem, Rust compilers can mix code written for "
"different editions."
msgstr ""
"Para evitar a divis√£o do ecossistema, os compiladores Rust podem misturar "
"c√≥digo escrito para diferentes edi√ß√µes."

#: src/cargo/rust-ecosystem.md:47
msgid ""
"Mention that it is quite rare to ever use the compiler directly not through "
"`cargo` (most users never do)."
msgstr ""
"Mencione que √© muito raro usar o compilador diretamente, n√£o atrav√©s do "
"`cargo` (a maioria dos usu√°rios nunca o faz)."

#: src/cargo/rust-ecosystem.md:50
msgid ""
"It might be worth alluding that Cargo itself is an extremely powerful and "
"comprehensive tool. It is capable of many advanced features including but "
"not limited to:"
msgstr ""
"Pode valer a pena mencionar que o pr√≥prio Cargo √© uma ferramenta "
"extremamente poderosa e abrangente. Ele √© capaz de muitos recursos "
"avan√ßados, incluindo, entre outros:"

#: src/cargo/rust-ecosystem.md:53
msgid "Project/package structure"
msgstr "Estrutura do projeto/pacote"

#: src/cargo/rust-ecosystem.md:54
msgid "[workspaces](https://doc.rust-lang.org/cargo/reference/workspaces.html)"
msgstr ""
"[Espa√ßos de trabalho](https://doc.rust-lang.org/cargo/reference/workspaces."
"html)"

#: src/cargo/rust-ecosystem.md:55
msgid "Dev Dependencies and Runtime Dependency management/caching"
msgstr ""
"Depend√™ncias de desenvolvimento e gerenciamento/cache de depend√™ncia de "
"tempo de execu√ß√£o"

#: src/cargo/rust-ecosystem.md:56
msgid ""
"[build scripting](https://doc.rust-lang.org/cargo/reference/build-scripts."
"html)"
msgstr ""
"[Criar scripts](https://doc.rust-lang.org/cargo/reference/build-scripts.html)"

#: src/cargo/rust-ecosystem.md:57
msgid ""
"[global installation](https://doc.rust-lang.org/cargo/commands/cargo-install."
"html)"
msgstr ""
"[Instala√ß√£o global](https://doc.rust-lang.org/cargo/commands/cargo-install."
"html)"

#: src/cargo/rust-ecosystem.md:58
msgid ""
"It is also extensible with sub command plugins as well (such as [cargo "
"clippy](https://github.com/rust-lang/rust-clippy))."
msgstr ""
"Tamb√©m √© extens√≠vel com plugins de sub-comando (tais como [cargo clippy]"
"(https://github.com/rust-lang/rust-clippy))."

#: src/cargo/rust-ecosystem.md:60
msgid ""
"Read more from the [official Cargo Book](https://doc.rust-lang.org/cargo/)"
msgstr ""
"Leia mais no [Livro Oficial do Cargo](https://doc.rust-lang.org/cargo/)"

#: src/cargo/code-samples.md:1
msgid "Code Samples in This Training"
msgstr "Exemplos de C√≥digo neste Treinamento"

#: src/cargo/code-samples.md:3
msgid ""
"For this training, we will mostly explore the Rust language through examples "
"which can be executed through your browser. This makes the setup much easier "
"and ensures a consistent experience for everyone."
msgstr ""
"Para este treinamento, exploraremos principalmente a linguagem Rust por meio "
"de exemplos que podem ser executados atrav√©s do seu navegador. Isso torna a "
"instala√ß√£o muito mais f√°cil e garante uma experi√™ncia consistente para todos."

#: src/cargo/code-samples.md:7
msgid ""
"Installing Cargo is still encouraged: it will make it easier for you to do "
"the exercises. On the last day, we will do a larger exercise which shows you "
"how to work with dependencies and for that you need Cargo."
msgstr ""
"A instala√ß√£o do Cargo ainda assim √© incentivada: ser√° mais f√°cil para voc√™ "
"fazer os exerc√≠cios. No √∫ltimo dia, faremos um exerc√≠cio maior que mostra "
"como trabalhar com depend√™ncias e para isso voc√™ precisar√° do Cargo."

#: src/cargo/code-samples.md:11
msgid "The code blocks in this course are fully interactive:"
msgstr "Os blocos de c√≥digo neste curso s√£o totalmente interativos:"

#: src/cargo/code-samples.md:15 src/cargo/running-locally.md:46
msgid "\"Edit me!\""
msgstr "\"Edite-me!\""

#: src/cargo/code-samples.md:19
msgid "You can use "
msgstr "Voc√™ pode usar "

#: src/cargo/code-samples.md:19
msgid " to execute the code when focus is in the text box."
msgstr "para executar o c√≥digo quando o foco estiver na caixa de texto."

#: src/cargo/code-samples.md:24
msgid ""
"Most code samples are editable like shown above. A few code samples are not "
"editable for various reasons:"
msgstr ""
"A maioria dos exemplos de c√≥digo s√£o edit√°veis, como mostrado acima. Alguns "
"exemplos de c√≥digo n√£o s√£o edit√°veis por v√°rios motivos:"

#: src/cargo/code-samples.md:27
msgid ""
"The embedded playgrounds cannot execute unit tests. Copy-paste the code and "
"open it in the real Playground to demonstrate unit tests."
msgstr ""
"Os _playgrounds_ embutidos n√£o conseguem executar testes unit√°rios. Copie o "
"c√≥digo e cole no _Playground_ real para demonstrar os testes unit√°rios."

#: src/cargo/code-samples.md:30
msgid ""
"The embedded playgrounds lose their state the moment you navigate away from "
"the page! This is the reason that the students should solve the exercises "
"using a local Rust installation or via the Playground."
msgstr ""
"Os _playgrounds_ embutidos perdem seu estado no momento em que voc√™ navega "
"para outra p√°gina! Esta √© a raz√£o pela qual os alunos devem resolver os "
"exerc√≠cios usando uma instala√ß√£o do Rust local ou via Playground real."

#: src/cargo/running-locally.md:1
msgid "Running Code Locally with Cargo"
msgstr "Executando C√≥digo Localmente com o Cargo"

#: src/cargo/running-locally.md:3
msgid ""
"If you want to experiment with the code on your own system, then you will "
"need to first install Rust. Do this by following the [instructions in the "
"Rust Book](https://doc.rust-lang.org/book/ch01-01-installation.html). This "
"should give you a working `rustc` and `cargo`. At the time of writing, the "
"latest stable Rust release has these version numbers:"
msgstr ""
"Se voc√™ quiser experimentar o c√≥digo em seu pr√≥prio sistema, precisar√° "
"primeiro instalar o Rust. Fa√ßa isso seguindo as [instru√ß√µes no Livro do Rust]"
"(https://doc.rust-lang.org/book/ch01-01-installation.html). Isso deve "
"fornecer o `rustc` e o `cargo` funcionando. Quando este curso foi escrito, "
"as √∫ltimas vers√µes est√°veis do Rust s√£o:"

#: src/cargo/running-locally.md:16
msgid ""
"You can use any later version too since Rust maintains backwards "
"compatibility."
msgstr ""
"Voc√™ tamb√©m pode usar qualquer vers√£o posterior, pois o Rust mant√©m "
"compatibilidade com vers√µes anteriores."

#: src/cargo/running-locally.md:18
msgid ""
"With this in place, follow these steps to build a Rust binary from one of "
"the examples in this training:"
msgstr ""
"Com isso finalizado, siga estas etapas para criar um bin√°rio Rust a partir "
"de um dos exemplos deste treinamento:"

#: src/cargo/running-locally.md:21
msgid "Click the \"Copy to clipboard\" button on the example you want to copy."
msgstr ""
"Clique no bot√£o _\"Copy to clipboard\"_ (\"Copiar para a √°rea de "
"transfer√™ncia\") no exemplo que deseja copiar."

#: src/cargo/running-locally.md:23
msgid ""
"Use `cargo new exercise` to create a new `exercise/` directory for your code:"
msgstr ""
"Use `cargo new exercise` para criar um novo diret√≥rio `exercise/` para o seu "
"c√≥digo:"

#: src/cargo/running-locally.md:30
msgid ""
"Navigate into `exercise/` and use `cargo run` to build and run your binary:"
msgstr ""
"Navegue at√© `exercise/` e use `cargo run` para compilar e executar seu "
"bin√°rio:"

#: src/cargo/running-locally.md:41
msgid ""
"Replace the boiler-plate code in `src/main.rs` with your own code. For "
"example, using the example on the previous page, make `src/main.rs` look like"
msgstr ""
"Substitua o c√≥digo gerado em `src/main.rs` pelo seu pr√≥prio c√≥digo. Por "
"exemplo, usando o exemplo da p√°gina anterior, fa√ßa `src/main.rs` parecer como"

#: src/cargo/running-locally.md:50
msgid "Use `cargo run` to build and run your updated binary:"
msgstr "Use `cargo run` para compilar e executar seu bin√°rio atualizado:"

#: src/cargo/running-locally.md:60
msgid ""
"Use `cargo check` to quickly check your project for errors, use `cargo "
"build` to compile it without running it. You will find the output in `target/"
"debug/` for a normal debug build. Use `cargo build --release` to produce an "
"optimized release build in `target/release/`."
msgstr ""
"Use `cargo check` para verificar rapidamente se h√° erros em seu projeto, use "
"`cargo build` para compil√°-lo sem execut√°-lo. Voc√™ encontrar√° a sa√≠da em "
"`target/debug/` para uma compila√ß√£o de depura√ß√£o normal. Use `cargo build --"
"release` para produzir um bin√°rio otimizado em `target/release/`."

#: src/cargo/running-locally.md:65
msgid ""
"You can add dependencies for your project by editing `Cargo.toml`. When you "
"run `cargo` commands, it will automatically download and compile missing "
"dependencies for you."
msgstr ""
"Voc√™ pode adicionar depend√™ncias para seu projeto editando `Cargo.toml`. "
"Quando voc√™ execute os comandos `cargo`, ele ir√° baixar e compilar "
"automaticamente depend√™ncias para voc√™."

#: src/cargo/running-locally.md:73
msgid ""
"Try to encourage the class participants to install Cargo and use a local "
"editor. It will make their life easier since they will have a normal "
"development environment."
msgstr ""
"Tente encorajar os participantes do curso a instalar o Cargo e usar um "
"editor local. Isso facilitar√° a vida deles, pois eles ter√£o um ambiente "
"normal de desenvolvimento."

#: src/welcome-day-1.md:1
msgid "Welcome to Day 1"
msgstr "Bem-vindo ao Dia 1"

#: src/welcome-day-1.md:3
msgid ""
"This is the first day of Rust Fundamentals. We will cover a lot of ground "
"today:"
msgstr ""
"Este √© o primeiro dia de Fundamentos do Rust. N√≥s iremos cobrir muitos "
"pontos hoje:"

#: src/welcome-day-1.md:5
msgid ""
"Basic Rust syntax: variables, scalar and compound types, enums, structs, "
"references, functions, and methods."
msgstr ""
"Sintaxe Rust b√°sica: vari√°veis, tipos escalares e compostos, enums, structs, "
"refer√™ncias, fun√ß√µes e m√©todos."

#: src/welcome-day-1.md:7
msgid "Types and type inference."
msgstr "Tipos e Infer√™ncia de Tipo"

#: src/welcome-day-1.md:8
msgid "Control flow constructs: loops, conditionals, and so on."
msgstr ""
"Constru√ß√µes de fluxo de controle: loops, condicionais, e assim por diante."

#: src/welcome-day-1.md:9
msgid "User-defined types: structs and enums."
msgstr "Tipos definidos pelo usu√°rio: structs e enums."

#: src/welcome-day-1.md:10
msgid "Pattern matching: destructuring enums, structs, and arrays."
msgstr ""
"Correspond√™ncia de padr√µes: desestruturando enums, structs, e matrizes."

#: src/welcome-day-1.md:12 src/welcome-day-2.md:12 src/welcome-day-3.md:9
#: src/welcome-day-4.md:11
msgid "Schedule"
msgstr "Agenda"

#: src/welcome-day-1.md:14 src/welcome-day-1-afternoon.md:3
#: src/welcome-day-2.md:14 src/welcome-day-2-afternoon.md:3
#: src/welcome-day-3.md:11 src/welcome-day-3-afternoon.md:3
#: src/welcome-day-4.md:13 src/welcome-day-4-afternoon.md:3
msgid "{{%session outline}}"
msgstr "{{%session outline}}"

#: src/welcome-day-1.md:18
msgid "Please remind the students that:"
msgstr "Lembre aos alunos que:"

#: src/welcome-day-1.md:20
msgid ""
"They should ask questions when they get them, don't save them to the end."
msgstr "Eles devem fazer perguntas na hora, n√£o as guarde para o fim."

#: src/welcome-day-1.md:21
msgid ""
"The class is meant to be interactive and discussions are very much "
"encouraged!"
msgstr "A aula √© para ser interativa e as discuss√µes s√£o muito encorajadas!"

#: src/welcome-day-1.md:22
msgid ""
"As an instructor, you should try to keep the discussions relevant, i.e., "
"keep the discussions related to how Rust does things vs some other language. "
"It can be hard to find the right balance, but err on the side of allowing "
"discussions since they engage people much more than one-way communication."
msgstr ""
"Como instrutor, voc√™ deve tentar manter as discuss√µes relevantes, ou seja, "
"mantenha as discuss√µes relacionadas a como o Rust faz as coisas versus "
"alguma outra linguagem. Pode ser dif√≠cil encontrar o equil√≠brio certo, mas "
"procure permitir mais discuss√µes, uma vez que elas engajam as pessoas muito "
"mais do que uma comunica√ß√£o unidirecional."

#: src/welcome-day-1.md:26
msgid ""
"The questions will likely mean that we talk about things ahead of the slides."
msgstr ""
"As perguntas provavelmente far√£o com que falemos sobre coisas antes dos "
"slides."

#: src/welcome-day-1.md:27
msgid ""
"This is perfectly okay! Repetition is an important part of learning. "
"Remember that the slides are just a support and you are free to skip them as "
"you like."
msgstr ""
"Isso est√° perfeitamente OK! A repeti√ß√£o √© uma parte importante do "
"aprendizado. Lembre-se que os slides s√£o apenas um suporte e voc√™ est√° livre "
"para ignor√°-los quando quiser."

#: src/welcome-day-1.md:31
msgid ""
"The idea for the first day is to show the \"basic\" things in Rust that "
"should have immediate parallels in other languages. The more advanced parts "
"of Rust come on the subsequent days."
msgstr ""
"A ideia para o primeiro dia √© mostrar as coisas \"b√°sicas\" em Rust que "
"devem ter paralelos imediatos em outras linguagens. As partes mais avan√ßadas "
"do Rust v√™m nos dias subsequentes."

#: src/welcome-day-1.md:35
msgid ""
"If you're teaching this in a classroom, this is a good place to go over the "
"schedule. Note that there is an exercise at the end of each segment, "
"followed by a break. Plan to cover the exercise solution after the break. "
"The times listed here are a suggestion in order to keep the course on "
"schedule. Feel free to be flexible and adjust as necessary!"
msgstr ""
"Se voc√™ estiver ensinando isso em uma sala de aula, este √© um bom lugar para "
"revisar a agenda. Observe que h√° um exerc√≠cio no final de cada segmento, "
"seguido por uma pausa. Planeje cobrir a solu√ß√£o do exerc√≠cio ap√≥s a pausa. "
"Os hor√°rios listados aqui s√£o uma sugest√£o para manter o curso no hor√°rio. "
"Sinta-se √† vontade para ser flex√≠vel e ajustar conforme necess√°rio!"

#: src/hello-world.md:3 src/types-and-values.md:3 src/control-flow-basics.md:3
#: src/tuples-and-arrays.md:3 src/references.md:3 src/user-defined-types.md:3
#: src/pattern-matching.md:3 src/methods-and-traits.md:3 src/generics.md:3
#: src/std-types.md:3 src/std-traits.md:3 src/memory-management.md:3
#: src/smart-pointers.md:3 src/borrowing.md:3 src/slices-and-lifetimes.md:3
#: src/iterators.md:3 src/modules.md:3 src/testing.md:3 src/error-handling.md:3
#: src/unsafe-rust.md:3
msgid "{{%segment outline}}"
msgstr "{{%segment outline}}"

#: src/hello-world/what-is-rust.md:3
msgid ""
"Rust is a new programming language which had its [1.0 release in 2015]"
"(https://blog.rust-lang.org/2015/05/15/Rust-1.0.html):"
msgstr ""
"Rust √© uma nova linguagem de programa√ß√£o que teve sua [vers√£o 1.0 lan√ßada em "
"2015](https://blog.rust-lang.org/2015/05/15/Rust-1.0.html):"

#: src/hello-world/what-is-rust.md:5
msgid "Rust is a statically compiled language in a similar role as C++"
msgstr ""
"Rust √© uma linguagem compilada estaticamente e tem um papel semelhante ao C++"

#: src/hello-world/what-is-rust.md:6
msgid "`rustc` uses LLVM as its backend."
msgstr "`rustc` usa o LLVM como seu backend."

#: src/hello-world/what-is-rust.md:7
msgid ""
"Rust supports many [platforms and architectures](https://doc.rust-lang.org/"
"nightly/rustc/platform-support.html):"
msgstr ""
"Rust suporta muitas [plataformas e arquiteturas](https://doc.rust-lang.org/"
"nightly/rustc/platform-support.html):"

#: src/hello-world/what-is-rust.md:9
msgid "x86, ARM, WebAssembly, ..."
msgstr "x86, ARM, WebAssembly, ..."

#: src/hello-world/what-is-rust.md:10
msgid "Linux, Mac, Windows, ..."
msgstr "Linux, Mac, Windows, ..."

#: src/hello-world/what-is-rust.md:11
msgid "Rust is used for a wide range of devices:"
msgstr "Rust √© usado em uma ampla gama de dispositivos:"

#: src/hello-world/what-is-rust.md:12
msgid "firmware and boot loaders,"
msgstr "firmware e carregadores de boot,"

#: src/hello-world/what-is-rust.md:13
msgid "smart displays,"
msgstr "smart displays,"

#: src/hello-world/what-is-rust.md:14
msgid "mobile phones,"
msgstr "celulares,"

#: src/hello-world/what-is-rust.md:15
msgid "desktops,"
msgstr "desktops,"

#: src/hello-world/what-is-rust.md:16
msgid "servers."
msgstr "servidores."

#: src/hello-world/what-is-rust.md:20
msgid "Rust fits in the same area as C++:"
msgstr "Rust se encaixa na mesma √°rea que C++:"

#: src/hello-world/what-is-rust.md:22
msgid "High flexibility."
msgstr "Alta flexibilidade."

#: src/hello-world/what-is-rust.md:23
msgid "High level of control."
msgstr "Alto n√≠vel de controle."

#: src/hello-world/what-is-rust.md:24
msgid ""
"Can be scaled down to very constrained devices such as microcontrollers."
msgstr ""
"Pode ser reduzido para dispositivos com menor poder computacional, tais como "
"microcontroladores."

#: src/hello-world/what-is-rust.md:25
msgid "Has no runtime or garbage collection."
msgstr "N√£o possui _runtime_ ou coletor de lixo (_garbage collection_)."

#: src/hello-world/what-is-rust.md:26
msgid "Focuses on reliability and safety without sacrificing performance."
msgstr ""
"Concentra-se em confiabilidade e seguran√ßa sem sacrificar o desempenho."

#: src/hello-world/hello-world.md:3
msgid ""
"Let us jump into the simplest possible Rust program, a classic Hello World "
"program:"
msgstr ""
"Vamos pular para o programa em Rust mais simples poss√≠vel, o cl√°ssico \"Ol√° "
"Mundo\":"

#: src/hello-world/hello-world.md:8
msgid "\"Hello üåç!\""
msgstr "\"Hello üåç!\""

#: src/hello-world/hello-world.md:12
msgid "What you see:"
msgstr "O que voc√™ v√™:"

#: src/hello-world/hello-world.md:14
msgid "Functions are introduced with `fn`."
msgstr "Fun√ß√µes s√£o introduzidas com `fn`."

#: src/hello-world/hello-world.md:15
msgid "Blocks are delimited by curly braces like in C and C++."
msgstr "Os blocos s√£o delimitados por chaves como em C e C++."

#: src/hello-world/hello-world.md:16
msgid "The `main` function is the entry point of the program."
msgstr "A fun√ß√£o `main` √© o ponto de entrada do programa."

#: src/hello-world/hello-world.md:17
msgid "Rust has hygienic macros, `println!` is an example of this."
msgstr "Rust tem macros \"higi√™nicas\", `println!` √© um exemplo disso."

#: src/hello-world/hello-world.md:18
msgid "Rust strings are UTF-8 encoded and can contain any Unicode character."
msgstr ""
"As strings Rust s√£o codificadas em UTF-8 e podem conter qualquer caractere "
"Unicode."

#: src/hello-world/hello-world.md:22
msgid ""
"This slide tries to make the students comfortable with Rust code. They will "
"see a ton of it over the next four days so we start small with something "
"familiar."
msgstr ""
"Este slide tenta deixar os alunos familiarizados com o c√≥digo em Rust. Eles "
"ir√£o ver bastante conte√∫do nos pr√≥ximos quatro dias, ent√£o come√ßamos devagar "
"com algo familiar."

#: src/hello-world/hello-world.md:27
msgid ""
"Rust is very much like other languages in the C/C++/Java tradition. It is "
"imperative and it doesn't try to reinvent things unless absolutely necessary."
msgstr ""
"Rust √© muito parecido com outras linguagens na tradi√ß√£o C/C++/Java. √â "
"imperativo (n√£o funcional) e n√£o tenta reinventar as coisas, a menos que "
"seja absolutamente necess√°rio."

#: src/hello-world/hello-world.md:30
msgid "Rust is modern with full support for things like Unicode."
msgstr "Rust √© moderno com suporte total para coisas como Unicode."

#: src/hello-world/hello-world.md:32
msgid ""
"Rust uses macros for situations where you want to have a variable number of "
"arguments (no function [overloading](../control-flow-basics/functions.md))."
msgstr ""
"Rust usa macros para situa√ß√µes em que voc√™ deseja ter um n√∫mero vari√°vel de "
"argumentos (sem [sobrecarga de fun√ß√£o](../control-flow-basics/functions.md))."

#: src/hello-world/hello-world.md:35
msgid ""
"Macros being 'hygienic' means they don't accidentally capture identifiers "
"from the scope they are used in. Rust macros are actually only [partially "
"hygienic](https://veykril.github.io/tlborm/decl-macros/minutiae/hygiene."
"html)."
msgstr ""
"Macros \"higi√™nicas\" significam que elas n√£o capturam acidentalmente "
"identificadores do escopo em que s√£o usadas. As macros em Rust s√£o, na "
"verdade, apenas [parcialmente \"higi√™nicas\"](https://veykril.github.io/"
"tlborm/decl-macros/minutiae/hygiene.html)."

#: src/hello-world/hello-world.md:39
msgid ""
"Rust is multi-paradigm. For example, it has powerful [object-oriented "
"programming features](https://doc.rust-lang.org/book/ch17-00-oop.html), and, "
"while it is not a functional language, it includes a range of [functional "
"concepts](https://doc.rust-lang.org/book/ch13-00-functional-features.html)."
msgstr ""
"Rust √© multi-paradigma. Por exemplo, ele possui [funcionalidades de "
"programa√ß√£o orientada √† objetos](https://doc.rust-lang.org/book/ch17-00-oop."
"html) poderosas, e, embora n√£o seja uma linguagem _funcional_, inclui uma "
"s√©rie de [conceitos _funcionais_](https://doc.rust-lang.org/book/ch13-00-"
"functional-features.html)."

#: src/hello-world/benefits.md:3
msgid "Some unique selling points of Rust:"
msgstr "Alguns pontos exclusivos do Rust:"

#: src/hello-world/benefits.md:5
msgid ""
"_Compile time memory safety_ - whole classes of memory bugs are prevented at "
"compile time"
msgstr ""
"_Seguran√ßa de mem√≥ria em tempo de compila√ß√£o_ - classes inteiras de bugs de "
"mem√≥ria s√£o prevenidas em tempo de compila√ß√£o"

#: src/hello-world/benefits.md:7
msgid "No uninitialized variables."
msgstr "Sem vari√°veis n√£o inicializadas."

#: src/hello-world/benefits.md:8
msgid "No double-frees."
msgstr "Sem _double-frees_."

#: src/hello-world/benefits.md:9
msgid "No use-after-free."
msgstr "Sem _use-after-free_."

#: src/hello-world/benefits.md:10
msgid "No `NULL` pointers."
msgstr "Sem ponteiros `NULL`."

#: src/hello-world/benefits.md:11
msgid "No forgotten locked mutexes."
msgstr "Sem _mutexes_ bloqueados esquecidos."

#: src/hello-world/benefits.md:12
msgid "No data races between threads."
msgstr "Sem concorr√™ncia de dados entre _threads_."

#: src/hello-world/benefits.md:13
msgid "No iterator invalidation."
msgstr "Sem invalida√ß√£o de iteradores."

#: src/hello-world/benefits.md:15
msgid ""
"_No undefined runtime behavior_ - what a Rust statement does is never left "
"unspecified"
msgstr ""
"_Sem comportamento indefinido em tempo de execu√ß√£o_ - o que uma instru√ß√£o "
"Rust executa nunca √© deixado indefinido"

#: src/hello-world/benefits.md:17
msgid "Array access is bounds checked."
msgstr "O acesso a matrizes tem limites verificados."

#: src/hello-world/benefits.md:18
msgid "Integer overflow is defined (panic or wrap-around)."
msgstr "Estouro de n√∫meros inteiros √© definido (\"p√¢nico\" ou _wrap-around_)."

#: src/hello-world/benefits.md:20
msgid ""
"_Modern language features_ - as expressive and ergonomic as higher-level "
"languages"
msgstr ""
"_Recursos de linguagem modernos_ - t√£o expressivos e ergon√¥micos quanto "
"linguagens de alto n√≠vel"

#: src/hello-world/benefits.md:22
msgid "Enums and pattern matching."
msgstr "Enums e correspond√™ncia de padr√µes."

#: src/hello-world/benefits.md:23
msgid "Generics."
msgstr "Gen√©ricos (_Generics_)."

#: src/hello-world/benefits.md:24
msgid "No overhead FFI."
msgstr "FFI sem _overhead_."

#: src/hello-world/benefits.md:25
msgid "Zero-cost abstractions."
msgstr "Abstra√ß√µes de custo zero."

#: src/hello-world/benefits.md:26
msgid "Great compiler errors."
msgstr "Excelentes mensagens de erro do compilador."

#: src/hello-world/benefits.md:27
msgid "Built-in dependency manager."
msgstr "Gerenciador de depend√™ncias integrado."

#: src/hello-world/benefits.md:28
msgid "Built-in support for testing."
msgstr "Suporte integrado para testes."

#: src/hello-world/benefits.md:29
msgid "Excellent Language Server Protocol support."
msgstr "Excelente suporte ao protocolo de servidor de linguagem (LSP)."

#: src/hello-world/benefits.md:33
msgid ""
"Do not spend much time here. All of these points will be covered in more "
"depth later."
msgstr ""
"N√£o gaste muito tempo aqui. Todos esses pontos ser√£o abordados em maior "
"profundidade mais tarde."

#: src/hello-world/benefits.md:36
msgid ""
"Make sure to ask the class which languages they have experience with. "
"Depending on the answer you can highlight different features of Rust:"
msgstr ""
"Certifique-se de perguntar √† classe com quais linguagens de programa√ß√£o eles "
"t√™m experi√™ncia. Dependendo da resposta voc√™ pode destacar diferentes "
"caracter√≠sticas do Rust:"

#: src/hello-world/benefits.md:39
msgid ""
"Experience with C or C++: Rust eliminates a whole class of _runtime errors_ "
"via the borrow checker. You get performance like in C and C++, but you don't "
"have the memory unsafety issues. In addition, you get a modern language with "
"constructs like pattern matching and built-in dependency management."
msgstr ""
"Experi√™ncia com C ou C++: Rust elimina toda uma classe de _erros em tempo de "
"execu√ß√£o_ atrav√©s do verificador de empr√©stimos (_borrow checker_). Voc√™ "
"obt√©m desempenho como em C e C++, mas sem os problemas de inseguran√ßa de "
"mem√≥ria. Al√©m disso, voc√™ tem uma linguagem com funcionalidades modernas "
"como correspond√™ncia de padr√µes e gerenciamento de depend√™ncia integrado."

#: src/hello-world/benefits.md:44
msgid ""
"Experience with Java, Go, Python, JavaScript...: You get the same memory "
"safety as in those languages, plus a similar high-level language feeling. In "
"addition you get fast and predictable performance like C and C++ (no garbage "
"collector) as well as access to low-level hardware (should you need it)"
msgstr ""
"Experi√™ncia com Java, Go, Python, JavaScript...: Voc√™ tem a mesma seguran√ßa "
"de mem√≥ria como nessas linguagens, al√©m de uma semelhan√ßa com linguagens de "
"alto n√≠vel. Al√©m disso voc√™ obt√©m desempenho r√°pido e previs√≠vel como C e C+"
"+ (sem coletor de lixo ou \"_garbage collector_\") bem como acesso a "
"hardware de baixo n√≠vel (caso voc√™ precise)"

#: src/hello-world/playground.md:3
msgid ""
"The [Rust Playground](https://play.rust-lang.org/) provides an easy way to "
"run short Rust programs, and is the basis for the examples and exercises in "
"this course. Try running the \"hello-world\" program it starts with. It "
"comes with a few handy features:"
msgstr ""

#: src/hello-world/playground.md:8
msgid ""
"Under \"Tools\", use the `rustfmt` option to format your code in the "
"\"standard\" way."
msgstr ""
"Em \"Tools\", use a op√ß√£o `rustfmt` para formatar seu c√≥digo da maneira "
"\"padr√£o\"."

#: src/hello-world/playground.md:11
msgid ""
"Rust has two main \"profiles\" for generating code: Debug (extra runtime "
"checks, less optimization) and Release (fewer runtime checks, lots of "
"optimization). These are accessible under \"Debug\" at the top."
msgstr ""
"Rust tem dois principais \"perfis\" (_profiles_) para gerar c√≥digo: _Debug_ "
"(verifica√ß√µes de tempo de execu√ß√£o extras, menos otimiza√ß√£o) e _Release_ "
"(menos verifica√ß√µes de tempo de execu√ß√£o, muita otimiza√ß√£o). Estes s√£o "
"acess√≠veis em \"Debug\" no topo."

#: src/hello-world/playground.md:15
msgid ""
"If you're interested, use \"ASM\" under \"...\" to see the generated "
"assembly code."
msgstr ""
"Se voc√™ estiver interessado, use \"ASM\" em \"...\" para ver o c√≥digo "
"assembly gerado."

#: src/hello-world/playground.md:20
msgid ""
"As students head into the break, encourage them to open up the playground "
"and experiment a little. Encourage them to keep the tab open and try things "
"out during the rest of the course. This is particularly helpful for advanced "
"students who want to know more about Rust's optimizations or generated "
"assembly."
msgstr ""
"Conforme os alunos se dirigem para o intervalo, incentive-os a abrir o "
"playground e experimentar um pouco. Incentive-os a manter a guia aberta e "
"experimentar durante o resto do curso. Isso √© particularmente √∫til para "
"alunos avan√ßados que desejam saber mais sobre as otimiza√ß√µes do Rust ou "
"assembly gerado."

#: src/types-and-values/variables.md:3
msgid ""
"Rust provides type safety via static typing. Variable bindings are made with "
"`let`:"
msgstr ""
"Rust fornece seguran√ßa de tipo por meio de tipagem est√°tica. Vari√°veis s√£o "
"vinculadas com `let` (_let bindings_):"

#: src/types-and-values/variables.md:9 src/control-flow-basics/loops.md:30
#: src/control-flow-basics/break-continue.md:34
#: src/control-flow-basics/blocks-and-scopes.md:16
msgid "\"x: {x}\""
msgstr "\"x: {x}\""

#: src/types-and-values/variables.md:10
msgid ""
"// x = 20;\n"
"    // println!(\"x: {x}\");\n"
msgstr ""
"// x = 20;\n"
"    // println!(\"x: {x}\");\n"

#: src/types-and-values/variables.md:17
msgid ""
"Uncomment the `x = 20` to demonstrate that variables are immutable by "
"default. Add the `mut` keyword to allow changes."
msgstr ""
"Remova o coment√°rio em `x = 20` para demonstrar que as vari√°veis s√£o "
"imut√°veis por padr√£o. Adicione a palavra-chave `mut` para permitir "
"altera√ß√µes."

#: src/types-and-values/variables.md:20
msgid ""
"The `i32` here is the type of the variable. This must be known at compile "
"time, but type inference (covered later) allows the programmer to omit it in "
"many cases."
msgstr ""
"O `i32` aqui √© o tipo da vari√°vel. Isso deve ser conhecido em tempo de "
"compila√ß√£o, mas a infer√™ncia de tipo (abordada posteriormente) permite que o "
"programador o omita em muitos casos."

#: src/types-and-values/values.md:3
msgid ""
"Here are some basic built-in types, and the syntax for literal values of "
"each type."
msgstr ""
"Aqui est√£o alguns tipos b√°sicos integrados, e a sintaxe para valores "
"literais de cada tipo."

#: src/types-and-values/values.md:6
#: src/tuples-and-arrays/tuples-and-arrays.md:7 src/unsafe-rust/exercise.md:16
msgid "Types"
msgstr "Tipos"

#: src/types-and-values/values.md:6
#: src/tuples-and-arrays/tuples-and-arrays.md:7
msgid "Literals"
msgstr "Literais"

#: src/types-and-values/values.md:8
msgid "Signed integers"
msgstr "Inteiros com sinal"

#: src/types-and-values/values.md:8
msgid "`i8`, `i16`, `i32`, `i64`, `i128`, `isize`"
msgstr "`i8`, `i16`, `i32`, `i64`, `i128`, `isize`"

#: src/types-and-values/values.md:8
msgid "`-10`, `0`, `1_000`, `123_i64`"
msgstr "`-10`, `0`, `1_000`, `123_i64`"

#: src/types-and-values/values.md:9
msgid "Unsigned integers"
msgstr "Inteiros sem sinal"

#: src/types-and-values/values.md:9
msgid "`u8`, `u16`, `u32`, `u64`, `u128`, `usize`"
msgstr "`u8`, `u16`, `u32`, `u64`, `u128`, `usize`"

#: src/types-and-values/values.md:9
msgid "`0`, `123`, `10_u16`"
msgstr "`0`, `123`, `10_u16`"

#: src/types-and-values/values.md:10
msgid "Floating point numbers"
msgstr "N√∫meros de ponto flutuante"

#: src/types-and-values/values.md:10
msgid "`f32`, `f64`"
msgstr "`f32`, `f64`"

#: src/types-and-values/values.md:10
msgid "`3.14`, `-10.0e20`, `2_f32`"
msgstr "`3.14`, `-10.0e20`, `2_f32`"

#: src/types-and-values/values.md:11
msgid "Unicode scalar values"
msgstr "Valores escalares Unicode"

#: src/types-and-values/values.md:11
msgid "`char`"
msgstr "`char`"

#: src/types-and-values/values.md:11
msgid "`'a'`, `'Œ±'`, `'‚àû'`"
msgstr "`'a'`, `'Œ±'`, `'‚àû'`"

#: src/types-and-values/values.md:12
msgid "Booleans"
msgstr "Booleanos"

#: src/types-and-values/values.md:12
msgid "`bool`"
msgstr "`bool`"

#: src/types-and-values/values.md:12
msgid "`true`, `false`"
msgstr "`true`, `false`"

#: src/types-and-values/values.md:14
msgid "The types have widths as follows:"
msgstr "Os tipos t√™m os seguintes tamanhos:"

#: src/types-and-values/values.md:16
msgid "`iN`, `uN`, and `fN` are _N_ bits wide,"
msgstr "`iN`, `uN` e `fN` t√™m _N_ bits,"

#: src/types-and-values/values.md:17
msgid "`isize` and `usize` are the width of a pointer,"
msgstr "`isize` e `usize` s√£o do tamanho de um ponteiro,"

#: src/types-and-values/values.md:18
msgid "`char` is 32 bits wide,"
msgstr "`char` tem 32 bits,"

#: src/types-and-values/values.md:19
msgid "`bool` is 8 bits wide."
msgstr "`bool` tem 8 bits."

#: src/types-and-values/values.md:23
msgid "There are a few syntaxes which are not shown above:"
msgstr "H√° algumas sintaxes que n√£o s√£o mostradas acima:"

#: src/types-and-values/values.md:25
msgid ""
"All underscores in numbers can be left out, they are for legibility only. So "
"`1_000` can be written as `1000` (or `10_00`), and `123_i64` can be written "
"as `123i64`."
msgstr ""
"Todos os sublinhados em n√∫meros podem ser omitidos, eles s√£o apenas para "
"legibilidade. Por exemplo, `1_000` pode ser escrito como `1000` (ou "
"`10_00`), e `123_i64` pode ser escrito como `123i64`."

#: src/types-and-values/arithmetic.md:9
msgid "\"result: {}\""
msgstr "\"result: {}\""

#: src/types-and-values/arithmetic.md:15
msgid ""
"This is the first time we've seen a function other than `main`, but the "
"meaning should be clear: it takes three integers, and returns an integer. "
"Functions will be covered in more detail later."
msgstr ""
"Esta √© a primeira vez que vemos uma fun√ß√£o diferente de `main`, mas o "
"significado deve ser claro: ela recebe tr√™s inteiros e retorna um inteiro. "
"Fun√ß√µes ser√£o abordadas com mais detalhes posteriormente."

#: src/types-and-values/arithmetic.md:19
msgid "Arithmetic is very similar to other languages, with similar precedence."
msgstr ""
"Aritm√©tica √© muito semelhante a outras linguagens, com preced√™ncia "
"semelhante."

#: src/types-and-values/arithmetic.md:21
msgid ""
"What about integer overflow? In C and C++ overflow of _signed_ integers is "
"actually undefined, and might do different things on different platforms or "
"compilers. In Rust, it's defined."
msgstr ""
"E quanto ao estouro de inteiros? Em C e C++, o estouro de inteiros _com "
"sinal_ √© realmente indefinido, e pode fazer coisas diferentes em plataformas "
"ou compiladores diferentes. Em Rust, √© definido."

#: src/types-and-values/arithmetic.md:25
msgid ""
"Change the `i32`'s to `i16` to see an integer overflow, which panics "
"(checked) in a debug build and wraps in a release build. There are other "
"options, such as overflowing, saturating, and carrying. These are accessed "
"with method syntax, e.g., `(a * b).saturating_add(b * c).saturating_add(c * "
"a)`."
msgstr ""
"Altere os `i32` para `i16` para ver um estouro de inteiro, que causa um "
"p√¢nico (verificado) em uma compila√ß√£o de debug e um _wrap-around_ em uma "
"compila√ß√£o de release. Existem outras op√ß√µes, como _overflowing_, satura√ß√£o "
"e _carrying_. Estes s√£o acessados com sintaxe de m√©todo, por exemplo, `(a * "
"b).saturating_add(b * c).saturating_add(c * a)`."

#: src/types-and-values/arithmetic.md:30
msgid ""
"In fact, the compiler will detect overflow of constant expressions, which is "
"why the example requires a separate function."
msgstr ""
"Na verdade, o compilador detectar√° o estouro de express√µes constantes, √© por "
"isso que o exemplo requer uma fun√ß√£o separada."

#: src/types-and-values/strings.md:3
msgid ""
"Rust has two types to represent strings, both of which will be covered in "
"more depth later. Both _always_ store UTF-8 encoded strings."
msgstr ""
"Rust tem dois tipos para representar strings, ambos ser√£o abordados com mais "
"detalhes posteriormente. Ambos armazenam _sempre_ strings codificadas em "
"UTF-8."

#: src/types-and-values/strings.md:6
msgid "`String` - a modifiable, owned string."
msgstr "`String` - uma string modific√°vel e _owned_ (de propriedade)."

#: src/types-and-values/strings.md:7
msgid "`&str` - a read-only string. String literals have this type."
msgstr "`&str` - uma string somente leitura. Literais de string t√™m este tipo."

#: src/types-and-values/strings.md:11
msgid "\"Greetings\""
msgstr "\"Greetings\""

#: src/types-and-values/strings.md:12
msgid "\"ü™ê\""
msgstr "\"ü™ê\""

#: src/types-and-values/strings.md:15
msgid "\", \""
msgstr "\", \""

#: src/types-and-values/strings.md:17
msgid "\"final sentence: {}\""
msgstr "\"senten√ßa final: {}\""

#: src/types-and-values/strings.md:18 src/async/control-flow/join.md:30
msgid "\"{:?}\""
msgstr "\"{:?}\""

#: src/types-and-values/strings.md:19
msgid "//println!(\"{:?}\", &sentence[12..13]);\n"
msgstr "//println!(\"{:?}\", &sentence[12..13]);\n"

#: src/types-and-values/strings.md:25
msgid ""
"This slide introduces strings. Everything here will be covered in more depth "
"later, but this is enough for subsequent slides and exercises to use strings."
msgstr ""
"Este slide introduz strings. Tudo aqui ser√° abordado com mais profundidade "
"mais tarde, mas isso √© o suficiente para que slides e exerc√≠cios "
"subsequentes usem strings."

#: src/types-and-values/strings.md:28
msgid "Invalid UTF-8 in a string is UB, and this not allowed in safe Rust."
msgstr ""
"UTF-8 inv√°lido em uma string √© UB, e isso n√£o √© permitido em Rust seguro."

#: src/types-and-values/strings.md:30
msgid ""
"`String` is a user-defined type with a constructor (`::new()`) and methods "
"like `s.push_str(..)`."
msgstr ""
"`String` √© um tipo definido pelo usu√°rio com um construtor (`::new()`) e "
"m√©todos como `s.push_str(..)`."

#: src/types-and-values/strings.md:33
msgid ""
"The `&` in `&str` indicates that this is a reference. We will cover "
"references later, so for now just think of `&str` as a unit meaning \"a read-"
"only string\"."
msgstr ""
"O `&` em `&str` indica que esta √© uma refer√™ncia. Abordaremos refer√™ncias "
"mais tarde, ent√£o, por enquanto, pense em `&str` como uma unidade que "
"significa \"uma string somente leitura\"."

#: src/types-and-values/strings.md:36
msgid ""
"The commented-out line is indexing into the string by byte position. "
"`12..13` does not end on a character boundary, so the program panics. Adjust "
"it to a range that does, based on the error message."
msgstr ""
"A linha comentada est√° indexando a string pela posi√ß√£o do byte. `12..13` n√£o "
"termina em um limite de caractere, ent√£o o programa entra em p√¢nico. Ajuste "
"para um intervalo que o fa√ßa, com base na mensagem de erro."

#: src/types-and-values/strings.md:40
msgid ""
"Raw strings allow you to create a `&str` value with escapes disabled: "
"`r\"\\n\" == \"\\\\n\"`. You can embed double-quotes by using an equal "
"amount of `#` on either side of the quotes:"
msgstr ""
"Strings brutas permitem que voc√™ crie um valor `&str` com caracteres de "
"escape desabilitados: `r\"\\n\" == \"\\\\n\"`. Voc√™ pode embutir aspas "
"duplas utilizando uma quantidade igual de `#` em ambos os lados das aspas:"

#: src/types-and-values/inference.md:3
msgid "Rust will look at how the variable is _used_ to determine the type:"
msgstr "Rust ver√° como a vari√°vel √© _usada_ para determinar o tipo:"

#: src/types-and-values/inference.md:28
msgid ""
"This slide demonstrates how the Rust compiler infers types based on "
"constraints given by variable declarations and usages."
msgstr ""
"Este slide demonstra como o compilador Rust infere tipos com base em "
"restri√ß√µes dadas por declara√ß√µes e usos de vari√°veis."

#: src/types-and-values/inference.md:31
msgid ""
"It is very important to emphasize that variables declared like this are not "
"of some sort of dynamic \"any type\" that can hold any data. The machine "
"code generated by such declaration is identical to the explicit declaration "
"of a type. The compiler does the job for us and helps us write more concise "
"code."
msgstr ""
"√â muito importante enfatizar que vari√°veis declaradas assim n√£o s√£o de um "
"tipo din√¢mico \"qualquer tipo\" que possa armazenar quaisquer dados. O "
"c√≥digo de m√°quina gerado por tal declara√ß√£o √© id√™ntico √† declara√ß√£o "
"expl√≠cita de um tipo. O compilador faz o trabalho para n√≥s e nos ajuda a "
"escrever um c√≥digo mais conciso."

#: src/types-and-values/inference.md:36
msgid ""
"When nothing constrains the type of an integer literal, Rust defaults to "
"`i32`. This sometimes appears as `{integer}` in error messages. Similarly, "
"floating-point literals default to `f64`."
msgstr ""
"Quando nada restringe o tipo de um literal inteiro, Rust assume `i32`. Isso "
"√†s vezes aparece como `{integer}` nas mensagens de erro. Da mesma forma, os "
"literais de ponto flutuante assumem `f64`."

#: src/types-and-values/inference.md:45
msgid "// ERROR: no implementation for `{float} == {integer}`\n"
msgstr "// ERRO: nenhuma implementa√ß√£o para `{float} == {integer}`\n"

#: src/types-and-values/exercise.md:3
msgid ""
"The first and second Fibonacci numbers are both `1`. For n>2, the n'th "
"Fibonacci number is calculated recursively as the sum of the n-1'th and "
"n-2'th Fibonacci numbers."
msgstr ""
"O primeiro e o segundo n√∫meros de Fibonacci s√£o ambos `1`. Para n>2, o n-"
"√©simo n√∫mero de Fibonacci √© calculado recursivamente como a soma dos n-1-"
"√©simo e n-2-√©simo n√∫meros de Fibonacci."

#: src/types-and-values/exercise.md:7
msgid ""
"Write a function `fib(n)` that calculates the n'th Fibonacci number. When "
"will this function panic?"
msgstr ""
"Escreva uma fun√ß√£o `fib(n)` que calcula o n-√©simo n√∫mero de Fibonacci. "
"Quando esta fun√ß√£o causar√° um p√¢nico?"

#: src/types-and-values/exercise.md:13
msgid "// The base case.\n"
msgstr "// O caso base.\n"

#: src/types-and-values/exercise.md:14 src/types-and-values/exercise.md:17
#: src/control-flow-basics/exercise.md:27
#: src/control-flow-basics/exercise.md:31
msgid "\"Implement this\""
msgstr "\"Implemente isso\""

#: src/types-and-values/exercise.md:16
msgid "// The recursive case.\n"
msgstr "// O caso recursivo.\n"

#: src/types-and-values/exercise.md:23 src/types-and-values/solution.md:14
msgid "\"fib(n) = {}\""
msgstr "\"fib(n) = {}\""

#: src/control-flow-basics/conditionals.md:3
msgid "Much of the Rust syntax will be familiar to you from C, C++ or Java:"
msgstr ""
"Grande parte da sintaxe do Rust ser√° familiar para voc√™ que vem de C, C++ ou "
"Java:"

#: src/control-flow-basics/conditionals.md:5
msgid "Blocks are delimited by curly braces."
msgstr "Blocos s√£o delimitados por chaves."

#: src/control-flow-basics/conditionals.md:6
msgid ""
"Line comments are started with `//`, block comments are delimited by `/* ... "
"*/`."
msgstr ""
"Coment√°rios de linha s√£o iniciados com `//`, coment√°rios de bloco s√£o "
"delimitados por `/* ... */`."

#: src/control-flow-basics/conditionals.md:8
msgid "Keywords like `if` and `while` work the same."
msgstr "Palavras-chave como `if` e `while` funcionam da mesma forma."

#: src/control-flow-basics/conditionals.md:9
msgid "Variable assignment is done with `=`, comparison is done with `==`."
msgstr ""
"A atribui√ß√£o de vari√°veis √© feita com `=`, a compara√ß√£o √© feita com `==`."

#: src/control-flow-basics/conditionals.md:11
msgid "`if` expressions"
msgstr "Express√µes `if`"

#: src/control-flow-basics/conditionals.md:13
msgid ""
"You use [`if` expressions](https://doc.rust-lang.org/reference/expressions/"
"if-expr.html#if-expressions) exactly like `if` statements in other languages:"
msgstr ""
"Voc√™ usa [express√µes `if` ](https://doc.rust-lang.org/reference/expressions/"
"if-expr.html#if-expressions) exatamente como declara√ß√µes `if` em outras "
"linguagens:"

#: src/control-flow-basics/conditionals.md:21
#: src/control-flow-basics/conditionals.md:36
msgid "\"small\""
msgstr "\"pequeno\""

#: src/control-flow-basics/conditionals.md:23
msgid "\"biggish\""
msgstr "\"grande\""

#: src/control-flow-basics/conditionals.md:25
msgid "\"huge\""
msgstr "\"enorme\""

#: src/control-flow-basics/conditionals.md:30
msgid ""
"In addition, you can use `if` as an expression. The last expression of each "
"block becomes the value of the `if` expression:"
msgstr ""
"Al√©m disso, voc√™ pode us√°-lo como uma express√£o. A √∫ltima express√£o de cada "
"bloco se torna o valor da express√£o `if`"

#: src/control-flow-basics/conditionals.md:36
msgid "\"large\""
msgstr "\"grande\""

#: src/control-flow-basics/conditionals.md:37
msgid "\"number size: {}\""
msgstr "\"tamanho do n√∫mero: {}\""

#: src/control-flow-basics/conditionals.md:43
msgid ""
"Because `if` is an expression and must have a particular type, both of its "
"branch blocks must have the same type. Show what happens if you add `;` "
"after `\"small\"` in the second example."
msgstr ""
"Como `if` √© uma express√£o e deve ter um tipo espec√≠fico, ambos os blocos de "
"ramifica√ß√£o devem ter o mesmo tipo. Considere mostrar o que acontece se voc√™ "
"adicionar um `;` depois de `\"pequeno\"` no segundo exemplo."

#: src/control-flow-basics/conditionals.md:47
msgid ""
"When `if` is used in an expression, the expression must have a `;` to "
"separate it from the next statement. Remove the `;` before `println!` to see "
"the compiler error."
msgstr ""
"Quando `if` √© usado em uma express√£o, a express√£o deve ter um `;` para "
"separ√°-la da pr√≥xima instru√ß√£o. Remova o `;` antes de `println!` para ver o "
"erro do compilador."

#: src/control-flow-basics/loops.md:3
msgid "There are three looping keywords in Rust: `while`, `loop`, and `for`:"
msgstr "H√° tr√™s palavras-chave de loop em Rust: `while`, `loop` e `for`:"

#: src/control-flow-basics/loops.md:5
msgid "`while`"
msgstr "`while`"

#: src/control-flow-basics/loops.md:7
msgid ""
"The [`while` keyword](https://doc.rust-lang.org/reference/expressions/loop-"
"expr.html#predicate-loops) works much like in other languages, executing the "
"loop body as long as the condition is true."
msgstr ""
"A [palavra-chave `while`](https://doc.rust-lang.org/reference/expressions/"
"loop-expr.html#predicate-loops) funciona de maneira muito similar a outras "
"linguagens, executando o corpo do loop enquanto a condi√ß√£o for verdadeira."

#: src/control-flow-basics/loops.md:18
msgid "\"Final x: {x}\""
msgstr "\"X final: {x}\""

#: src/control-flow-basics/loops.md:22
msgid "`for`"
msgstr "`for`"

#: src/control-flow-basics/loops.md:24
msgid ""
"The [`for` loop](https://doc.rust-lang.org/std/keyword.for.html) iterates "
"over ranges of values:"
msgstr ""
"O [loop `for`](https://doc.rust-lang.org/std/keyword.for.html) itera sobre "
"intervalos de valores:"

#: src/control-flow-basics/loops.md:35
msgid "`loop`"
msgstr "`loop`"

#: src/control-flow-basics/loops.md:37
msgid ""
"The [`loop` statement](https://doc.rust-lang.org/std/keyword.loop.html) just "
"loops forever, until a `break`."
msgstr ""
"O [loop `loop`](https://doc.rust-lang.org/std/keyword.loop.html) apenas "
"executa um loop para sempre, at√© um `break`."

#: src/control-flow-basics/loops.md:45
msgid "\"{i}\""
msgstr "\"{i}\""

#: src/control-flow-basics/loops.md:55
msgid ""
"We will discuss iteration later; for now, just stick to range expressions."
msgstr ""
"Discutiremos itera√ß√£o mais tarde; por enquanto, fique com express√µes de "
"intervalo."

#: src/control-flow-basics/loops.md:56
msgid ""
"Note that the `for` loop only iterates to `4`. Show the `1..=5` syntax for "
"an inclusive range."
msgstr ""
"Observe que o loop `for` itera apenas at√© `4`. Mostre a sintaxe `1..=5` para "
"um intervalo inclusivo."

#: src/control-flow-basics/break-continue.md:3
msgid ""
"If you want to exit any kind of loop early, use [`break`](https://doc.rust-"
"lang.org/reference/expressions/loop-expr.html#break-expressions). For "
"`loop`, this can take an optional expression that becomes the value of the "
"`loop` expression."
msgstr ""
"Se voc√™ quiser sair de qualquer loop cedo, use [`break`](https://doc.rust-"
"lang.org/reference/expressions/loop-expr.html#break-expressions). Para "
"`loop`, isso pode receber uma express√£o opcional que se torna o valor da "
"express√£o `loop`."

#: src/control-flow-basics/break-continue.md:8
msgid ""
"If you want to immediately start the next iteration use [`continue`](https://"
"doc.rust-lang.org/reference/expressions/loop-expr.html#continue-expressions)."
msgstr ""
"Se voc√™ quiser iniciar imediatamente a pr√≥xima itera√ß√£o use [`continue`]"
"(https://doc.rust-lang.org/reference/expressions/loop-expr.html#continue-"
"expressions)."

#: src/control-flow-basics/break-continue.md:24
msgid "\"{result}\""
msgstr "\"{result}\""

#: src/control-flow-basics/break-continue.md:28
msgid ""
"Both `continue` and `break` can optionally take a label argument which is "
"used to break out of nested loops:"
msgstr ""
"Ambos `continue` e `break` podem opcionalmente receber um _label_ (r√≥tulo) "
"como argumento que √© usado para sair de loops aninhados:"

#: src/control-flow-basics/break-continue.md:37
msgid "\"x: {x}, i: {i}\""
msgstr "\"x: {x}, i: {i}\""

#: src/control-flow-basics/break-continue.md:47
msgid ""
"In this case we break the outer loop after 3 iterations of the inner loop."
msgstr "Neste caso, paramos o loop externo ap√≥s 3 itera√ß√µes do loop interno."

#: src/control-flow-basics/break-continue.md:51
msgid ""
"Note that `loop` is the only looping construct which returns a non-trivial "
"value. This is because it's guaranteed to be entered at least once (unlike "
"`while` and `for` loops)."
msgstr ""
"Observe que `loop` √© a √∫nica constru√ß√£o de loop que retorna um valor n√£o "
"trivial . Isso ocorre porque √© garantido que ele ser√° executado pelo menos "
"uma vez (diferente de loops `while` e `for`)."

#: src/control-flow-basics/blocks-and-scopes.md:3
msgid "Blocks"
msgstr "Blocos"

#: src/control-flow-basics/blocks-and-scopes.md:5
msgid ""
"A block in Rust contains a sequence of expressions. Each block has a value "
"and a type, which are those of the last expression of the block:"
msgstr ""
"Um bloco em Rust cont√™m uma sequ√™ncia de express√µes. Cada bloco tem um valor "
"e um tipo, os quais s√£o os da √∫ltima express√£o do bloco:"

#: src/control-flow-basics/blocks-and-scopes.md:13
msgid "\"y: {y}\""
msgstr "\"y: {y}\""

#: src/control-flow-basics/blocks-and-scopes.md:20
msgid ""
"If the last expression ends with `;`, then the resulting value and type is "
"`()`."
msgstr ""
"Se a √∫ltima express√£o terminar com `;`, o valor resultante e o tipo ser√° "
"`()`."

#: src/control-flow-basics/blocks-and-scopes.md:22
msgid "Scopes and Shadowing"
msgstr "Escopos e _Shadowing_ (Sobreposi√ß√£o)"

#: src/control-flow-basics/blocks-and-scopes.md:24
msgid "A variable's scope is limited to the enclosing block."
msgstr "O escopo de uma vari√°vel √© limitado ao bloco que a cont√©m."

#: src/control-flow-basics/blocks-and-scopes.md:26
msgid ""
"You can shadow variables, both those from outer scopes and variables from "
"the same scope:"
msgstr ""
"Voc√™ pode sobrepor (_shadow_) vari√°veis, tanto aquelas de escopos externos "
"quanto vari√°veis do mesmo escopo:"

#: src/control-flow-basics/blocks-and-scopes.md:32
msgid "\"before: {a}\""
msgstr "\"antes: {a}\""

#: src/control-flow-basics/blocks-and-scopes.md:34
#: src/std-traits/from-and-into.md:7 src/std-traits/from-and-into.md:19
#: src/slices-and-lifetimes/solution.md:225
msgid "\"hello\""
msgstr "\"ol√°\""

#: src/control-flow-basics/blocks-and-scopes.md:35
msgid "\"inner scope: {a}\""
msgstr "\"escopo interno: {a}\""

#: src/control-flow-basics/blocks-and-scopes.md:38
msgid "\"shadowed in inner scope: {a}\""
msgstr "\"sobreposto no escopo interno: {a}\""

#: src/control-flow-basics/blocks-and-scopes.md:41
msgid "\"after: {a}\""
msgstr "\"depois: {a}\""

#: src/control-flow-basics/blocks-and-scopes.md:47
msgid ""
"You can show how the value of the block changes by changing the last line in "
"the block. For instance, adding/removing a semicolon or using a `return`."
msgstr ""
"Voc√™ pode mostrar como o valor do bloco muda alterando a √∫ltima linha do "
"bloco. Por exemplo, adicionar/remover um ponto e v√≠rgula (`;`) ou usar um "
"`return`."

#: src/control-flow-basics/blocks-and-scopes.md:49
msgid ""
"Show that a variable's scope is limited by adding a `b` in the inner block "
"in the last example, and then trying to access it outside that block."
msgstr ""
"Mostre que o escopo de uma vari√°vel √© limitado adicionando um `b` no bloco "
"interno no √∫ltimo exemplo e, em seguida, tentando acess√°-lo fora desse bloco."

#: src/control-flow-basics/blocks-and-scopes.md:51
msgid ""
"Shadowing is different from mutation, because after shadowing both "
"variable's memory locations exist at the same time. Both are available under "
"the same name, depending where you use it in the code."
msgstr ""
"_Shadowing_ √© diferente da muta√ß√£o, porque ap√≥s a sobreposi√ß√£o "
"(_shadowing_), os locais de mem√≥ria de ambas as vari√°veis existem ao mesmo "
"tempo. Ambas est√£o dispon√≠veis com o mesmo nome, dependendo de onde voc√™ as "
"usa no c√≥digo. "

#: src/control-flow-basics/blocks-and-scopes.md:54
msgid "A shadowing variable can have a different type."
msgstr "Uma vari√°vel sobreposta pode ter um tipo diferente. "

#: src/control-flow-basics/blocks-and-scopes.md:55
msgid ""
"Shadowing looks obscure at first, but is convenient for holding on to values "
"after `.unwrap()`."
msgstr ""
"Shadowing (sobreposi√ß√£o) parece obscura a princ√≠pio, mas √© conveniente para "
"manter os valores ap√≥s `.unwrap()`."

#: src/control-flow-basics/functions.md:21
msgid ""
"Declaration parameters are followed by a type (the reverse of some "
"programming languages), then a return type."
msgstr ""
"Os par√¢metros de declara√ß√£o s√£o seguidos por um tipo (o inverso de algumas "
"linguagens de programa√ß√£o) e, em seguida, um tipo de retorno."

#: src/control-flow-basics/functions.md:23
msgid ""
"The last expression in a function body (or any block) becomes the return "
"value. Simply omit the `;` at the end of the expression. The `return` "
"keyword can be used for early return, but the \"bare value\" form is "
"idiomatic at the end of a function (refactor `gcd` to use a `return`)."
msgstr ""
"A √∫ltima express√£o em um corpo de uma fun√ß√£o (ou qualquer bloco) torna-se o "
"valor de retorno. Simplesmente omita o `;` no final da express√£o. A palavra-"
"chave `return` pode ser usada para retorno antecipado, mas a forma \"valor "
"nu\" √© idiom√°tica no final de uma fun√ß√£o (refatore `gcd` para usar um "
"`return`)."

#: src/control-flow-basics/functions.md:27
msgid ""
"Some functions have no return value, and return the 'unit type', `()`. The "
"compiler will infer this if the `-> ()` return type is omitted."
msgstr ""
"Algumas fun√ß√µes n√£o t√™m valor de retorno e retornam o 'tipo unit√°rio', `()`. "
"O compilador ir√° inferir isso se o tipo de retorno `-> ()` for omitido."

#: src/control-flow-basics/functions.md:29
msgid ""
"Overloading is not supported -- each function has a single implementation."
msgstr "Sobrecarga n√£o √© suportada - cada fun√ß√£o tem uma √∫nica implementa√ß√£o."

#: src/control-flow-basics/functions.md:30
msgid ""
"Always takes a fixed number of parameters. Default arguments are not "
"supported. Macros can be used to support variadic functions."
msgstr ""
"Sempre usa um n√∫mero fixo de par√¢metros. Argumentos padr√£o n√£o s√£o "
"suportados. Macros podem ser usadas para suportar fun√ß√µes vari√°dicas."

#: src/control-flow-basics/functions.md:32
msgid ""
"Always takes a single set of parameter types. These types can be generic, "
"which will be covered later."
msgstr ""
"Sempre usa um √∫nico conjunto de tipos de par√¢metros. Estes tipos podem ser "
"gen√©ricos, o que ser√° abordado mais tarde."

#: src/control-flow-basics/macros.md:3
msgid ""
"Macros are expanded into Rust code during compilation, and can take a "
"variable number of arguments. They are distinguished by a `!` at the end. "
"The Rust standard library includes an assortment of useful macros."
msgstr ""
"Macros s√£o expandidas em c√≥digo Rust durante a compila√ß√£o e podem receber um "
"n√∫mero vari√°vel de argumentos. Elas s√£o distinguidas por um `!` no final. A "
"biblioteca padr√£o do Rust inclui uma variedade de macros √∫teis."

#: src/control-flow-basics/macros.md:7
msgid ""
"`println!(format, ..)` prints a line to standard output, applying formatting "
"described in [`std::fmt`](https://doc.rust-lang.org/std/fmt/index.html)."
msgstr ""
"`println!(format, ..)` imprime uma linha na sa√≠da padr√£o, aplicando a "
"formata√ß√£o descrita em [`std::fmt`](https://doc.rust-lang.org/std/fmt/index."
"html)."

#: src/control-flow-basics/macros.md:9
msgid ""
"`format!(format, ..)` works just like `println!` but returns the result as a "
"string."
msgstr ""
"`format!(format, ..)` funciona exatamente como `println!`, mas retorna o "
"resultado como uma string."

#: src/control-flow-basics/macros.md:11
msgid "`dbg!(expression)` logs the value of the expression and returns it."
msgstr "dbg!(express√£o) registra o valor da express√£o e o retorna."

#: src/control-flow-basics/macros.md:12
msgid ""
"`todo!()` marks a bit of code as not-yet-implemented. If executed, it will "
"panic."
msgstr ""
"`todo!()` marca um trecho de c√≥digo como n√£o implementado. Se executado, "
"gerar√° um p√¢nico."

#: src/control-flow-basics/macros.md:14
msgid ""
"`unreachable!()` marks a bit of code as unreachable. If executed, it will "
"panic."
msgstr ""
"`unreachable!()` marca um trecho de c√≥digo como inalcan√ß√°vel. Se executado, "
"gerar√° um p√¢nico."

#: src/control-flow-basics/macros.md:32
msgid "\"{n}! = {}\""
msgstr "\"{n}! = {}\""

#: src/control-flow-basics/macros.md:38
msgid ""
"The takeaway from this section is that these common conveniences exist, and "
"how to use them. Why they are defined as macros, and what they expand to, is "
"not especially critical."
msgstr ""
"A li√ß√£o desta se√ß√£o √© que essas conveni√™ncias comuns existem e como us√°-las. "
"Por que elas s√£o definidas como macros e no que elas se expandem n√£o √© "
"especialmente cr√≠tico."

#: src/control-flow-basics/macros.md:42
msgid ""
"The course does not cover defining macros, but a later section will describe "
"use of derive macros."
msgstr ""
"O curso n√£o cobre a defini√ß√£o de macros, mas uma se√ß√£o posterior descrever√° "
"o uso de macros _derive_ (derivadas)."

#: src/control-flow-basics/exercise.md:3
msgid ""
"The [Collatz Sequence](https://en.wikipedia.org/wiki/Collatz_conjecture) is "
"defined as follows, for an arbitrary n"
msgstr ""
"A [Sequ√™ncia de Collatz](https://en.wikipedia.org/wiki/Collatz_conjecture) √© "
"definida da seguinte forma, para um n arbitr√°rio"

#: src/control-flow-basics/exercise.md:4 src/control-flow-basics/exercise.md:10
msgid "1"
msgstr "1"

#: src/control-flow-basics/exercise.md:4
msgid " greater than zero:"
msgstr " maior que zero:"

#: src/control-flow-basics/exercise.md:6 src/control-flow-basics/exercise.md:7
#: src/control-flow-basics/exercise.md:8
msgid "If _n"
msgstr "Se _n"

#: src/control-flow-basics/exercise.md:6 src/control-flow-basics/exercise.md:7
#: src/control-flow-basics/exercise.md:8
msgid "i"
msgstr "i"

#: src/control-flow-basics/exercise.md:6
msgid "_ is 1, then the sequence terminates at _n"
msgstr "_ √© 1, ent√£o a sequ√™ncia termina em _n"

#: src/control-flow-basics/exercise.md:6
msgid "_."
msgstr "_."

#: src/control-flow-basics/exercise.md:7
msgid "_ is even, then _n"
msgstr "_ √© par, ent√£o _n"

#: src/control-flow-basics/exercise.md:7 src/control-flow-basics/exercise.md:8
msgid "i+1"
msgstr "i+1"

#: src/control-flow-basics/exercise.md:7
msgid " = n"
msgstr " = n"

#: src/control-flow-basics/exercise.md:7
msgid " / 2_."
msgstr "/ 2_."

#: src/control-flow-basics/exercise.md:8
msgid "_ is odd, then _n"
msgstr "_ √© √≠mpar, ent√£o _n"

#: src/control-flow-basics/exercise.md:8
msgid " = 3 * n"
msgstr " = 3 * n"

#: src/control-flow-basics/exercise.md:8
msgid " + 1_."
msgstr " + 1_."

#: src/control-flow-basics/exercise.md:10
msgid "For example, beginning with _n"
msgstr "Por exemplo, come√ßando com _n"

#: src/control-flow-basics/exercise.md:10
msgid "_ = 3:"
msgstr "_ = 3:"

#: src/control-flow-basics/exercise.md:12
msgid "3 is odd, so _n"
msgstr "3 √© √≠mpar, ent√£o _n"

#: src/control-flow-basics/exercise.md:12
msgid "2"
msgstr "2"

#: src/control-flow-basics/exercise.md:12
msgid "_ = 3 * 3 + 1 = 10;"
msgstr "_ = 3 * 3 + 1 = 10;"

#: src/control-flow-basics/exercise.md:13
msgid "10 is even, so _n"
msgstr "10 √© par, ent√£o _n"

#: src/control-flow-basics/exercise.md:13 src/bare-metal/aps/better-uart.md:22
msgid "3"
msgstr "3"

#: src/control-flow-basics/exercise.md:13
msgid "_ = 10 / 2 = 5;"
msgstr "_ = 10 / 2 = 5;"

#: src/control-flow-basics/exercise.md:14
msgid "5 is odd, so _n"
msgstr "5 √© √≠mpar, ent√£o _n"

#: src/control-flow-basics/exercise.md:14 src/bare-metal/aps/better-uart.md:10
msgid "4"
msgstr "4"

#: src/control-flow-basics/exercise.md:14
msgid "_ = 3 * 15 + 1 = 16;"
msgstr "_ = 3 * 15 + 1 = 16;"

#: src/control-flow-basics/exercise.md:15
msgid "16 is even, so _n"
msgstr "16 √© par, ent√£o _n"

#: src/control-flow-basics/exercise.md:15
msgid "5"
msgstr "5"

#: src/control-flow-basics/exercise.md:15
msgid "_ = 16 / 2 = 8;"
msgstr "_ = 16 / 2 = 8;"

#: src/control-flow-basics/exercise.md:16
msgid "8 is even, so _n"
msgstr "8 √© par, ent√£o _n"

#: src/control-flow-basics/exercise.md:16 src/bare-metal/aps/better-uart.md:14
#: src/bare-metal/aps/better-uart.md:17
msgid "6"
msgstr "6"

#: src/control-flow-basics/exercise.md:16
msgid "_ = 8 / 2 = 4;"
msgstr "_ = 8 / 2 = 4;"

#: src/control-flow-basics/exercise.md:17
msgid "4 is even, so _n"
msgstr "4 √© par, ent√£o _n"

#: src/control-flow-basics/exercise.md:17
msgid "7"
msgstr "7"

#: src/control-flow-basics/exercise.md:17
msgid "_ = 4 / 2 = 2;"
msgstr "_ = 4 / 2 = 2;"

#: src/control-flow-basics/exercise.md:18
msgid "2 is even, so _n"
msgstr "2 √© par, ent√£o _n"

#: src/control-flow-basics/exercise.md:18 src/bare-metal/aps/better-uart.md:12
#: src/bare-metal/aps/better-uart.md:15
msgid "8"
msgstr "8"

#: src/control-flow-basics/exercise.md:18
msgid "_ = 1; and"
msgstr "_ = 1; e"

#: src/control-flow-basics/exercise.md:19
msgid "the sequence terminates."
msgstr "a sequ√™ncia termina."

#: src/control-flow-basics/exercise.md:21
msgid ""
"Write a function to calculate the length of the collatz sequence for a given "
"initial `n`."
msgstr ""
"Escreva uma fun√ß√£o para calcular o comprimento da sequ√™ncia de Collatz para "
"um dado `n` inicial."

#: src/control-flow-basics/exercise.md:25 src/control-flow-basics/solution.md:4
msgid "/// Determine the length of the collatz sequence beginning at `n`.\n"
msgstr ""
"/// Determine o comprimento da sequ√™ncia de Collatz come√ßando em `n`.\n"

#: src/control-flow-basics/solution.md:20 src/concurrency/scoped-threads.md:11
#: src/concurrency/scoped-threads.md:30
msgid "\"Length: {}\""
msgstr "\"Comprimento: {}\""

#: src/welcome-day-1-afternoon.md:1 src/welcome-day-2-afternoon.md:1
#: src/welcome-day-3-afternoon.md:1 src/welcome-day-4-afternoon.md:1
msgid "Welcome Back"
msgstr "Bem-vindo de volta"

#: src/tuples-and-arrays/tuples-and-arrays.md:3
msgid ""
"Tuples and arrays are the first \"compound\" types we have seen. All "
"elements of an array have the same type, while tuples can accommodate "
"different types. Both types have a size fixed at compile time."
msgstr ""
"Tuplas e matrizes s√£o os primeiros tipos \"compostos\" que vimos. Todos os "
"elementos de uma matriz t√™m o mesmo tipo, enquanto as tuplas podem acomodar "
"diferentes tipos. Ambos os tipos t√™m um tamanho fixo em tempo de compila√ß√£o."

#: src/tuples-and-arrays/tuples-and-arrays.md:9
#: src/tuples-and-arrays/destructuring.md:27
msgid "Arrays"
msgstr "Matrizes"

#: src/tuples-and-arrays/tuples-and-arrays.md:9
msgid "`[T; N]`"
msgstr "`[T; N]`"

#: src/tuples-and-arrays/tuples-and-arrays.md:9
msgid "`[20, 30, 40]`, `[0; 3]`"
msgstr "`[20, 30, 40]`, `[0; 3]`"

#: src/tuples-and-arrays/tuples-and-arrays.md:10
#: src/tuples-and-arrays/destructuring.md:9
msgid "Tuples"
msgstr "Tuplas"

#: src/tuples-and-arrays/tuples-and-arrays.md:10
msgid "`()`, `(T,)`, `(T1, T2)`, ..."
msgstr "`()`, `(T,)`, `(T1, T2)`, ..."

#: src/tuples-and-arrays/tuples-and-arrays.md:10
msgid "`()`, `('x',)`, `('x', 1.2)`, ..."
msgstr "`()`, `('x',)`, `('x', 1.2)`, ..."

#: src/tuples-and-arrays/tuples-and-arrays.md:12
msgid "Array assignment and access:"
msgstr "Atribui√ß√£o e acesso a matrizes:"

#: src/tuples-and-arrays/tuples-and-arrays.md:24
msgid "Tuple assignment and access:"
msgstr "Atribui√ß√£o e acesso a tuplas:"

#: src/tuples-and-arrays/tuples-and-arrays.md:40
msgid "Arrays:"
msgstr "Matrizes:"

#: src/tuples-and-arrays/tuples-and-arrays.md:42
msgid ""
"A value of the array type `[T; N]` holds `N` (a compile-time constant) "
"elements of the same type `T`. Note that the length of the array is _part of "
"its type_, which means that `[u8; 3]` and `[u8; 4]` are considered two "
"different types. Slices, which have a size determined at runtime, are "
"covered later."
msgstr ""
"O valor do tipo matriz `[T; N]` comporta `N` elementos (constante em tempo "
"de compila√ß√£o) do mesmo tipo `N`. Note que o tamanho de uma matriz √© _parte "
"do seu tipo_, o que significa que `[u8; 3]` e `[u8; 4]` s√£o considerados "
"dois tipos diferentes. _Slices_ (fatias), que t√™m um tamanho determinado em "
"tempo de execu√ß√£o, s√£o abordados mais tarde."

#: src/tuples-and-arrays/tuples-and-arrays.md:48
msgid ""
"Try accessing an out-of-bounds array element. Array accesses are checked at "
"runtime. Rust can usually optimize these checks away, and they can be "
"avoided using unsafe Rust."
msgstr ""
"Tente acessar um elemento de matriz fora dos limites. Os acessos a matrizes "
"s√£o verificados em tempo de execu√ß√£o. Rust geralmente pode otimizar essas "
"verifica√ß√µes e elas podem ser evitadas usando Rust inseguro."

#: src/tuples-and-arrays/tuples-and-arrays.md:52
msgid "We can use literals to assign values to arrays."
msgstr "N√≥s podemos usar literais para atribuir valores para matrizes."

#: src/tuples-and-arrays/tuples-and-arrays.md:54
msgid ""
"The `println!` macro asks for the debug implementation with the `?` format "
"parameter: `{}` gives the default output, `{:?}` gives the debug output. "
"Types such as integers and strings implement the default output, but arrays "
"only implement the debug output. This means that we must use debug output "
"here."
msgstr ""
"A macro `println!` pede a implementa√ß√£o de depura√ß√£o com o par√¢metro de "
"formato `?`: `{}` d√° a sa√≠da padr√£o, `{:?}` d√° a sa√≠da de depura√ß√£o. Tipos "
"como inteiros e strings implementam a sa√≠da padr√£o, mas matrizes implementam "
"apenas a sa√≠da de depura√ß√£o. Isso significa que devemos usar a sa√≠da de "
"depura√ß√£o aqui."

#: src/tuples-and-arrays/tuples-and-arrays.md:59
msgid ""
"Adding `#`, eg `{a:#?}`, invokes a \"pretty printing\" format, which can be "
"easier to read."
msgstr ""
"Adicionando `#`, p.ex. `{a:#?}`, invoca um formato \"_pretty "
"printing_\" (\"impress√£o bonita\"), que pode ser mais leg√≠vel."

#: src/tuples-and-arrays/tuples-and-arrays.md:62
msgid "Tuples:"
msgstr "Tuplas:"

#: src/tuples-and-arrays/tuples-and-arrays.md:64
msgid "Like arrays, tuples have a fixed length."
msgstr "Assim como matrizes, tuplas t√™m tamanho fixo."

#: src/tuples-and-arrays/tuples-and-arrays.md:66
msgid "Tuples group together values of different types into a compound type."
msgstr "Tuplas agrupam valores de diferentes tipos em um tipo composto."

#: src/tuples-and-arrays/tuples-and-arrays.md:68
msgid ""
"Fields of a tuple can be accessed by the period and the index of the value, "
"e.g. `t.0`, `t.1`."
msgstr ""
"Campos de uma tupla podem ser acessados com um ponto e o √≠ndice do valor, p."
"ex. `t.0`, `t.1`."

#: src/tuples-and-arrays/tuples-and-arrays.md:71
msgid ""
"The empty tuple `()` is also known as the \"unit type\". It is both a type, "
"and the only valid value of that type --- that is to say both the type and "
"its value are expressed as `()`. It is used to indicate, for example, that a "
"function or expression has no return value, as we'll see in a future slide."
msgstr ""
"A tupla vazia `()` tamb√©m √© conhecida como     \"tipo unidade\" (_unit "
"type_). √â tanto um tipo quanto o √∫nico valor v√°lido desse tipo - ou seja, o "
"tipo e seu valor s√£o expressos como `()`. √â usado para indicar, por exemplo, "
"que uma fun√ß√£o ou express√£o n√£o tem valor de retorno, como veremos em um "
"slide futuro."

#: src/tuples-and-arrays/tuples-and-arrays.md:75
msgid ""
"You can think of it as `void` that can be familiar to you from other "
"programming languages."
msgstr ""
"Voc√™ pode pensar nisso como um `void`, que talvez lhe seja familiar de "
"outras linguagens de programa√ß√£o."

#: src/tuples-and-arrays/iteration.md:3
msgid "The `for` statement supports iterating over arrays (but not tuples)."
msgstr "O comando `for` suporta itera√ß√£o sobre matrizes (mas n√£o tuplas)."

#: src/tuples-and-arrays/iteration.md:18
msgid ""
"This functionality uses the `IntoIterator` trait, but we haven't covered "
"that yet."
msgstr ""
"Esta funcionalidade usa o _trait_ `IntoIterator`, mas ainda n√£o a abordamos."

#: src/tuples-and-arrays/iteration.md:21
msgid ""
"The `assert_ne!` macro is new here. There are also `assert_eq!` and `assert!"
"` macros. These are always checked while, debug-only variants like "
"`debug_assert!` compile to nothing in release builds."
msgstr ""
"A macro `assert_ne!` √© nova aqui. Existem tamb√©m macros `assert_eq!` e "
"`assert!`. Estes s√£o sempre verificados enquanto as variantes apenas para "
"debug como `debug_assert!` n√£o compilam nada em compila√ß√µes de release."

#: src/tuples-and-arrays/match.md:3
msgid ""
"The `match` keyword lets you match a value against one or more _patterns_. "
"The comparisons are done from top to bottom and the first match wins."
msgstr ""
"A palavra-chave `match` permite que voc√™ corresponda um valor a um ou mais "
"_padr√µes_ (_patterns_). As compara√ß√µes s√£o feitas de cima para baixo e a "
"primeira correspond√™ncia encontrada √© selecionada."

#: src/tuples-and-arrays/match.md:6
msgid "The patterns can be simple values, similarly to `switch` in C and C++:"
msgstr ""
"Os padr√µes podem ser valores simples, similarmente a `switch` em C e C++:"

#: src/tuples-and-arrays/match.md:11
msgid "'x'"
msgstr "'x'"

#: src/tuples-and-arrays/match.md:13
msgid "'q'"
msgstr "'q'"

#: src/tuples-and-arrays/match.md:13
msgid "\"Quitting\""
msgstr "\"Encerrando\""

#: src/tuples-and-arrays/match.md:14 src/std-traits/solution.md:16
#: src/error-handling/exercise.md:62 src/error-handling/exercise.md:64
#: src/error-handling/solution.md:62 src/error-handling/solution.md:64
msgid "'a'"
msgstr "'a'"

#: src/tuples-and-arrays/match.md:14
msgid "'s'"
msgstr "'s'"

#: src/tuples-and-arrays/match.md:14
msgid "'w'"
msgstr "'w'"

#: src/tuples-and-arrays/match.md:14
msgid "'d'"
msgstr "'d'"

#: src/tuples-and-arrays/match.md:14
msgid "\"Moving around\""
msgstr "\"Movendo por ai\""

#: src/tuples-and-arrays/match.md:15 src/error-handling/exercise.md:54
#: src/error-handling/exercise.md:56 src/error-handling/exercise.md:64
#: src/error-handling/solution.md:54 src/error-handling/solution.md:56
#: src/error-handling/solution.md:64
msgid "'0'"
msgstr "'0'"

#: src/tuples-and-arrays/match.md:15 src/error-handling/exercise.md:54
#: src/error-handling/exercise.md:56 src/error-handling/exercise.md:64
#: src/error-handling/solution.md:54 src/error-handling/solution.md:56
#: src/error-handling/solution.md:64
msgid "'9'"
msgstr "'9'"

#: src/tuples-and-arrays/match.md:15
msgid "\"Number input\""
msgstr "\"Entrada de n√∫mero\""

#: src/tuples-and-arrays/match.md:16
msgid "\"Lowercase: {key}\""
msgstr "\"Min√∫sculas: {key}\""

#: src/tuples-and-arrays/match.md:17
msgid "\"Something else\""
msgstr "\"Alguma outra coisa\""

#: src/tuples-and-arrays/match.md:22
msgid ""
"The `_` pattern is a wildcard pattern which matches any value. The "
"expressions _must_ be irrefutable, meaning that it covers every possibility, "
"so `_` is often used as the final catch-all case."
msgstr ""
"O padr√£o `_` √© um padr√£o curinga que corresponde a qualquer valor. As "
"express√µes _devem_ ser irrefut√°veis, o que significa que cobre todas as "
"possibilidades, ent√£o `_` √© frequentemente usado como o √∫ltimo caso de "
"captura."

#: src/tuples-and-arrays/match.md:26
msgid ""
"Match can be used as an expression. Just like `if`, each match arm must have "
"the same type. The type is the last expression of the block, if any. In the "
"example above, the type is `()`."
msgstr ""
"Correspond√™ncia pode ser usada como uma express√£o. Assim como `if`, cada "
"bra√ßo de correspond√™ncia deve ter o mesmo tipo. O tipo √© a √∫ltima express√£o "
"do bloco, se houver. No exemplo acima, o tipo √© `()`."

#: src/tuples-and-arrays/match.md:30
msgid ""
"A variable in the pattern (`key` in this example) will create a binding that "
"can be used within the match arm."
msgstr ""
"Uma vari√°vel no padr√£o (`key` neste exemplo) criar√° uma liga√ß√£o que pode ser "
"usada dentro do bra√ßo de correspond√™ncia."

#: src/tuples-and-arrays/match.md:33
msgid "A match guard causes the arm to match only if the condition is true."
msgstr ""
"Uma guarda de correspond√™ncia faz com que o bra√ßo corresponda somente se a "
"condi√ß√£o for verdadeira."

#: src/tuples-and-arrays/match.md:37 src/user-defined-types/named-structs.md:34
#: src/user-defined-types/enums.md:28 src/methods-and-traits/methods.md:68
msgid "Key Points:"
msgstr "Pontos Chave:"

#: src/tuples-and-arrays/match.md:39
msgid ""
"You might point out how some specific characters are being used when in a "
"pattern"
msgstr ""
"Voc√™ pode apontar como alguns caracteres espec√≠ficos podem ser usados em um "
"padr√£o"

#: src/tuples-and-arrays/match.md:41
msgid "`|` as an `or`"
msgstr "`|` como um `or`"

#: src/tuples-and-arrays/match.md:42
msgid "`..` can expand as much as it needs to be"
msgstr "`..` pode expandir o quanto for necess√°rio"

#: src/tuples-and-arrays/match.md:43
msgid "`1..=5` represents an inclusive range"
msgstr "`1..=5` representa um intervalo inclusivo"

#: src/tuples-and-arrays/match.md:44
msgid "`_` is a wild card"
msgstr "`_` √© um curinga"

#: src/tuples-and-arrays/match.md:46
msgid ""
"Match guards as a separate syntax feature are important and necessary when "
"we wish to concisely express more complex ideas than patterns alone would "
"allow."
msgstr ""
"Guardas de correspond√™ncia, como um recurso de sintaxe separado, s√£o "
"importantes e necess√°rias quando se quer expressar ideias mais complexas do "
"que somente o padr√£o permitiria."

#: src/tuples-and-arrays/match.md:48
msgid ""
"They are not the same as separate `if` expression inside of the match arm. "
"An `if` expression inside of the branch block (after `=>`) happens after the "
"match arm is selected. Failing the `if` condition inside of that block won't "
"result in other arms of the original `match` expression being considered."
msgstr ""
"Eles n√£o s√£o iguais √† express√£o `if` separada dentro do bloco de "
"correspond√™ncia. Uma express√£o `if` dentro do bloco de ramifica√ß√£o (depois "
"de `=>`) acontece depois que a correspond√™ncia √© selecionada. A falha na "
"condi√ß√£o `if` dentro desse bloco n√£o resultar√° em outras verifica√ß√µes de "
"correspond√™ncia da express√£o `match` original serem consideradas."

#: src/tuples-and-arrays/match.md:52
msgid ""
"The condition defined in the guard applies to every expression in a pattern "
"with an `|`."
msgstr ""
"A condi√ß√£o definida na guarda se aplica a todas as express√µes em um padr√£o "
"com um `|`."

#: src/tuples-and-arrays/destructuring.md:3
msgid ""
"Destructuring is a way of extracting data from a data structure by writing a "
"pattern that is matched up to the data structure, binding variables to "
"subcomponents of the data structure."
msgstr ""
"Desestrutura√ß√£o √© uma maneira de extrair dados de uma estrutura de dados "
"escrevendo um padr√£o que √© correspondido √† estrutura de dados, vinculando "
"vari√°veis aos subcomponentes da estrutura de dados."

#: src/tuples-and-arrays/destructuring.md:7
msgid "You can destructure tuples and arrays by matching on their elements:"
msgstr ""
"Voc√™ pode desestruturar matrizes, tuplas e _slices_ combinando seus "
"elementos:"

#: src/tuples-and-arrays/destructuring.md:18
msgid "\"on Y axis\""
msgstr "\"no eixo Y\""

#: src/tuples-and-arrays/destructuring.md:19
msgid "\"on X axis\""
msgstr "\"no eixo X\""

#: src/tuples-and-arrays/destructuring.md:20
msgid "\"left of Y axis\""
msgstr "\"√† esquerda do eixo Y\""

#: src/tuples-and-arrays/destructuring.md:21
msgid "\"below X axis\""
msgstr "\"abaixo do eixo X\""

#: src/tuples-and-arrays/destructuring.md:22
msgid "\"first quadrant\""
msgstr "\"primeiro quadrante\""

#: src/tuples-and-arrays/destructuring.md:33
msgid "\"Tell me about {triple:?}\""
msgstr "\"Fale-me sobre {triple:?}\""

#: src/tuples-and-arrays/destructuring.md:35
msgid "\"First is 0, y = {y}, and z = {z}\""
msgstr "\"Primeiro √© 0, y = {y} e z = {z}\""

#: src/tuples-and-arrays/destructuring.md:36
msgid "\"First is 1 and the rest were ignored\""
msgstr "\"Primeiro √© 1 e o resto foi ignorado\""

#: src/tuples-and-arrays/destructuring.md:37
msgid "\"All elements were ignored\""
msgstr "\"Todos os elementos foram ignorados\""

#: src/tuples-and-arrays/destructuring.md:44
msgid "Create a new array pattern using `_` to represent an element."
msgstr "Crie um novo padr√£o usando `_` para representar um elemento. "

#: src/tuples-and-arrays/destructuring.md:45
msgid "Add more values to the array."
msgstr "Adicione mais valores √† matriz."

#: src/tuples-and-arrays/destructuring.md:46
msgid ""
"Point out that how `..` will expand to account for different number of "
"elements."
msgstr ""
"Aponte que `..` vai expandir para levar em conta um n√∫mero diferente de "
"elementos."

#: src/tuples-and-arrays/destructuring.md:48
msgid "Show matching against the tail with patterns `[.., b]` and `[a@..,b]`"
msgstr ""
"Mostre correspond√™ncia com a cauda usando os padr√µes `[.., b]` and `[a@..,b]`"

#: src/tuples-and-arrays/exercise.md:3
msgid "Arrays can contain other arrays:"
msgstr "Matrizes podem conter outras matrizes:"

#: src/tuples-and-arrays/exercise.md:9
msgid "What is the type of this variable?"
msgstr "Qual √© o tipo desta vari√°vel?"

#: src/tuples-and-arrays/exercise.md:11
msgid ""
"Use an array such as the above to write a function `transpose` which will "
"transpose a matrix (turn rows into columns):"
msgstr ""
"Use uma matriz como a acima para escrever uma fun√ß√£o `transpose` que "
"transpor√° uma matriz (transformar linhas em colunas):"

#: src/tuples-and-arrays/exercise.md:22
msgid "Hard-code both functions to operate on 3 √ó 3 matrices."
msgstr "Codifique ambas as fun√ß√µes a operar em matrizes 3 √ó 3."

#: src/tuples-and-arrays/exercise.md:24
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and implement the "
"functions:"
msgstr ""
"Copie o c√≥digo abaixo para <https://play.rust-lang.org/> e implemente as "
"fun√ß√µes:"

#: src/tuples-and-arrays/exercise.md:28 src/methods-and-traits/exercise.md:20
#: src/borrowing/exercise.md:14 src/unsafe-rust/exercise.md:51
msgid "// TODO: remove this when you're done with your implementation.\n"
msgstr "// TODO: remova isto quando voc√™ terminar sua implementa√ß√£o.\n"

#: src/tuples-and-arrays/exercise.md:37 src/tuples-and-arrays/solution.md:34
msgid "// <-- the comment makes rustfmt add a newline\n"
msgstr "// <-- o coment√°rio faz com que o rustfmt adicione uma nova linha\n"

#: src/tuples-and-arrays/exercise.md:42 src/tuples-and-arrays/solution.md:39
msgid "\"matrix: {:#?}\""
msgstr "\"matriz: {:#?}\""

#: src/tuples-and-arrays/exercise.md:44 src/tuples-and-arrays/solution.md:41
msgid "\"transposed: {:#?}\""
msgstr "\"transposta: {:#?}\""

#: src/tuples-and-arrays/solution.md:17 src/tuples-and-arrays/solution.md:25
msgid "//\n"
msgstr "//\n"

#: src/references/shared.md:3
msgid ""
"A reference provides a way to access another value without taking "
"responsibility for the value, and is also called \"borrowing\". Shared "
"references are read-only, and the referenced data cannot change."
msgstr ""
"Uma refer√™ncia fornece uma maneira de acessar outro valor sem assumir a "
"responsabilidade pelo valor, e tamb√©m √© chamada de \"empr√©stimo\". "
"Refer√™ncias compartilhadas s√£o somente leitura e os dados referenciados n√£o "
"podem ser alterados."

#: src/references/shared.md:20
msgid ""
"A shared reference to a type `T` has type `&T`. A reference value is made "
"with the `&` operator. The `*` operator \"dereferences\" a reference, "
"yielding its value."
msgstr ""
"Uma refer√™ncia compartilhada a um tipo `T` tem tipo `&T`. Um valor de "
"refer√™ncia √© feito com o operador `&`. O operador `*` \"desreferencia\" uma "
"refer√™ncia, produzindo seu valor."

#: src/references/shared.md:24
msgid "Rust will statically forbid dangling references:"
msgstr "Rust estaticamente proibir√° refer√™ncias pendentes:"

#: src/references/shared.md:37
msgid ""
"A reference is said to \"borrow\" the value it refers to, and this is a good "
"model for students not familiar with pointers: code can use the reference to "
"access the value, but is still \"owned\" by the original variable. The "
"course will get into more detail on ownership in day 3."
msgstr ""
"Uma refer√™ncia √© dita que \"_borrow_\" (empresta) o valor a que se refere, e "
"este √© um bom modelo para estudantes n√£o familiarizados com ponteiros: o "
"c√≥digo pode usar a refer√™ncia para acessar o valor, mas ainda √© "
"\"_owned_\" (propriedade) da vari√°vel original. O curso entrar√° em mais "
"detalhes sobre _ownership_ no dia 3."

#: src/references/shared.md:42
msgid ""
"References are implemented as pointers, and a key advantage is that they can "
"be much smaller than the thing they point to. Students familiar with C or C+"
"+ will recognize references as pointers. Later parts of the course will "
"cover how Rust prevents the memory-safety bugs that come from using raw "
"pointers."
msgstr ""
"Refer√™ncias s√£o implementadas como ponteiros, e uma vantagem chave √© que "
"podem ser muito menores do que a coisa a que apontam. Os alunos "
"familiarizados com C ou C++ reconhecer√£o refer√™ncias como ponteiros. Partes "
"posteriores do curso abordar√£o como o Rust impede os bugs de seguran√ßa de "
"mem√≥ria que v√™m do uso de ponteiros brutos."

#: src/references/shared.md:47
msgid ""
"Rust does not automatically create references for you - the `&` is always "
"required."
msgstr ""
"O Rust n√£o cria automaticamente refer√™ncias para voc√™ - o `&` √© sempre "
"necess√°rio."

#: src/references/shared.md:50
msgid ""
"Rust will auto-dereference in some cases, in particular when invoking "
"methods (try `r.count_ones()`). There is no need for an `->` operator like "
"in C++."
msgstr ""
"Em alguns casos, o Rust desreferenciar√° automaticamente, em particular ao "
"invocar m√©todos (tente `ref_x.count_ones()`). N√£o h√° necessidade de um "
"operador `->` como em C++."

#: src/references/shared.md:53
msgid ""
"In this example, `r` is mutable so that it can be reassigned (`r = &b`). "
"Note that this re-binds `r`, so that it refers to something else. This is "
"different from C++, where assignment to a reference changes the referenced "
"value."
msgstr ""
"Neste exemplo, `r` √© mut√°vel para que possa ser reatribu√≠do (`r = &b`). "
"Observe que isso re-associa `r`, de modo que se refere a outra coisa. Isso √© "
"diferente do C++, onde a atribui√ß√£o a uma refer√™ncia altera o valor "
"referenciado."

#: src/references/shared.md:57
msgid ""
"A shared reference does not allow modifying the value it refers to, even if "
"that value was mutable. Try `*r = 'X'`."
msgstr ""
"Uma refer√™ncia compartilhada n√£o permite modificar o valor a que se refere, "
"mesmo que esse valor seja mut√°vel. Tente `*r = 'X'`."

#: src/references/shared.md:60
msgid ""
"Rust is tracking the lifetimes of all references to ensure they live long "
"enough. Dangling references cannot occur in safe Rust. `x_axis` would return "
"a reference to `point`, but `point` will be deallocated when the function "
"returns, so this will not compile."
msgstr ""
"O Rust est√° rastreando os tempos de vida de todas as refer√™ncias para "
"garantir que elas vivam tempo suficiente. Refer√™ncias pendentes n√£o podem "
"ocorrer em Rust seguro. `x_axis` retornaria uma refer√™ncia a `point`, mas "
"`point` ser√° desalocado quando a fun√ß√£o retornar, ent√£o isso n√£o ser√° "
"compilado."

#: src/references/shared.md:65
msgid "We will talk more about borrowing when we get to ownership."
msgstr "Falaremos mais sobre empr√©stimos quando chegarmos √† _ownership_."

#: src/references/exclusive.md:3
msgid ""
"Exclusive references, also known as mutable references, allow changing the "
"value they refer to. They have type `&mut T`."
msgstr ""
"Refer√™ncias exclusivas, tamb√©m conhecidas como refer√™ncias mut√°veis, "
"permitem alterar o valor a que se referem. Eles t√™m tipo `&mut T`."

#: src/references/exclusive.md:21
msgid ""
"\"Exclusive\" means that only this reference can be used to access the "
"value. No other references (shared or exclusive) can exist at the same time, "
"and the referenced value cannot be accessed while the exclusive reference "
"exists. Try making an `&point.0` or changing `point.0` while `x_coord` is "
"alive."
msgstr ""
"\"Exclusivo\" significa que apenas esta refer√™ncia pode ser usada para "
"acessar o valor. Nenhuma outra refer√™ncia (compartilhada ou exclusiva) pode "
"existir ao mesmo tempo, e o valor referenciado n√£o pode ser acessado "
"enquanto a refer√™ncia exclusiva existir. Tente fazer um `&point.0` ou "
"alterar `point.0` enquanto `x_coord` estiver ativo."

#: src/references/exclusive.md:26
msgid ""
"Be sure to note the difference between `let mut x_coord: &i32` and `let "
"x_coord: &mut i32`. The first one represents a shared reference which can be "
"bound to different values, while the second represents an exclusive "
"reference to a mutable value."
msgstr ""
"Certifique-se de observar a diferen√ßa entre `let mut x_coord: &i32` e `let "
"rx_coord: &mut i32`. O primeiro representa uma refer√™ncia mut√°vel que pode "
"ser ligada a diferentes valores, enquanto o segundo representa uma "
"refer√™ncia exclusiva a um valor mut√°vel."

#: src/references/exercise.md:3
msgid ""
"We will create a few utility functions for 3-dimensional geometry, "
"representing a point as `[f64;3]`. It is up to you to determine the function "
"signatures."
msgstr ""
"Vamos criar algumas fun√ß√µes de utilidade para geometria tridimensional, "
"representando um ponto como `[f64;3]`. Cabe a voc√™ determinar as assinaturas "
"das fun√ß√µes."

#: src/references/exercise.md:7
msgid ""
"// Calculate the magnitude of a vector by summing the squares of its "
"coordinates\n"
"// and taking the square root. Use the `sqrt()` method to calculate the "
"square\n"
"// root, like `v.sqrt()`.\n"
msgstr ""
"// Calcule a magnitude de um vetor somando os quadrados de suas coordenadas\n"
"// e tirando a raiz quadrada. Use o m√©todo `sqrt()` para calcular a raiz "
"quadrada,\n"
"// como `v.sqrt()`.\n"

#: src/references/exercise.md:15
msgid ""
"// Normalize a vector by calculating its magnitude and dividing all of its\n"
"// coordinates by that magnitude.\n"
msgstr ""
"// Normalize um vetor calculando sua magnitude e dividindo todas as suas\n"
"// coordenadas por essa magnitude.\n"

#: src/references/exercise.md:23
msgid "// Use the following `main` to test your work.\n"
msgstr "// Use o seguinte `main` para testar seu trabalho.\n"

#: src/references/exercise.md:27 src/references/solution.md:22
msgid "\"Magnitude of a unit vector: {}\""
msgstr "\"Magnitude de um vetor unit√°rio: {}\""

#: src/references/exercise.md:30 src/references/solution.md:25
msgid "\"Magnitude of {v:?}: {}\""
msgstr "\"Magnitude de {v:?}: {}\""

#: src/references/exercise.md:32 src/references/solution.md:27
msgid "\"Magnitude of {v:?} after normalization: {}\""
msgstr "\"Magnitude de {v:?} ap√≥s normaliza√ß√£o: {}\""

#: src/references/solution.md:4
msgid "/// Calculate the magnitude of the given vector.\n"
msgstr "/// Calcule a magnitude do vetor dado.\n"

#: src/references/solution.md:12
msgid ""
"/// Change the magnitude of the vector to 1.0 without changing its "
"direction.\n"
msgstr "/// Altere a magnitude do vetor para 1.0 sem alterar sua dire√ß√£o.\n"

#: src/user-defined-types/named-structs.md:3
msgid "Like C and C++, Rust has support for custom structs:"
msgstr "Como C e C++, Rust tem suporte para `structs` personalizadas:"

#: src/user-defined-types/named-structs.md:12
msgid "\"{} is {} years old\""
msgstr "\"{} tem {} anos.\""

#: src/user-defined-types/named-structs.md:16
#: src/android/interoperability/with-c/bindgen.md:87
msgid "\"Peter\""
msgstr "\"Peter\""

#: src/user-defined-types/named-structs.md:22
msgid "\"Avery\""
msgstr "\"Avery\""

#: src/user-defined-types/named-structs.md:27
msgid "\"Jackie\""
msgstr "\"Jackie\""

#: src/user-defined-types/named-structs.md:36
msgid "Structs work like in C or C++."
msgstr "Structs funcionam como em C ou C++."

#: src/user-defined-types/named-structs.md:37
msgid "Like in C++, and unlike in C, no typedef is needed to define a type."
msgstr ""
"Como em C++, e ao contr√°rio de C, nenhum _`typedef`_ √© necess√°rio para "
"definir um tipo."

#: src/user-defined-types/named-structs.md:38
msgid "Unlike in C++, there is no inheritance between structs."
msgstr "Ao contr√°rio do C++, n√£o h√° heran√ßa entre _structs_."

#: src/user-defined-types/named-structs.md:39
msgid ""
"This may be a good time to let people know there are different types of "
"structs."
msgstr ""
"Este pode ser um bom momento para que as pessoas saibam que existem "
"diferentes tipos de _structs_."

#: src/user-defined-types/named-structs.md:41
msgid ""
"Zero-sized structs (e.g. `struct Foo;`) might be used when implementing a "
"trait on some type but don‚Äôt have any data that you want to store in the "
"value itself."
msgstr ""
"_Structs_ de tamanho zero (por exemplo, `struct Foo;`) podem ser usadas ao "
"implementar um _trait_ em algum tipo, mas n√£o possuem nenhum dado que voc√™ "
"deseja armazenar nelas."

#: src/user-defined-types/named-structs.md:44
msgid ""
"The next slide will introduce Tuple structs, used when the field names are "
"not important."
msgstr ""
"O pr√≥ximo slide apresentar√° as _structs_ de tuplas usadas quando o nome dos "
"campos n√£o s√£o importantes."

#: src/user-defined-types/named-structs.md:46
msgid ""
"If you already have variables with the right names, then you can create the "
"struct using a shorthand."
msgstr ""
"Se voc√™ j√° tiver vari√°veis com os nomes corretos, poder√° criar a _struct_ "
"usando uma abrevia√ß√£o."

#: src/user-defined-types/named-structs.md:48
#, fuzzy
msgid ""
"The syntax `..avery` allows us to copy the majority of the fields from the "
"old struct without having to explicitly type it all out. It must always be "
"the last element."
msgstr ""
"A sintaxe `..avery` permite copiar a maioria dos campos de uma _struct_ sem "
"precisar explicitar seus tipos. Ela deve ser sempre o √∫ltimo elemento."

#: src/user-defined-types/tuple-structs.md:7
msgid "If the field names are unimportant, you can use a tuple struct:"
msgstr ""
"Se os nomes dos campos n√£o forem importantes, voc√™ pode usar uma _struct_ de "
"tupla:"

#: src/user-defined-types/tuple-structs.md:14
msgid "\"({}, {})\""
msgstr "\"({}, {})\""

#: src/user-defined-types/tuple-structs.md:18
msgid "This is often used for single-field wrappers (called newtypes):"
msgstr ""
"Isso √© comumente utilizado para _wrappers_ (inv√≥lucros) com campo √∫nico "
"(chamados _newtypes_):"

#: src/user-defined-types/tuple-structs.md:25
msgid "\"Ask a rocket scientist at NASA\""
msgstr "\"Pergunte para um cientista de foguetes da NASA\""

#: src/user-defined-types/tuple-structs.md:29
#: src/android/interoperability/cpp/cpp-bridge.md:50
#: src/bare-metal/microcontrollers/type-state.md:14
#: src/async/pitfalls/cancellation.md:98 src/async/pitfalls/cancellation.md:101
msgid "// ...\n"
msgstr "// ...\n"

#: src/user-defined-types/tuple-structs.md:40
msgid ""
"Newtypes are a great way to encode additional information about the value in "
"a primitive type, for example:"
msgstr ""
"_Newtypes_ s√£o uma √≥tima maneira de codificar informa√ß√µes adicionais sobre o "
"valor em um tipo primitivo, por exemplo:"

#: src/user-defined-types/tuple-structs.md:42
msgid "The number is measured in some units: `Newtons` in the example above."
msgstr "O n√∫mero √© medido em algumas unidades: `Newtons` no exemplo acima."

#: src/user-defined-types/tuple-structs.md:43
msgid ""
"The value passed some validation when it was created, so you no longer have "
"to validate it again at every use: `PhoneNumber(String)` or `OddNumber(u32)`."
msgstr ""
"O valor passou por alguma valida√ß√£o quando foi criado, ent√£o n√£o √© preciso "
"valid√°-lo novamente a cada uso: `PhoneNumber(String)` ou `OddNumber(u32)`."

#: src/user-defined-types/tuple-structs.md:46
msgid ""
"Demonstrate how to add a `f64` value to a `Newtons` type by accessing the "
"single field in the newtype."
msgstr ""
"Demonstre como somar um valor `f64` em um valor do tipo `Newtons` acessando "
"o campo √∫nico no _newtype_."

#: src/user-defined-types/tuple-structs.md:48
msgid ""
"Rust generally doesn‚Äôt like inexplicit things, like automatic unwrapping or "
"for instance using booleans as integers."
msgstr ""
"Geralmente, Rust n√£o gosta de coisas impl√≠citas, como _unwrapping_ "
"autom√°tico ou, por exemplo, usar booleanos como inteiros."

#: src/user-defined-types/tuple-structs.md:50
msgid "Operator overloading is discussed on Day 3 (generics)."
msgstr "Sobrecarga de operadores √© discutido no Dia 3 (gen√©ricos)."

#: src/user-defined-types/tuple-structs.md:51
msgid ""
"The example is a subtle reference to the [Mars Climate Orbiter](https://en."
"wikipedia.org/wiki/Mars_Climate_Orbiter) failure."
msgstr ""
"O examplo √© uma refer√™ncia sutil a falha do [Orbitador Clim√°tico de Marte]"
"(https://pt.wikipedia.org/wiki/Mars_Climate_Orbiter)."

#: src/user-defined-types/enums.md:3
msgid ""
"The `enum` keyword allows the creation of a type which has a few different "
"variants:"
msgstr ""
"A palavra-chave `enum` permite a cria√ß√£o de um tipo que possui algumas "
"variantes diferentes:"

#: src/user-defined-types/enums.md:15
msgid "// Simple variant\n"
msgstr "// Variante simples\n"

#: src/user-defined-types/enums.md:16
#, fuzzy
msgid "// Tuple variant\n"
msgstr "// Variante tupla\n"

#: src/user-defined-types/enums.md:17
#, fuzzy
msgid "// Struct variant\n"
msgstr "// Variante struct\n"

#: src/user-defined-types/enums.md:22
#, fuzzy
msgid "\"On this turn: {:?}\""
msgstr "\"Nesta rodada: {:?}\""

#: src/user-defined-types/enums.md:30
msgid "Enumerations allow you to collect a set of values under one type."
msgstr "Enumera√ß√µes permitem coletar um conjunto de valores em um tipo"

#: src/user-defined-types/enums.md:31
msgid ""
"`Direction` is a type with variants. There are two values of `Direction`: "
"`Direction::Left` and `Direction::Right`."
msgstr ""
"`Direction` √© um tipo com variantes. Existem dois valores de `Direction`: "
"`Direction::Left` e `Direction::Right`."

#: src/user-defined-types/enums.md:33
msgid ""
"`PlayerMove` is a type with three variants. In addition to the payloads, "
"Rust will store a discriminant so that it knows at runtime which variant is "
"in a `PlayerMove` value."
msgstr ""
"`PlayerMove` √© um tipo com tr√™s variantes. Al√©m dos _payloads_, o Rust "
"armazenar√° um discriminante para que ele saiba em tempo de execu√ß√£o qual "
"variante est√° em um valor `PlayerMove`."

#: src/user-defined-types/enums.md:36
msgid "This might be a good time to compare structs and enums:"
msgstr "Este pode ser um bom momento para comparar structs e enums:"

#: src/user-defined-types/enums.md:37
msgid ""
"In both, you can have a simple version without fields (unit struct) or one "
"with different types of fields (variant payloads)."
msgstr ""
"Em ambos, voc√™ pode ter uma vers√£o simples sem campos (_unit struct_, ou "
"estrutura unit√°ria) ou uma com diferentes tipos de campo (_variant payloads_ "
"ou _cargas de variante_)."

#: src/user-defined-types/enums.md:39
msgid ""
"You could even implement the different variants of an enum with separate "
"structs but then they wouldn‚Äôt be the same type as they would if they were "
"all defined in an enum."
msgstr ""
"Voc√™ pode at√© mesmo implementar as diferentes variantes de uma _enum_ com "
"_structs_ separadas, mas elas n√£o seriam do mesmo tipo, como seriam se todas "
"fossem definidas em uma _enum_. "

#: src/user-defined-types/enums.md:42
msgid "Rust uses minimal space to store the discriminant."
msgstr "O Rust usa espa√ßo m√≠nimo para armazenar o discriminante."

#: src/user-defined-types/enums.md:43
msgid "If necessary, it stores an integer of the smallest required size"
msgstr "Se necess√°rio, armazena um inteiro do menor tamanho necess√°rio"

#: src/user-defined-types/enums.md:44
msgid ""
"If the allowed variant values do not cover all bit patterns, it will use "
"invalid bit patterns to encode the discriminant (the \"niche "
"optimization\"). For example, `Option<&u8>` stores either a pointer to an "
"integer or `NULL` for the `None` variant."
msgstr ""

#: src/user-defined-types/enums.md:48
msgid ""
"You can control the discriminant if needed (e.g., for compatibility with C):"
msgstr ""
"√â poss√≠vel controlar o discriminante se necess√°rio (p.ex., para "
"compatibilidade com C):"

#: src/user-defined-types/enums.md:66
msgid ""
"Without `repr`, the discriminant type takes 2 bytes, because 10001 fits 2 "
"bytes."
msgstr ""
"Sem `repr`, o tipo do discriminante usa 2 bytes, porque 10001 cabe em 2 "
"bytes."

#: src/user-defined-types/enums.md:69
#: src/user-defined-types/static-and-const.md:75
#: src/memory-management/review.md:50 src/memory-management/move.md:99
#: src/smart-pointers/box.md:83 src/borrowing/shared.md:32
msgid "More to Explore"
msgstr "Mais para Explorar"

#: src/user-defined-types/enums.md:71
msgid ""
"Rust has several optimizations it can employ to make enums take up less "
"space."
msgstr ""
"O Rust tem v√°rias otimiza√ß√µes que pode empregar para fazer com que as enums "
"ocupem menos espa√ßo."

#: src/user-defined-types/enums.md:73
msgid ""
"Null pointer optimization: For [some types](https://doc.rust-lang.org/std/"
"option/#representation), Rust guarantees that `size_of::<T>()` equals "
"`size_of::<Option<T>>()`."
msgstr ""
"Otimiza√ß√£o de ponteiro nulo: para [alguns tipos](https://doc.rust-lang.org/"
"std/option/#representation), o Rust garante que `size_of::<T>()` √© igual a  "
"`size_of::<Option<T>>()`."

#: src/user-defined-types/enums.md:77
msgid ""
"Example code if you want to show how the bitwise representation _may_ look "
"like in practice. It's important to note that the compiler provides no "
"guarantees regarding this representation, therefore this is totally unsafe."
msgstr ""
"C√≥digo de exemplo caso queira mostrar como a representa√ß√£o em bits _pode_ "
"ser na pr√°tica. √â importante apontar que o compilador n√£o oferece nenhuma "
"garantia a respeito dessa representa√ß√£o, portanto isso √© completamente "
"inseguro."

#: src/user-defined-types/static-and-const.md:3
msgid ""
"Static and constant variables are two different ways to create globally-"
"scoped values that cannot be moved or reallocated during the execution of "
"the program."
msgstr ""
"Vari√°veis est√°ticas e constantes s√£o duas maneiras diferentes de criar "
"valores com escopo global que n√£o podem ser movidos ou realocados durante a "
"execu√ß√£o do programa. "

#: src/user-defined-types/static-and-const.md:6
msgid "`const`"
msgstr "`const`"

#: src/user-defined-types/static-and-const.md:8
msgid ""
"Constant variables are evaluated at compile time and their values are "
"inlined wherever they are used:"
msgstr ""
"Constantes s√£o avaliadas em tempo de compila√ß√£o e seus valores s√£o "
"expandidos no pr√≥prio local (_inlined_) onde quer que sejam usados:"

#: src/user-defined-types/static-and-const.md:31
msgid ""
"According to the [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html) these are inlined upon use."
msgstr ""
"De acordo com o [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html), eles s√£o expandidos no pr√≥prio local (_inline_) quando "
"utilizados."

#: src/user-defined-types/static-and-const.md:33
msgid ""
"Only functions marked `const` can be called at compile time to generate "
"`const` values. `const` functions can however be called at runtime."
msgstr ""
"Somente fun√ß√µes marcadas como `const` podem ser chamadas em tempo de "
"compila√ß√£o para gerar valores `const`. As fun√ß√µes `const` podem, entretanto, "
"ser chamadas em tempo de execu√ß√£o."

#: src/user-defined-types/static-and-const.md:36
msgid "`static`"
msgstr "`static`"

#: src/user-defined-types/static-and-const.md:38
msgid ""
"Static variables will live during the whole execution of the program, and "
"therefore will not move:"
msgstr ""
"Vari√°veis est√°ticas permanecer√£o v√°lidas durante toda a execu√ß√£o do programa "
"e, portanto, n√£o ser√£o movidas:"

#: src/user-defined-types/static-and-const.md:42
msgid "\"Welcome to RustOS 3.14\""
msgstr "\"Bem-vindo ao RustOS 3.14\""

#: src/user-defined-types/static-and-const.md:45
msgid "\"{BANNER}\""
msgstr "\"{BANNER}\""

#: src/user-defined-types/static-and-const.md:49
msgid ""
"As noted in the [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html), these are not inlined upon use and have an actual "
"associated memory location. This is useful for unsafe and embedded code, and "
"the variable lives through the entirety of the program execution. When a "
"globally-scoped value does not have a reason to need object identity, "
"`const` is generally preferred."
msgstr ""
"Conforme observado no [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-"
"const-vs-static.html), eles n√£o s√£o expandidos no local (_inlined_) quando "
"utilizados e possuem um local de mem√≥ria real associado. Isso √© √∫til para "
"c√≥digo inseguro (_unsafe_) e embarcado, e a vari√°vel √© v√°lida durante toda a "
"execu√ß√£o do programa. Quando um valor de escopo global n√£o tem uma raz√£o "
"para precisar de identidade de objeto, geralmente `const` √© preferido."

#: src/user-defined-types/static-and-const.md:57
msgid "Mention that `const` behaves semantically similar to C++'s `constexpr`."
msgstr ""
"Mencione que `const` se comporta semanticamente de maneira similar ao "
"`constexpr` de C++."

#: src/user-defined-types/static-and-const.md:58
msgid ""
"`static`, on the other hand, is much more similar to a `const` or mutable "
"global variable in C++."
msgstr ""
"Por outro lado, `static` √© muito mais similar a um `const` ou vari√°vel "
"global mut√°vel em C++."

#: src/user-defined-types/static-and-const.md:60
msgid ""
"`static` provides object identity: an address in memory and state as "
"required by types with interior mutability such as `Mutex<T>`."
msgstr ""
"`static` fornece identidade de objeto: um endere√ßo na mem√≥ria e estado "
"conforme exigido por tipos com mutabilidade interior tais como `Mutex<T>`."

#: src/user-defined-types/static-and-const.md:62
msgid ""
"It isn't super common that one would need a runtime evaluated constant, but "
"it is helpful and safer than using a static."
msgstr ""
"N√£o √© muito comum que algu√©m precise de uma constante avaliada em tempo de "
"execu√ß√£o, mas √© √∫til e mais seguro do que usar uma vari√°vel est√°tica."

#: src/user-defined-types/static-and-const.md:65
msgid "Properties table:"
msgstr "Tabela de propriedades:"

#: src/user-defined-types/static-and-const.md:67
#: src/chromium/adding-third-party-crates.md:6
msgid "Property"
msgstr "Propriedade"

#: src/user-defined-types/static-and-const.md:67
msgid "Static"
msgstr "Static"

#: src/user-defined-types/static-and-const.md:67
msgid "Constant"
msgstr "Constant"

#: src/user-defined-types/static-and-const.md:69
msgid "Has an address in memory"
msgstr "Possui um endere√ßo na mem√≥ria"

#: src/user-defined-types/static-and-const.md:69
#: src/user-defined-types/static-and-const.md:70
#: src/user-defined-types/static-and-const.md:72
#: src/user-defined-types/static-and-const.md:73
#: src/chromium/adding-third-party-crates/resolving-problems.md:12
#: src/chromium/adding-third-party-crates/resolving-problems.md:13
#: src/chromium/adding-third-party-crates/resolving-problems.md:14
msgid "Yes"
msgstr "Sim"

#: src/user-defined-types/static-and-const.md:69
msgid "No (inlined)"
msgstr "N√£o (_inlined_, i.e., expandida no local)"

#: src/user-defined-types/static-and-const.md:70
msgid "Lives for the entire duration of the program"
msgstr "√â v√°lida durante toda a execu√ß√£o do programa"

#: src/user-defined-types/static-and-const.md:70
#: src/user-defined-types/static-and-const.md:71
#: src/user-defined-types/static-and-const.md:73
#: src/chromium/adding-third-party-crates/resolving-problems.md:15
#: src/chromium/adding-third-party-crates/resolving-problems.md:16
msgid "No"
msgstr "N√£o"

#: src/user-defined-types/static-and-const.md:71
msgid "Can be mutable"
msgstr "Pode ser mut√°vel"

#: src/user-defined-types/static-and-const.md:71
msgid "Yes (unsafe)"
msgstr "Sim (inseguro)"

#: src/user-defined-types/static-and-const.md:72
msgid "Evaluated at compile time"
msgstr "Avaliada em tempo de compila√ß√£o"

#: src/user-defined-types/static-and-const.md:72
msgid "Yes (initialised at compile time)"
msgstr "Sim (inicializada em tempo de compila√ß√£o)"

#: src/user-defined-types/static-and-const.md:73
msgid "Inlined wherever it is used"
msgstr "_Inlined_ (expandida no local) onde quer que seja utilizada"

#: src/user-defined-types/static-and-const.md:77
msgid ""
"Because `static` variables are accessible from any thread, they must be "
"`Sync`. Interior mutability is possible through a [`Mutex`](https://doc.rust-"
"lang.org/std/sync/struct.Mutex.html), atomic or similar."
msgstr ""
"Como vari√°veis est√°ticas (`static`) s√£o acess√≠veis de qualquer _thread_, "
"elas precisam ser `Sync`. A mutabilidade interior √© poss√≠vel atrav√©s de um "
"[`Mutex`](https://doc.rust-lang.org/std/sync/struct.Mutex.html), at√¥mico ou "
"similar."

#: src/user-defined-types/static-and-const.md:82
msgid "Thread-local data can be created with the macro `std::thread_local`."
msgstr ""
"Dados locais da thread podem ser criados com a macro `std::thread_local`."

#: src/user-defined-types/aliases.md:3
msgid ""
"A type alias creates a name for another type. The two types can be used "
"interchangeably."
msgstr ""
"Um _alias_ de tipo cria um nome para outro tipo. Os dois tipos podem ser "
"usados ‚Äã‚Äãde forma intercambi√°vel."

#: src/user-defined-types/aliases.md:13
msgid "// Aliases are more useful with long, complex types:\n"
msgstr "// _Aliases_ s√£o mais √∫teis com tipos longos e complexos:\n"

#: src/user-defined-types/aliases.md:22
msgid "C programmers will recognize this as similar to a `typedef`."
msgstr "Programadores C reconhecer√£o isso como semelhante a um `typedef`."

#: src/user-defined-types/exercise.md:3
msgid ""
"We will create a data structure to represent an event in an elevator control "
"system. It is up to you to define the types and functions to construct "
"various events. Use `#[derive(Debug)]` to allow the types to be formatted "
"with `{:?}`."
msgstr ""
"Vamos criar uma estrutura de dados para representar um evento em um sistema "
"de controle de elevador. Cabe a voc√™ definir os tipos e fun√ß√µes para "
"construir v√°rios eventos. Use `#[derive(Debug)]` para permitir que os tipos "
"sejam formatados com `{:?}`."

#: src/user-defined-types/exercise.md:7
msgid ""
"This exercise only requires creating and populating data structures so that "
"`main` runs without errors. The next part of the course will cover getting "
"data out of these structures."
msgstr ""
"Este exerc√≠cio requer apenas a cria√ß√£o e o preenchimento de estruturas de "
"dados para que o `main` seja executado sem erros. A pr√≥xima parte do curso "
"abordar√° a obten√ß√£o de dados dessas estruturas."

#: src/user-defined-types/exercise.md:12 src/user-defined-types/solution.md:4
msgid ""
"/// An event in the elevator system that the controller must react to.\n"
msgstr ""
"/// Um evento no sistema de elevador ao qual o controlador deve reagir.\n"

#: src/user-defined-types/exercise.md:15
msgid "// TODO: add required variants\n"
msgstr "// TODO: adicionar variantes necess√°rias\n"

#: src/user-defined-types/exercise.md:17 src/user-defined-types/solution.md:22
msgid "/// A direction of travel.\n"
msgstr "/// Uma dire√ß√£o da viagem.\n"

#: src/user-defined-types/exercise.md:24 src/user-defined-types/solution.md:39
msgid "/// The car has arrived on the given floor.\n"
msgstr "/// O elevador chegou no andar dado.\n"

#: src/user-defined-types/exercise.md:29 src/user-defined-types/solution.md:44
msgid "/// The car doors have opened.\n"
msgstr "/// As portas do elevador se abriram.\n"

#: src/user-defined-types/exercise.md:34 src/user-defined-types/solution.md:49
msgid "/// The car doors have closed.\n"
msgstr "/// As portas do elevador se fecharam.\n"

#: src/user-defined-types/exercise.md:39 src/user-defined-types/solution.md:54
msgid ""
"/// A directional button was pressed in an elevator lobby on the given "
"floor.\n"
msgstr ""
"/// Um bot√£o direcional foi pressionado em um sagu√£o de elevador no andar "
"dado.\n"

#: src/user-defined-types/exercise.md:44 src/user-defined-types/solution.md:59
msgid "/// A floor button was pressed in the elevator car.\n"
msgstr "/// Um bot√£o de andar foi pressionado no elevador.\n"

#: src/user-defined-types/exercise.md:52 src/user-defined-types/solution.md:67
msgid "\"A ground floor passenger has pressed the up button: {:?}\""
msgstr "Um passageiro do t√©rreo pressionou o bot√£o para subir: {:?}"

#: src/user-defined-types/exercise.md:55 src/user-defined-types/solution.md:70
msgid "\"The car has arrived on the ground floor: {:?}\""
msgstr "\"O elevador chegou no t√©rreo: {:?}\""

#: src/user-defined-types/exercise.md:56 src/user-defined-types/solution.md:71
msgid "\"The car door opened: {:?}\""
msgstr "\"A porta do elevador se abriu: {:?}\""

#: src/user-defined-types/exercise.md:58 src/user-defined-types/solution.md:73
msgid "\"A passenger has pressed the 3rd floor button: {:?}\""
msgstr "\"Um passageiro pressionou o bot√£o do 3¬∫ andar: {:?}\""

#: src/user-defined-types/exercise.md:61 src/user-defined-types/solution.md:76
msgid "\"The car door closed: {:?}\""
msgstr "\"A porta do elevador se fechou: {:?}\""

#: src/user-defined-types/exercise.md:62 src/user-defined-types/solution.md:77
msgid "\"The car has arrived on the 3rd floor: {:?}\""
msgstr "\"O elevador chegou no 3¬∫ andar: {:?}\""

#: src/user-defined-types/solution.md:7
msgid "/// A button was pressed.\n"
msgstr "/// Um bot√£o foi pressionado.\n"

#: src/user-defined-types/solution.md:10
msgid "/// The car has arrived at the given floor.\n"
msgstr "/// O elevador chegou no andar dado.\n"

#: src/user-defined-types/solution.md:13
msgid "/// The car's doors have opened.\n"
msgstr "/// As portas do elevador se abriram.\n"

#: src/user-defined-types/solution.md:16
msgid "/// The car's doors have closed.\n"
msgstr "/// As portas do elevador se fecharam.\n"

#: src/user-defined-types/solution.md:19
msgid "/// A floor is represented as an integer.\n"
msgstr "/// Um andar √© representado como um inteiro.\n"

#: src/user-defined-types/solution.md:29
msgid "/// A user-accessible button.\n"
msgstr "/// Um bot√£o acess√≠vel ao usu√°rio.\n"

#: src/user-defined-types/solution.md:33
msgid "/// A button in the elevator lobby on the given floor.\n"
msgstr "/// Um bot√£o no sagu√£o do elevador no andar dado.\n"

#: src/user-defined-types/solution.md:36
msgid "/// A floor button within the car.\n"
msgstr "/// Um bot√£o de andar dentro do elevador.\n"

#: src/welcome-day-2.md:1
msgid "Welcome to Day 2"
msgstr "Bem-vindos ao Dia 2"

#: src/welcome-day-2.md:3
msgid ""
"Now that we have seen a fair amount of Rust, today will focus on Rust's type "
"system:"
msgstr ""
"Agora que vimos uma boa quantidade de Rust, hoje focaremos no sistema de "
"tipos do Rust:"

#: src/welcome-day-2.md:6
msgid "Pattern matching: extracting data from structures."
msgstr "Correspond√™ncia de padr√µes: extraindo de dados de estruturas."

#: src/welcome-day-2.md:7
msgid "Methods: associating functions with types."
msgstr "M√©todos: associando fun√ß√µes com tipos."

#: src/welcome-day-2.md:8
msgid "Traits: behaviors shared by multiple types."
msgstr "Traits: comportamentos compartilhados por m√∫ltiplos tipos."

#: src/welcome-day-2.md:9
msgid "Generics: parameterizing types on other types."
msgstr "Gen√©ricos: parametrizando tipos em outros tipos."

#: src/welcome-day-2.md:10
msgid ""
"Standard library types and traits: a tour of Rust's rich standard library."
msgstr ""
"Tipos e traits da biblioteca padr√£o: um passeio pela rica biblioteca padr√£o "
"do Rust."

#: src/pattern-matching/destructuring.md:3
msgid "Like tuples, structs and enums can also be destructured by matching:"
msgstr ""
"Como tuplas, _structs_ e _enums_ tamb√©m podem ser desestruturados por meio "
"de correspond√™ncia:"

#: src/pattern-matching/destructuring.md:5
#: src/pattern-matching/destructuring.md:58
msgid "Structs"
msgstr "Structs"

#: src/pattern-matching/destructuring.md:17
msgid "\"x.0 = 1, b = {b}, y = {y}\""
msgstr "\"x.0 = 1, b = {b}, y = {y}\""

#: src/pattern-matching/destructuring.md:18
msgid "\"y = 2, x = {i:?}\""
msgstr "\"y = 2, x = {i:?}\""

#: src/pattern-matching/destructuring.md:19
msgid "\"y = {y}, other fields were ignored\""
msgstr "\"y = {y}, outros campos foram ignorados\""

#: src/pattern-matching/destructuring.md:26
msgid ""
"Patterns can also be used to bind variables to parts of your values. This is "
"how you inspect the structure of your types. Let us start with a simple "
"`enum` type:"
msgstr ""
"Os padr√µes tamb√©m podem ser usados para vincular vari√°veis a partes de seus "
"valores. √â assim que voc√™ inspeciona a estrutura de seus tipos. Vamos "
"come√ßar com um tipo `enum` simples:"

#: src/pattern-matching/destructuring.md:39
msgid "\"cannot divide {n} into two equal parts\""
msgstr "\"n√£o √© poss√≠vel dividir {n} em duas partes iguais\""

#: src/pattern-matching/destructuring.md:46
msgid "\"{n} divided in two is {half}\""
msgstr "\"{n} divido em dois √© {half}\""

#: src/pattern-matching/destructuring.md:47
msgid "\"sorry, an error happened: {msg}\""
msgstr "\"desculpe, aconteceu um erro: {msg}\""

#: src/pattern-matching/destructuring.md:52
msgid ""
"Here we have used the arms to _destructure_ the `Result` value. In the first "
"arm, `half` is bound to the value inside the `Ok` variant. In the second "
"arm, `msg` is bound to the error message."
msgstr ""
"Aqui usamos a verifica√ß√£o de correspond√™ncia para _desestruturar_ o valor "
"contido em `Result`. Na primeira verifica√ß√£o de correspond√™ncia, `half` est√° "
"vinculado ao valor dentro da variante `Ok`. Na segunda, `msg` est√° vinculado "
"√† mensagem de erro."

#: src/pattern-matching/destructuring.md:60
msgid "Change the literal values in `foo` to match with the other patterns."
msgstr "Modifique os valores em `foo` para corresponder com os outros padr√µes."

#: src/pattern-matching/destructuring.md:61
msgid "Add a new field to `Foo` and make changes to the pattern as needed."
msgstr ""
"Adicione um novo campo a `Foo` e fa√ßa mudan√ßas nos padr√µes conforme "
"necess√°rio."

#: src/pattern-matching/destructuring.md:62
msgid ""
"The distinction between a capture and a constant expression can be hard to "
"spot. Try changing the `2` in the second arm to a variable, and see that it "
"subtly doesn't work. Change it to a `const` and see it working again."
msgstr ""
"A diferen√ßa entre uma captura (_capture_) e uma express√£o constante pode ser "
"dif√≠cil de perceber. Tente modificar o `2` no segundo bra√ßo para uma "
"vari√°vel, e veja que, de forma s√∫til, n√£o funciona. Mude para `const` e veja "
"funcionando novamente."

#: src/pattern-matching/destructuring.md:70
msgid ""
"The `if`/`else` expression is returning an enum that is later unpacked with "
"a `match`."
msgstr ""
"A express√£o `if`/`else` est√° retornando um `enum` que √© posteriormente "
"descompactado com um `match`."

#: src/pattern-matching/destructuring.md:72
msgid ""
"You can try adding a third variant to the enum definition and displaying the "
"errors when running the code. Point out the places where your code is now "
"inexhaustive and how the compiler tries to give you hints."
msgstr ""
"Voc√™ pode tentar adicionar uma terceira variante √† defini√ß√£o de Enum e "
"exibir os erros ao executar o c√≥digo. Aponte os lugares onde seu c√≥digo "
"agora √© \"n√£o exaustivo\" e como o compilador tenta lhe dar dicas."

#: src/pattern-matching/destructuring.md:75
msgid ""
"The values in the enum variants can only be accessed after being pattern "
"matched."
msgstr ""
"Os valores nas variantes de uma _enum_ s√≥ podem ser acessados ap√≥s uma "
"correspond√™ncia de padr√£o."

#: src/pattern-matching/destructuring.md:77
msgid ""
"Demonstrate what happens when the search is inexhaustive. Note the advantage "
"the Rust compiler provides by confirming when all cases are handled."
msgstr ""
"Demonstre o que acontece quando a busca n√£o abrange todas as possibilidades. "
"Observe a vantagem que o compilador Rust fornece ao confirmar quando todos "
"os casos s√£o tratados."

#: src/pattern-matching/destructuring.md:79
msgid ""
"Save the result of `divide_in_two` in the `result` variable and `match` it "
"in a loop. That won't compile because `msg` is consumed when matched. To fix "
"it, match `&result` instead of `result`. That will make `msg` a reference so "
"it won't be consumed. This [\"match ergonomics\"](https://rust-lang.github."
"io/rfcs/2005-match-ergonomics.html) appeared in Rust 2018. If you want to "
"support older Rust, replace `msg` with `ref msg` in the pattern."
msgstr ""
"Salve o resultado de `divide_in_two` na vari√°vel `result` e fa√ßa uma "
"correspond√™ncia de padr√£o (`match`) em um loop. Isso n√£o ir√° compilar porque "
"`msg` √© consumido quando correspondido. Para corrigir, fa√ßa uma "
"correspond√™ncia de padr√£o em `&result` ao inv√©s de `result`. Isso far√° com "
"que `msg` seja uma refer√™ncia, de forma que n√£o ser√° consumido. Essa "
"[\"ergonomia de correspond√™ncia\"](https://rust-lang.github.io/rfcs/2005-"
"match-ergonomics.html) apareceu no Rust 2018. Se voc√™ quiser suportar "
"vers√µes mais antigas do Rust, substitua `msg` por `ref msg` no padr√£o."

#: src/pattern-matching/let-control-flow.md:3
msgid ""
"Rust has a few control flow constructs which differ from other languages. "
"They are used for pattern matching:"
msgstr ""
"Rust possui algumas constru√ß√µes de fluxo de controle que diferem de outras "
"linguagens. Elas s√£o usadas para correspond√™ncia de padr√µes:"

#: src/pattern-matching/let-control-flow.md:6
#: src/pattern-matching/let-control-flow.md:10
msgid "`if let` expressions"
msgstr "Express√µes `if let`"

#: src/pattern-matching/let-control-flow.md:7
msgid "`while let` expressions"
msgstr "Express√µes `while let`"

#: src/pattern-matching/let-control-flow.md:8
msgid "`match` expressions"
msgstr "Express√µes `match` (correspond√™ncia)"

#: src/pattern-matching/let-control-flow.md:12
msgid ""
"The [`if let` expression](https://doc.rust-lang.org/reference/expressions/if-"
"expr.html#if-let-expressions) lets you execute different code depending on "
"whether a value matches a pattern:"
msgstr ""
"A [express√£o `if let` ](https://doc.rust-lang.org/reference/expressions/if-"
"expr.html#if-let-expressions) lhe permite executar um c√≥digo diferente caso "
"um valor corresponde a um padr√£o:"

#: src/pattern-matching/let-control-flow.md:24
msgid "\"slept for {:?}\""
msgstr "\"dormiu por {s:?}\""

#: src/pattern-matching/let-control-flow.md:33
msgid "`let else` expressions"
msgstr "Express√µes `let else`"

#: src/pattern-matching/let-control-flow.md:35
msgid ""
"For the common case of matching a pattern and returning from the function, "
"use [`let else`](https://doc.rust-lang.org/rust-by-example/flow_control/"
"let_else.html). The \"else\" case must diverge (`return`, `break`, or panic "
"- anything but falling off the end of the block)."
msgstr ""
"Para o caso comum de corresponder a um padr√£o e retornar da fun√ß√£o, use "
"[`let else`](https://doc.rust-lang.org/rust-by-example/flow_control/let_else."
"html). O caso \"else\" deve divergir (`return`, `break` ou p√¢nico - qualquer "
"coisa, exceto cair no final do bloco)."

#: src/pattern-matching/let-control-flow.md:45
#: src/pattern-matching/let-control-flow.md:107
msgid "\"got None\""
msgstr "\"obteve None\""

#: src/pattern-matching/let-control-flow.md:51
#: src/pattern-matching/let-control-flow.md:111
msgid "\"got empty string\""
msgstr "\"obteve uma string vazia\""

#: src/pattern-matching/let-control-flow.md:57
#: src/pattern-matching/let-control-flow.md:115
msgid "\"not a hex digit\""
msgstr "\"n√£o √© um d√≠gito hexadecimal\""

#: src/pattern-matching/let-control-flow.md:62
#: src/pattern-matching/solution.md:113
#, fuzzy
msgid "\"result: {:?}\""
msgstr "\"result: {:?}\""

#: src/pattern-matching/let-control-flow.md:62
#: src/methods-and-traits/exercise.md:114
#: src/methods-and-traits/exercise.md:115
#: src/methods-and-traits/exercise.md:116 src/generics/trait-bounds.md:16
#: src/smart-pointers/solution.md:87 src/smart-pointers/solution.md:90
#: src/testing/googletest.md:11 src/testing/googletest.md:12
#: src/testing/solution.md:83
msgid "\"foo\""
msgstr "\"foo\""

#: src/pattern-matching/let-control-flow.md:66
msgid ""
"Like with `if let`, there is a [`while let`](https://doc.rust-lang.org/"
"reference/expressions/loop-expr.html#predicate-pattern-loops) variant which "
"repeatedly tests a value against a pattern:"
msgstr ""
"Similar a `if let`, h√° uma variante [`while let`](https://doc.rust-lang.org/"
"reference/expressions/loop-expr.html#predicate-pattern-loops) que testa "
"repetidamente se um valor corresponde a um padr√£o:"

#: src/pattern-matching/let-control-flow.md:82
msgid ""
"Here [`String::pop`](https://doc.rust-lang.org/stable/std/string/struct."
"String.html#method.pop) returns `Some(c)` until the string is empty, after "
"which it will return `None`. The `while let` lets us keep iterating through "
"all items."
msgstr ""
"Aqui [`String::pop`](https://doc.rust-lang.org/stable/std/string/struct."
"String.html#method.pop) retorna `Some(c)` at√© que a string esteja vazia e "
"depois ela retornar√° `None`. O `while let` nos permite iterar por todos os "
"itens."

#: src/pattern-matching/let-control-flow.md:89
msgid "if-let"
msgstr "if-let"

#: src/pattern-matching/let-control-flow.md:91
msgid ""
"Unlike `match`, `if let` does not have to cover all branches. This can make "
"it more concise than `match`."
msgstr ""
"Ao contr√°rio de `match`, `if let` n√£o precisa cobrir todas as ramifica√ß√µes. "
"Isso pode torn√°-lo mais conciso do que `match`."

#: src/pattern-matching/let-control-flow.md:93
msgid "A common usage is handling `Some` values when working with `Option`."
msgstr "Um uso comum √© lidar com valores `Some` ao trabalhar-se com `Option`."

#: src/pattern-matching/let-control-flow.md:94
msgid ""
"Unlike `match`, `if let` does not support guard clauses for pattern matching."
msgstr ""
"Ao contr√°rio de `match`, `if let` n√£o suporta cl√°usulas de guarda para "
"correspond√™ncia de padr√µes."

#: src/pattern-matching/let-control-flow.md:96
msgid "let-else"
msgstr "let-else"

#: src/pattern-matching/let-control-flow.md:98
msgid ""
"`if-let`s can pile up, as shown. The `let-else` construct supports "
"flattening this nested code. Rewrite the awkward version for students, so "
"they can see the transformation."
msgstr ""
"`if-let`s podem se acumular, como mostrado. A constru√ß√£o `let-else` permite "
"o \"achatamento\" desse c√≥digo aninhado. Reescreva a vers√£o \"estranha\" "
"para os alunos, para que eles possam ver a transforma√ß√£o."

#: src/pattern-matching/let-control-flow.md:102
msgid "The rewritten version is:"
msgstr "A vers√£o reescrita √©:"

#: src/pattern-matching/let-control-flow.md:122
msgid "while-let"
msgstr "while-let"

#: src/pattern-matching/let-control-flow.md:124
msgid ""
"Point out that the `while let` loop will keep going as long as the value "
"matches the pattern."
msgstr ""
"Ressalte que o loop `while let` continuar√° executando enquanto o valor "
"corresponder ao padr√£o."

#: src/pattern-matching/let-control-flow.md:126
msgid ""
"You could rewrite the `while let` loop as an infinite loop with an if "
"statement that breaks when there is no value to unwrap for `name.pop()`. The "
"`while let` provides syntactic sugar for the above scenario."
msgstr ""
"Voc√™ pode reescrever o loop `while let` como um loop infinito com uma "
"instru√ß√£o `if` que √© interrompido quando n√£o houver mais nenhum valor para "
"_unwrap_ (desempacotar) para `name.pop()`. O `while let` fornece um atalho "
"para o cen√°rio acima."

#: src/pattern-matching/exercise.md:3
msgid "Let's write a simple recursive evaluator for arithmetic expressions."
msgstr ""
"Vamos escrever um interpretador recursivo simples para express√µes "
"aritm√©ticas."

#: src/pattern-matching/exercise.md:5
msgid ""
"The `Box` type here is a smart pointer, and will be covered in detail later "
"in the course. An expression can be \"boxed\" with `Box::new` as seen in the "
"tests. To evaluate a boxed expression, use the deref operator (`*`) to "
"\"unbox\" it: `eval(*boxed_expr)`."
msgstr ""
"O tipo `Box` aqui √© um ponteiro inteligente (_smart pointer_) e ser√° "
"abordado em detalhes mais adiante no curso. Uma express√£o pode ser "
"\"encaixotada\" com `Box::new` como visto nos testes. Para avaliar uma "
"express√£o encaixotada, use o operador de desrefer√™ncia (`*`) para o "
"\"desencaixotar\": `eval(*boxed_expr)`."

#: src/pattern-matching/exercise.md:10
msgid ""
"Some expressions cannot be evaluated and will return an error. The standard "
"[`Result<Value, String>`](https://doc.rust-lang.org/std/result/enum.Result."
"html) type is an enum that represents either a successful value "
"(`Ok(Value)`) or an error (`Err(String)`). We will cover this type in detail "
"later."
msgstr ""
"Algumas express√µes n√£o podem ser avaliadas e retornar√£o um erro. O tipo "
"padr√£o [`Result<Value, String>`](https://doc.rust-lang.org/std/result/enum."
"Result.html) √© um enum que representa um valor de sucesso (`Ok(Value)`) ou "
"um erro (`Err(String)`). Abordaremos esse tipo em detalhes mais adiante."

#: src/pattern-matching/exercise.md:15
msgid ""
"Copy and paste the code into the Rust playground, and begin implementing "
"`eval`. The final product should pass the tests. It may be helpful to use "
"`todo!()` and get the tests to pass one-by-one. You can also skip a test "
"temporarily with `#[ignore]`:"
msgstr ""
"Copie e cole o c√≥digo no playground do Rust e comece a implementar `eval`. O "
"produto final deve passar nos testes. Pode ser √∫til usar `todo!()` e fazer "
"os testes passarem um por um. Voc√™ tamb√©m pode ignorar um teste "
"temporariamente com `#[ignore]`:"

#: src/pattern-matching/exercise.md:26
msgid ""
"If you finish early, try writing a test that results in division by zero or "
"integer overflow. How could you handle this with `Result` instead of a panic?"
msgstr ""
"Se voc√™ terminar cedo, tente escrever um teste que resulte em divis√£o por "
"zero ou _integer overflow_. Como voc√™ poderia lidar com isso com `Result` em "
"vez de um p√¢nico?"

#: src/pattern-matching/exercise.md:30 src/pattern-matching/solution.md:4
msgid "/// An operation to perform on two subexpressions.\n"
msgstr "/// Uma opera√ß√£o a ser realizada em duas subexpress√µes.\n"

#: src/pattern-matching/exercise.md:38 src/pattern-matching/solution.md:12
msgid "/// An expression, in tree form.\n"
msgstr "/// Uma express√£o, em forma de √°rvore.\n"

#: src/pattern-matching/exercise.md:42 src/pattern-matching/solution.md:16
msgid "/// An operation on two subexpressions.\n"
msgstr "/// Uma opera√ß√£o em duas subexpress√µes.\n"

#: src/pattern-matching/exercise.md:45 src/pattern-matching/solution.md:19
msgid "/// A literal value\n"
msgstr "/// Um valor literal\n"

#: src/pattern-matching/exercise.md:104 src/pattern-matching/solution.md:40
#: src/pattern-matching/solution.md:102
msgid "\"division by zero\""
msgstr "\"divis√£o por zero\""

#: src/pattern-matching/solution.md:112
msgid "\"expr: {:?}\""
msgstr "\"expr: {:?}\""

#: src/methods-and-traits/methods.md:3
msgid ""
"Rust allows you to associate functions with your new types. You do this with "
"an `impl` block:"
msgstr ""
"Rust permite que voc√™ associe fun√ß√µes aos seus novos tipos. Voc√™ faz isso "
"com um bloco `impl`:"

#: src/methods-and-traits/methods.md:14
msgid "// No receiver, a static method\n"
msgstr "// Sem receptor, um m√©todo est√°tico\n"

#: src/methods-and-traits/methods.md:19
msgid "// Exclusive borrowed read-write access to self\n"
msgstr "// Empr√©stimo √∫nico com acesso de leitura e escrita em self\n"

#: src/methods-and-traits/methods.md:24
msgid "// Shared and read-only borrowed access to self\n"
msgstr "// Empr√©stimo compartilhado com acesso apenas de leitura em self\n"

#: src/methods-and-traits/methods.md:26
msgid "\"Recorded {} laps for {}:\""
msgstr "\"Registrou {} voltas para {}:\""

#: src/methods-and-traits/methods.md:28
msgid "\"Lap {idx}: {lap} sec\""
msgstr "\"Volta {idx}: {lap} seg\""

#: src/methods-and-traits/methods.md:32
msgid "// Exclusive ownership of self\n"
msgstr "// Propriedade exclusiva de self\n"

#: src/methods-and-traits/methods.md:35
msgid "\"Race {} is finished, total lap time: {}\""
msgstr "\"Corrida {} foi encerrada, tempo total de voltas: {}\""

#: src/methods-and-traits/methods.md:40
msgid "\"Monaco Grand Prix\""
msgstr "\"Monaco Grand Prix\""

#: src/methods-and-traits/methods.md:47
msgid "// race.add_lap(42);\n"
msgstr "// race.add_lap(42);\n"

#: src/methods-and-traits/methods.md:51
msgid ""
"The `self` arguments specify the \"receiver\" - the object the method acts "
"on. There are several common receivers for a method:"
msgstr ""
"Os argumentos `self` especificam o \"receptor\" - o objeto em que o m√©todo "
"age. Existem v√°rios receptores comuns para um m√©todo:"

#: src/methods-and-traits/methods.md:54
msgid ""
"`&self`: borrows the object from the caller using a shared and immutable "
"reference. The object can be used again afterwards."
msgstr ""
"`&self`: pega emprestado o objeto do chamador como uma refer√™ncia "
"compartilhada e imut√°vel. O objeto pode ser usado novamente depois."

#: src/methods-and-traits/methods.md:56
msgid ""
"`&mut self`: borrows the object from the caller using a unique and mutable "
"reference. The object can be used again afterwards."
msgstr ""
"`&mut self`: pega emprestado o objeto do chamador como uma refer√™ncia √∫nica "
"e mut√°vel. O objeto pode ser usado novamente depois."

#: src/methods-and-traits/methods.md:58
msgid ""
"`self`: takes ownership of the object and moves it away from the caller. The "
"method becomes the owner of the object. The object will be dropped "
"(deallocated) when the method returns, unless its ownership is explicitly "
"transmitted. Complete ownership does not automatically mean mutability."
msgstr ""
"`self`: toma posse do objeto e o move do chamador. O m√©todo se torna o "
"propriet√°rio do objeto. O objeto ser√° descartado (desalocado) quando o "
"m√©todo retorna, a menos que sua _ownership_ (posse) seja explicitamente "
"transmitida. Posse completa n√£o significa automaticamente mutabilidade."

#: src/methods-and-traits/methods.md:62
msgid "`mut self`: same as above, but the method can mutate the object."
msgstr "`mut self`: o mesmo que acima, mas o m√©todo pode modificar o objeto."

#: src/methods-and-traits/methods.md:63
msgid ""
"No receiver: this becomes a static method on the struct. Typically used to "
"create constructors which are called `new` by convention."
msgstr ""
"Sem receptor: isso se torna um m√©todo est√°tico (_static_) no struct. "
"Normalmente usado para criar construtores que, por conven√ß√£o, s√£o chamados "
"`new`."

#: src/methods-and-traits/methods.md:70
msgid "It can be helpful to introduce methods by comparing them to functions."
msgstr "Pode ser √∫til introduzir m√©todos comparando-os com fun√ß√µes."

#: src/methods-and-traits/methods.md:71
msgid ""
"Methods are called on an instance of a type (such as a struct or enum), the "
"first parameter represents the instance as `self`."
msgstr ""
"M√©todos s√£o chamados em uma inst√¢ncia de um tipo (como _struct_ ou _enum_), "
"o primeiro par√¢metro representa a inst√¢ncia como `self`."

#: src/methods-and-traits/methods.md:73
msgid ""
"Developers may choose to use methods to take advantage of method receiver "
"syntax and to help keep them more organized. By using methods we can keep "
"all the implementation code in one predictable place."
msgstr ""
"Desenvolvedores podem optar por usar m√©todos para aproveitar a sintaxe do "
"receptor do m√©todo e ajudar a mant√™-los mais organizados. Usando m√©todos, "
"podemos manter todo o c√≥digo de implementa√ß√£o em um local previs√≠vel."

#: src/methods-and-traits/methods.md:76
msgid "Point out the use of the keyword `self`, a method receiver."
msgstr "Destaque o uso da palavra-chave `self`, um receptor de m√©todo."

#: src/methods-and-traits/methods.md:77
msgid ""
"Show that it is an abbreviated term for `self: Self` and perhaps show how "
"the struct name could also be used."
msgstr ""
"Mostre que √© um termo abreviado para `self: Self` e talvez mostre como o "
"nome da _struct_ tamb√©m poderia ser usado."

#: src/methods-and-traits/methods.md:79
msgid ""
"Explain that `Self` is a type alias for the type the `impl` block is in and "
"can be used elsewhere in the block."
msgstr ""
"Explique que `Self` √© um alias de tipo para o tipo em que o bloco `impl` "
"est√° e pode ser usado em qualquer outro lugar no bloco."

#: src/methods-and-traits/methods.md:81
msgid ""
"Note how `self` is used like other structs and dot notation can be used to "
"refer to individual fields."
msgstr ""
"Observe como `self` √© usado como outras _structs_ e a nota√ß√£o de ponto pode "
"ser usada para se referir a campos individuais."

#: src/methods-and-traits/methods.md:83
msgid ""
"This might be a good time to demonstrate how the `&self` differs from `self` "
"by trying to run `finish` twice."
msgstr ""
"Este pode ser um bom momento para demonstrar como `&self` difere de `self` "
"modificando o c√≥digo e tentando executar `finish` duas vezes."

#: src/methods-and-traits/methods.md:85
msgid ""
"Beyond variants on `self`, there are also [special wrapper types](https://"
"doc.rust-lang.org/reference/special-types-and-traits.html) allowed to be "
"receiver types, such as `Box<Self>`."
msgstr ""
"Al√©m das variantes de `self`, tamb√©m existem [tipos especiais de _wrapper_]"
"(https://doc.rust-lang.org/reference/special-types-and-traits.html) que "
"podem ser tipos de receptores, como `Box<Self>`."

#: src/methods-and-traits/traits.md:3
msgid ""
"Rust lets you abstract over types with traits. They're similar to interfaces:"
msgstr ""
"Rust permite abstrair caracter√≠sticas dos tipos usando `trait`. Eles s√£o "
"semelhantes a interfaces:"

#: src/methods-and-traits/traits.md:18
msgid "\"Oh you're a cutie! What's your name? {}\""
msgstr "\"Oh, voc√™ √© ador√°vel! Qual √© o seu nome? {}\""

#: src/methods-and-traits/traits.md:24
#: src/methods-and-traits/trait-objects.md:20
msgid "\"Woof, my name is {}!\""
msgstr "\"Auau, meu nome √© {}\""

#: src/methods-and-traits/traits.md:30
#: src/methods-and-traits/trait-objects.md:26
msgid "\"Miau!\""
msgstr "\"Miau!\""

#: src/methods-and-traits/traits.md:36
#: src/methods-and-traits/trait-objects.md:33
msgid "\"Fido\""
msgstr "\"Bidu\""

#: src/methods-and-traits/traits.md:45
msgid ""
"A trait defines a number of methods that types must have in order to "
"implement the trait."
msgstr ""
"Um _trait_ define um n√∫mero de m√©todos que os tipos devem ter para "
"implementar o _trait_."

#: src/methods-and-traits/traits.md:48
msgid "Traits are implemented in an `impl <trait> for <type> { .. }` block."
msgstr ""
"_Traits_ s√£o implementados em um bloco `impl <trait> for <type> { .. }`."

#: src/methods-and-traits/traits.md:50
msgid ""
"Traits may specify pre-implemented (provided) methods and methods that users "
"are required to implement themselves. Provided methods can rely on required "
"methods. In this case, `greet` is provided, and relies on `talk`."
msgstr ""
"_Traits_ podem especificar m√©todos pr√©-implementados (padr√£o) e m√©todos que "
"os usu√°rios s√£o obrigados a implementar. Os m√©todos com implementa√ß√µes "
"padr√£o podem contar com os m√©todos requeridos. Neste caso, `greet` √© "
"implementado por padr√£o e conta com `talk`."

#: src/methods-and-traits/deriving.md:3
msgid ""
"Supported traits can be automatically implemented for your custom types, as "
"follows:"
msgstr ""
"Os _traits_ suportados podem ser implementados automaticamente para seus "
"tipos personalizados, como segue:"

#: src/methods-and-traits/deriving.md:15
msgid "// Default trait adds `default` constructor.\n"
msgstr "// O _trait_ `Default` adiciona um construtor `default`.\n"

#: src/methods-and-traits/deriving.md:16
msgid "// Clone trait adds `clone` method.\n"
msgstr "// O _trait_ `Clone` adiciona um m√©todo `clone`.\n"

#: src/methods-and-traits/deriving.md:17
msgid "\"EldurScrollz\""
msgstr "\"EldurScrollz\""

#: src/methods-and-traits/deriving.md:18
msgid "// Debug trait adds support for printing with `{:?}`.\n"
msgstr "// O _trait_ `Debug` adiciona suporte para impress√£o com `{:?}`.\n"

#: src/methods-and-traits/deriving.md:19
msgid "\"{:?} vs. {:?}\""
msgstr "\"{:?} vs. {:?}\""

#: src/methods-and-traits/deriving.md:25
msgid ""
"Derivation is implemented with macros, and many crates provide useful derive "
"macros to add useful functionality. For example, `serde` can derive "
"serialization support for a struct using `#[derive(Serialize)]`."
msgstr ""
"A deriva√ß√£o √© implementada com macros e muitas _crates_ fornecem macros de "
"deriva√ß√£o √∫teis para adicionar funcionalidades √∫teis. Por exemplo, `serde` "
"pode derivar suporte de serializa√ß√£o para uma _struct_ usando "
"`#[derive(Serialize)]`."

#: src/methods-and-traits/trait-objects.md:3
msgid ""
"Trait objects allow for values of different types, for instance in a "
"collection:"
msgstr ""
"Objetos `trait` permitem valores de diferentes tipos, por exemplo, em uma "
"cole√ß√£o:"

#: src/methods-and-traits/trait-objects.md:36
msgid "\"Hello, who are you? {}\""
msgstr "\"Ol√°, quem √© voc√™? {}\""

#: src/methods-and-traits/trait-objects.md:41
msgid "Memory layout after allocating `pets`:"
msgstr "Layout da mem√≥ria ap√≥s alocar `pets`:"

#: src/methods-and-traits/trait-objects.md:43
msgid ""
"```bob\n"
" Stack                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                           :     :                                             :\n"
":    pets                   :     :                     +----+----+----+----"
"+   :\n"
":   +-----------+-------+   :     :   +-----+-----+  .->| F  | i  | d  | o  "
"|   :\n"
":   | ptr       |   o---+---+-----+-->| o o | o o |  |  +----+----+----+----"
"+   :\n"
":   | len       |     2 |   :     :   +-|-|-+-|-|-+  "
"`---------.                :\n"
":   | capacity  |     2 |   :     :     | |   | |    data      "
"|                :\n"
":   +-----------+-------+   :     :     | |   | |   +-------+--|-------"
"+        :\n"
":                           :     :     | |   | '-->| name  |  o, 4, 4 "
"|        :\n"
":                           :     :     | |   |     | age   |        5 "
"|        :\n"
"`- - - - - - - - - - - - - -'     :     | |   |     +-------+----------"
"+        :\n"
"                                  :     | |   "
"|                                 :\n"
"                                  :     | |   |      "
"vtable                     :\n"
"                                  :     | |   |     +----------------------"
"+    :\n"
"                                  :     | |   '---->| \"<Dog as Pet>::talk\" "
"|    :\n"
"                                  :     | |         +----------------------"
"+    :\n"
"                                  :     | "
"|                                     :\n"
"                                  :     | |    "
"data                             :\n"
"                                  :     | |   +-------+-------"
"+                 :\n"
"                                  :     | '-->| lives |     9 "
"|                 :\n"
"                                  :     |     +-------+-------"
"+                 :\n"
"                                  :     "
"|                                       :\n"
"                                  :     |      "
"vtable                           :\n"
"                                  :     |     +----------------------"
"+          :\n"
"                                  :     '---->| \"<Cat as Pet>::talk\" "
"|          :\n"
"                                  :           +----------------------"
"+          :\n"
"                                  :                                             :\n"
"                                  '- - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"```"
msgstr ""
"```bob\n"
" Pilha                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                           :     :                                             :\n"
":    pets                   :     :                     +----+----+----+----"
"+   :\n"
":   +-----------+-------+   :     :   +-----+-----+  .->| F  | i  | d  | o  "
"|   :\n"
":   | ptr       |   o---+---+-----+-->| o o | o o |  |  +----+----+----+----"
"+   :\n"
":   | tam       |     2 |   :     :   +-|-|-+-|-|-+  "
"`---------.                :\n"
":   | capacid.  |     2 |   :     :     | |   | |    data      "
"|                :\n"
":   +-----------+-------+   :     :     | |   | |   +-------+--|-------"
"+        :\n"
":                           :     :     | |   | '-->| name  |  o, 4, 4 "
"|        :\n"
":                           :     :     | |   |     | age   |        5 "
"|        :\n"
"`- - - - - - - - - - - - - -'     :     | |   |     +-------+----------"
"+        :\n"
"                                  :     | |   "
"|                                 :\n"
"                                  :     | |   |      "
"vtable                     :\n"
"                                  :     | |   |     +----------------------"
"+    :\n"
"                                  :     | |   '---->| \"<Dog as Pet>::talk\" "
"|    :\n"
"                                  :     | |         +----------------------"
"+    :\n"
"                                  :     | "
"|                                     :\n"
"                                  :     | |    "
"data                             :\n"
"                                  :     | |   +-------+-------"
"+                 :\n"
"                                  :     | '-->| lives |     9 "
"|                 :\n"
"                                  :     |     +-------+-------"
"+                 :\n"
"                                  :     "
"|                                       :\n"
"                                  :     |      "
"vtable                           :\n"
"                                  :     |     +----------------------"
"+          :\n"
"                                  :     '---->| \"<Cat as Pet>::talk\" "
"|          :\n"
"                                  :           +----------------------"
"+          :\n"
"                                  :                                             :\n"
"                                  '- - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"```"

#: src/methods-and-traits/trait-objects.md:77
msgid ""
"Types that implement a given trait may be of different sizes. This makes it "
"impossible to have things like `Vec<dyn Pet>` in the example above."
msgstr ""
"Tipos que implementam um dado `trait` podem ter tamanhos diferentes. Isto "
"torna imposs√≠vel haver coisas como `Vec<dyn Pet>` no exemplo anterior."

#: src/methods-and-traits/trait-objects.md:79
msgid ""
"`dyn Pet` is a way to tell the compiler about a dynamically sized type that "
"implements `Pet`."
msgstr ""
"`dyn Pet` √© uma maneira de dizer ao compilador sobre um tipo de tamanho "
"din√¢mico que implementa `Pet`."

#: src/methods-and-traits/trait-objects.md:81
msgid ""
"In the example, `pets` is allocated on the stack and the vector data is on "
"the heap. The two vector elements are _fat pointers_:"
msgstr ""
"No exemplo, `pets` √© alocado na pilha e os dados do vetor est√£o no heap. Os "
"dois elementos do vetor s√£o _fat pointers_ (ponteiros \"gordos\"):"

#: src/methods-and-traits/trait-objects.md:83
msgid ""
"A fat pointer is a double-width pointer. It has two components: a pointer to "
"the actual object and a pointer to the [virtual method table](https://en."
"wikipedia.org/wiki/Virtual_method_table) (vtable) for the `Pet` "
"implementation of that particular object."
msgstr ""
"Um _fat pointer_ √© um ponteiro de dupla largura. Ele tem dois componentes: "
"um ponteiro para o objeto real e um ponteiro para a [tabela de m√©todos "
"virtuais](https://en.wikipedia.org/wiki/Virtual_method_table) (vtable) para "
"a implementa√ß√£o `Pet` desse objeto em particular."

#: src/methods-and-traits/trait-objects.md:86
msgid ""
"The data for the `Dog` named Fido is the `name` and `age` fields. The `Cat` "
"has a `lives` field."
msgstr ""
"Os dados para o `Dog` chamado Fido s√£o os campos `name` e `age`. O `Cat` tem "
"um campo `lives`."

#: src/methods-and-traits/trait-objects.md:88
msgid "Compare these outputs in the above example:"
msgstr "Compare estas sa√≠das no exemplo anterior::"

#: src/methods-and-traits/trait-objects.md:90
#: src/methods-and-traits/trait-objects.md:91 src/std-traits/closures.md:62
msgid "\"{} {}\""
msgstr "\"{} {}\""

#: src/methods-and-traits/trait-objects.md:92
#: src/methods-and-traits/trait-objects.md:93
#: src/methods-and-traits/solution.md:112 src/std-traits/exercise.md:23
#: src/std-traits/solution.md:29 src/modules/solution.md:78
#: src/android/build-rules/library.md:44
#: src/android/interoperability/cpp/rust-bridge.md:17
#: src/async/pitfalls/cancellation.md:59
msgid "\"{}\""
msgstr "\"{}\""

#: src/methods-and-traits/exercise.md:3
msgid ""
"Let us design a classical GUI library using our new knowledge of traits and "
"trait objects. We'll only implement the drawing of it (as text) for "
"simplicity."
msgstr ""
"Vamos projetar uma biblioteca GUI cl√°ssica usando nosso novo conhecimento de "
"_traits_ e objetos de `trait`. Implementaremos apenas o desenho (como texto) "
"para simplificar."

#: src/methods-and-traits/exercise.md:6
msgid "We will have a number of widgets in our library:"
msgstr "Teremos v√°rios _widgets_ em nossa biblioteca:"

#: src/methods-and-traits/exercise.md:8
msgid "`Window`: has a `title` and contains other widgets."
msgstr "`Window`: tem um `t√≠tulo` e cont√©m outros _widgets_."

#: src/methods-and-traits/exercise.md:9
msgid ""
"`Button`: has a `label`. In reality, it would also take a callback function "
"to allow the program to do something when the button is clicked but we won't "
"include that since we're only drawing the GUI."
msgstr ""
"`Button`: tem um `label` (r√≥tulo). Na realidade, ele tamb√©m receberia uma "
"fun√ß√£o de retorno de chamada para permitir que o programa fa√ßa algo quando o "
"bot√£o √© clicado, mas n√£o incluiremos isso, pois estamos apenas desenhando a "
"GUI."

#: src/methods-and-traits/exercise.md:12
msgid "`Label`: has a `label`."
msgstr "`Label`: tem um `label`."

#: src/methods-and-traits/exercise.md:14
msgid "The widgets will implement a `Widget` trait, see below."
msgstr "Os _widgets_ ir√£o implementar o `trait` `Widget`, veja abaixo."

#: src/methods-and-traits/exercise.md:16
msgid ""
"Copy the code below to <https://play.rust-lang.org/>, fill in the missing "
"`draw_into` methods so that you implement the `Widget` trait:"
msgstr ""
"Copie o c√≥digo abaixo para <https://play.rust-lang.org/>, codifique os "
"m√©todos `draw_into` para que voc√™ implemente o `trait` `Widget`:"

#: src/methods-and-traits/exercise.md:24 src/methods-and-traits/solution.md:5
#: src/modules/solution.md:36
msgid "/// Natural width of `self`.\n"
msgstr "/// Largura natural de `self`.\n"

#: src/methods-and-traits/exercise.md:27 src/methods-and-traits/solution.md:8
#: src/modules/solution.md:39
msgid "/// Draw the widget into a buffer.\n"
msgstr "/// Desenha o _widget_ em um buffer.\n"

#: src/methods-and-traits/exercise.md:30 src/methods-and-traits/solution.md:11
#: src/modules/solution.md:42
msgid "/// Draw the widget on standard output.\n"
msgstr "/// Desenha o _widget_ na sa√≠da padr√£o.\n"

#: src/methods-and-traits/exercise.md:34 src/methods-and-traits/solution.md:15
#: src/modules/solution.md:46
msgid "\"{buffer}\""
msgstr "\"{buffer}\""

#: src/methods-and-traits/exercise.md:79
msgid "// TODO: Implement `Widget` for `Label`.\n"
msgstr "// TODO: Implemente `Widget` para `Label`.\n"

#: src/methods-and-traits/exercise.md:81
msgid "// TODO: Implement `Widget` for `Button`.\n"
msgstr "// TODO: Implemente `Widget` para `Button`.\n"

#: src/methods-and-traits/exercise.md:83
msgid "// TODO: Implement `Widget` for `Window`.\n"
msgstr "// TODO: Implemente `Widget` para `Window`.\n"

#: src/methods-and-traits/exercise.md:87 src/methods-and-traits/solution.md:117
#: src/modules/solution.md:183
msgid "\"Rust GUI Demo 1.23\""
msgstr "\"Rust GUI Demo 1.23\""

#: src/methods-and-traits/exercise.md:88 src/methods-and-traits/solution.md:118
#: src/modules/solution.md:185
msgid "\"This is a small text GUI demo.\""
msgstr "\"Este √© um pequeno demo de GUI em texto.\""

#: src/methods-and-traits/exercise.md:89 src/methods-and-traits/solution.md:119
#: src/modules/solution.md:186
msgid "\"Click me!\""
msgstr "\"Clique em mim!\""

#: src/methods-and-traits/exercise.md:94
msgid "The output of the above program can be something simple like this:"
msgstr "A sa√≠da do programa acima pode ser algo simples como:"

#: src/methods-and-traits/exercise.md:106
msgid ""
"If you want to draw aligned text, you can use the [fill/alignment](https://"
"doc.rust-lang.org/std/fmt/index.html#fillalignment) formatting operators. In "
"particular, notice how you can pad with different characters (here a `'/'`) "
"and how you can control alignment:"
msgstr ""
"Se voc√™ quiser desenhar texto alinhado, voc√™ pode usar os operadores de "
"formata√ß√£o [fill/alignment](https://doc.rust-lang.org/std/fmt/index."
"html#fillalignment). Em particular, observe como voc√™ pode preencher com "
"diferentes caracteres (aqui um `'/'`) e como voc√™ pode controlar o "
"alinhamento:"

#: src/methods-and-traits/exercise.md:114
msgid "\"left aligned:  |{:/<width$}|\""
msgstr "\"alinhado √† esquerda: |{:/<width$}|\""

#: src/methods-and-traits/exercise.md:115
msgid "\"centered:      |{:/^width$}|\""
msgstr "\"centralizado: |{:/^width$}|\""

#: src/methods-and-traits/exercise.md:116
msgid "\"right aligned: |{:/>width$}|\""
msgstr "\"alinhado √† direita: |{:/>width$}|\""

#: src/methods-and-traits/exercise.md:120
msgid ""
"Using such alignment tricks, you can for example produce output like this:"
msgstr ""
"Usando esses truques de alinhamento, voc√™ pode, por exemplo, produzir uma "
"sa√≠da como esta:"

#: src/methods-and-traits/solution.md:63
msgid "// Add 4 paddings for borders\n"
msgstr "// Adiciona 4 preenchimentos para as bordas\n"

#: src/methods-and-traits/solution.md:75 src/modules/solution.md:162
msgid ""
"// TODO: after learning about error handling, you can change\n"
"        // draw_into to return Result<(), std::fmt::Error>. Then use\n"
"        // the ?-operator here instead of .unwrap().\n"
msgstr ""
"// TODO: depois de aprender sobre tratamento de erros, voc√™ pode alterar\n"
"        // draw_into para retornar Result<(), std::fmt::Error>. Ent√£o use\n"
"        // o operador ? aqui em vez de .unwrap().\n"

#: src/methods-and-traits/solution.md:78 src/methods-and-traits/solution.md:84
#: src/modules/solution.md:165 src/modules/solution.md:171
msgid "\"+-{:-<inner_width$}-+\""
msgstr "\"+-{:-<inner_width$}-+\""

#: src/methods-and-traits/solution.md:78 src/methods-and-traits/solution.md:80
#: src/methods-and-traits/solution.md:84 src/methods-and-traits/solution.md:98
#: src/methods-and-traits/solution.md:102 src/modules/solution.md:110
#: src/modules/solution.md:114 src/modules/solution.md:165
#: src/modules/solution.md:167 src/modules/solution.md:171
#: src/testing/unit-tests.md:27 src/testing/solution.md:89
msgid "\"\""
msgstr "\"\""

#: src/methods-and-traits/solution.md:79 src/modules/solution.md:166
msgid "\"| {:^inner_width$} |\""
msgstr "\"| {:^inner_width$} |\""

#: src/methods-and-traits/solution.md:80 src/modules/solution.md:167
msgid "\"+={:=<inner_width$}=+\""
msgstr "\"+={:=<inner_width$}=+\""

#: src/methods-and-traits/solution.md:82 src/modules/solution.md:169
msgid "\"| {:inner_width$} |\""
msgstr "\"| {:inner_width$} |\""

#: src/methods-and-traits/solution.md:90 src/modules/solution.md:100
msgid "// add a bit of padding\n"
msgstr "// adicione um pouco de preenchimento\n"

#: src/methods-and-traits/solution.md:98 src/methods-and-traits/solution.md:102
#: src/modules/solution.md:110 src/modules/solution.md:114
msgid "\"+{:-<width$}+\""
msgstr "\"+{:-<width$}+\""

#: src/methods-and-traits/solution.md:100 src/modules/solution.md:112
msgid "\"|{:^width$}|\""
msgstr "\"|{:^width$}|\""

#: src/generics/generic-functions.md:3
msgid ""
"Rust supports generics, which lets you abstract algorithms or data "
"structures (such as sorting or a binary tree) over the types used or stored."
msgstr ""
"Rust suporta gen√©ricos, o que permite abstrair algoritmos ou estruturas de "
"dados (como ordena√ß√£o ou uma √°rvore bin√°ria) sobre os tipos usados ou "
"armazenados."

#: src/generics/generic-functions.md:7
msgid "/// Pick `even` or `odd` depending on the value of `n`.\n"
msgstr ""

#: src/generics/generic-functions.md:17
msgid "\"picked a number: {:?}\""
msgstr "\"escolheu um n√∫mero: {:?}\""

#: src/generics/generic-functions.md:18
msgid "\"picked a tuple: {:?}\""
msgstr "\"escolheu uma tupla: {:?}\""

#: src/generics/generic-functions.md:18
msgid "\"dog\""
msgstr "\"cachorro\""

#: src/generics/generic-functions.md:18
msgid "\"cat\""
msgstr "\"gato\""

#: src/generics/generic-functions.md:24
msgid ""
"Rust infers a type for T based on the types of the arguments and return "
"value."
msgstr ""
"Rust infere um tipo para T com base nos tipos dos argumentos e valor de "
"retorno."

#: src/generics/generic-functions.md:26
msgid ""
"This is similar to C++ templates, but Rust partially compiles the generic "
"function immediately, so that function must be valid for all types matching "
"the constraints. For example, try modifying `pick` to return `even + odd` if "
"`n == 0`. Even if only the `pick` instantiation with integers is used, Rust "
"still considers it invalid. C++ would let you do this."
msgstr ""
"Isto √© semelhante aos _templates_ C++, mas Rust compila parcialmente a "
"fun√ß√£o gen√©rica imediatamente, de modo que a fun√ß√£o deve ser v√°lida para "
"todos os tipos que correspondem √†s restri√ß√µes. Por exemplo, tente modificar "
"`pick` para retornar `even + odd` se `n == 0`. Mesmo que apenas a inst√¢ncia "
"`pick` com inteiros seja usada, Rust ainda a considera inv√°lida. C++ "
"permitiria que voc√™ fizesse isso."

#: src/generics/generic-functions.md:32
msgid ""
"Generic code is turned into non-generic code based on the call sites. This "
"is a zero-cost abstraction: you get exactly the same result as if you had "
"hand-coded the data structures without the abstraction."
msgstr ""
"O c√≥digo gen√©rico √© transformado em c√≥digo n√£o gen√©rico com base nos locais "
"de chamada. Esta √© uma abstra√ß√£o sem custo: voc√™ obt√©m exatamente o mesmo "
"resultado como se tivesse codificado as estruturas de dados sem a abstra√ß√£o."

#: src/generics/generic-data.md:3
msgid "You can use generics to abstract over the concrete field type:"
msgstr "Voc√™ pode usar gen√©ricos para abstrair o tipo concreto do campo:"

#: src/generics/generic-data.md:17
msgid "// fn set_x(&mut self, x: T)\n"
msgstr "// fn set_x(&mut self, x: T)\n"

#: src/generics/generic-data.md:23
msgid "\"{integer:?} and {float:?}\""
msgstr "\"{integer:?} e {float:?}\""

#: src/generics/generic-data.md:24
msgid "\"coords: {:?}\""
msgstr "\"coords: {:?}\""

#: src/generics/generic-data.md:30
msgid ""
"_Q:_ Why `T` is specified twice in `impl<T> Point<T> {}`? Isn't that "
"redundant?"
msgstr ""
"_Pergunta:_ Por que `T` √© especificado duas vezes em `impl<T> Point<T> {}`? "
"Isso n√£o √© redundante?"

#: src/generics/generic-data.md:32
msgid ""
"This is because it is a generic implementation section for generic type. "
"They are independently generic."
msgstr ""
"Isso ocorre porque √© uma se√ß√£o de implementa√ß√£o gen√©rica para tipo gen√©rico. "
"Eles s√£o gen√©ricos de forma independente."

#: src/generics/generic-data.md:34
msgid "It means these methods are defined for any `T`."
msgstr "Significa que esses m√©todos s√£o definidos para qualquer `T`."

#: src/generics/generic-data.md:35
msgid "It is possible to write `impl Point<u32> { .. }`."
msgstr "√â poss√≠vel escrever `impl Point<u32> { .. }`."

#: src/generics/generic-data.md:36
msgid ""
"`Point` is still generic and you can use `Point<f64>`, but methods in this "
"block will only be available for `Point<u32>`."
msgstr ""
"`Point` ainda √© gen√©rico e voc√™ pode usar `Point<f64>`, mas os m√©todos neste "
"bloco s√≥ estar√£o dispon√≠veis para `Point<u32>`."

#: src/generics/generic-data.md:39
msgid ""
"Try declaring a new variable `let p = Point { x: 5, y: 10.0 };`. Update the "
"code to allow points that have elements of different types, by using two "
"type variables, e.g., `T` and `U`."
msgstr ""
"Tente declarar uma nova vari√°vel `let p = Point { x: 5, y: 10.0 };`. "
"Atualize o c√≥digo para permitir pontos que tenham elementos de tipos "
"diferentes, usando duas vari√°veis de tipo, por exemplo, `T` e `U`."

#: src/generics/trait-bounds.md:3
msgid ""
"When working with generics, you often want to require the types to implement "
"some trait, so that you can call this trait's methods."
msgstr ""
"Ao trabalhar com gen√©ricos, muitas vezes voc√™ exigir que os tipos "
"implementem algum `trait` para poder utilizar os m√©todos do `trait`."

#: src/generics/trait-bounds.md:6
msgid "You can do this with `T: Trait` or `impl Trait`:"
msgstr "Voc√™ consegue fazer isso com `T:Trait` ou `impl Trait`:"

#: src/generics/trait-bounds.md:12
msgid "// struct NotClonable;\n"
msgstr "// struct NotClonable;\n"

#: src/generics/trait-bounds.md:18
msgid "\"{pair:?}\""
msgstr "\"{pair:?}\""

#: src/generics/trait-bounds.md:24
msgid "Try making a `NonClonable` and passing it to `duplicate`."
msgstr "Tente criar um `NonClonable` e pass√°-lo para `duplicate`."

#: src/generics/trait-bounds.md:26
msgid "When multiple traits are necessary, use `+` to join them."
msgstr "Quando v√°rios _traits_ s√£o necess√°rios, use `+` para uni-los."

#: src/generics/trait-bounds.md:28
msgid "Show a `where` clause, students will encounter it when reading code."
msgstr ""
"Mostre uma cl√°usula `where`, estudantes ir√£o encontr√°-la quando lerem c√≥digo."

#: src/generics/trait-bounds.md:39
msgid "It declutters the function signature if you have many parameters."
msgstr "Organiza a assinatura da fun√ß√£o se voc√™ tiver muitos par√¢metros."

#: src/generics/trait-bounds.md:40
msgid "It has additional features making it more powerful."
msgstr "Possui recursos adicionais tornando-o mais poderoso."

#: src/generics/trait-bounds.md:41
msgid ""
"If someone asks, the extra feature is that the type on the left of \":\" can "
"be arbitrary, like `Option<T>`."
msgstr ""
"Se algu√©m perguntar, o recurso extra √© que o tipo √† esquerda de \":\" pode "
"ser arbitr√°rio, como `Option<T>`."

#: src/generics/trait-bounds.md:44
msgid ""
"Note that Rust does not (yet) support specialization. For example, given the "
"original `duplicate`, it is invalid to add a specialized `duplicate(a: u32)`."
msgstr ""
"Observe que o Rust ainda n√£o suporta especializa√ß√£o. Por exemplo, dada a "
"fun√ß√£o `duplicate` original, √© inv√°lido adicionar uma especializa√ß√£o "
"`duplicate(a: u32)`."

#: src/generics/impl-trait.md:3
msgid ""
"Similar to trait bounds, an `impl Trait` syntax can be used in function "
"arguments and return values:"
msgstr ""
"Semelhante aos limites de _trait_, a sintaxe do _trait_ `impl` pode ser "
"usada em argumentos de fun√ß√µes e em valores de retorno:"

#: src/generics/impl-trait.md:7
msgid ""
"// Syntactic sugar for:\n"
"//   fn add_42_millions<T: Into<i32>>(x: T) -> i32 {\n"
msgstr ""
"// C√≥digo simplificado para:\n"
"//   fn add_42_millions<T: Into<i32>>(x: T) -> i32 {\n"

#: src/generics/impl-trait.md:19
msgid "\"{many}\""
msgstr "\"{many}\""

#: src/generics/impl-trait.md:21
msgid "\"{many_more}\""
msgstr "\"{many_more}\""

#: src/generics/impl-trait.md:23
msgid "\"debuggable: {debuggable:?}\""
msgstr "\"debuggable: {debuggable:?}\""

#: src/generics/impl-trait.md:29
msgid ""
"`impl Trait` allows you to work with types which you cannot name. The "
"meaning of `impl Trait` is a bit different in the different positions."
msgstr ""
"O `impl Trait` permite que voc√™ trabalhe com tipos que voc√™ n√£o pode nomear. "
"O significado de `impl Trait` √© um pouco diferente nas diferentes posi√ß√µes."

#: src/generics/impl-trait.md:32
msgid ""
"For a parameter, `impl Trait` is like an anonymous generic parameter with a "
"trait bound."
msgstr ""
"Como par√¢metro, o _trait_ `impl` √© como um par√¢metro gen√©rico an√¥nimo com um "
"limitador de caracter√≠sticas (trait)."

#: src/generics/impl-trait.md:35
msgid ""
"For a return type, it means that the return type is some concrete type that "
"implements the trait, without naming the type. This can be useful when you "
"don't want to expose the concrete type in a public API."
msgstr ""
"Como tipo de retorno, significa que o tipo de retorno √© algum tipo concreto "
"que implementa o _trait_, sem nomear o tipo. Isso pode ser √∫til quando voc√™ "
"n√£o deseja expor o tipo concreto em uma API p√∫blica."

#: src/generics/impl-trait.md:39
msgid ""
"Inference is hard in return position. A function returning `impl Foo` picks "
"the concrete type it returns, without writing it out in the source. A "
"function returning a generic type like `collect<B>() -> B` can return any "
"type satisfying `B`, and the caller may need to choose one, such as with "
"`let x: Vec<_> = foo.collect()` or with the turbofish, `foo.collect::"
"<Vec<_>>()`."
msgstr ""
"A infer√™ncia √© dif√≠cil na posi√ß√£o de retorno. Uma fun√ß√£o que retorna `impl "
"Foo` escolhe o tipo concreto que retorna, sem escrev√™-lo na fonte. Uma "
"fun√ß√£o que retorna um tipo gen√©rico como `collect<B>() -> B` pode retornar "
"qualquer tipo que satisfa√ßa `B`, e o chamador pode precisar escolher um, "
"como com `let x: Vec<_> = foo.collect()` ou com o _turbofish_, `foo.collect::"
"<Vec<_>>()`."

#: src/generics/impl-trait.md:46
msgid ""
"What is the type of `debuggable`? Try `let debuggable: () = ..` to see what "
"the error message shows."
msgstr ""
"Qual √© o tipo de `debuggable`? Tente `let debuggable: () = ..` para ver o "
"que a mensagem de erro mostra."

#: src/generics/exercise.md:3
msgid ""
"In this short exercise, you will implement a generic `min` function that "
"determines the minimum of two values, using a `LessThan` trait."
msgstr ""
"Neste exerc√≠cio curto, voc√™ implementar√° uma fun√ß√£o gen√©rica `min` que "
"determina o m√≠nimo de dois valores, usando um _trait_ `LessThan`."

#: src/generics/exercise.md:8 src/generics/solution.md:5
msgid "/// Return true if self is less than other.\n"
msgstr "/// Retorna verdadeiro se self for menor que other.\n"

#: src/generics/exercise.md:29
msgid "// TODO: implement the `min` function used in `main`.\n"
msgstr "// TODO: implemente a fun√ß√£o `min` usada em `main`.\n"

#: src/generics/exercise.md:33 src/generics/solution.md:36
msgid "\"Shapiro\""
msgstr "\"Shapiro\""

#: src/generics/exercise.md:34 src/generics/exercise.md:35
#: src/generics/solution.md:37 src/generics/solution.md:38
msgid "\"Baumann\""
msgstr "\"Baumann\""

#: src/std-types.md:7
msgid ""
"For each of the slides in this section, spend some time reviewing the "
"documentation pages, highlighting some of the more common methods."
msgstr ""

#: src/std-types/std.md:3
msgid ""
"Rust comes with a standard library which helps establish a set of common "
"types used by Rust libraries and programs. This way, two libraries can work "
"together smoothly because they both use the same `String` type."
msgstr ""
"Rust vem com uma biblioteca padr√£o (_standard library_) que ajuda a "
"estabelecer um conjunto de tipos comuns usados por bibliotecas e programas "
"Rust. Dessa forma, duas bibliotecas podem trabalhar juntas sem problemas "
"porque ambas usam o mesmo tipo `String`."

#: src/std-types/std.md:7
msgid ""
"In fact, Rust contains several layers of the Standard Library: `core`, "
"`alloc` and `std`."
msgstr ""
"Na verdade, o Rust cont√©m v√°rias camadas de Biblioteca Padr√£o: `core`, "
"`alloc` e `std`. "

#: src/std-types/std.md:10
msgid ""
"`core` includes the most basic types and functions that don't depend on "
"`libc`, allocator or even the presence of an operating system."
msgstr ""
"`core` inclui os tipos e fun√ß√µes mais b√°sicos que n√£o dependem de `libc`, "
"alocador ou at√© mesmo a presen√ßa de um sistema operacional. "

#: src/std-types/std.md:12
msgid ""
"`alloc` includes types which require a global heap allocator, such as `Vec`, "
"`Box` and `Arc`."
msgstr ""
"`alloc` inclui tipos que requerem um alocador de heap global, tais como "
"`Vec`, `Box` e `Arc`."

#: src/std-types/std.md:14
msgid ""
"Embedded Rust applications often only use `core`, and sometimes `alloc`."
msgstr ""
"Os aplicativos Rust embarcados geralmente usam apenas `core` e, √†s vezes, "
"`alloc`."

#: src/std-types/docs.md:3
msgid "Rust comes with extensive documentation. For example:"
msgstr "O Rust vem com uma extensa documenta√ß√£o. Por exemplo:"

#: src/std-types/docs.md:5
msgid ""
"All of the details about [loops](https://doc.rust-lang.org/stable/reference/"
"expressions/loop-expr.html)."
msgstr ""
"Todos os detalhes sobre [loops](https://doc.rust-lang.org/stable/reference/"
"expressions/loop-expr.html)."

#: src/std-types/docs.md:7
msgid ""
"Primitive types like [`u8`](https://doc.rust-lang.org/stable/std/primitive."
"u8.html)."
msgstr ""
"Tipos primitivos como [`u8`](https://doc.rust-lang.org/stable/std/primitive."
"u8.html)."

#: src/std-types/docs.md:9
msgid ""
"Standard library types like [`Option`](https://doc.rust-lang.org/stable/std/"
"option/enum.Option.html) or [`BinaryHeap`](https://doc.rust-lang.org/stable/"
"std/collections/struct.BinaryHeap.html)."
msgstr ""
"Tipos da biblioteca padr√£o como [`Option`](https://doc.rust-lang.org/stable/"
"std/option/enum.Option.html) ou [`BinaryHeap`](https://doc.rust-lang.org/"
"stable/std/collections/struct.BinaryHeap.html)."

#: src/std-types/docs.md:13
msgid "In fact, you can document your own code:"
msgstr "Na verdade, voc√™ pode documentar seu pr√≥prio c√≥digo:"

#: src/std-types/docs.md:16
msgid ""
"/// Determine whether the first argument is divisible by the second "
"argument.\n"
"///\n"
"/// If the second argument is zero, the result is false.\n"
msgstr ""
"/// Determine se o primeiro argumento √© divis√≠vel pelo segundo argumento.\n"
"///\n"
"/// Se o segundo argumento for zero, o resultado √© falso.\n"

#: src/std-types/docs.md:27
msgid ""
"The contents are treated as Markdown. All published Rust library crates are "
"automatically documented at [`docs.rs`](https://docs.rs) using the [rustdoc]"
"(https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html) tool. It is "
"idiomatic to document all public items in an API using this pattern."
msgstr ""
"O conte√∫do √© tratado como _Markdown_. Todos os _crates_ publicados na "
"biblioteca Rust s√£o documentados automaticamente em [`docs.rs`](https://docs."
"rs) utilizando a ferramenta [rustdoc](https://doc.rust-lang.org/rustdoc/what-"
"is-rustdoc.html). √â idiom√°tico documentar todos os itens p√∫blicos em uma API "
"usando este padr√£o."

#: src/std-types/docs.md:32
msgid ""
"To document an item from inside the item (such as inside a module), use `//!"
"` or `/*! .. */`, called \"inner doc comments\":"
msgstr ""
"Para documentar um item de dentro do item (como dentro de um m√≥dulo), use "
"`//!` ou `/*! .. */`, chamado de \"coment√°rios de documenta√ß√£o interna\":"

#: src/std-types/docs.md:36
msgid ""
"//! This module contains functionality relating to divisibility of "
"integers.\n"
msgstr ""
"//! Este m√≥dulo cont√©m funcionalidades relacionadas √† divisibilidade de "
"inteiros.\n"

#: src/std-types/docs.md:41
msgid ""
"Show students the generated docs for the `rand` crate at <https://docs.rs/"
"rand>."
msgstr ""
"Mostre aos alunos os documentos gerados para o crate `rand` em [<https://"
"docs.rs/rand>."

#: src/std-types/option.md:1
msgid "Option"
msgstr "Option"

#: src/std-types/option.md:3
msgid ""
"We have already seen some use of `Option<T>`. It stores either a value of "
"type `T` or nothing. For example, [`String::find`](https://doc.rust-lang.org/"
"stable/std/string/struct.String.html#method.find) returns an `Option<usize>`."
msgstr ""

#: src/std-types/option.md:10
msgid "\"L√∂we ËÄÅËôé L√©opard Gepardi\""
msgstr "\"L√∂we ËÄÅËôé L√©opard Gepardi\""

#: src/std-types/option.md:11
msgid "'√©'"
msgstr "'√©'"

#: src/std-types/option.md:12 src/std-types/option.md:15
msgid "\"find returned {position:?}\""
msgstr "\"find retornou {position:?}\""

#: src/std-types/option.md:14
msgid "'Z'"
msgstr "'Z'"

#: src/std-types/option.md:16
msgid "\"Character not found\""
msgstr "\"Caractere n√£o encontrado\""

#: src/std-types/option.md:22
msgid "`Option` is widely used, not just in the standard library."
msgstr "`Option` √© amplamente utilizado, n√£o apenas na biblioteca padr√£o."

#: src/std-types/option.md:23
msgid ""
"`unwrap` will return the value in an `Option`, or panic. `expect` is similar "
"but takes an error message."
msgstr ""
"`unwrap` retornar√° o valor em um `Option`, ou entrar√° em p√¢nico. `expect` √© "
"semelhante, mas recebe uma mensagem de erro."

#: src/std-types/option.md:25
msgid ""
"You can panic on None, but you can't \"accidentally\" forget to check for "
"None."
msgstr ""
"Voc√™ pode entrar em p√¢nico em `None`, mas n√£o pode \"acidentalmente\" "
"esquecer de verificar `None`."

#: src/std-types/option.md:27
msgid ""
"It's common to `unwrap`/`expect` all over the place when hacking something "
"together, but production code typically handles `None` in a nicer fashion."
msgstr ""
"√â comum `unwrap`/`expect` em todos os lugares ao hackear algo, mas o c√≥digo "
"de produ√ß√£o normalmente lida com `None` de uma maneira mais elegante."

#: src/std-types/option.md:29
msgid ""
"The niche optimization means that `Option<T>` often has the same size in "
"memory as `T`."
msgstr ""
"A otimiza√ß√£o de nicho significa que `Option<T>` muitas vezes tem o mesmo "
"tamanho na mem√≥ria que `T`."

#: src/std-types/result.md:1
msgid "Result"
msgstr "Result"

#: src/std-types/result.md:3
msgid ""
"`Result` is similar to `Option`, but indicates the success or failure of an "
"operation, each with a different type. This is similar to the `Res` defined "
"in the expression exercise, but generic: `Result<T, E>` where `T` is used in "
"the `Ok` variant and `E` appears in the `Err` variant."
msgstr ""
"`Result` √© semelhante a `Option`, mas indica o sucesso ou falha de uma "
"opera√ß√£o, cada um com um tipo diferente. Isso √© semelhante ao `Res` definido "
"no exerc√≠cio de express√£o, mas gen√©rico: `Result<T, E>` onde `T` √© usado na "
"variante `Ok` e `E` aparece na variante `Err`."

#: src/std-types/result.md:13
msgid "\"diary.txt\""
msgstr "\"diary.txt\""

#: src/std-types/result.md:18
msgid "\"Dear diary: {contents} ({bytes} bytes)\""
msgstr "\"Querido di√°rio: {contents} ({bytes} bytes)\""

#: src/std-types/result.md:20
msgid "\"Could not read file content\""
msgstr "\"N√£o √© possivel ler o conte√∫do do arquivo\""

#: src/std-types/result.md:24
msgid "\"The diary could not be opened: {err}\""
msgstr "\"N√£o foi poss√≠vel abrir o di√°rio: {err}\""

#: src/std-types/result.md:32
msgid ""
"As with `Option`, the successful value sits inside of `Result`, forcing the "
"developer to explicitly extract it. This encourages error checking. In the "
"case where an error should never happen, `unwrap()` or `expect()` can be "
"called, and this is a signal of the developer intent too."
msgstr ""
"Como em `Option`, o valor bem-sucedido fica dentro de `Result`, for√ßando o "
"desenvolvedor a extra√≠-lo explicitamente. Isso encoraja a verifica√ß√£o de "
"erros. No caso em que um erro nunca deve acontecer, `unwrap()` ou `expect()` "
"podem ser chamados, e isso tamb√©m sinaliza a inten√ß√£o do desenvolvedor."

#: src/std-types/result.md:36
msgid ""
"`Result` documentation is a recommended read. Not during the course, but it "
"is worth mentioning. It contains a lot of convenience methods and functions "
"that help functional-style programming."
msgstr ""
"A documenta√ß√£o de `Result` √© uma leitura recomendada. N√£o durante o curso, "
"mas vale a pena mencion√°-la. Ele cont√©m muitos m√©todos e fun√ß√µes de "
"conveni√™ncia que ajudam na programa√ß√£o ao estilo funcional."

#: src/std-types/result.md:39
msgid ""
"`Result` is the standard type to implement error handling as we will see on "
"Day 3."
msgstr ""
"`Result` √© o tipo padr√£o para implementar tratamento de erros, como veremos "
"no Dia 3."

#: src/std-types/string.md:1
msgid "String"
msgstr "String"

#: src/std-types/string.md:3
msgid ""
"[`String`](https://doc.rust-lang.org/std/string/struct.String.html) is the "
"standard heap-allocated growable UTF-8 string buffer:"
msgstr ""
"[`String`](https://doc.rust-lang.org/std/string/struct.String.html) √© o "
"buffer padr√£o de cadeia de caracteres UTF-8 expans√≠vel e alocado no heap:"

#: src/std-types/string.md:8 src/std-traits/read-and-write.md:35
#: src/memory-management/review.md:23 src/memory-management/review.md:57
#: src/testing/unit-tests.md:32 src/testing/unit-tests.md:37
#: src/concurrency/scoped-threads.md:9 src/concurrency/scoped-threads.md:26
msgid "\"Hello\""
msgstr "\"Ol√°\""

#: src/std-types/string.md:9
msgid "\"s1: len = {}, capacity = {}\""
msgstr "\"s1: tam = {}, capacidade = {}\""

#: src/std-types/string.md:13
msgid "'!'"
msgstr "'!'"

#: src/std-types/string.md:14
msgid "\"s2: len = {}, capacity = {}\""
msgstr "\"s2: tam = {}, capacidade = {}\""

#: src/std-types/string.md:16
msgid "\"üá®üá≠\""
msgstr "\"üáßüá∑\""

#: src/std-types/string.md:17
msgid "\"s3: len = {}, number of chars = {}\""
msgstr "\"s3: tam = {}, n√∫mero de caracteres = {}\""

#: src/std-types/string.md:21
msgid ""
"`String` implements [`Deref<Target = str>`](https://doc.rust-lang.org/std/"
"string/struct.String.html#deref-methods-str), which means that you can call "
"all `str` methods on a `String`."
msgstr ""
"`String` implementa [`Deref<Target = str>`](https://doc.rust-lang.org/std/"
"string/struct.String.html#deref-methods-str), o que significa que voc√™ pode "
"chamar todos os m√©todos de `str` em uma `String`."

#: src/std-types/string.md:29
msgid ""
"`String::new` returns a new empty string, use `String::with_capacity` when "
"you know how much data you want to push to the string."
msgstr ""
"`String::new` retorna uma nova string vazia, use `String::with_capacity` "
"quando voc√™ sabe a quantidade de dados que voc√™ deseja colocar na string."

#: src/std-types/string.md:31
msgid ""
"`String::len` returns the size of the `String` in bytes (which can be "
"different from its length in characters)."
msgstr ""
"`String::len` retorna o tamanho da `String` em bytes (que pode ser diferente "
"de seu comprimento em caracteres)."

#: src/std-types/string.md:33
msgid ""
"`String::chars` returns an iterator over the actual characters. Note that a "
"`char` can be different from what a human will consider a \"character\" due "
"to [grapheme clusters](https://docs.rs/unicode-segmentation/latest/"
"unicode_segmentation/struct.Graphemes.html)."
msgstr ""
"`String::chars` retorna um iterador com os caracteres de fato. Observe que "
"um `char` pode ser diferente do que um humano considerar√° um \"caracter\" "
"devido a [agrupamentos de grafemas (_grapheme clusters_)](https://docs.rs/"
"unicode-segmentation/latest/unicode_segmentation/struct.Graphemes.html)."

#: src/std-types/string.md:36
msgid ""
"When people refer to strings they could either be talking about `&str` or "
"`String`."
msgstr ""
"Quando as pessoas se referem a strings, elas podem estar falando sobre "
"`&str` ou `String`."

#: src/std-types/string.md:38
msgid ""
"When a type implements `Deref<Target = T>`, the compiler will let you "
"transparently call methods from `T`."
msgstr ""
"Quando um tipo implementa `Deref<Target = T>`, o compilador permitir√° que "
"voc√™ transparentemente chame m√©todos de `T`."

#: src/std-types/string.md:40
msgid ""
"We haven't discussed the `Deref` trait yet, so at this point this mostly "
"explains the structure of the sidebar in the documentation."
msgstr ""
"Ainda n√£o discutimos o _trait_ `Deref`, ent√£o, neste ponto, isso explica "
"principalmente a estrutura da barra lateral na documenta√ß√£o."

#: src/std-types/string.md:42
msgid ""
"`String` implements `Deref<Target = str>` which transparently gives it "
"access to `str`'s methods."
msgstr ""
"`String` implementa `Deref<Target = str>` que, de forma transparente, d√° "
"acesso aos m√©todos de `str`."

#: src/std-types/string.md:44
msgid "Write and compare `let s3 = s1.deref();` and `let s3 = &*s1;`."
msgstr "Escreva e compare `let s3 = s1.deref();` e `let s3 = &*s1;`."

#: src/std-types/string.md:45
msgid ""
"`String` is implemented as a wrapper around a vector of bytes, many of the "
"operations you see supported on vectors are also supported on `String`, but "
"with some extra guarantees."
msgstr ""
"`String` √© implementado como um wrapper em torno de um vetor de bytes, "
"muitas das opera√ß√µes que voc√™ v√™ suportadas em vetores tamb√©m s√£o suportadas "
"em `String`, mas com algumas garantias extras."

#: src/std-types/string.md:48
msgid "Compare the different ways to index a `String`:"
msgstr "Compare as diferentes formas de indexar uma `String`:"

#: src/std-types/string.md:49
msgid ""
"To a character by using `s3.chars().nth(i).unwrap()` where `i` is in-bound, "
"out-of-bounds."
msgstr ""
"Para um caracter usando `s3.chars().nth(i).unwrap()` onde `i` est√° dentro "
"dos limites, fora dos limites."

#: src/std-types/string.md:51
msgid ""
"To a substring by using `s3[0..4]`, where that slice is on character "
"boundaries or not."
msgstr ""
"Para uma substring usando `s3[0..4]`, onde essa _slice_ est√° nos limites dos "
"caracteres ou n√£o."

#: src/std-types/vec.md:3
msgid ""
"[`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html) is the standard "
"resizable heap-allocated buffer:"
msgstr ""
"[`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html) √© o buffer padr√£o "
"redimension√°vel alocado no heap:"

#: src/std-types/vec.md:9
msgid "\"v1: len = {}, capacity = {}\""
msgstr "\"v1: tamanho = {}, capacidade = {}\""

#: src/std-types/vec.md:14
msgid "\"v2: len = {}, capacity = {}\""
msgstr "\"v2: tamanho = {}, capacidade = {}\""

#: src/std-types/vec.md:16
msgid "// Canonical macro to initialize a vector with elements.\n"
msgstr "// Macro can√¥nica para inicializar um vetor com elementos.\n"

#: src/std-types/vec.md:19
msgid "// Retain only the even elements.\n"
msgstr "// Mant√©m apenas os elementos pares.\n"

#: src/std-types/vec.md:21 src/std-types/vec.md:25
msgid "\"{v3:?}\""
msgstr "\"{v3:?}\""

#: src/std-types/vec.md:23
msgid "// Remove consecutive duplicates.\n"
msgstr "// Remove duplicatas consecutivas.\n"

#: src/std-types/vec.md:29
msgid ""
"`Vec` implements [`Deref<Target = [T]>`](https://doc.rust-lang.org/std/vec/"
"struct.Vec.html#deref-methods-%5BT%5D), which means that you can call slice "
"methods on a `Vec`."
msgstr ""
"`Vec` implementa [`Deref<Target = [T]>`](https://doc.rust-lang.org/std/vec/"
"struct.Vec.html#deref-methods-%5BT%5D), o que significa que voc√™ pode chamar "
"m√©todos de _slice_ em um `Vec`."

#: src/std-types/vec.md:37
msgid ""
"`Vec` is a type of collection, along with `String` and `HashMap`. The data "
"it contains is stored on the heap. This means the amount of data doesn't "
"need to be known at compile time. It can grow or shrink at runtime."
msgstr ""
"`Vec` √© um tipo de cole√ß√£o, como `String` e `HashMap`. Os dados que ele "
"cont√©m s√£o armazenados no heap. Isso significa que a quantidade de dados n√£o "
"precisa ser conhecida em tempo de compila√ß√£o. Ela pode crescer ou encolher "
"em tempo de execu√ß√£o."

#: src/std-types/vec.md:40
msgid ""
"Notice how `Vec<T>` is a generic type too, but you don't have to specify `T` "
"explicitly. As always with Rust type inference, the `T` was established "
"during the first `push` call."
msgstr ""
"Observe como `Vec<T>` tamb√©m √© um tipo gen√©rico, mas voc√™ n√£o precisa "
"especificar `T` explicitamente. Como sempre, com a infer√™ncia de tipos do "
"Rust, `T` foi estabelecido durante a primeira chamada de `push`."

#: src/std-types/vec.md:43
msgid ""
"`vec![...]` is a canonical macro to use instead of `Vec::new()` and it "
"supports adding initial elements to the vector."
msgstr ""
"`vec![...]` √© uma macro can√¥nica para usar em vez de `Vec::new()` e suporta "
"a adi√ß√£o de elementos iniciais ao vetor."

#: src/std-types/vec.md:45
msgid ""
"To index the vector you use `[` `]`, but they will panic if out of bounds. "
"Alternatively, using `get` will return an `Option`. The `pop` function will "
"remove the last element."
msgstr ""
"Para indexar o vetor, voc√™ usa `[` `]`, mas uma exce√ß√£o do tipo _p√¢nico_ "
"(`panic`) ser√° gerada se o √≠ndice estiver fora dos limites. "
"Alternativamente, usando `get` voc√™ obter√° um `Option`. A fun√ß√£o `pop` "
"remover√° o √∫ltimo elemento."

#: src/std-types/vec.md:48
msgid ""
"Slices are covered on day 3. For now, students only need to know that a "
"value of type `Vec` gives access to all of the documented slice methods, too."
msgstr ""
"Os _slices_ s√£o abordados no dia 3. Por enquanto, os alunos s√≥ precisam "
"saber que um valor do tipo `Vec` d√° acesso a todos os m√©todos de _slice_ "
"documentados, tamb√©m."

#: src/std-types/hashmap.md:3
msgid "Standard hash map with protection against HashDoS attacks:"
msgstr ""
"_Hash map_ (Mapa de _hash_) padr√£o com prote√ß√£o contra ataques _HashDoS_:"

#: src/std-types/hashmap.md:10
msgid "\"Adventures of Huckleberry Finn\""
msgstr "\"Adventures of Huckleberry Finn\""

#: src/std-types/hashmap.md:11
msgid "\"Grimms' Fairy Tales\""
msgstr "\"Grimms' Fairy Tales\""

#: src/std-types/hashmap.md:12 src/std-types/hashmap.md:21
#: src/std-types/hashmap.md:29
msgid "\"Pride and Prejudice\""
msgstr "\"Pride and Prejudice\""

#: src/std-types/hashmap.md:14
msgid "\"Les Mis√©rables\""
msgstr "\"Les Mis√©rables\""

#: src/std-types/hashmap.md:16
msgid "\"We know about {} books, but not Les Mis√©rables.\""
msgstr "\"N√≥s sabemos sobre livros {}, mas n√£o Les Mis√©rables.\""

#: src/std-types/hashmap.md:21 src/std-types/hashmap.md:29
msgid "\"Alice's Adventure in Wonderland\""
msgstr "\"Alice's Adventure in Wonderland\""

#: src/std-types/hashmap.md:23
msgid "\"{book}: {count} pages\""
msgstr "\"{book}: {count} p√°ginas\""

#: src/std-types/hashmap.md:24
msgid "\"{book} is unknown.\""
msgstr "\"{book} √© desconhecido.\""

#: src/std-types/hashmap.md:28
msgid "// Use the .entry() method to insert a value if nothing is found.\n"
msgstr ""
"// Use o m√©todo .entry() para inserir um valor caso nada seja encontrado.\n"

#: src/std-types/hashmap.md:34
msgid "\"{page_counts:#?}\""
msgstr "\"{page_counts:#?}\""

#: src/std-types/hashmap.md:40
msgid ""
"`HashMap` is not defined in the prelude and needs to be brought into scope."
msgstr ""
"`HashMap` n√£o est√° definido no prel√∫dio e precisa ser inclu√≠do no escopo."

#: src/std-types/hashmap.md:41
msgid ""
"Try the following lines of code. The first line will see if a book is in the "
"hashmap and if not return an alternative value. The second line will insert "
"the alternative value in the hashmap if the book is not found."
msgstr ""
"Tente as seguintes linhas de c√≥digo. A primeira linha ver√° se um livro est√° "
"no hash map e, caso n√£o esteja, retorna um valor alternativo. A segunda "
"linha ir√° inserir o valor alternativo no hash map se o livro n√£o for "
"encontrado."

#: src/std-types/hashmap.md:47 src/std-types/hashmap.md:59
msgid "\"Harry Potter and the Sorcerer's Stone\""
msgstr "\"Harry Potter and the Sorcerer's Stone\""

#: src/std-types/hashmap.md:50 src/std-types/hashmap.md:60
msgid "\"The Hunger Games\""
msgstr "\"The Hunger Games\""

#: src/std-types/hashmap.md:53
msgid "Unlike `vec!`, there is unfortunately no standard `hashmap!` macro."
msgstr ""
"Ao contr√°rio de `vec!`, infelizmente n√£o existe uma macro `hashmap!` padr√£o."

#: src/std-types/hashmap.md:54
msgid ""
"Although, since Rust 1.56, HashMap implements [`From<[(K, V); N]>`](https://"
"doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#impl-"
"From%3C%5B(K,+V);+N%5D%3E-for-HashMap%3CK,+V,+RandomState%3E), which allows "
"us to easily initialize a hash map from a literal array:"
msgstr ""
"Entretanto, desde o Rust 1.56, o HashMap implementa [`From<[(K, V); N]>`]"
"(https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#impl-"
"From%3C%5B(K,+V);+N%5D%3E-for-HashMap%3CK,+V,+RandomState%3E), o que nos "
"permite inicializar facilmente um hash map a partir de uma matriz literal:"

#: src/std-types/hashmap.md:64
msgid ""
"Alternatively HashMap can be built from any `Iterator` which yields key-"
"value tuples."
msgstr ""
"Alternativamente, o HashMap pode ser constru√≠do a partir de qualquer "
"`Iterator` que produz tuplas de chave-valor."

#: src/std-types/hashmap.md:66
msgid ""
"We are showing `HashMap<String, i32>`, and avoid using `&str` as key to make "
"examples easier. Using references in collections can, of course, be done, "
"but it can lead into complications with the borrow checker."
msgstr ""
"Estamos mostrando `HashMap<String, i32>`, e evite usar `&str` como chave "
"para facilitar os exemplos. √â claro que o uso de refer√™ncias em cole√ß√µes "
"pode ser feito, mas isto pode levar a complica√ß√µes com o verificador de "
"empr√©stimos."

#: src/std-types/hashmap.md:69
msgid ""
"Try removing `to_string()` from the example above and see if it still "
"compiles. Where do you think we might run into issues?"
msgstr ""
"Tente remover `to_string()` do exemplo acima e veja se ele ainda compila. "
"Onde voc√™ acha que podemos ter problemas?"

#: src/std-types/hashmap.md:72
msgid ""
"This type has several \"method-specific\" return types, such as `std::"
"collections::hash_map::Keys`. These types often appear in searches of the "
"Rust docs. Show students the docs for this type, and the helpful link back "
"to the `keys` method."
msgstr ""
"Este tipo tem v√°rios tipos de retorno \"espec√≠ficos do m√©todo\", como `std::"
"collections::hash_map::Keys`. Esses tipos geralmente aparecem em pesquisas "
"nos documentos do Rust. Mostre aos alunos os documentos para este tipo e o "
"link √∫til de volta ao m√©todo `keys`."

#: src/std-types/exercise.md:3
msgid ""
"In this exercise you will take a very simple data structure and make it "
"generic. It uses a [`std::collections::HashMap`](https://doc.rust-lang.org/"
"stable/std/collections/struct.HashMap.html) to keep track of which values "
"have been seen and how many times each one has appeared."
msgstr ""
"Neste exerc√≠cio, voc√™ usar√° uma estrutura de dados muito simples e a tornar√° "
"gen√©rica. Ela usa um [`std::collections::HashMap`](https://doc.rust-lang.org/"
"stable/std/collections/struct.HashMap.html) para acompanhar quais valores "
"foram vistos e quantas vezes cada um apareceu."

#: src/std-types/exercise.md:9
msgid ""
"The initial version of `Counter` is hard coded to only work for `u32` "
"values. Make the struct and its methods generic over the type of value being "
"tracked, that way `Counter` can track any type of value."
msgstr ""
"A vers√£o inicial de `Counter` √© codificada para funcionar apenas para "
"valores `u32`. Fa√ßa a estrutura e seus m√©todos gen√©ricos sobre o tipo de "
"valor sendo rastreado, dessa forma `Counter` pode rastrear qualquer tipo de "
"valor."

#: src/std-types/exercise.md:13
msgid ""
"If you finish early, try using the [`entry`](https://doc.rust-lang.org/"
"stable/std/collections/struct.HashMap.html#method.entry) method to halve the "
"number of hash lookups required to implement the `count` method."
msgstr ""
"Se voc√™ terminar cedo, tente usar o m√©todo [`entry`](https://doc.rust-lang."
"org/stable/std/collections/struct.HashMap.html#method.entry) para reduzir "
"pela metade o n√∫mero de pesquisas de hash necess√°rias para implementar o "
"m√©todo `count`."

#: src/std-types/exercise.md:20 src/std-types/solution.md:6
msgid ""
"/// Counter counts the number of times each value of type T has been seen.\n"
msgstr ""
"/// Counter conta o n√∫mero de vezes que cada valor do tipo T foi visto.\n"

#: src/std-types/exercise.md:27 src/std-types/solution.md:13
msgid "/// Create a new Counter.\n"
msgstr "/// Cria um novo Counter.\n"

#: src/std-types/exercise.md:34 src/std-types/solution.md:18
msgid "/// Count an occurrence of the given value.\n"
msgstr "/// Conta uma ocorr√™ncia do valor fornecido.\n"

#: src/std-types/exercise.md:43 src/std-types/solution.md:23
msgid "/// Return the number of times the given value has been seen.\n"
msgstr "/// Retorna o n√∫mero de vezes que o valor fornecido foi visto.\n"

#: src/std-types/exercise.md:59 src/std-types/solution.md:39
msgid "\"saw {} values equal to {}\""
msgstr "\"viu {} valores iguais a {}\""

#: src/std-types/exercise.md:63 src/std-types/exercise.md:65
#: src/std-types/exercise.md:66 src/std-types/solution.md:43
#: src/std-types/solution.md:45 src/std-types/solution.md:46
msgid "\"apple\""
msgstr "\"apple\""

#: src/std-types/exercise.md:64 src/std-types/solution.md:44
msgid "\"orange\""
msgstr "\"orange\""

#: src/std-types/exercise.md:66 src/std-types/solution.md:46
msgid "\"got {} apples\""
msgstr "\"obteve {} ma√ß√£s\""

#: src/std-traits.md:7
msgid ""
"As with the standard-library types, spend time reviewing the documentation "
"for each trait."
msgstr ""
"Como nos tipos da biblioteca padr√£o, reserve um tempo para revisar a "
"documenta√ß√£o de cada `trait`."

#: src/std-traits.md:10
msgid "This section is long. Take a break midway through."
msgstr "Esta se√ß√£o √© longa. Fa√ßa uma pausa no meio."

#: src/std-traits/comparisons.md:3
msgid ""
"These traits support comparisons between values. All traits can be derived "
"for types containing fields that implement these traits."
msgstr ""
"Esses `traits` suportam compara√ß√µes entre valores. Todos os `traits` podem "
"ser derivados para tipos que cont√™m campos que implementam esses `traits`."

#: src/std-traits/comparisons.md:6
msgid "`PartialEq` and `Eq`"
msgstr "`PartialEq` e `Eq`"

#: src/std-traits/comparisons.md:8
msgid ""
"`PartialEq` is a partial equivalence relation, with required method `eq` and "
"provided method `ne`. The `==` and `!=` operators will call these methods."
msgstr ""
"`PartialEq` √© uma rela√ß√£o de equival√™ncia parcial, com o m√©todo `eq` "
"obrigat√≥rio e o m√©todo `ne` fornecido. Os operadores `==` e `!=` chamar√£o "
"esses m√©todos."

#: src/std-traits/comparisons.md:23
msgid ""
"`Eq` is a full equivalence relation (reflexive, symmetric, and transitive) "
"and implies `PartialEq`. Functions that require full equivalence will use "
"`Eq` as a trait bound."
msgstr ""
"`Eq` √© uma rela√ß√£o de equival√™ncia completa (reflexiva, sim√©trica e "
"transitiva) e implica `PartialEq`. Fun√ß√µes que exigem equival√™ncia completa "
"usar√£o `Eq` como um limite de `trait`."

#: src/std-traits/comparisons.md:27
msgid "`PartialOrd` and `Ord`"
msgstr "`PartialOrd` e `Ord`"

#: src/std-traits/comparisons.md:29
msgid ""
"`PartialOrd` defines a partial ordering, with a `partial_cmp` method. It is "
"used to implement the `<`, `<=`, `>=`, and `>` operators."
msgstr ""
"`PartialOrd` define uma ordena√ß√£o parcial, com um m√©todo `partial_cmp`. Ele "
"√© usado para implementar os operadores `<`, `<=`, `>=` e `>`."

#: src/std-traits/comparisons.md:49
msgid "`Ord` is a total ordering, with `cmp` returning `Ordering`."
msgstr "`Ord` √© uma ordena√ß√£o total, com `cmp` retornando `Ordering`."

#: src/std-traits/comparisons.md:53
msgid ""
"`PartialEq` can be implemented between different types, but `Eq` cannot, "
"because it is reflexive:"
msgstr ""
"`PartialEq` pode ser implementado entre diferentes tipos, mas `Eq` n√£o pode, "
"porque √© reflexivo:"

#: src/std-traits/comparisons.md:68
msgid ""
"In practice, it's common to derive these traits, but uncommon to implement "
"them."
msgstr ""
"Na pr√°tica, √© comum derivar esses `traits`, mas incomum implement√°-los."

#: src/std-traits/operators.md:3
msgid ""
"Operator overloading is implemented via traits in [`std::ops`](https://doc."
"rust-lang.org/std/ops/index.html):"
msgstr ""
"A sobrecarga de operadores √© implementada por meio do `trait` contido em "
"[`std::ops`](https://doc.rust-lang.org/std/ops/index.html):"

#: src/std-traits/operators.md:23
msgid "\"{:?} + {:?} = {:?}\""
msgstr "\"{:?} + {:?} = {:?}\""

#: src/std-traits/operators.md:29 src/memory-management/drop.md:47
msgid "Discussion points:"
msgstr "Pontos de discuss√£o:"

#: src/std-traits/operators.md:31
msgid ""
"You could implement `Add` for `&Point`. In which situations is that useful?"
msgstr ""
"Voc√™ pode implementar `Add` para `&Point`. Em quais situa√ß√µes isso √© √∫til?"

#: src/std-traits/operators.md:32
msgid ""
"Answer: `Add:add` consumes `self`. If type `T` for which you are overloading "
"the operator is not `Copy`, you should consider overloading the operator for "
"`&T` as well. This avoids unnecessary cloning on the call site."
msgstr ""
"Resposta: `Add:add` consome `self`. Se o tipo `T` para o qual voc√™ est√° "
"sobrecarregando o operador n√£o implementa `Copy`, voc√™ deve considerar "
"sobrecarregar o operador para `&T` tamb√©m. Isso evita a clonagem "
"desnecess√°ria no local da chamada."

#: src/std-traits/operators.md:35
msgid ""
"Why is `Output` an associated type? Could it be made a type parameter of the "
"method?"
msgstr ""
"Por que `Output` √© um tipo associado? Poderia ser feito um par√¢metro de tipo "
"do m√©todo?"

#: src/std-traits/operators.md:37
msgid ""
"Short answer: Function type parameters are controlled by the caller, but "
"associated types (like `Output`) are controlled by the implementer of a "
"trait."
msgstr ""
"Resposta curta: os par√¢metros de tipo de fun√ß√£o s√£o controlados pelo "
"chamador, mas os tipos associados (como `Output`) s√£o controlados pelo "
"implementador de um `trait`."

#: src/std-traits/operators.md:40
msgid ""
"You could implement `Add` for two different types, e.g. `impl Add<(i32, "
"i32)> for Point` would add a tuple to a `Point`."
msgstr ""
"Voc√™ pode implementar `Add` para dois tipos diferentes, por exemplo, `impl "
"Add<(i32, i32)> for Point` adicionaria uma tupla a um `Point`."

#: src/std-traits/from-and-into.md:3
msgid ""
"Types implement [`From`](https://doc.rust-lang.org/std/convert/trait.From."
"html) and [`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) to "
"facilitate type conversions:"
msgstr ""
"Os tipos implementam [`From`](https://doc.rust-lang.org/std/convert/trait."
"From.html) e [`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) "
"para facilitar as convers√µes de tipo:"

#: src/std-traits/from-and-into.md:11 src/std-traits/from-and-into.md:23
msgid "\"{s}, {addr}, {one}, {bigger}\""
msgstr "\"{s}, {addr}, {one}, {bigger}\""

#: src/std-traits/from-and-into.md:15
msgid ""
"[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) is "
"automatically implemented when [`From`](https://doc.rust-lang.org/std/"
"convert/trait.From.html) is implemented:"
msgstr ""
"[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) √© "
"implementado automaticamente quando [`From`](https://doc.rust-lang.org/std/"
"convert/trait.From.html) √© implementado:"

#: src/std-traits/from-and-into.md:29
msgid ""
"That's why it is common to only implement `From`, as your type will get "
"`Into` implementation too."
msgstr ""
"√â por isso que √© comum implementar apenas `From`, j√° que seu tipo tamb√©m "
"receber√° a implementa√ß√£o de `Into`."

#: src/std-traits/from-and-into.md:31
msgid ""
"When declaring a function argument input type like \"anything that can be "
"converted into a `String`\", the rule is opposite, you should use `Into`. "
"Your function will accept types that implement `From` and those that _only_ "
"implement `Into`."
msgstr ""
"Ao declarar um tipo de entrada de argumento de fun√ß√£o como \"qualquer coisa "
"que possa ser convertida em `String`\", a regra √© oposta, voc√™ deve usar "
"`Into`. Sua fun√ß√£o aceitar√° tipos que implementam `From` e aqueles que "
"_apenas_ implementam `Into`."

#: src/std-traits/casting.md:3
msgid ""
"Rust has no _implicit_ type conversions, but does support explicit casts "
"with `as`. These generally follow C semantics where those are defined."
msgstr ""
"O Rust n√£o tem convers√µes de tipo _impl√≠citas_, mas suporta convers√µes "
"expl√≠citas com `as`. Essas geralmente seguem a sem√¢ntica de C onde elas s√£o "
"definidas."

#: src/std-traits/casting.md:9
msgid "\"as u16: {}\""
msgstr "\"como u16: {}\""

#: src/std-traits/casting.md:10
msgid "\"as i16: {}\""
msgstr "\"como i16: {}\""

#: src/std-traits/casting.md:11
msgid "\"as u8: {}\""
msgstr "\"como u8: {}\""

#: src/std-traits/casting.md:15
msgid ""
"The results of `as` are _always_ defined in Rust and consistent across "
"platforms. This might not match your intuition for changing sign or casting "
"to a smaller type -- check the docs, and comment for clarity."
msgstr ""
"Os resultados de `as` s√£o _sempre_ definidos no Rust e consistentes em todas "
"as plataformas. Isso pode n√£o corresponder √† sua intui√ß√£o para alterar o "
"sinal ou converter para um tipo menor - verifique a documenta√ß√£o e comente "

#: src/std-traits/casting.md:19
msgid ""
"Casting with `as` is a relatively sharp tool that is easy to use "
"incorrectly, and can be a source of subtle bugs as future maintenance work "
"changes the types that are used or the ranges of values in types. Casts are "
"best used only when the intent is to indicate unconditional truncation (e.g. "
"selecting the bottom 32 bits of a `u64` with `as u32`, regardless of what "
"was in the high bits)."
msgstr ""
"Converter com `as` √© uma ferramenta relativamente afiada que √© f√°cil de usar "
"incorretamente e pode ser uma fonte de bugs sutis √† medida que o trabalho de "
"manuten√ß√£o futuro altera os tipos que s√£o usados ou os intervalos de valores "
"nos tipos. As convers√µes s√£o melhores usadas apenas quando a inten√ß√£o √© "
"indicar truncamento incondicional (por exemplo, selecionar os 32 bits "
"inferiores de um `u64` com `as u32`, independentemente do que estava nos "
"bits altos)."

#: src/std-traits/casting.md:25
msgid ""
"For infallible casts (e.g. `u32` to `u64`), prefer using `From` or `Into` "
"over `as` to confirm that the cast is in fact infallible. For fallible "
"casts, `TryFrom` and `TryInto` are available when you want to handle casts "
"that fit differently from those that don't."
msgstr ""
"Para convers√µes infal√≠veis (por exemplo, `u32` para `u64`), prefira usar "
"`From` ou `Into` em vez de `as` para confirmar que a convers√£o √© de fato "
"infal√≠vel. Para convers√µes fal√≠veis, `TryFrom` e `TryInto` est√£o dispon√≠veis "
"quando voc√™ deseja lidar com convers√µes que se encaixam de maneira diferente "
"daquelas que n√£o se encaixam."

#: src/std-traits/casting.md:32
msgid "Consider taking a break after this slide."
msgstr "Considere fazer uma pausa ap√≥s este slide."

#: src/std-traits/casting.md:34
msgid ""
"`as` is similar to a C++ static cast. Use of `as` in cases where data might "
"be lost is generally discouraged, or at least deserves an explanatory "
"comment."
msgstr ""
"`as` √© semelhante a um _cast_ est√°tico do C++. O uso de `as` em casos em que "
"os dados podem ser perdidos geralmente √© desencorajado, ou pelo menos merece "
"um coment√°rio explicativo."

#: src/std-traits/casting.md:37
msgid "This is common in casting integers to `usize` for use as an index."
msgstr ""
"Isso √© comum na convers√£o de inteiros para `usize` para uso como √≠ndice."

#: src/std-traits/read-and-write.md:3
msgid ""
"Using [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) and "
"[`BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html), you can "
"abstract over `u8` sources:"
msgstr ""
"Usando [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) e "
"[`BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html), voc√™ pode "
"abstrair as fontes de dados do tipo `u8`:"

#: src/std-traits/read-and-write.md:14
msgid "b\"foo\\nbar\\nbaz\\n\""
msgstr "b\"foo\\nbar\\nbaz\\n\""

#: src/std-traits/read-and-write.md:15
msgid "\"lines in slice: {}\""
msgstr "\"linhas na _slice_: {}\""

#: src/std-traits/read-and-write.md:18
msgid "\"lines in file: {}\""
msgstr "\"linhas no arquivo: {}\""

#: src/std-traits/read-and-write.md:23
msgid ""
"Similarly, [`Write`](https://doc.rust-lang.org/std/io/trait.Write.html) lets "
"you abstract over `u8` sinks:"
msgstr ""
"Da mesma forma, [`Write`](https://doc.rust-lang.org/std/io/trait.Write.html) "
"permite abstrair a escrita de dados do tipo `u8`:"

#: src/std-traits/read-and-write.md:30
msgid "\"\\n\""
msgstr "\"\\n\""

#: src/std-traits/read-and-write.md:36 src/slices-and-lifetimes/str.md:12
msgid "\"World\""
msgstr "\"Mundo\""

#: src/std-traits/read-and-write.md:37
msgid "\"Logged: {:?}\""
msgstr "\"Registrado: {:?}\""

#: src/std-traits/default.md:1
msgid "The `Default` Trait"
msgstr "O Trait `Default`"

#: src/std-traits/default.md:3
msgid ""
"[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) trait "
"produces a default value for a type."
msgstr ""
"O _trait_ [`Default`](https://doc.rust-lang.org/std/default/trait.Default."
"html) fornece uma implementa√ß√£o padr√£o para um tipo."

#: src/std-traits/default.md:18
msgid "\"John Smith\""
msgstr "\"John Smith\""

#: src/std-traits/default.md:24
msgid "\"{default_struct:#?}\""
msgstr "\"{default_struct:#?}\""

#: src/std-traits/default.md:27
msgid "\"Y is set!\""
msgstr "\"Y est√° definido!\""

#: src/std-traits/default.md:28
msgid "\"{almost_default_struct:#?}\""
msgstr "\"{almost_default_struct:#?}\""

#: src/std-traits/default.md:31 src/slices-and-lifetimes/exercise.md:211
#: src/slices-and-lifetimes/solution.md:214
msgid "\"{:#?}\""
msgstr "\"{:#?}\""

#: src/std-traits/default.md:37
msgid ""
"It can be implemented directly or it can be derived via `#[derive(Default)]`."
msgstr ""
"Ele pode ser implementado diretamente ou derivado usando "
"`#[derive(Default)]`."

#: src/std-traits/default.md:38
msgid ""
"A derived implementation will produce a value where all fields are set to "
"their default values."
msgstr ""
"A implementa√ß√£o usando `derive` produz um valor onde todos os campos s√£o "
"preenchidos com seus valores padr√£o."

#: src/std-traits/default.md:40
msgid "This means all types in the struct must implement `Default` too."
msgstr ""
"Consequentemente, todos os tipos usados no struct devem implementar "
"`Default` tamb√©m."

#: src/std-traits/default.md:41
msgid ""
"Standard Rust types often implement `Default` with reasonable values (e.g. "
"`0`, `\"\"`, etc)."
msgstr ""
"Frequentemente, os tipos padr√£o do Rust implementam `Default` com valores "
"razo√°veis (p.ex.: `0`, `\"\"`, etc)."

#: src/std-traits/default.md:43
msgid "The partial struct initialization works nicely with default."
msgstr "A inicializa√ß√£o parcial do struct funciona bem com o default."

#: src/std-traits/default.md:44
msgid ""
"The Rust standard library is aware that types can implement `Default` and "
"provides convenience methods that use it."
msgstr ""
"A bilioteca padr√£o do Rust sabe que tipos podem implementar o `trait` "
"`Default` e, convenientemente, prov√™ m√©todos para isso."

#: src/std-traits/default.md:46
msgid ""
"The `..` syntax is called [struct update syntax](https://doc.rust-lang.org/"
"book/ch05-01-defining-structs.html#creating-instances-from-other-instances-"
"with-struct-update-syntax)."
msgstr ""
"A sintaxe `..` √© chamada de [sintaxe de atualiza√ß√£o de struct](https://doc."
"rust-lang.org/book/ch05-01-defining-structs.html#creating-instances-from-"
"other-instances-with-struct-update-syntax)."

#: src/std-traits/closures.md:3
msgid ""
"Closures or lambda expressions have types which cannot be named. However, "
"they implement special [`Fn`](https://doc.rust-lang.org/std/ops/trait.Fn."
"html), [`FnMut`](https://doc.rust-lang.org/std/ops/trait.FnMut.html), and "
"[`FnOnce`](https://doc.rust-lang.org/std/ops/trait.FnOnce.html) traits:"
msgstr ""
"Closures ou express√µes _lambda_ t√™m tipos que n√£o podem ser nomeados. No "
"entanto, eles implementam os _traits_ especiais [`Fn`](https://doc.rust-lang."
"org/std/ops/trait.Fn.html), [`FnMut`](https://doc.rust-lang.org/std/ops/"
"trait.FnMut.html) e [`FnOnce`](https://doc.rust-lang.org/std/ops/trait."
"FnOnce.html):"

#: src/std-traits/closures.md:10
msgid "\"Calling function on {input}\""
msgstr "\"Chamando a fun√ß√£o com {entrada}\""

#: src/std-traits/closures.md:16 src/std-traits/closures.md:17
msgid "\"add_3: {}\""
msgstr "\"add_3: {}\""

#: src/std-traits/closures.md:24 src/std-traits/closures.md:25
msgid "\"accumulate: {}\""
msgstr "\"accumulate: {}\""

#: src/std-traits/closures.md:28
msgid "\"multiply_sum: {}\""
msgstr "\"multiply_sum: {}\""

#: src/std-traits/closures.md:34
msgid ""
"An `Fn` (e.g. `add_3`) neither consumes nor mutates captured values, or "
"perhaps captures nothing at all. It can be called multiple times "
"concurrently."
msgstr ""
"Um `Fn` (p.ex. `add_3`) n√£o consome nem muda os valores capturados ou talvez "
"n√£o capture nada, podendo ent√£o ser chamado v√°rias vezes simultaneamente."

#: src/std-traits/closures.md:37
msgid ""
"An `FnMut` (e.g. `accumulate`) might mutate captured values. You can call it "
"multiple times, but not concurrently."
msgstr ""
"Um `FnMut` (p.ex. `accumulate`) pode alterar os valores capturados, logo "
"voc√™ pode cham√°-lo v√°rias vezes, mas n√£o simultaneamente."

#: src/std-traits/closures.md:40
msgid ""
"If you have an `FnOnce` (e.g. `multiply_sum`), you may only call it once. It "
"might consume captured values."
msgstr ""
"Se voc√™ tiver um `FnOnce` (p.ex. `multiply_sum`), poder√° cham√°-lo apenas uma "
"vez. Ele pode consumir os valores capturados."

#: src/std-traits/closures.md:43
msgid ""
"`FnMut` is a subtype of `FnOnce`. `Fn` is a subtype of `FnMut` and `FnOnce`. "
"I.e. you can use an `FnMut` wherever an `FnOnce` is called for, and you can "
"use an `Fn` wherever an `FnMut` or `FnOnce` is called for."
msgstr ""
"`FnMut` √© um subtipo de `FnOnce`. `Fn` √© um subtipo de `FnMut` e `FnOnce`. "
"Ou seja, voc√™ pode usar um `FnMut` sempre que um `FnOnce` √© chamado e voc√™ "
"pode usar um `Fn` sempre que um `FnMut` ou um `FnOnce` √© chamado."

#: src/std-traits/closures.md:47
msgid ""
"When you define a function that takes a closure, you should take `FnOnce` if "
"you can (i.e. you call it once), or `FnMut` else, and last `Fn`. This allows "
"the most flexibility for the caller."
msgstr ""
"Quando voc√™ define uma fun√ß√£o que recebe um _closure_, voc√™ deve usar "
"`FnOnce` se puder (ou seja, voc√™ o chama uma vez) ou `FnMut` caso contr√°rio, "
"e por √∫ltimo `Fn`. Isso permite a maior flexibilidade para o chamador."

#: src/std-traits/closures.md:51
msgid ""
"In contrast, when you have a closure, the most flexible you can have is `Fn` "
"(it can be passed everywhere), then `FnMut`, and lastly `FnOnce`."
msgstr ""
"Em contraste, quando voc√™ tem um _closure_, o mais flex√≠vel que voc√™ pode "
"ter √© `Fn` (ele pode ser passado para qualquer lugar), ent√£o `FnMut` e, por "
"√∫ltimo, `FnOnce`."

#: src/std-traits/closures.md:54
msgid ""
"The compiler also infers `Copy` (e.g. for `add_3`) and `Clone` (e.g. "
"`multiply_sum`), depending on what the closure captures."
msgstr ""
"O compilador tamb√©m infere `Copy` (p.ex. para `add_3`) e `Clone` (p.ex. "

#: src/std-traits/closures.md:57
msgid ""
"By default, closures will capture by reference if they can. The `move` "
"keyword makes them capture by value."
msgstr ""
"Por padr√£o, os _closures_ capturam por refer√™ncia se puderem. A palavra-"
"chave `move` faz com que eles capturem por valor."

#: src/std-traits/closures.md:66
msgid "\"Hi\""
msgstr "\"Ol√°\""

#: src/std-traits/closures.md:67
msgid "\"there\""
msgstr "\"tudo bem\""

#: src/std-traits/exercise.md:3
msgid ""
"In this example, you will implement the classic [\"ROT13\" cipher](https://"
"en.wikipedia.org/wiki/ROT13). Copy this code to the playground, and "
"implement the missing bits. Only rotate ASCII alphabetic characters, to "
"ensure the result is still valid UTF-8."
msgstr ""
"Neste exemplo, voc√™ implementar√° o cl√°ssico [cifra \"ROT13\"](https://pt."
"wikipedia.org/wiki/ROT13). Copie este c√≥digo para o playground e implemente "
"as partes que faltam. Apenas rotacione caracteres alfab√©ticos ASCII para "
"garantir que o resultado ainda seja UTF-8 v√°lido."

#: src/std-traits/exercise.md:15
msgid "// Implement the `Read` trait for `RotDecoder`.\n"
msgstr "// Implemente o trait `Read` para `RotDecoder`.\n"

#: src/std-traits/exercise.md:20 src/std-traits/exercise.md:33
#: src/std-traits/solution.md:26 src/std-traits/solution.md:39
msgid "\"Gb trg gb gur bgure fvqr!\""
msgstr "\"Gb trg gb gur bgure fvqr!\""

#: src/std-traits/exercise.md:36 src/std-traits/solution.md:42
msgid "\"To get to the other side!\""
msgstr "\"To get to the other side!\""

#: src/std-traits/exercise.md:55
msgid ""
"What happens if you chain two `RotDecoder` instances together, each rotating "
"by 13 characters?"
msgstr ""
"O que acontece se voc√™ encadear duas inst√¢ncias de `RotDecoder`, cada uma "
"rotacionando 13 caracteres?"

#: src/std-traits/solution.md:16
msgid "'A'"
msgstr "'A'"

#: src/welcome-day-3.md:1
msgid "Welcome to Day 3"
msgstr "Bem-vindo ao Dia 3"

#: src/welcome-day-3.md:3
msgid "Today, we will cover:"
msgstr "Hoje, vamos cobrir:"

#: src/welcome-day-3.md:5
msgid ""
"Memory management, lifetimes, and the borrow checker: how Rust ensures "
"memory safety."
msgstr ""
"Gerenciamento de mem√≥ria, tempos de vida (_lifetimes_) e o verificador de "
"empr√©stimo (_borrow checker_): como o Rust garante a seguran√ßa da mem√≥ria."

#: src/welcome-day-3.md:7
msgid "Smart pointers: standard library pointer types."
msgstr ""
"Ponteiros inteligentes (_smart pointers_): tipos de ponteiros da biblioteca "
"padr√£o."

#: src/memory-management/review.md:3
msgid "Programs allocate memory in two ways:"
msgstr "Os programas alocam mem√≥ria de duas maneiras:"

#: src/memory-management/review.md:5
msgid "Stack: Continuous area of memory for local variables."
msgstr "Pilha: √Årea cont√≠nua de mem√≥ria para vari√°veis locais."

#: src/memory-management/review.md:6
msgid "Values have fixed sizes known at compile time."
msgstr "Os valores t√™m tamanhos fixos conhecidos em tempo de compila√ß√£o."

#: src/memory-management/review.md:7
msgid "Extremely fast: just move a stack pointer."
msgstr "Extremamente r√°pida: basta mover um ponteiro de pilha."

#: src/memory-management/review.md:8
msgid "Easy to manage: follows function calls."
msgstr "F√°cil de gerenciar: segue chamadas de fun√ß√£o."

#: src/memory-management/review.md:9
msgid "Great memory locality."
msgstr "√ìtima localidade de mem√≥ria."

#: src/memory-management/review.md:11
msgid "Heap: Storage of values outside of function calls."
msgstr "Heap: Armazenamento de valores fora das chamadas de fun√ß√£o."

#: src/memory-management/review.md:12
msgid "Values have dynamic sizes determined at runtime."
msgstr "Valores possuem tamanhos din√¢micos determinados em tempo de execu√ß√£o."

#: src/memory-management/review.md:13
msgid "Slightly slower than the stack: some book-keeping needed."
msgstr ""
"Ligeiramente mais devagar que a pilha: √© necess√°rio um pouco de "
"gerenciamento."

#: src/memory-management/review.md:14
msgid "No guarantee of memory locality."
msgstr "Sem garantias de localidade de mem√≥ria."

#: src/memory-management/review.md:18
msgid ""
"Creating a `String` puts fixed-sized metadata on the stack and dynamically "
"sized data, the actual string, on the heap:"
msgstr ""
"A cria√ß√£o de uma `String` coloca metadados de tamanho fixo na pilha e dados "
"dinamicamente dimensionados - a string propriamente dita - no _heap_:"

#: src/memory-management/review.md:43
msgid ""
"Mention that a `String` is backed by a `Vec`, so it has a capacity and "
"length and can grow if mutable via reallocation on the heap."
msgstr ""
"Mencione que uma `String` √© suportada por um `Vec`, portanto ela tem um "
"tamanho e capacidade e pode crescer se for mut√°vel por meio de realoca√ß√£o no "
"heap."

#: src/memory-management/review.md:46
msgid ""
"If students ask about it, you can mention that the underlying memory is heap "
"allocated using the [System Allocator](https://doc.rust-lang.org/std/alloc/"
"struct.System.html) and custom allocators can be implemented using the "
"[Allocator API](https://doc.rust-lang.org/std/alloc/index.html)"
msgstr ""
"Se os alunos perguntarem sobre isso, voc√™ pode mencionar que a mem√≥ria "
"subjacente √© alocada no heap usando o _[System Allocator](https://doc.rust-"
"lang.org/std/alloc/struct.System.html)_ e os alocadores personalizados podem "
"ser implementados usando a _[API Allocator](https://doc.rust-lang.org/std/"
"alloc/index.html)_."

#: src/memory-management/review.md:52
msgid ""
"We can inspect the memory layout with `unsafe` Rust. However, you should "
"point out that this is rightfully unsafe!"
msgstr ""
"Podemos inspecionar o layout da mem√≥ria com Rust inseguro (`unsafe`). No "
"entanto, voc√™ deve apontar que isso √© legitimamente inseguro!"

#: src/memory-management/review.md:58 src/testing/unit-tests.md:15
msgid "' '"
msgstr "' '"

#: src/memory-management/review.md:59
msgid "\"world\""
msgstr "\"mundo\""

#: src/memory-management/review.md:60
msgid ""
"// DON'T DO THIS AT HOME! For educational purposes only.\n"
"    // String provides no guarantees about its layout, so this could lead "
"to\n"
"    // undefined behavior.\n"
msgstr ""
"// N√ÉO FA√áA ISSO EM CASA! Somente com prop√≥sito educacional.\n"
"    // String n√£o fornece nenhuma garantia sobre o seu layout, ent√£o isso "
"pode causar\n"
"    // um comportamento indefinido.\n"

#: src/memory-management/review.md:65
msgid "\"ptr = {ptr:#x}, len = {len}, capacity = {capacity}\""
msgstr "\"Ponteiro = {ptr:#x}, tamanho = {len}, capacidade = {capacity}\""

#: src/memory-management/approaches.md:3
msgid "Traditionally, languages have fallen into two broad categories:"
msgstr "Tradicionalmente, as linguagens se dividem em duas grandes categorias:"

#: src/memory-management/approaches.md:5
msgid "Full control via manual memory management: C, C++, Pascal, ..."
msgstr ""
"Controle total atrav√©s do gerenciamento manual de mem√≥ria: C, C++, "
"Pascal, ..."

#: src/memory-management/approaches.md:6
msgid "Programmer decides when to allocate or free heap memory."
msgstr "Programador decide quando alocar ou liberar mem√≥ria do heap."

#: src/memory-management/approaches.md:7
msgid ""
"Programmer must determine whether a pointer still points to valid memory."
msgstr ""
"Programador deve determinar se um ponteiro ainda aponta para uma mem√≥ria "
"v√°lida."

#: src/memory-management/approaches.md:8
msgid "Studies show, programmers make mistakes."
msgstr "Estudos mostram que os programadores cometem erros."

#: src/memory-management/approaches.md:9
msgid ""
"Full safety via automatic memory management at runtime: Java, Python, Go, "
"Haskell, ..."
msgstr ""
"Seguran√ßa total atrav√©s do gerenciamento autom√°tico de mem√≥ria em tempo de "
"execu√ß√£o: Java, Python, Go, Haskell, ..."

#: src/memory-management/approaches.md:11
msgid ""
"A runtime system ensures that memory is not freed until it can no longer be "
"referenced."
msgstr ""
"Um sistema em tempo de execu√ß√£o garante que a mem√≥ria n√£o seja liberada at√© "
"que n√£o possa mais ser referenciada."

#: src/memory-management/approaches.md:13
msgid ""
"Typically implemented with reference counting, garbage collection, or RAII."
msgstr ""
"Normalmente implementado com contagem de refer√™ncia, coleta de lixo ou RAII."

#: src/memory-management/approaches.md:15
msgid "Rust offers a new mix:"
msgstr "Rust oferece uma nova combina√ß√£o:"

#: src/memory-management/approaches.md:17
msgid ""
"Full control _and_ safety via compile time enforcement of correct memory "
"management."
msgstr ""
"Controle total _e_ seguran√ßa por imposi√ß√£o do correto gerenciamento de "
"mem√≥ria em tempo de compila√ß√£o."

#: src/memory-management/approaches.md:20
msgid "It does this with an explicit ownership concept."
msgstr "Ele faz isso com um conceito de _ownership_ (posse) expl√≠cito."

#: src/memory-management/approaches.md:24
msgid ""
"This slide is intended to help students coming from other languages to put "
"Rust in context."
msgstr ""
"Este slide tem a inten√ß√£o de ajudar os alunos que v√™m de outras linguagens a "
"colocar o Rust em contexto."

#: src/memory-management/approaches.md:27
msgid ""
"C must manage heap manually with `malloc` and `free`. Common errors include "
"forgetting to call `free`, calling it multiple times for the same pointer, "
"or dereferencing a pointer after the memory it points to has been freed."
msgstr ""
"Em C, o gerenciamento do heap √© feito manualmente com `malloc` e `free`. Os "
"erros comuns incluem esquecer de chamar `free`, cham√°-lo v√°rias vezes para o "
"mesmo ponteiro ou desreferenciar um ponteiro depois que a mem√≥ria para a "
"qual ele aponta foi liberada."

#: src/memory-management/approaches.md:31
msgid ""
"C++ has tools like smart pointers (`unique_ptr`, `shared_ptr`) that take "
"advantage of language guarantees about calling destructors to ensure memory "
"is freed when a function returns. It is still quite easy to mis-use these "
"tools and create similar bugs to C."
msgstr ""
"O C++ possui ferramentas como ponteiros inteligentes (`unique_ptr`, "
"`shared_ptr`) que aproveitam as garantias da linguagem sobre a chamada de "
"destrutores para garantir que a mem√≥ria seja liberada quando uma fun√ß√£o "
"retorna. Ainda √© muito f√°cil usar essas ferramentas de maneira incorreta e "
"criar bugs semelhantes aos do C."

#: src/memory-management/approaches.md:36
msgid ""
"Java, Go, and Python rely on the garbage collector to identify memory that "
"is no longer reachable and discard it. This guarantees that any pointer can "
"be dereferenced, eliminating use-after-free and other classes of bugs. But, "
"GC has a runtime cost and is difficult to tune properly."
msgstr ""
"Java, Go e Python dependem do coletor de lixo para identificar a mem√≥ria que "
"n√£o √© mais acess√≠vel e descart√°-la. Isso garante que qualquer ponteiro possa "
"ser desreferenciado, eliminando o uso ap√≥s a libera√ß√£o e outras classes de "
"bugs. Mas, o coletor de lixo tem um custo de tempo de execu√ß√£o e √© dif√≠cil "
"de ajustar corretamente."

#: src/memory-management/approaches.md:41
msgid ""
"Rust's ownership and borrowing model can, in many cases, get the performance "
"of C, with alloc and free operations precisely where they are required -- "
"zero cost. It also provides tools similar to C++'s smart pointers. When "
"required, other options such as reference counting are available, and there "
"are even third-party crates available to support runtime garbage collection "
"(not covered in this class)."
msgstr ""
"O modelo de _ownership_ e _borrowing_ do Rust pode, em muitos casos, obter o "
"desempenho do C, com opera√ß√µes de aloca√ß√£o e libera√ß√£o precisamente onde "
"elas s√£o necess√°rias - custo zero. Ele tamb√©m fornece ferramentas "
"semelhantes aos ponteiros inteligentes do C++. Quando necess√°rio, outras "
"op√ß√µes, como contagem de refer√™ncia, est√£o dispon√≠veis, e at√© mesmo crates "
"de terceiros est√£o dispon√≠veis para suportar a coleta de lixo em tempo de "
"execu√ß√£o (n√£o abordada nesta aula)."

#: src/memory-management/ownership.md:3
msgid ""
"All variable bindings have a _scope_ where they are valid and it is an error "
"to use a variable outside its scope:"
msgstr ""
"Todas as associa√ß√µes de vari√°veis t√™m um _escopo_ onde s√£o v√°lidas e √© um "
"erro usar uma vari√°vel fora de seu escopo:"

#: src/memory-management/ownership.md:20
msgid ""
"We say that the variable _owns_ the value. Every Rust value has precisely "
"one owner at all times."
msgstr ""
"Dizemos que a vari√°vel _owns_ (_possui_) o valor. Todo valor em Rust tem "
"precisamente um _owner_ (dono) em todos os momentos."

#: src/memory-management/ownership.md:23
msgid ""
"At the end of the scope, the variable is _dropped_ and the data is freed. A "
"destructor can run here to free up resources."
msgstr ""
"No final do escopo, a vari√°vel √© descartada e os dados s√£o liberados. Um "
"destrutor pode ser executado aqui para liberar recursos."

#: src/memory-management/ownership.md:28
msgid ""
"Students familiar with garbage-collection implementations will know that a "
"garbage collector starts with a set of \"roots\" to find all reachable "
"memory. Rust's \"single owner\" principle is a similar idea."
msgstr ""
"Os alunos familiarizados com implementa√ß√µes de coleta de lixo saber√£o que um "
"coletor de lixo come√ßa com um conjunto de \"ra√≠zes\" para encontrar toda a "
"mem√≥ria acess√≠vel. O princ√≠pio do _\"single owner\"_ (\"√∫nico dono\") do "
"Rust √© uma ideia semelhante."

#: src/memory-management/move.md:3
msgid "An assignment will transfer _ownership_ between variables:"
msgstr "Uma atribui√ß√£o transferir√° o _ownership_ entre vari√°veis:"

#: src/memory-management/move.md:7
msgid "\"Hello!\""
msgstr "\"Ol√°!\""

#: src/memory-management/move.md:9 src/slices-and-lifetimes/str.md:16
#: src/slices-and-lifetimes/str.md:18
msgid "\"s2: {s2}\""
msgstr "\"s2: {s2}\""

#: src/memory-management/move.md:10
msgid "// println!(\"s1: {s1}\");\n"
msgstr "// println!(\"s1: {s1}\");\n"

#: src/memory-management/move.md:14
msgid "The assignment of `s1` to `s2` transfers ownership."
msgstr "A atribui√ß√£o de `s1` a `s2` transfere o _ownership_."

#: src/memory-management/move.md:15
msgid "When `s1` goes out of scope, nothing happens: it does not own anything."
msgstr "Quando `s1` sai do escopo, nada acontece: ele n√£o tem _ownership_."

#: src/memory-management/move.md:16
msgid "When `s2` goes out of scope, the string data is freed."
msgstr "Quando `s2` sai do escopo, os dados da string s√£o liberados."

#: src/memory-management/move.md:18
msgid "Before move to `s2`:"
msgstr "Antes de mover para `s2`:"

#: src/memory-management/move.md:35
msgid "After move to `s2`:"
msgstr "Depois de mover para `s2`:"

#: src/memory-management/move.md:37
msgid ""
"```bob\n"
" Stack                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - -.\n"
":                           :     :                           :\n"
":    s1 \"(inaccessible)\"    :     :                           :\n"
":   +-----------+-------+   :     :   +----+----+----+----+   :\n"
":   | ptr       |   o---+---+--+--+-->| R  | u  | s  | t  |   :\n"
":   | len       |     4 |   :  |  :   +----+----+----+----+   :\n"
":   | capacity  |     4 |   :  |  :                           :\n"
":   +-----------+-------+   :  |  :                           :\n"
":                           :  |  `- - - - - - - - - - - - - -'\n"
":    s2                     :  |\n"
":   +-----------+-------+   :  |\n"
":   | ptr       |   o---+---+--'\n"
":   | len       |     4 |   :\n"
":   | capacity  |     4 |   :\n"
":   +-----------+-------+   :\n"
":                           :\n"
"`- - - - - - - - - - - - - -'\n"
"```"
msgstr ""
"```bob\n"
" Pilha                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - -.\n"
":                           :     :                           :\n"
":    s1 \"(inacess√≠vel)\"     :     :                           :\n"
":   +------------+------+   :     :   +----+----+----+----+   :\n"
":   | ponteiro   |  o---+---+--+--+-->| R  | u  | s  | t  |   :\n"
":   | tamanho    |    4 |   :  |  :   +----+----+----+----+   :\n"
":   | capacidade |    4 |   :  |  :                           :\n"
":   +------------+------+   :  |  :                           :\n"
":                           :  |  `- - - - - - - - - - - - - -'\n"
":    s2                     :  |\n"
":   +------------+------+   :  |\n"
":   | ponteiro   |  o---+---+--'\n"
":   | tamanho    |    4 |   :\n"
":   | capacidade |    4 |   :\n"
":   +------------+------+   :\n"
":                           :\n"
"`- - - - - - - - - - - - - -'\n"
"```"

#: src/memory-management/move.md:58
msgid ""
"When you pass a value to a function, the value is assigned to the function "
"parameter. This transfers ownership:"
msgstr ""
"Quando voc√™ passa um valor para uma fun√ß√£o, o valor √© atribu√≠do ao par√¢metro "
"da fun√ß√£o. Isso transfere a _ownership_:"

#: src/memory-management/move.md:63
msgid "\"Hello {name}\""
msgstr "\"Ol√° {name}\""

#: src/memory-management/move.md:67 src/android/interoperability/java.md:57
msgid "\"Alice\""
msgstr "\"Alice\""

#: src/memory-management/move.md:69
msgid "// say_hello(name);\n"
msgstr "// say_hello(name);\n"

#: src/memory-management/move.md:75
msgid ""
"Mention that this is the opposite of the defaults in C++, which copies by "
"value unless you use `std::move` (and the move constructor is defined!)."
msgstr ""
"Mencione que isso √© o oposto dos _defaults_ (padr√µes) em C++, que copia por "
"valor, a menos que voc√™ use `std::move` (e seu construtor esteja definido!)."

#: src/memory-management/move.md:78
msgid ""
"It is only the ownership that moves. Whether any machine code is generated "
"to manipulate the data itself is a matter of optimization, and such copies "
"are aggressively optimized away."
msgstr ""
"Apenas o _ownership_ √© movido. A gera√ß√£o de c√≥digo de m√°quina para manipular "
"os dados √© uma quest√£o de otimiza√ß√£o, e essas c√≥pias s√£o agressivamente "
"otimizadas."

#: src/memory-management/move.md:82
msgid ""
"Simple values (such as integers) can be marked `Copy` (see later slides)."
msgstr ""
"Valores simples (tais como inteiros) podem ser marcados como `Copy` (c√≥pia) "
"(veja slides mais adiante)."

#: src/memory-management/move.md:84
msgid "In Rust, clones are explicit (by using `clone`)."
msgstr "No Rust, clones s√£o expl√≠citos (utilizando-se `clone`)."

#: src/memory-management/move.md:86
msgid "In the `say_hello` example:"
msgstr "No exemplo `say_hello`:"

#: src/memory-management/move.md:88
msgid ""
"With the first call to `say_hello`, `main` gives up ownership of `name`. "
"Afterwards, `name` cannot be used anymore within `main`."
msgstr ""
"Com a primeira chamada para `diga_ola`, `main` desiste da ownership de "
"`nome`. Depois disso, `nome` n√£o pode mais ser usado dentro de `main`."

#: src/memory-management/move.md:90
msgid ""
"The heap memory allocated for `name` will be freed at the end of the "
"`say_hello` function."
msgstr ""
"A mem√≥ria do heap alocada para `name` ser√° liberada no final da fun√ß√£o "
"`say_hello`."

#: src/memory-management/move.md:92
msgid ""
"`main` can retain ownership if it passes `name` as a reference (`&name`) and "
"if `say_hello` accepts a reference as a parameter."
msgstr ""
"`main` pode manter a ownership se passar `nome` como uma refer√™ncia "
"(`&name`) e se `say_hello` aceitar uma refer√™ncia como um par√¢metro."

#: src/memory-management/move.md:94
msgid ""
"Alternatively, `main` can pass a clone of `name` in the first call (`name."
"clone()`)."
msgstr ""
"Alternativamente, `main` pode passar um clone de `nome` na primeira chamada "
"(`name.clone()`)."

#: src/memory-management/move.md:96
msgid ""
"Rust makes it harder than C++ to inadvertently create copies by making move "
"semantics the default, and by forcing programmers to make clones explicit."
msgstr ""
"Rust torna mais dif√≠cil a cria√ß√£o de c√≥pias inadvertidamente do que o C++, "
"tornando padr√£o a sem√¢ntica de movimento e for√ßando os programadores a "
"tornar os clones expl√≠citos."

#: src/memory-management/move.md:101
msgid "Defensive Copies in Modern C++"
msgstr "C√≥pias Defensivas em C++ Moderno"

#: src/memory-management/move.md:103
msgid "Modern C++ solves this differently:"
msgstr "O C++ moderno resolve isso de maneira diferente:"

#: src/memory-management/move.md:106
msgid "\"Cpp\""
msgstr "\"Cpp\""

#: src/memory-management/move.md:107
msgid "// Duplicate the data in s1.\n"
msgstr "// Duplica os dados em s1.\n"

#: src/memory-management/move.md:110
msgid ""
"The heap data from `s1` is duplicated and `s2` gets its own independent copy."
msgstr ""
"Os dados de `s1` no heap s√£o duplicados e `s2` obt√©m sua pr√≥pria c√≥pia "
"independente."

#: src/memory-management/move.md:111
msgid "When `s1` and `s2` go out of scope, they each free their own memory."
msgstr "Quando `s1` e `s2` saem de escopo, cada um libera sua pr√≥pria mem√≥ria."

#: src/memory-management/move.md:113
msgid "Before copy-assignment:"
msgstr "Antes da atribui√ß√£o por c√≥pia:"

#: src/memory-management/move.md:129
msgid "After copy-assignment:"
msgstr "Ap√≥s atribui√ß√£o por c√≥pia:"

#: src/memory-management/move.md:154
msgid ""
"C++ has made a slightly different choice than Rust. Because `=` copies data, "
"the string data has to be cloned. Otherwise we would get a double-free when "
"either string goes out of scope."
msgstr ""
"O C++ fez uma escolha ligeiramente diferente do Rust. Como `=` copia dados, "
"os dados da string devem ser clonados. Caso contr√°rio, obter√≠amos uma dupla "
"libera√ß√£o quando qualquer string sa√≠sse de escopo."

#: src/memory-management/move.md:158
msgid ""
"C++ also has [`std::move`](https://en.cppreference.com/w/cpp/utility/move), "
"which is used to indicate when a value may be moved from. If the example had "
"been `s2 = std::move(s1)`, no heap allocation would take place. After the "
"move, `s1` would be in a valid but unspecified state. Unlike Rust, the "
"programmer is allowed to keep using `s1`."
msgstr ""
"O C++ tamb√©m possui [`std::move`](https://en.cppreference.com/w/cpp/utility/"
"move), que √© usado para indicar quando um valor pode ser movido. Se o "
"exemplo fosse `s2 = std::move(s1)`, nenhuma aloca√ß√£o de heap seria feita. "
"Ap√≥s a movimenta√ß√£o, `s1` estaria em um estado v√°lido, mas n√£o especificado. "
"Diferentemente do Rust, o programador pode continuar usando `s1`."

#: src/memory-management/move.md:163
msgid ""
"Unlike Rust, `=` in C++ can run arbitrary code as determined by the type "
"which is being copied or moved."
msgstr ""
"Diferentemente do Rust, `=` em C++ pode executar c√≥digo arbitr√°rio conforme "
"determinado pelo tipo que est√° sendo copiado ou movido."

#: src/memory-management/clone.md:1
msgid "Clone"
msgstr "Clone"

#: src/memory-management/clone.md:3
msgid ""
"Sometimes you _want_ to make a copy of a value. The `Clone` trait "
"accomplishes this."
msgstr ""
"√Äs vezes voc√™ _quer_ fazer uma c√≥pia de um valor. O _trait_ `Clone` consegue "
"isso."

#: src/memory-management/clone.md:23
msgid ""
"The idea of `Clone` is to make it easy to spot where heap allocations are "
"occurring. Look for `.clone()` and a few others like `Vec::new` or `Box::"
"new`."
msgstr ""
"A ideia de `Clone` √© tornar f√°cil identificar onde as aloca√ß√µes de heap "
"est√£o ocorrendo. Procure por `.clone()` e alguns outros como `Vec::new` ou "
"`Box::new`."

#: src/memory-management/clone.md:26
msgid ""
"It's common to \"clone your way out\" of problems with the borrow checker, "
"and return later to try to optimize those clones away."
msgstr ""
"√â comum \"clonar seu caminho para fora\" de problemas com o verificador de "
"empr√©stimo, e retornar mais tarde para tentar otimizar esses clones."

#: src/memory-management/copy-types.md:7
msgid ""
"While move semantics are the default, certain types are copied by default:"
msgstr ""
"Embora a sem√¢ntica de movimento seja o padr√£o, certos tipos s√£o copiados por "
"padr√£o:"

#: src/memory-management/copy-types.md:20
msgid "These types implement the `Copy` trait."
msgstr "Esses tipos implementam o _trait_ `Copy`."

#: src/memory-management/copy-types.md:22
msgid "You can opt-in your own types to use copy semantics:"
msgstr ""
"Voc√™ pode habilitar seus pr√≥prios tipos para usar a sem√¢ntica de c√≥pia:"

#: src/memory-management/copy-types.md:38
msgid "After the assignment, both `p1` and `p2` own their own data."
msgstr "Ap√≥s a atribui√ß√£o, tanto `p1` quanto `p2` possuem seus pr√≥prios dados."

#: src/memory-management/copy-types.md:39
msgid "We can also use `p1.clone()` to explicitly copy the data."
msgstr "Tamb√©m podemos usar `p1.clone()` para copiar os dados explicitamente."

#: src/memory-management/copy-types.md:43
msgid "Copying and cloning are not the same thing:"
msgstr "Copia e clonagem n√£o s√£o a mesma coisa:"

#: src/memory-management/copy-types.md:45
msgid ""
"Copying refers to bitwise copies of memory regions and does not work on "
"arbitrary objects."
msgstr ""
"C√≥pia refere-se a c√≥pias bit a bit de regi√µes de mem√≥ria e n√£o funciona em "
"objetos arbitr√°rios."

#: src/memory-management/copy-types.md:47
msgid ""
"Copying does not allow for custom logic (unlike copy constructors in C++)."
msgstr ""
"C√≥pia n√£o permite l√≥gica personalizada (ao contr√°rio dos construtores de "
"c√≥pia em C++)."

#: src/memory-management/copy-types.md:48
msgid ""
"Cloning is a more general operation and also allows for custom behavior by "
"implementing the `Clone` trait."
msgstr ""
"Clonagem √© uma opera√ß√£o mais geral e tamb√©m permite um comportamento "
"personalizado atrav√©s da implementa√ß√£o do trait `Clone`."

#: src/memory-management/copy-types.md:50
msgid "Copying does not work on types that implement the `Drop` trait."
msgstr "C√≥pia n√£o funciona em tipos que implementam o trait `Drop`."

#: src/memory-management/copy-types.md:52
msgid "In the above example, try the following:"
msgstr "No exemplo acima, tente o seguinte:"

#: src/memory-management/copy-types.md:54
msgid ""
"Add a `String` field to `struct Point`. It will not compile because `String` "
"is not a `Copy` type."
msgstr ""
"Adicione um campo `String` ao `struct Point`. Ele n√£o ir√° compilar porque "
"`String` n√£o √© um tipo `Copy`."

#: src/memory-management/copy-types.md:56
msgid ""
"Remove `Copy` from the `derive` attribute. The compiler error is now in the "
"`println!` for `p1`."
msgstr ""
"Remova `Copy` do atributo `derive`. O erro do compilador agora est√° no "
"`println!` para `p1`."

#: src/memory-management/copy-types.md:58
msgid "Show that it works if you clone `p1` instead."
msgstr "Mostre que ele funciona se ao inv√©s disso voc√™ clonar `p1`."

#: src/memory-management/drop.md:1
msgid "The `Drop` Trait"
msgstr "O Trait `Drop`"

#: src/memory-management/drop.md:3
msgid ""
"Values which implement [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop."
"html) can specify code to run when they go out of scope:"
msgstr ""
"Valores que implementam [`Drop`](https://doc.rust-lang.org/std/ops/trait."
"Drop.html) podem especificar o c√≥digo a ser executado quando saem do escopo:"

#: src/memory-management/drop.md:13
msgid "\"Dropping {}\""
msgstr "\"Descartando {}\""

#: src/memory-management/drop.md:18
#: src/exercises/concurrency/link-checker.md:93
#: src/exercises/concurrency/solutions-morning.md:125
msgid "\"a\""
msgstr "\"a\""

#: src/memory-management/drop.md:20 src/testing/googletest.md:12
msgid "\"b\""
msgstr "\"b\""

#: src/memory-management/drop.md:22
msgid "\"c\""
msgstr "\"c\""

#: src/memory-management/drop.md:23
msgid "\"d\""
msgstr "\"d\""

#: src/memory-management/drop.md:24
msgid "\"Exiting block B\""
msgstr "\"Saindo do bloco B\""

#: src/memory-management/drop.md:26
msgid "\"Exiting block A\""
msgstr "\"Saindo do bloco A\""

#: src/memory-management/drop.md:29
msgid "\"Exiting main\""
msgstr "\"Saindo do main\""

#: src/memory-management/drop.md:35
msgid "Note that `std::mem::drop` is not the same as `std::ops::Drop::drop`."
msgstr "Observe que `std::mem::drop` n√£o √© o mesmo que `std::ops::Drop::drop`."

#: src/memory-management/drop.md:36
msgid "Values are automatically dropped when they go out of scope."
msgstr "Os valores s√£o descartados automaticamente quando saem do escopo."

#: src/memory-management/drop.md:37
msgid ""
"When a value is dropped, if it implements `std::ops::Drop` then its `Drop::"
"drop` implementation will be called."
msgstr ""
"Quando um valor √© descartado, se ele implementa `std::ops::Drop` ent√£o sua "
"implementa√ß√£o `Drop::drop` ser√° chamada."

#: src/memory-management/drop.md:39
msgid ""
"All its fields will then be dropped too, whether or not it implements `Drop`."
msgstr ""
"Todas as seus campos ser√£o descartadas tamb√©m, independentemente de "
"implementar `Drop`."

#: src/memory-management/drop.md:40
msgid ""
"`std::mem::drop` is just an empty function that takes any value. The "
"significance is that it takes ownership of the value, so at the end of its "
"scope it gets dropped. This makes it a convenient way to explicitly drop "
"values earlier than they would otherwise go out of scope."
msgstr ""
"`std::mem::drop` √© apenas uma fun√ß√£o vazia que recebe qualquer valor. A "
"import√¢ncia √© que ela assume a _ownership_ do valor, ent√£o no final de seu "
"escopo ele √© descartado. Isso torna uma maneira conveniente de descartar "
"explicitamente valores mais cedo do que eles sairiam do escopo."

#: src/memory-management/drop.md:44
msgid ""
"This can be useful for objects that do some work on `drop`: releasing locks, "
"closing files, etc."
msgstr ""
"Isso pode ser √∫til para objetos que fazem algum trabalho em `drop`: "
"liberando travas, fechando arquivos, etc."

#: src/memory-management/drop.md:49
msgid "Why doesn't `Drop::drop` take `self`?"
msgstr "Por que `Drop::drop` n√£o recebe `self`?"

#: src/memory-management/drop.md:50
msgid ""
"Short-answer: If it did, `std::mem::drop` would be called at the end of the "
"block, resulting in another call to `Drop::drop`, and a stack overflow!"
msgstr ""
"Resposta curta: Se recebesse, `std::mem::drop` seria chamado no final do "
"bloco, resultando em outra chamada para `Drop::drop` ocasionando um estouro "
"de pilha."

#: src/memory-management/drop.md:52
msgid "Try replacing `drop(a)` with `a.drop()`."
msgstr "Tente substituir `drop(a)` por `a.drop()`."

#: src/memory-management/exercise.md:3
msgid ""
"In this example, we will implement a complex data type that owns all of its "
"data. We will use the \"builder pattern\" to support building a new value "
"piece-by-piece, using convenience functions."
msgstr ""
"Neste exemplo, implementaremos um tipo de dados complexo que possui todos os "
"seus dados. Usaremos o _\"builder pattern\"_ para suportar a constru√ß√£o de "
"um novo valor pe√ßa por pe√ßa, usando fun√ß√µes de conveni√™ncia."

#: src/memory-management/exercise.md:7
msgid "Fill in the missing pieces."
msgstr "Preencha as pe√ßas que faltam."

#: src/memory-management/exercise.md:22 src/memory-management/solution.md:16
msgid "/// A representation of a software package.\n"
msgstr "/// Uma representa√ß√£o de um pacote de software.\n"

#: src/memory-management/exercise.md:34 src/memory-management/solution.md:28
msgid ""
"/// Return a representation of this package as a dependency, for use in\n"
"    /// building other packages.\n"
msgstr ""
"/// Retorna uma representa√ß√£o deste pacote como uma depend√™ncia, para uso "
"na\n"
"    /// constru√ß√£o de outros pacotes.\n"

#: src/memory-management/exercise.md:37
msgid "\"1\""
msgstr "\"1\""

#: src/memory-management/exercise.md:40 src/memory-management/solution.md:37
msgid ""
"/// A builder for a Package. Use `build()` to create the `Package` itself.\n"
msgstr ""
"/// Um construtor para um Pacote. Use `build()` para criar o pr√≥prio "
"`Package`.\n"

#: src/memory-management/exercise.md:46
msgid "\"2\""
msgstr "\"2\""

#: src/memory-management/exercise.md:49 src/memory-management/solution.md:52
msgid "/// Set the package version.\n"
msgstr "/// Define a vers√£o do pacote.\n"

#: src/memory-management/exercise.md:55 src/memory-management/solution.md:58
msgid "/// Set the package authors.\n"
msgstr "/// Define os autores do pacote.\n"

#: src/memory-management/exercise.md:57
msgid "\"3\""
msgstr "\"3\""

#: src/memory-management/exercise.md:60 src/memory-management/solution.md:64
msgid "/// Add an additional dependency.\n"
msgstr "/// Adiciona uma depend√™ncia adicional.\n"

#: src/memory-management/exercise.md:62
msgid "\"4\""
msgstr "\"4\""

#: src/memory-management/exercise.md:65 src/memory-management/solution.md:70
msgid "/// Set the language. If not set, language defaults to None.\n"
msgstr "/// Define a linguagem. Se n√£o definida, a linguagem √© None.\n"

#: src/memory-management/exercise.md:67
msgid "\"5\""
msgstr "\"5\""

#: src/memory-management/exercise.md:76 src/memory-management/solution.md:82
msgid "\"base64\""
msgstr "\"base64\""

#: src/memory-management/exercise.md:76 src/memory-management/solution.md:82
msgid "\"0.13\""
msgstr "\"0.13\""

#: src/memory-management/exercise.md:77 src/memory-management/solution.md:83
msgid "\"base64: {base64:?}\""
msgstr "\"base64: {base64:?}\""

#: src/memory-management/exercise.md:79 src/memory-management/solution.md:85
msgid "\"log\""
msgstr "\"log\""

#: src/memory-management/exercise.md:79 src/memory-management/solution.md:85
msgid "\"0.4\""
msgstr "\"0.4\""

#: src/memory-management/exercise.md:80 src/memory-management/solution.md:86
msgid "\"log: {log:?}\""
msgstr "\"log: {log:?}\""

#: src/memory-management/exercise.md:81 src/memory-management/solution.md:87
msgid "\"serde\""
msgstr "\"serde\""

#: src/memory-management/exercise.md:82 src/memory-management/solution.md:88
msgid "\"djmitche\""
msgstr "\"djmitche\""

#: src/memory-management/exercise.md:83 src/memory-management/solution.md:89
msgid "\"4.0\""
msgstr "\"4.0\""

#: src/memory-management/exercise.md:87 src/memory-management/solution.md:93
msgid "\"serde: {serde:?}\""
msgstr "\"serde: {serde:?}\""

#: src/memory-management/solution.md:45
msgid "\"0.1\""
msgstr "\"0.1\""

#: src/smart-pointers/box.md:3
msgid ""
"[`Box`](https://doc.rust-lang.org/std/boxed/struct.Box.html) is an owned "
"pointer to data on the heap:"
msgstr ""
"[`Box`](https://doc.rust-lang.org/std/boxed/struct.Box.html) √© um ponteiro "
"_owned_ para dados no heap:"

#: src/smart-pointers/box.md:9
msgid "\"five: {}\""
msgstr "\"cinco: {}\""

#: src/smart-pointers/box.md:26
msgid ""
"`Box<T>` implements `Deref<Target = T>`, which means that you can [call "
"methods from `T` directly on a `Box<T>`](https://doc.rust-lang.org/std/ops/"
"trait.Deref.html#more-on-deref-coercion)."
msgstr ""
"`Box<T>` implementa `Deref<Target = T>`, o que significa que voc√™ pode "
"[chamar m√©todos de `T` diretamente em um `Box<T>`](https://doc.rust-lang.org/"
"std/ops/trait.Deref.html#more-on-deref-coercion)."

#: src/smart-pointers/box.md:30
msgid ""
"Recursive data types or data types with dynamic sizes need to use a `Box`:"
msgstr ""
"Tipos de dados recursivos ou tipos de dados com tamanhos din√¢micos precisam "
"usar uma `Box`:"

#: src/smart-pointers/box.md:35
msgid "/// A non-empty list: first element and the rest of the list.\n"
msgstr "/// Uma lista n√£o vazia: primeiro elemento e o resto da lista.\n"

#: src/smart-pointers/box.md:37
msgid "/// An empty list.\n"
msgstr "/// Uma lista vazia.\n"

#: src/smart-pointers/box.md:44 src/smart-pointers/box.md:97
msgid "\"{list:?}\""
msgstr "\"{list:?}\""

#: src/smart-pointers/box.md:48
msgid ""
"```bob\n"
" Stack                           Heap\n"
".- - - - - - - - - - - - - - .     .- - - - - - - - - - - - - - - - - - - - "
"- - - - -.\n"
":                            :     :                                                 :\n"
":    "
"list                    :     :                                                 :\n"
":   +---------+----+----+    :     :    +---------+----+----+    +------+----"
"+----+  :\n"
":   | Element | 1  | o--+----+-----+--->| Element | 2  | o--+--->| Nil  | // "
"| // |  :\n"
":   +---------+----+----+    :     :    +---------+----+----+    +------+----"
"+----+  :\n"
":                            :     :                                                 :\n"
":                            :     :                                                 :\n"
"'- - - - - - - - - - - - - - '     '- - - - - - - - - - - - - - - - - - - - "
"- - - - -'\n"
"```"
msgstr ""
"```bob\n"
" Pilha                           Heap\n"
".- - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                         :     :                                               :\n"
":    "
"lista                :     :                                               :\n"
":   +------+----+----+    :     :    +------+----+----+    +------+----+----"
"+   :\n"
":   | Elem | 1  | o--+----+-----+--->| Elem | 2  | o--+--->| Nil  | // | // "
"|   :\n"
":   +------+----+----+    :     :    +------+----+----+    +------+----+----"
"+   :\n"
":                         :     :                                               :\n"
":                         :     :                                               :\n"
"'- - - - - - - - - - - - -'     '- - - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"```"

#: src/smart-pointers/box.md:63
msgid ""
"`Box` is like `std::unique_ptr` in C++, except that it's guaranteed to be "
"not null."
msgstr ""
"`Box` √© parecido com `std::unique_ptr` em C++, exceto que ele √© "
"garantidamente n√£o nulo."

#: src/smart-pointers/box.md:65
msgid "A `Box` can be useful when you:"
msgstr "Uma `Box` √© √∫til quando voc√™:"

#: src/smart-pointers/box.md:66
msgid ""
"have a type whose size that can't be known at compile time, but the Rust "
"compiler wants to know an exact size."
msgstr ""
"h√° um tipo cujo tamanho n√£o est√° dispon√≠vel em tempo de compila√ß√£o, mas o "
"compilador Rust precisa saber o tamanho exato."

#: src/smart-pointers/box.md:68
msgid ""
"want to transfer ownership of a large amount of data. To avoid copying large "
"amounts of data on the stack, instead store the data on the heap in a `Box` "
"so only the pointer is moved."
msgstr ""
"quer transferir o _ownership_ de um grande volume de dados. Ao inv√©s de "
"copiar grandes volumes de dados na pilha, eles s√£o armazenados usando uma "
"`Box` no _heap_ e apenas o ponteiro √© movido."

#: src/smart-pointers/box.md:72
msgid ""
"If `Box` was not used and we attempted to embed a `List` directly into the "
"`List`, the compiler would not compute a fixed size of the struct in memory "
"(`List` would be of infinite size)."
msgstr ""
"Se a `Box` n√£o for usada e tentarmos incorporar uma `List` diretamente na "
"`List`, o compilador n√£o conseguiria calcular um tamanho fixo da _struct_ na "
"mem√≥ria (`List` teria tamanho infinito)   ."

#: src/smart-pointers/box.md:76
msgid ""
"`Box` solves this problem as it has the same size as a regular pointer and "
"just points at the next element of the `List` in the heap."
msgstr ""
"`Box` resolve esse problema, pois tem o mesmo tamanho de um ponteiro normal "
"e apenas aponta para o pr√≥ximo elemento da `List` no _heap_."

#: src/smart-pointers/box.md:79
msgid ""
"Remove the `Box` in the List definition and show the compiler error. "
"\"Recursive with indirection\" is a hint you might want to use a Box or "
"reference of some kind, instead of storing a value directly."
msgstr ""
"Remova o `Box` na defini√ß√£o de `List` e mostre o erro de compila√ß√£o. "
"\"Recursive with indirection\" (recursivo com indire√ß√£o) √© uma dica para que "
"voc√™ talvez queira usar uma `Box` ou refer√™ncia de alguma forma, ao inv√©s de "
"armazenar um valor diretamente."

#: src/smart-pointers/box.md:85
msgid "Niche Optimization"
msgstr "Otimiza√ß√£o de Nicho"

#: src/smart-pointers/box.md:101
msgid ""
"A `Box` cannot be empty, so the pointer is always valid and non-`null`. This "
"allows the compiler to optimize the memory layout:"
msgstr ""
"Uma `Box` n√£o pode estar vazia, portanto o ponteiro √© sempre v√°lido e n√£o "
"nulo (`null`). Isto permite que o compilador otimize o layout da mem√≥ria:"

#: src/smart-pointers/box.md:104
msgid ""
"```bob\n"
" Stack                           Heap\n"
".- - - - - - - - - - - - - - .     .- - - - - - - - - - - - - -.\n"
":                            :     :                           :\n"
":    list                    :     :                           :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":   | Element | 1  | o--+----+-----+--->| Element | 2  | // |  :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":                            :     :                           :\n"
":                            :     :                           :\n"
"'- - - - - - - - - - - - - - '     '- - - - - - - - - - - - - -'\n"
"```"
msgstr ""
"```bob\n"
" Pilha                           Heap\n"
".- - - - - - - - - - - - - - .     .- - - - - - - - - - - - - -.\n"
":                            :     :                           :\n"
":    lista                   :     :                           :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":   | Elem.   | 1  | o--+----+-----+--->| Elem.   | 2  | // |  :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":                            :     :                           :\n"
":                            :     :                           :\n"
"'- - - - - - - - - - - - - - '     '- - - - - - - - - - - - - -'\n"
"```"

#: src/smart-pointers/rc.md:3
msgid ""
"[`Rc`](https://doc.rust-lang.org/std/rc/struct.Rc.html) is a reference-"
"counted shared pointer. Use this when you need to refer to the same data "
"from multiple places:"
msgstr ""
"[`Rc`](https://doc.rust-lang.org/std/rc/struct.Rc.html) √© um ponteiro "
"compartilhado com contagem de refer√™ncia. Use-o quando precisar consultar os "
"mesmos dados a partir de v√°rios locais:"

#: src/smart-pointers/rc.md:13
msgid "\"a: {a}\""
msgstr "\"a: {a}\""

#: src/smart-pointers/rc.md:14
msgid "\"b: {b}\""
msgstr "\"b: {b}\""

#: src/smart-pointers/rc.md:18
msgid ""
"See [`Arc`](../concurrency/shared_state/arc.md) and [`Mutex`](https://doc."
"rust-lang.org/std/sync/struct.Mutex.html) if you are in a multi-threaded "
"context."
msgstr ""
"Veja [`Arc`](../concurrency/shared_state/arc.md) e [`Mutex`](https://doc."
"rust-lang.org/std/sync/struct.Mutex.html) se voc√™ estiver em um contexto "
"multi-thread."

#: src/smart-pointers/rc.md:19
msgid ""
"You can _downgrade_ a shared pointer into a [`Weak`](https://doc.rust-lang."
"org/std/rc/struct.Weak.html) pointer to create cycles that will get dropped."
msgstr ""
"Voc√™ pode demover (_downgrade_) um ponteiro compartilhado para um ponteiro "
"[`Weak`](https://doc.rust-lang.org/std/rc/struct.Weak.html) (fraco) para "
"criar ciclos que ser√£o descartados."

#: src/smart-pointers/rc.md:29
msgid ""
"`Rc`'s count ensures that its contained value is valid for as long as there "
"are references."
msgstr ""
"O contador do `Rc` garante que os seus valores contidos sejam v√°lidos "
"enquanto houver refer√™ncias."

#: src/smart-pointers/rc.md:31
msgid "`Rc` in Rust is like `std::shared_ptr` in C++."
msgstr "`Rc` em Rust √© como `std::shared_ptr` em C++."

#: src/smart-pointers/rc.md:32
msgid ""
"`Rc::clone` is cheap: it creates a pointer to the same allocation and "
"increases the reference count. Does not make a deep clone and can generally "
"be ignored when looking for performance issues in code."
msgstr ""
"`Rc::clone` √© barato: ele cria um ponteiro para a mesma aloca√ß√£o e aumenta a "
"contagem de refer√™ncia. Ele n√£o faz um \"clone profundo\" (_deep clone_) e "
"geralmente pode ser ignorado ao procurar problemas de desempenho no c√≥digo."

#: src/smart-pointers/rc.md:35
msgid ""
"`make_mut` actually clones the inner value if necessary (\"clone-on-write\") "
"and returns a mutable reference."
msgstr ""
"`make_mut` realmente clona o valor interno se necess√°rio (\"_clone-on-"
"write_\") e retorna uma refer√™ncia mut√°vel."

#: src/smart-pointers/rc.md:37
msgid "Use `Rc::strong_count` to check the reference count."
msgstr "Use `Rc::strong_count` para verificar a contagem de refer√™ncia."

#: src/smart-pointers/rc.md:38
msgid ""
"`Rc::downgrade` gives you a _weakly reference-counted_ object to create "
"cycles that will be dropped properly (likely in combination with `RefCell`)."
msgstr ""
"`Rc::downgrade` fornece um objeto com _contagem de refer√™ncia fraca_ "
"(_weakly reference-counted_) para criar ciclos que ser√£o descartados "
"corretamente (provavelmente em combina√ß√£o com `RefCell`)."

#: src/smart-pointers/exercise.md:3
msgid ""
"A binary tree is a tree-type data structure where every node has two "
"children (left and right). We will create a tree where each node stores a "
"value. For a given node N, all nodes in a N's left subtree contain smaller "
"values, and all nodes in N's right subtree will contain larger values."
msgstr ""
"Uma √°rvore bin√°ria √© uma estrutura de dados do tipo √°rvore onde cada n√≥ tem "
"dois filhos (esquerdo e direito). Criaremos uma √°rvore onde cada n√≥ armazena "
"um valor. Para um determinado n√≥ N, todos os n√≥s na sub√°rvore esquerda de N "
"cont√™m valores menores, e todos os n√≥s na sub√°rvore direita de N conter√£o "
"valores maiores."

#: src/smart-pointers/exercise.md:8
msgid "Implement the following types, so that the given tests pass."
msgstr "Implemente os seguintes tipos, para que os testes fornecidos passem."

#: src/smart-pointers/exercise.md:10
msgid ""
"Extra Credit: implement an iterator over a binary tree that returns the "
"values in order."
msgstr ""
"Extra: implemente um iterador sobre uma √°rvore bin√°ria que retorna os "
"valores em ordem."

#: src/smart-pointers/exercise.md:14 src/smart-pointers/solution.md:5
msgid "/// A node in the binary tree.\n"
msgstr "/// Um n√≥ na √°rvore bin√°ria.\n"

#: src/smart-pointers/exercise.md:21 src/smart-pointers/solution.md:13
msgid "/// A possibly-empty subtree.\n"
msgstr "/// Uma sub√°rvore possivelmente vazia.\n"

#: src/smart-pointers/exercise.md:25 src/smart-pointers/solution.md:17
msgid ""
"/// A container storing a set of values, using a binary tree.\n"
"///\n"
"/// If the same value is added multiple times, it is only stored once.\n"
msgstr ""
"/// Um cont√™iner que armazena um conjunto de valores, usando uma √°rvore "
"bin√°ria.\n"
"///\n"
"/// Se o mesmo valor for adicionado v√°rias vezes, ele √© armazenado apenas "
"uma vez.\n"

#: src/smart-pointers/exercise.md:33
msgid "// Implement `new`, `insert`, `len`, and `has`.\n"
msgstr "// Implemente `new`, `insert`, `len` e `has`.\n"

#: src/smart-pointers/exercise.md:48 src/smart-pointers/solution.md:105
msgid "// not a unique item\n"
msgstr "// n√£o √© um item √∫nico\n"

#: src/smart-pointers/solution.md:89 src/testing/googletest.md:11
msgid "\"bar\""
msgstr "\"bar\""

#: src/borrowing/shared.md:3
msgid ""
"As we saw before, instead of transferring ownership when calling a function, "
"you can let a function _borrow_ the value:"
msgstr ""
"Como vimos antes, ao inv√©s de transferir a _ownership_ ao chamar uma fun√ß√£o, "
"voc√™ pode deixar uma fun√ß√£o _emprestar_ (_borrow_) o valor:"

#: src/borrowing/shared.md:24
msgid "The `add` function _borrows_ two points and returns a new point."
msgstr ""
"A fun√ß√£o `add` _pega emprestado_ (_borrows_) dois pontos e retorna um novo "
"ponto."

#: src/borrowing/shared.md:25
msgid "The caller retains ownership of the inputs."
msgstr "O chamador mant√©m a _ownership_ das entradas."

#: src/borrowing/shared.md:29
msgid ""
"This slide is a review of the material on references from day 1, expanding "
"slightly to include function arguments and return values."
msgstr ""
"Este slide √© uma revis√£o do material sobre refer√™ncias do dia 1, expandindo "
"um pouco para incluir argumentos e valores de retorno de fun√ß√µes."

#: src/borrowing/shared.md:34
msgid "Notes on stack returns:"
msgstr "Notas sobre os retornos da pilha:"

#: src/borrowing/shared.md:36
#, fuzzy
msgid ""
"Demonstrate that the return from `add` is cheap because the compiler can "
"eliminate the copy operation. Change the above code to print stack addresses "
"and run it on the [Playground](https://play.rust-lang.org/?"
"version=stable&mode=release&edition=2021&gist=0cb13be1c05d7e3446686ad9947c4671) "
"or look at the assembly in [Godbolt](https://rust.godbolt.org/). In the "
"\"DEBUG\" optimization level, the addresses should change, while they stay "
"the same when changing to the \"RELEASE\" setting:"
msgstr ""
"Demonstre que o retorno de `somar` √© barato porque o compilador pode "
"eliminar a opera√ß√£o de c√≥pia. Modifique o c√≥digo acima para imprimir "
"endere√ßos da pilha e execute-o no [Playground](https://play.rust-lang.org/) "
"ou veja o c√≥digo _assembly_ em [Godbolt](https://rust.godbolt.org/). No "
"n√≠vel de otimiza√ß√£o \"DEBUG\", os endere√ßos devem mudar, enquanto eles "
"permanecem os mesmos quando a configura√ß√£o √© alterada para \"RELEASE\":"

#: src/borrowing/shared.md:62
msgid "The Rust compiler can do return value optimization (RVO)."
msgstr ""
"O compilador Rust pode fazer otimiza√ß√£o de valor de retorno (_Return Value "
"Operation_ - RVO)."

#: src/borrowing/shared.md:63
msgid ""
"In C++, copy elision has to be defined in the language specification because "
"constructors can have side effects. In Rust, this is not an issue at all. If "
"RVO did not happen, Rust will always perform a simple and efficient `memcpy` "
"copy."
msgstr ""
"Em C++, a elis√£o (omiss√£o) de c√≥pia deve ser definida na especifica√ß√£o da "
"linguagem porque os construtores podem ter efeitos colaterais. Em Rust, isso "
"n√£o √© um problema. Se o RVO n√£o aconteceu, o Rust sempre executar√° uma c√≥pia "
"`memcpy` simples e eficiente."

#: src/borrowing/borrowck.md:3
msgid ""
"Rust's _borrow checker_ puts constraints on the ways you can borrow values. "
"For a given value, at any time:"
msgstr ""
"O _verificador de empr√©stimo_ (_borrow checker_) do Rust imp√µe restri√ß√µes "
"sobre as maneiras como voc√™ pode emprestar valores. Para um determinado "
"valor, a qualquer momento:"

#: src/borrowing/borrowck.md:6
msgid "You can have one or more shared references to the value, _or_"
msgstr ""
"Voc√™ pode ter uma ou mais refer√™ncias compartilhadas para o valor, _ou_"

#: src/borrowing/borrowck.md:7
msgid "You can have exactly one exclusive reference to the value."
msgstr "Voc√™ pode ter exatamente uma refer√™ncia exclusiva para o valor."

#: src/borrowing/borrowck.md:28
msgid ""
"Note that the requirement is that conflicting references not _exist_ at the "
"same point. It does not matter where the reference is dereferenced."
msgstr ""
"Observe que o requisito √© que as refer√™ncias conflitantes n√£o _existam_ no "
"mesmo ponto. N√£o importa onde a refer√™ncia √© desreferenciada."

#: src/borrowing/borrowck.md:30
msgid ""
"The above code does not compile because `a` is borrowed as mutable (through "
"`c`) and as immutable (through `b`) at the same time."
msgstr ""
"O c√≥digo acima n√£o compila porque `a` √© emprestado como mut√°vel (atrav√©s de "
"`c`) e como imut√°vel (atrav√©s de `b`) ao mesmo tempo."

#: src/borrowing/borrowck.md:32
msgid ""
"Move the `println!` statement for `b` before the scope that introduces `c` "
"to make the code compile."
msgstr ""
"Mova a instru√ß√£o `println!` para `b` antes do escopo que introduz `c` para "
"fazer o c√≥digo compilar."

#: src/borrowing/borrowck.md:34
msgid ""
"After that change, the compiler realizes that `b` is only ever used before "
"the new mutable borrow of `a` through `c`. This is a feature of the borrow "
"checker called \"non-lexical lifetimes\"."
msgstr ""
"Ap√≥s essa altera√ß√£o, o compilador percebe que `b` s√≥ √© usado antes do novo "
"empr√©stimo mut√°vel de `a` atrav√©s de `c`. Este √© um recurso do verificador "
"de empr√©stimo (_borrow checker_) chamado \"tempos de vida n√£o lexicais\"."

#: src/borrowing/borrowck.md:37
msgid ""
"The exclusive reference constraint is quite strong. Rust uses it to ensure "
"that data races do not occur. Rust also _relies_ on this constraint to "
"optimize code. For example, a value behind a shared reference can be safely "
"cached in a register for the lifetime of that reference."
msgstr ""
"A restri√ß√£o de refer√™ncia exclusiva √© bastante forte. O Rust a usa para que "
"_data races_ (_corridas de dados_) n√£o ocorram. O Rust tamb√©m _depende_ "
"dessa restri√ß√£o para otimizar o c√≥digo. Por exemplo, um valor atr√°s de uma "
"refer√™ncia compartilhada pode ser armazenado com seguran√ßa em um registrador "
"pelo tempo de vida dessa refer√™ncia."

#: src/borrowing/borrowck.md:41
msgid ""
"The borrow checker is designed to accommodate many common patterns, such as "
"taking exclusive references to different fields in a struct at the same "
"time. But, there are some situations where it doesn't quite \"get it\" and "
"this often results in \"fighting with the borrow checker.\""
msgstr ""
"O verificador de empr√©stimo (_borrow checker_) √© projetado para acomodar "
"muitos padr√µes comuns, como obter refer√™ncias exclusivas para campos "
"diferentes em uma _struct_ ao mesmo tempo. Mas, h√° algumas situa√ß√µes em que "
"ele n√£o entende muito bem e isso geralmente resulta em \"lutar com o "
"verificador de empr√©stimo\"."

#: src/borrowing/interior-mutability.md:7
msgid ""
"Rust provides a few safe means of modifying a value given only a shared "
"reference to that value. All of these replace compile-time checks with "
"runtime checks."
msgstr ""
"O Rust fornece alguns meios seguros de modificar um valor dado apenas uma "
"refer√™ncia compartilhada para esse valor. Todos eles substituem verifica√ß√µes "
"em tempo de compila√ß√£o por verifica√ß√µes em tempo de execu√ß√£o."

#: src/borrowing/interior-mutability.md:11
msgid "`Cell` and `RefCell`"
msgstr "`Cell` e `RefCell`"

#: src/borrowing/interior-mutability.md:13
msgid ""
"[`Cell`](https://doc.rust-lang.org/std/cell/struct.Cell.html) and [`RefCell`]"
"(https://doc.rust-lang.org/std/cell/struct.RefCell.html) implement what Rust "
"calls _interior mutability:_ mutation of values in an immutable context."
msgstr ""
"[`Cell`](https://doc.rust-lang.org/std/cell/struct.Cell.html) e [`RefCell`]"
"(https://doc.rust-lang.org/std/cell/struct.RefCell.html) implementam o que "
"Rust chama de _mutabilidade interior:_ muta√ß√£o de valores em um contexto "
"imut√°vel."

#: src/borrowing/interior-mutability.md:18
msgid ""
"`Cell` is typically used for simple types, as it requires copying or moving "
"values. More complex interior types typically use `RefCell`, which tracks "
"shared and exclusive references at runtime and panics if they are misused."
msgstr ""
"`Cell` √© normalmente usado para tipos simples, pois requer copiar ou mover "
"valores. Tipos interiores mais complexos normalmente usam `RefCell`, que "
"rastreia refer√™ncias compartilhadas e exclusivas em tempo de execu√ß√£o e "
"retorna um p√¢nico (_panic_) se forem mal utilizadas."

#: src/borrowing/interior-mutability.md:50
msgid "\"graph: {root:#?}\""
msgstr "\"grafo: {root:#?}\""

#: src/borrowing/interior-mutability.md:51
msgid "\"graph sum: {}\""
msgstr "\"soma do grafo: {}\""

#: src/borrowing/interior-mutability.md:57
msgid ""
"If we were using `Cell` instead of `RefCell` in this example, we would have "
"to move the `Node` out of the `Rc` to push children, then move it back in. "
"This is safe because there's always one, un-referenced value in the cell, "
"but it's not ergonomic."
msgstr ""
"Se estiv√©ssemos usando `Cell` em vez de `RefCell` neste exemplo, ter√≠amos "
"que mover o `Node` para fora do `Rc` para enviar os filhos e, em seguida, "
"mov√™-lo de volta. Isso √© seguro porque sempre h√° um, valor n√£o referenciado "
"em `cell`, mas n√£o √© ergon√¥mico."

#: src/borrowing/interior-mutability.md:61
msgid ""
"To do anything with a Node, you must call a `RefCell` method, usually "
"`borrow` or `borrow_mut`."
msgstr ""
"Para fazer qualquer coisa com um Node, voc√™ deve chamar um m√©todo `RefCell`, "
"geralmente `borrow` ou `borrow_mut`."

#: src/borrowing/interior-mutability.md:63
msgid ""
"Demonstrate that reference loops can be created by adding `root` to `subtree."
"children` (don't try to print it!)."
msgstr ""
"Demonstre que loops de refer√™ncia podem ser criados adicionando `root` a "
"`subtree.children` (n√£o tente imprimi-lo!)."

#: src/borrowing/interior-mutability.md:65
msgid ""
"To demonstrate a runtime panic, add a `fn inc(&mut self)` that increments "
"`self.value` and calls the same method on its children. This will panic in "
"the presence of the reference loop, with `thread 'main' panicked at 'already "
"borrowed: BorrowMutError'`."
msgstr ""
"Para demonstrar um p√¢nico em tempo de execu√ß√£o, adicione um `fn inc(&mut "
"self)` que incrementa `self.value` e chama o mesmo m√©todo em seus filhos. "
"Isso criar√° um p√¢nico na presen√ßa do loop de refer√™ncia, com `thread 'main' "
"em p√¢nico no 'j√° emprestado: BorrowMutError'`."

#: src/borrowing/exercise.md:3
msgid ""
"You're working on implementing a health-monitoring system. As part of that, "
"you need to keep track of users' health statistics."
msgstr ""
"Voc√™ est√° trabalhando na implementa√ß√£o de um sistema de monitoramento de "
"sa√∫de. Como parte disso, voc√™ precisa acompanhar as estat√≠sticas de sa√∫de "
"dos usu√°rios."

#: src/borrowing/exercise.md:6
msgid ""
"You'll start with a stubbed function in an `impl` block as well as a `User` "
"struct definition. Your goal is to implement the stubbed out method on the "
"`User` `struct` defined in the `impl` block."
msgstr ""
"Voc√™ come√ßar√° com um esbo√ßo de fun√ß√£o em um bloco `impl` e tamb√©m uma "
"defini√ß√£o de `struct` `User`. Seu objetivo √© implementar o m√©todo esbo√ßado "
"na `struct` `User` definida no bloco `impl`."

#: src/borrowing/exercise.md:10
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and fill in the missing "
"method:"
msgstr ""
"Copie o c√≥digo abaixo em <https://play.rust-lang.org/> e implemente os "
"m√©todos que est√£o faltando:"

#: src/borrowing/exercise.md:51
msgid ""
"\"Update a user's statistics based on measurements from a visit to the "
"doctor\""
msgstr ""
"\"Atualiza as estat√≠sticas de um usu√°rio com base nas medi√ß√µes de uma visita "
"ao m√©dico\""

#: src/borrowing/exercise.md:56 src/borrowing/exercise.md:62
#: src/borrowing/exercise.md:68 src/borrowing/solution.md:58
#: src/borrowing/solution.md:64 src/borrowing/solution.md:70
#: src/android/build-rules/library.md:44 src/android/aidl/client.md:22
msgid "\"Bob\""
msgstr "\"Bob\""

#: src/borrowing/exercise.md:57 src/borrowing/solution.md:59
#, fuzzy
msgid "\"I'm {} and my age is {}\""
msgstr "\"Eu sou {} e minha idade √© {}\""

#: src/slices-and-lifetimes/slices.md:1
msgid "Slices"
msgstr "Slices (Fatias)"

#: src/slices-and-lifetimes/slices.md:3
msgid "A slice gives you a view into a larger collection:"
msgstr "Uma _slice_ (fatia) oferece uma vis√£o de uma cole√ß√£o maior:"

#: src/slices-and-lifetimes/slices.md:18
msgid "Slices borrow data from the sliced type."
msgstr "Slices pegam dados emprestados (_borrow) do tipo original."

#: src/slices-and-lifetimes/slices.md:19
msgid "Question: What happens if you modify `a[3]` right before printing `s`?"
msgstr ""
"Pergunta: O que acontece se voc√™ modificar `a[3]` imediatamente antes de "
"imprimir `s`?"

#: src/slices-and-lifetimes/slices.md:23
msgid ""
"We create a slice by borrowing `a` and specifying the starting and ending "
"indexes in brackets."
msgstr ""
"N√≥s criamos uma _slice_ _borrowing_ (emprestando) `a` e especificando os "
"√≠ndices de in√≠cio e fim entre colchetes."

#: src/slices-and-lifetimes/slices.md:26
msgid ""
"If the slice starts at index 0, Rust‚Äôs range syntax allows us to drop the "
"starting index, meaning that `&a[0..a.len()]` and `&a[..a.len()]` are "
"identical."
msgstr ""
"Se a _slice_ come√ßa no √≠ndice 0, a sintaxe de _range_ (faixa) nos permite "
"omitir o √≠ndice inicial, o que significa que `&a[0..a.len()]` e `&a[..a."
"len()]` s√£o id√™nticos."

#: src/slices-and-lifetimes/slices.md:30
msgid ""
"The same is true for the last index, so `&a[2..a.len()]` and `&a[2..]` are "
"identical."
msgstr ""
"O mesmo vale para o √∫ltimo √≠ndice, logo `&a[2..a.len()]` e `&a[2..]` s√£o "
"id√™nticos."

#: src/slices-and-lifetimes/slices.md:33
msgid ""
"To easily create a slice of the full array, we can therefore use `&a[..]`."
msgstr ""
"Para criar facilmente uma _slice_ de uma matriz completa, podemos "
"utilizar`&a[..]`."

#: src/slices-and-lifetimes/slices.md:35
msgid ""
"`s` is a reference to a slice of `i32`s. Notice that the type of `s` "
"(`&[i32]`) no longer mentions the array length. This allows us to perform "
"computation on slices of different sizes."
msgstr ""
"`s` √© uma refer√™ncia a uma _slice_ de `i32`. Observe que o tipo de `s` "
"(`&[i32]`) n√£o menciona mais o tamanho da matriz. Isso nos permite realizar "
"c√°lculos em _slices_ de tamanhos diferentes."

#: src/slices-and-lifetimes/slices.md:39
msgid ""
"Slices always borrow from another object. In this example, `a` has to remain "
"'alive' (in scope) for at least as long as our slice."
msgstr ""
"As _slices_ sempre pegam emprestado (borrow) de outro objeto. Neste exemplo, "
"`a` deve permanecer 'vivo' (em escopo) por pelo menos tanto tempo quanto "
"nossa _slice_."

#: src/slices-and-lifetimes/slices.md:42
msgid ""
"The question about modifying `a[3]` can spark an interesting discussion, but "
"the answer is that for memory safety reasons you cannot do it through `a` at "
"this point in the execution, but you can read the data from both `a` and `s` "
"safely. It works before you created the slice, and again after the "
"`println`, when the slice is no longer used."
msgstr ""
"A quest√£o sobre a modifica√ß√£o de `a[3]` pode gerar uma discuss√£o "
"interessante, mas a resposta √© que por motivos de seguran√ßa de mem√≥ria voc√™ "
"n√£o pode fazer isso por meio de `a` neste ponto durante a execu√ß√£o. Por√©m "
"voc√™ pode ler os dados de `a` e `s` com seguran√ßa. Isto funciona antes da "
"cria√ß√£o do _slice_, e novamente depois de `println`, quando o _slice_ n√£o √© "
"mais necess√°rio."

#: src/slices-and-lifetimes/str.md:7
msgid ""
"We can now understand the two string types in Rust: `&str` is almost like "
"`&[char]`, but with its data stored in a variable-length encoding (UTF-8)."
msgstr ""
"Agora podemos entender os dois tipos de string em Rust: `&str` √© quase como "
"`&[char]`, mas com seus dados armazenados em uma codifica√ß√£o de comprimento "
"vari√°vel (UTF-8)."

#: src/slices-and-lifetimes/str.md:13
msgid "\"s1: {s1}\""
msgstr "\"s1: {s1}\""

#: src/slices-and-lifetimes/str.md:15
msgid "\"Hello \""
msgstr "\"Ol√° \""

#: src/slices-and-lifetimes/str.md:21
msgid "\"s3: {s3}\""
msgstr "\"s3: {s3}\""

#: src/slices-and-lifetimes/str.md:25
msgid "Rust terminology:"
msgstr "Terminologia do Rust:"

#: src/slices-and-lifetimes/str.md:27
msgid "`&str` an immutable reference to a string slice."
msgstr "`&str` √© uma refer√™ncia imut√°vel para uma _slice_ de string."

#: src/slices-and-lifetimes/str.md:28
msgid "`String` a mutable string buffer."
msgstr "`String` √© um _buffer_ de string mut√°vel."

#: src/slices-and-lifetimes/str.md:32
msgid ""
"`&str` introduces a string slice, which is an immutable reference to UTF-8 "
"encoded string data stored in a block of memory. String literals "
"(`‚ÄùHello‚Äù`), are stored in the program‚Äôs binary."
msgstr ""
"`&str` introduz uma _slice_ de string, a qual √© uma refer√™ncia imut√°vel para "
"os dados da string em formato UTF-8 armazenados em um bloco de mem√≥ria. "
"Literais de string (`\"Ol√°\"`) s√£o armazenadas no c√≥digo bin√°rio do programa."

#: src/slices-and-lifetimes/str.md:36
msgid ""
"Rust‚Äôs `String` type is a wrapper around a vector of bytes. As with a "
"`Vec<T>`, it is owned."
msgstr ""
"O tipo `String` do Rust √© um _wrapper_ (inv√≥lucro) ao redor de uma matriz de "
"bytes. Assim como um `Vec<T>`, ele √© _owned_."

#: src/slices-and-lifetimes/str.md:39
msgid ""
"As with many other types `String::from()` creates a string from a string "
"literal; `String::new()` creates a new empty string, to which string data "
"can be added using the `push()` and `push_str()` methods."
msgstr ""
"Da mesma forma que outros tipos, `String::from()` cria uma string a partir "
"de um literal; `String::new()` cria uma nova string vazia, na qual dados de "
"string podem ser adicionados com os m√©todos `push()` e `push_str()`."

#: src/slices-and-lifetimes/str.md:43
msgid ""
"The `format!()` macro is a convenient way to generate an owned string from "
"dynamic values. It accepts the same format specification as `println!()`."
msgstr ""
"A macro `format!()` √© uma maneira conveniente de gerar uma string _owned_ a "
"partir de valores din√¢micos. Ela aceita os mesmos formatadores que `println!"
"()`."

#: src/slices-and-lifetimes/str.md:46
msgid ""
"You can borrow `&str` slices from `String` via `&` and optionally range "
"selection. If you select a byte range that is not aligned to character "
"boundaries, the expression will panic. The `chars` iterator iterates over "
"characters and is preferred over trying to get character boundaries right."
msgstr ""
"Voc√™ pode pegar emprestado (borrow) _slices_ `&str` de `String` via `&` e "
"opcionalmente sele√ß√£o de intervalo. Se voc√™ selecionar um intervalo de byte "
"que n√£o est√° alinhado com os limites dos caracteres, a express√£o ir√° "
"retornar um p√¢nico. O iterador `chars` itera sobre caracteres e √© prefer√≠vel "
"tentar obter os limites dos caracteres corretos."

#: src/slices-and-lifetimes/str.md:51
msgid ""
"For C++ programmers: think of `&str` as `std::string_view` from C++, but the "
"one that always points to a valid string in memory. Rust `String` is a rough "
"equivalent of `std::string` from C++ (main difference: it can only contain "
"UTF-8 encoded bytes and will never use a small-string optimization)."
msgstr ""
"Para programadores C++: pense em `&str` como `const char*` de C++, mas que "
"sempre aponta para uma string v√°lida na mem√≥ria. Em Rust, `String` √© um "
"equivalente aproximado de `std::string` de C++ (principal diferen√ßa: ele s√≥ "
"pode conter bytes codificados em UTF-8 e nunca usar√° uma otimiza√ß√£o de "
"string pequena)."

#: src/slices-and-lifetimes/str.md:56
msgid "Byte strings literals allow you to create a `&[u8]` value directly:"
msgstr "Strings de byte permitem que voc√™ crie um valor `&[u8]` diretamente:"

#: src/slices-and-lifetimes/lifetime-annotations.md:3
msgid ""
"A reference has a _lifetime_, which must not \"outlive\" the value it refers "
"to. This is verified by the borrow checker."
msgstr ""
"Uma refer√™ncia tem um _tempo de vida_ (lifetime), que n√£o deve "
"\"sobreviver\" ao valor ao qual se refere. Isso √© verificado pelo _borrow "
"checker_ (verificador de empr√©stimo)."

#: src/slices-and-lifetimes/lifetime-annotations.md:6
msgid ""
"The lifetime can be implicit - this is what we have seen so far. Lifetimes "
"can also be explicit: `&'a Point`, `&'document str`. Lifetimes start with "
"`'` and `'a` is a typical default name. Read `&'a Point` as \"a borrowed "
"`Point` which is valid for at least the lifetime `a`\"."
msgstr ""
"O tempo de vida pode ser impl√≠cito - isso √© o que vimos at√© agora. Os tempos "
"de vida tamb√©m podem ser expl√≠citos: `&'a Point`, `&'document str`. Os "
"tempos de vida come√ßam com `'` e `'a` √© um nome padr√£o t√≠pico. Leia `&'a "
"Point` como \"um `Point` emprestado que √© v√°lido por pelo menos o tempo de "
"vida `a`\"."

#: src/slices-and-lifetimes/lifetime-annotations.md:11
msgid ""
"Lifetimes are always inferred by the compiler: you cannot assign a lifetime "
"yourself. Explicit lifetime annotations create constraints where there is "
"ambiguity; the compiler verifies that there is a valid solution."
msgstr ""
"Os tempos de vida s√£o sempre inferidos pelo compilador: voc√™ n√£o pode "
"atribuir um tempo de vida por conta pr√≥pria. Anota√ß√µes expl√≠citas de tempo "
"de vida criam restri√ß√µes onde h√° ambiguidade; o compilador verifica se h√° "
"uma solu√ß√£o v√°lida."

#: src/slices-and-lifetimes/lifetime-annotations.md:15
msgid ""
"Lifetimes become more complicated when considering passing values to and "
"returning values from functions."
msgstr ""
"Os tempos de vida se tornam mais complicados ao considerar a passagem de "
"valores para e a devolu√ß√£o de valores de fun√ß√µes."

#: src/slices-and-lifetimes/lifetime-annotations.md:36
msgid "// What is the lifetime of p3?\n"
msgstr "// Qual √© o tempo de vida de p3?\n"

#: src/slices-and-lifetimes/lifetime-annotations.md:37
msgid "\"p3: {p3:?}\""
msgstr "\"p3: {p3:?}\""

#: src/slices-and-lifetimes/lifetime-annotations.md:43
msgid ""
"In this example, the the compiler does not know what lifetime to infer for "
"`p3`. Looking inside the function body shows that it can only safely assume "
"that `p3`'s lifetime is the shorter of `p1` and `p2`. But just like types, "
"Rust requires explicit annotations of lifetimes on function arguments and "
"return values."
msgstr ""
"Neste exemplo, o compilador n√£o sabe qual tempo de vida inferir para `p3`. "
"Olhando dentro do corpo da fun√ß√£o, mostra que ele s√≥ pode assumir com "
"seguran√ßa que o tempo de vida de `p3` √© o mais curto de `p1` e `p2`. Mas "
"assim como os tipos, o Rust requer anota√ß√µes expl√≠citas de tempos de vida "
"nos argumentos e valores de retorno da fun√ß√£o."

#: src/slices-and-lifetimes/lifetime-annotations.md:49
msgid "Add `'a` appropriately to `left_most`:"
msgstr "Adicione `'a` apropriadamente a `left_most` (mais √† esquerda):"

#: src/slices-and-lifetimes/lifetime-annotations.md:55
msgid ""
"This says, \"given p1 and p2 which both outlive `'a`, the return value lives "
"for at least `'a`."
msgstr ""
"Isto diz, \"dado p1 e p2 que sobrevivem a `'a`, o valor de retorno vive por "
"pelo menos `'a`."

#: src/slices-and-lifetimes/lifetime-annotations.md:58
msgid ""
"In common cases, lifetimes can be elided, as described on the next slide."
msgstr ""
"Em casos comuns, os tempos de vida podem ser omitidos, como descrito no "
"pr√≥ximo slide."

#: src/slices-and-lifetimes/lifetime-elision.md:1
msgid "Lifetimes in Function Calls"
msgstr "Tempos de vida (Lifetimes) em Chamadas de Fun√ß√£o"

#: src/slices-and-lifetimes/lifetime-elision.md:3
msgid ""
"Lifetimes for function arguments and return values must be fully specified, "
"but Rust allows lifetimes to be elided in most cases with [a few simple "
"rules](https://doc.rust-lang.org/nomicon/lifetime-elision.html). This is not "
"inference -- it is just a syntactic shorthand."
msgstr ""
"Tempos de vida para argumentos de fun√ß√£o e valores de retorno precisam ser "
"completamente especificados, mas o Rust permite que eles sejam omitidos na "
"maioria das vezes com [algumas regras simples](https://doc.rust-lang.org/"
"nomicon/lifetime-elision.html). Isso n√£o √© infer√™ncia - √© apenas uma "
"abrevia√ß√£o sint√°tica."

#: src/slices-and-lifetimes/lifetime-elision.md:8
msgid "Each argument which does not have a lifetime annotation is given one."
msgstr "Cada argumento que n√£o tem uma anota√ß√£o de tempo de vida √© dado um."

#: src/slices-and-lifetimes/lifetime-elision.md:9
msgid ""
"If there is only one argument lifetime, it is given to all un-annotated "
"return values."
msgstr ""
"Se houver apenas um tempo de vida de argumento, ele √© dado a todos os "
"valores de retorno n√£o anotados."

#: src/slices-and-lifetimes/lifetime-elision.md:11
msgid ""
"If there are multiple argument lifetimes, but the first one is for `self`, "
"that lifetime is given to all un-annotated return values."
msgstr ""
"Se houver v√°rios tempos de vida de argumento, mas o primeiro for para `self` "
"(_self_), esse tempo de vida √© dado a todos os valores de retorno n√£o "
"anotados."

#: src/slices-and-lifetimes/lifetime-elision.md:52
msgid "In this example, `cab_distance` is trivially elided."
msgstr "Neste exemplo, `cab_distance` √© trivialmente omitido."

#: src/slices-and-lifetimes/lifetime-elision.md:54
msgid ""
"The `nearest` function provides another example of a function with multiple "
"references in its arguments that requires explicit annotation."
msgstr ""
"A fun√ß√£o `nearest` fornece outro exemplo de uma fun√ß√£o com v√°rias "
"refer√™ncias em seus argumentos que requer anota√ß√£o expl√≠cita."

#: src/slices-and-lifetimes/lifetime-elision.md:57
msgid "Try adjusting the signature to \"lie\" about the lifetimes returned:"
msgstr ""
"Tente ajustar a assinatura para \"mentir\" sobre os tempos de vida "
"retornados:"

#: src/slices-and-lifetimes/lifetime-elision.md:63
msgid ""
"This won't compile, demonstrating that the annotations are checked for "
"validity by the compiler. Note that this is not the case for raw pointers "
"(unsafe), and this is a common source of errors with unsafe Rust."
msgstr ""
"Isso n√£o ir√° compilar, demonstrando que as anota√ß√µes s√£o verificadas quanto "
"√† validade pelo compilador. Observe que esse n√£o √© o caso dos ponteiros "
"brutos (_raw pointers_) (inseguros), e essa √© uma fonte comum de erros com "
"Rust inseguro."

#: src/slices-and-lifetimes/lifetime-elision.md:67
msgid ""
"Students may ask when to use lifetimes. Rust borrows _always_ have "
"lifetimes. Most of the time, elision and type inference mean these don't "
"need to be written out. In more complicated cases, lifetime annotations can "
"help resolve ambiguity. Often, especially when prototyping, it's easier to "
"just work with owned data by cloning values where necessary."
msgstr ""
"Os alunos podem perguntar quando usar tempos de vida. Os empr√©stimos do Rust "
"sempre t√™m tempos de vida. Na maioria das vezes, a omiss√£o e a infer√™ncia de "
"tipo significam que eles n√£o precisam ser escritos. Em casos mais "
"complicados, as anota√ß√µes de tempo de vida podem ajudar a resolver a "
"ambiguidade. Muitas vezes, especialmente ao prototipar, √© mais f√°cil "
"trabalhar com dados _owned_ (_owned data_) clonando valores quando "
"necess√°rio."

#: src/slices-and-lifetimes/struct-lifetimes.md:1
msgid "Lifetimes in Data Structures"
msgstr "Tempos de Vida em Estruturas de Dados"

#: src/slices-and-lifetimes/struct-lifetimes.md:3
msgid ""
"If a data type stores borrowed data, it must be annotated with a lifetime:"
msgstr ""
"Se um tipo de dados armazena dados emprestados, ele deve ser anotado com um "
"tempo de vida:"

#: src/slices-and-lifetimes/struct-lifetimes.md:10
msgid "\"Bye {text}!\""
msgstr "\"At√© logo {text}!\""

#: src/slices-and-lifetimes/struct-lifetimes.md:14
msgid "\"The quick brown fox jumps over the lazy dog.\""
msgstr "\"The quick brown fox jumps over the lazy dog.\""

#: src/slices-and-lifetimes/struct-lifetimes.md:17
msgid "// erase(text);\n"
msgstr "// erase(text);\n"

#: src/slices-and-lifetimes/struct-lifetimes.md:18
msgid "\"{fox:?}\""
msgstr "\"{fox:?}\""

#: src/slices-and-lifetimes/struct-lifetimes.md:19
msgid "\"{dog:?}\""
msgstr "\"{dog:?}\""

#: src/slices-and-lifetimes/struct-lifetimes.md:25
msgid ""
"In the above example, the annotation on `Highlight` enforces that the data "
"underlying the contained `&str` lives at least as long as any instance of "
"`Highlight` that uses that data."
msgstr ""
"No exemplo acima, a anota√ß√£o em `Highlight` imp√µe que os dados subjacentes "
"ao `&str` contido vivam pelo menos tanto quanto qualquer inst√¢ncia de "
"`Highlight` que use esses dados."

#: src/slices-and-lifetimes/struct-lifetimes.md:28
msgid ""
"If `text` is consumed before the end of the lifetime of `fox` (or `dog`), "
"the borrow checker throws an error."
msgstr ""
"Se `text` for consumido antes do final do tempo de vida de `fox` (ou `dog`), "
"o _borrow checker_ (verificador de empr√©stimo) lan√ßar√° um erro."

#: src/slices-and-lifetimes/struct-lifetimes.md:30
msgid ""
"Types with borrowed data force users to hold on to the original data. This "
"can be useful for creating lightweight views, but it generally makes them "
"somewhat harder to use."
msgstr ""
"Tipos com _borrowed data_ (dados emprestados) for√ßam os usu√°rios a manter os "
"dados originais. Isso pode ser √∫til para criar exibi√ß√µes leves, mas "
"geralmente as tornam um pouco mais dif√≠ceis de usar."

#: src/slices-and-lifetimes/struct-lifetimes.md:33
msgid "When possible, make data structures own their data directly."
msgstr ""
"Quando poss√≠vel, fa√ßa com que as estruturas de dados possuam (_own_) seus "
"dados diretamente."

#: src/slices-and-lifetimes/struct-lifetimes.md:34
msgid ""
"Some structs with multiple references inside can have more than one lifetime "
"annotation. This can be necessary if there is a need to describe lifetime "
"relationships between the references themselves, in addition to the lifetime "
"of the struct itself. Those are very advanced use cases."
msgstr ""
"Algumas _structs_ com m√∫ltiplas refer√™ncias internas podem ter mais de uma "
"anota√ß√£o de tempo de vida. Isso pode ser necess√°rio se houver a necessidade "
"de descrever-se relacionamentos de tempo de vida entre as pr√≥prias "
"refer√™ncias, al√©m do tempo de vida da pr√≥pria _struct_. Esses s√£o casos de "
"uso bastante avan√ßados."

#: src/slices-and-lifetimes/exercise.md:3
msgid ""
"In this exercise, you will build a parser for the [protobuf binary encoding]"
"(https://protobuf.dev/programming-guides/encoding/). Don't worry, it's "
"simpler than it seems! This illustrates a common parsing pattern, passing "
"slices of data. The underlying data itself is never copied."
msgstr ""
"Neste exerc√≠cio, voc√™ construir√° um analisador (_parser_) para a "
"[codifica√ß√£o bin√°ria de protobuf] (https://protobuf.dev/programming-guides/"
"encoding/). N√£o se preocupe, √© mais simples do que parece! Isso ilustra um "
"padr√£o de an√°lise comum, passando _slices_ de dados. Os pr√≥prios dados "
"subjacentes nunca s√£o copiados."

#: src/slices-and-lifetimes/exercise.md:8
msgid ""
"Fully parsing a protobuf message requires knowing the types of the fields, "
"indexed by their field numbers. That is typically provided in a `proto` "
"file. In this exercise, we'll encode that information into `match` "
"statements in functions that get called for each field."
msgstr ""
"Analisar (_parse_) completamente uma mensagem protobuf requer conhecer os "
"tipos dos campos, indexados por seus n√∫meros de campo. Isso √© normalmente "
"fornecido em um arquivo `proto`. Neste exerc√≠cio, codificaremos essas "
"informa√ß√µes em declara√ß√µes `match` em fun√ß√µes que s√£o chamadas para cada "
"campo."

#: src/slices-and-lifetimes/exercise.md:13
msgid "We'll use the following proto:"
msgstr "Usaremos o seguinte proto:"

#: src/slices-and-lifetimes/exercise.md:28
msgid ""
"A proto message is encoded as a series of fields, one after the next. Each "
"is implemented as a \"tag\" followed by the value. The tag contains a field "
"number (e.g., `2` for the `id` field of a `Person` message) and a wire type "
"defining how the payload should be determined from the byte stream."
msgstr ""
"Uma mensagem proto √© codificada como uma s√©rie de campos, um ap√≥s o outro. "
"Cada um √© implementado como uma \"tag\" seguida pelo valor. A tag cont√©m um "
"n√∫mero de campo (por exemplo, `2` para o campo `id` de uma mensagem "
"`Person`) e um tipo de fio (_wire type_) definindo como a carga √∫til deve "
"ser determinada a partir do fluxo (_stream_) de bytes."

#: src/slices-and-lifetimes/exercise.md:33
msgid ""
"Integers, including the tag, are represented with a variable-length encoding "
"called VARINT. Luckily, `parse_varint` is defined for you below. The given "
"code also defines callbacks to handle `Person` and `PhoneNumber` fields, and "
"to parse a message into a series of calls to those callbacks."
msgstr ""
"N√∫meros inteiros, incluindo a tag, s√£o representados com uma codifica√ß√£o de "
"comprimento vari√°vel chamada VARINT. Felizmente, `parse_varint` √© definido "
"para voc√™ abaixo. O c√≥digo fornecido tamb√©m define _callbacks_ para lidar "
"com campos `Person` e `PhoneNumber`, e para analisar uma mensagem em uma "
"s√©rie de chamadas para esses _callbacks_."

#: src/slices-and-lifetimes/exercise.md:38
msgid ""
"What remains for you is to implement the `parse_field` function and the "
"`ProtoMessage` trait for `Person` and `PhoneNumber`."
msgstr ""
"O que resta para voc√™ √© implementar a fun√ß√£o `parse_field` e o _trait_ "
"`ProtoMessage` para `Person` e `PhoneNumber`."

#: src/slices-and-lifetimes/exercise.md:49
#: src/slices-and-lifetimes/solution.md:11
msgid "\"Invalid varint\""
msgstr "\"Varint inv√°lido\""

#: src/slices-and-lifetimes/exercise.md:51
#: src/slices-and-lifetimes/solution.md:13
msgid "\"Invalid wire-type\""
msgstr "\"Wire-type inv√°lido\""

#: src/slices-and-lifetimes/exercise.md:53
#: src/slices-and-lifetimes/solution.md:15
msgid "\"Unexpected EOF\""
msgstr "\"EOF inesperado\""

#: src/slices-and-lifetimes/exercise.md:55
#: src/slices-and-lifetimes/solution.md:17
msgid "\"Invalid length\""
msgstr "\"Comprimento inv√°lido\""

#: src/slices-and-lifetimes/exercise.md:57
#: src/slices-and-lifetimes/solution.md:19
msgid "\"Unexpected wire-type)\""
msgstr "\"Wire-type inesperado\""

#: src/slices-and-lifetimes/exercise.md:59
#: src/slices-and-lifetimes/solution.md:21
msgid "\"Invalid string (not UTF-8)\""
msgstr "\"String inv√°lida (n√£o UTF-8)\""

#: src/slices-and-lifetimes/exercise.md:62
#: src/slices-and-lifetimes/solution.md:24
msgid "/// A wire type as seen on the wire.\n"
msgstr "/// Um wire type como visto no wire.\n"

#: src/slices-and-lifetimes/exercise.md:65
#: src/slices-and-lifetimes/solution.md:27
msgid "/// The Varint WireType indicates the value is a single VARINT.\n"
msgstr "/// O Varint WireType indica que o valor √© um √∫nico VARINT.\n"

#: src/slices-and-lifetimes/exercise.md:67
#: src/slices-and-lifetimes/solution.md:29
msgid ""
"//I64,  -- not needed for this exercise\n"
"    /// The Len WireType indicates that the value is a length represented as "
"a\n"
"    /// VARINT followed by exactly that number of bytes.\n"
msgstr ""
"//I64,  -- n√£o √© necess√°rio para este exerc√≠cio\n"
"    /// O Len WireType indica que o valor √© um comprimento representado como "
"um\n"
"    /// VARINT seguido exatamente por esse n√∫mero de bytes.\n"

#: src/slices-and-lifetimes/exercise.md:71
#: src/slices-and-lifetimes/solution.md:33
msgid ""
"/// The I32 WireType indicates that the value is precisely 4 bytes in\n"
"    /// little-endian order containing a 32-bit signed integer.\n"
msgstr ""
"/// O I32 WireType indica que o valor √© precisamente 4 bytes em\n"
"    /// ordem little-endian contendo um inteiro de 32 bits com sinal.\n"

#: src/slices-and-lifetimes/exercise.md:76
#: src/slices-and-lifetimes/solution.md:38
msgid "/// A field's value, typed based on the wire type.\n"
msgstr "/// O valor de um campo, digitado com base no wire type.\n"

#: src/slices-and-lifetimes/exercise.md:80
#: src/slices-and-lifetimes/solution.md:42
msgid "//I64(i64),  -- not needed for this exercise\n"
msgstr "//I64(i64),  -- n√£o √© necess√°rio para este exerc√≠cio\n"

#: src/slices-and-lifetimes/exercise.md:85
#: src/slices-and-lifetimes/solution.md:47
msgid "/// A field, containing the field number and its value.\n"
msgstr "/// Um campo, contendo o n√∫mero do campo e seu valor.\n"

#: src/slices-and-lifetimes/exercise.md:102
#: src/slices-and-lifetimes/solution.md:64
msgid "//1 => WireType::I64,  -- not needed for this exercise\n"
msgstr "//1 => WireType::I64,  -- n√£o √© necess√°rio para este exerc√≠cio\n"

#: src/slices-and-lifetimes/exercise.md:132
#: src/slices-and-lifetimes/solution.md:94
msgid ""
"/// Parse a VARINT, returning the parsed value and the remaining bytes.\n"
msgstr ""
"/// Analise (_parse_) um VARINT, retornando o valor analisado e os bytes "
"restantes.\n"

#: src/slices-and-lifetimes/exercise.md:140
#: src/slices-and-lifetimes/solution.md:102
msgid ""
"// This is the last byte of the VARINT, so convert it to\n"
"            // a u64 and return it.\n"
msgstr ""
"// Este √© o √∫ltimo byte do VARINT, ent√£o converta-o para\n"
"            // um u64 e retorne-o.\n"

#: src/slices-and-lifetimes/exercise.md:150
#: src/slices-and-lifetimes/solution.md:112
msgid "// More than 7 bytes is invalid.\n"
msgstr "// Mais de 7 bytes √© inv√°lido.\n"

#: src/slices-and-lifetimes/exercise.md:153
#: src/slices-and-lifetimes/solution.md:115
msgid "/// Convert a tag into a field number and a WireType.\n"
msgstr "/// Converta uma tag em um n√∫mero de campo e um WireType.\n"

#: src/slices-and-lifetimes/exercise.md:161
#: src/slices-and-lifetimes/solution.md:122
msgid "/// Parse a field, returning the remaining bytes\n"
msgstr "/// Analise (_parse_) um campo, retornando os bytes restantes\n"

#: src/slices-and-lifetimes/exercise.md:167
msgid ""
"\"Based on the wire type, build a Field, consuming as many bytes as "
"necessary.\""
msgstr ""
"\"Com base no wire type, construa um Field, consumindo quantos bytes forem "
"necess√°rios.\""

#: src/slices-and-lifetimes/exercise.md:169
msgid "\"Return the field, and any un-consumed bytes.\""
msgstr "\"Retorne o campo e quaisquer bytes n√£o consumidos.\""

#: src/slices-and-lifetimes/exercise.md:171
#: src/slices-and-lifetimes/solution.md:153
msgid ""
"/// Parse a message in the given data, calling `T::add_field` for each field "
"in\n"
"/// the message.\n"
"///\n"
"/// The entire input is consumed.\n"
msgstr ""
"/// Analise (_parse_) uma mensagem nos dados fornecidos, chamando `T::"
"add_field` para cada campo na\n"
"/// mensagem.\n"
"///\n"
"/// Todo o input √© consumido.\n"

#: src/slices-and-lifetimes/exercise.md:198
msgid "// TODO: Implement ProtoMessage for Person and PhoneNumber.\n"
msgstr "// TODO: Implemente ProtoMessage para Person e PhoneNumber.\n"

#: src/slices-and-lifetimes/solution.md:146
msgid "// Unwrap error because `value` is definitely 4 bytes long.\n"
msgstr "// Unwrap o erro porque `value` definitivamente tem 4 bytes.\n"

#: src/slices-and-lifetimes/solution.md:187
#: src/slices-and-lifetimes/solution.md:198
msgid "// skip everything else\n"
msgstr "// pule todo o resto\n"

#: src/slices-and-lifetimes/solution.md:225
#: src/slices-and-lifetimes/solution.md:232
#: src/slices-and-lifetimes/solution.md:239
msgid "b\"hello\""
msgstr "b\"ol√°\""

#: src/welcome-day-4.md:1
msgid "Welcome to Day 4"
msgstr "Bem-vindo ao Dia 4"

#: src/welcome-day-4.md:3
msgid ""
"Today we will cover topics relating to building large-scale software in Rust:"
msgstr ""
"Hoje abordaremos t√≥picos relacionados √† constru√ß√£o de software em larga "
"escala em Rust:"

#: src/welcome-day-4.md:5
msgid "Iterators: a deep dive on the `Iterator` trait."
msgstr "Iteradores: uma an√°lise profunda do _trait_ `Iterator`."

#: src/welcome-day-4.md:6
msgid "Modules and visibility."
msgstr "M√≥dulos e visibilidade."

#: src/welcome-day-4.md:7
msgid "Testing."
msgstr "Testes."

#: src/welcome-day-4.md:8
msgid "Error handling: panics, `Result`, and the try operator `?`."
msgstr "Tratamento de erros: p√¢nicos, `Result` e o operador `?`."

#: src/welcome-day-4.md:9
msgid ""
"Unsafe Rust: the escape hatch when you can't express yourself in safe Rust."
msgstr ""
"Rust inseguro: a sa√≠da de emerg√™ncia quando voc√™ n√£o consegue se expressar "
"em Rust seguro."

#: src/iterators/iterator.md:7
msgid ""
"The [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) "
"trait supports iterating over values in a collection. It requires a `next` "
"method and provides lots of methods. Many standard library types implement "
"`Iterator`, and you can implement it yourself, too:"
msgstr ""
"O _trait_ [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator."
"html) suporta a itera√ß√£o sobre valores em uma cole√ß√£o. Ele requer um m√©todo "
"`next` e fornece muitos m√©todos. Muitos tipos da biblioteca padr√£o "
"implementam `Iterator`, e voc√™ tamb√©m pode implement√°-lo:"

#: src/iterators/iterator.md:31
msgid "\"fib({i}): {n}\""
msgstr "\"fib({i}): {n}\""

#: src/iterators/iterator.md:38
msgid ""
"The `Iterator` trait implements many common functional programming "
"operations over collections (e.g. `map`, `filter`, `reduce`, etc). This is "
"the trait where you can find all the documentation about them. In Rust these "
"functions should produce the code as efficient as equivalent imperative "
"implementations."
msgstr ""
"O _trait_ `Iterator` implementa muitas opera√ß√µes comuns de programa√ß√£o "
"funcional sobre cole√ß√µes (por exemplo, `map`, `filter`, `reduce`, etc). Este "
"√© o _trait_ onde voc√™ pode encontrar toda a documenta√ß√£o sobre eles. Em "
"Rust, essas fun√ß√µes devem produzir o c√≥digo t√£o eficiente quanto as "
"implementa√ß√µes imperativas equivalentes."

#: src/iterators/iterator.md:43
msgid ""
"`IntoIterator` is the trait that makes for loops work. It is implemented by "
"collection types such as `Vec<T>` and references to them such as `&Vec<T>` "
"and `&[T]`. Ranges also implement it. This is why you can iterate over a "
"vector with `for i in some_vec { .. }` but `some_vec.next()` doesn't exist."
msgstr ""
"`IntoIterator` √© o _trait_ que faz os la√ßos `for` funcionarem. Ele √© "
"implementado por tipos de cole√ß√£o como `Vec<T>` e refer√™ncias a eles como "
"`&Vec<T>` e `&[T]`. Intervalos (_ranges_) tamb√©m o implementam. √â por isso "
"que voc√™ pode iterar sobre um vetor com `for i in some_vec { .. }`, mas "
"`some_vec.next()` n√£o existe."

#: src/iterators/intoiterator.md:3
msgid ""
"The `Iterator` trait tells you how to _iterate_ once you have created an "
"iterator. The related trait [`IntoIterator`](https://doc.rust-lang.org/std/"
"iter/trait.IntoIterator.html) defines how to create an iterator for a type. "
"It is used automatically by the `for` loop."
msgstr ""
"O _trait_ `Iterator` informa como _iterar_ depois de criar um iterador. O "
"_trait_ relacionado [`IntoIterator`](https://doc.rust-lang.org/std/iter/"
"trait.IntoIterator.html) define como criar um iterador para um tipo. Ele √© "
"usado automaticamente pelo la√ßo `for`."

#: src/iterators/intoiterator.md:49
msgid "\"point = {x}, {y}\""
msgstr "\"point = {x}, {y}\""

#: src/iterators/intoiterator.md:56
msgid ""
"Click through to the docs for `IntoIterator`. Every implementation of "
"`IntoIterator` must declare two types:"
msgstr ""
"Clique na documenta√ß√£o para `IntoIterator`. Toda implementa√ß√£o de "
"`IntoIterator` deve declarar dois tipos:"

#: src/iterators/intoiterator.md:59
msgid "`Item`: the type to iterate over, such as `i8`,"
msgstr "`Item`: o tipo sobre o qual iteramos, como `i8`,"

#: src/iterators/intoiterator.md:60
msgid "`IntoIter`: the `Iterator` type returned by the `into_iter` method."
msgstr "`IntoIter`: o tipo `Iterator` retornado pelo m√©todo `into_iter`."

#: src/iterators/intoiterator.md:62
msgid ""
"Note that `IntoIter` and `Item` are linked: the iterator must have the same "
"`Item` type, which means that it returns `Option<Item>`"
msgstr ""
"Observe que `IntoIter` e `Item` est√£o vinculados: o iterador deve ter o "
"mesmo tipo `Item`, o que significa que ele retorna `Option<Item>`"

#: src/iterators/intoiterator.md:65
msgid "The example iterates over all combinations of x and y coordinates."
msgstr "O exemplo itera sobre todas as combina√ß√µes de coordenadas x e y."

#: src/iterators/intoiterator.md:67
msgid ""
"Try iterating over the grid twice in `main`. Why does this fail? Note that "
"`IntoIterator::into_iter` takes ownership of `self`."
msgstr ""
"Tente iterar sobre o _grid_ duas vezes em `main`. Por que isso falha? "
"Observe que `IntoIterator::into_iter` assume a propriedade de `self`."

#: src/iterators/intoiterator.md:70
msgid ""
"Fix this issue by implementing `IntoIterator` for `&Grid` and storing a "
"reference to the `Grid` in `GridIter`."
msgstr ""
"Corrija este problema implementando `IntoIterator` para `&Grid` e "
"armazenando uma refer√™ncia ao `Grid` em `GridIter`."

#: src/iterators/intoiterator.md:73
msgid ""
"The same problem can occur for standard library types: `for e in "
"some_vector` will take ownership of `some_vector` and iterate over owned "
"elements from that vector. Use `for e in &some_vector` instead, to iterate "
"over references to elements of `some_vector`."
msgstr ""
"O mesmo problema pode ocorrer para tipos da biblioteca padr√£o: `for e in "
"some_vector` assumir√° a propriedade de `some_vector` e iterar√° sobre "
"elementos _owned_ desse vetor. Use `for e in &some_vector` em vez disso, "
"para iterar sobre refer√™ncias aos elementos de `some_vector`."

#: src/iterators/fromiterator.md:1
msgid "FromIterator"
msgstr "FromIterator"

#: src/iterators/fromiterator.md:3
msgid ""
"[`FromIterator`](https://doc.rust-lang.org/std/iter/trait.FromIterator.html) "
"lets you build a collection from an [`Iterator`](https://doc.rust-lang.org/"
"std/iter/trait.Iterator.html)."
msgstr ""
"[`FromIterator`](https://doc.rust-lang.org/std/iter/trait.FromIterator.html) "
"permite que voc√™ construa uma cole√ß√£o a partir de um [`Iterator`](https://"
"doc.rust-lang.org/std/iter/trait.Iterator.html)."

#: src/iterators/fromiterator.md:9
msgid "\"prime_squares: {prime_squares:?}\""
msgstr "\"prime_squares: {prime_squares:?}\""

#: src/iterators/fromiterator.md:15
msgid "`Iterator` implements"
msgstr "`Iterator` implementa"

#: src/iterators/fromiterator.md:24
msgid "There are two ways to specify `B` for this method:"
msgstr "Existem duas maneiras de especificar `B` para este m√©todo:"

#: src/iterators/fromiterator.md:26
msgid ""
"With the \"turbofish\": `some_iterator.collect::<COLLECTION_TYPE>()`, as "
"shown. The `_` shorthand used here lets Rust infer the type of the `Vec` "
"elements."
msgstr ""
"Com o \"turbofish\": `some_iterator.collect::<COLLECTION_TYPE>()`, como "
"mostrado. O _shorthand_ `_` usado aqui permite que o Rust infira o tipo dos "
"elementos do `Vec`."

#: src/iterators/fromiterator.md:28
msgid ""
"With type inference: `let prime_squares: Vec<_> = some_iterator.collect()`. "
"Rewrite the example to use this form."
msgstr ""
"Com infer√™ncia de tipo: `let prime_squares: Vec<_> = some_iterator."
"collect()`. Reescreva o exemplo para usar esta forma."

#: src/iterators/fromiterator.md:31
msgid ""
"There are basic implementations of `FromIterator` for `Vec`, `HashMap`, etc. "
"There are also more specialized implementations which let you do cool things "
"like convert an `Iterator<Item = Result<V, E>>` into a `Result<Vec<V>, E>`."
msgstr ""
"H√° implementa√ß√µes b√°sicas de `FromIterator` para `Vec`, `HashMap`, etc. "
"Tamb√©m existem implementa√ß√µes mais especializadas que permitem fazer coisas "
"legais, como converter um `Iterator<Item = Result<V, E>>` em um "
"`Result<Vec<V>, E>`."

#: src/iterators/exercise.md:3
msgid ""
"In this exercise, you will need to find and use some of the provided methods "
"in the [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) "
"trait to implement a complex calculation."
msgstr ""
"Neste exerc√≠cio, voc√™ precisar√° encontrar e usar alguns dos m√©todos "
"fornecidos no _trait_ [`Iterator`](https://doc.rust-lang.org/std/iter/trait."
"Iterator.html) para implementar um c√°lculo complexo."

#: src/iterators/exercise.md:6
msgid ""
"Copy the following code to <https://play.rust-lang.org/> and make the tests "
"pass. Use an iterator expression and `collect` the result to construct the "
"return value."
msgstr ""
"Copie o seguinte c√≥digo para <https://play.rust-lang.org/> e fa√ßa os testes "
"passarem. Use uma express√£o de iterador e `collect` o resultado para "
"construir o valor de retorno."

#: src/iterators/exercise.md:11 src/iterators/solution.md:4
msgid ""
"/// Calculate the differences between elements of `values` offset by "
"`offset`,\n"
"/// wrapping around from the end of `values` to the beginning.\n"
"///\n"
"/// Element `n` of the result is `values[(n+offset)%len] - values[n]`.\n"
msgstr ""
"/// Calcule as diferen√ßas entre os elementos de `values` deslocados por "
"`offset`,\n"
"/// voltando ao in√≠cio de `values` no final.\n"
"///\n"
"/// O elemento `n` do resultado √© `values[(n+offset)%len] - values[n]`.\n"

#: src/modules/modules.md:3
msgid "We have seen how `impl` blocks let us namespace functions to a type."
msgstr ""
"Vimos como os blocos `impl` nos permitem usar _namespaces_ (espa√ßos de "
"nomes) de fun√ß√µes para um tipo."

#: src/modules/modules.md:5
msgid "Similarly, `mod` lets us namespace types and functions:"
msgstr ""
"Da mesma forma, `mod` nos permite usar _namespaces_ de tipos e fun√ß√µes:"

#: src/modules/modules.md:10
msgid "\"In the foo module\""
msgstr "\"No m√≥dulo foo\""

#: src/modules/modules.md:16
msgid "\"In the bar module\""
msgstr "\"No m√≥dulo bar\""

#: src/modules/modules.md:28
msgid ""
"Packages provide functionality and include a `Cargo.toml` file that "
"describes how to build a bundle of 1+ crates."
msgstr ""
"Pacotes (_packages_) fornecem funcionalidades e incluem um arquivo `Cargo."
"toml` que descreve como gerar um pacote com um ou mais _crates_."

#: src/modules/modules.md:30
msgid ""
"Crates are a tree of modules, where a binary crate creates an executable and "
"a library crate compiles to a library."
msgstr ""
"_Crates_ s√£o arvores de m√≥dulos, onde um _crate_ bin√°rio cria um execut√°vel "
"e um _crate_ de biblioteca √© compilado em uma biblioteca."

#: src/modules/modules.md:32
msgid "Modules define organization, scope, and are the focus of this section."
msgstr "M√≥dulos definem organiza√ß√£o, escopo e s√£o o foco desta se√ß√£o."

#: src/modules/filesystem.md:3
msgid ""
"Omitting the module content will tell Rust to look for it in another file:"
msgstr ""
"Omitir o conte√∫do do m√≥dulo dir√° ao Rust para procur√°-lo em outro arquivo:"

#: src/modules/filesystem.md:9
msgid ""
"This tells rust that the `garden` module content is found at `src/garden."
"rs`. Similarly, a `garden::vegetables` module can be found at `src/garden/"
"vegetables.rs`."
msgstr ""
"Isto diz ao Rust que o conte√∫do do m√≥dulo `garden` √© encontrado em `src/"
"garden.rs`. Da mesma forma, um m√≥dulo `garden::vegetables` pode ser "
"encontrado em `src/garden/vegetables.rs`."

#: src/modules/filesystem.md:13
msgid "The `crate` root is in:"
msgstr "A raiz do `crate` est√° em:"

#: src/modules/filesystem.md:15
msgid "`src/lib.rs` (for a library crate)"
msgstr "`src/lib.rs` (para um _crate_ de biblioteca)"

#: src/modules/filesystem.md:16
msgid "`src/main.rs` (for a binary crate)"
msgstr "`src/main.rs` (para um _crate_ bin√°rio)"

#: src/modules/filesystem.md:18
msgid ""
"Modules defined in files can be documented, too, using \"inner doc "
"comments\". These document the item that contains them -- in this case, a "
"module."
msgstr ""
"M√≥dulos definidos em arquivos tamb√©m podem ser documentados usando "
"\"coment√°rios internos de documento\" (_inner doc comments_). Estes "
"documentam o item que os cont√©m - neste caso, um m√≥dulo."

#: src/modules/filesystem.md:22
msgid ""
"//! This module implements the garden, including a highly performant "
"germination\n"
"//! implementation.\n"
msgstr ""
"//! Este m√≥dulo implementa o jardim (_garden_), incluindo uma implementa√ß√£o "
"de germina√ß√£o\n"
"//!  de alto desempenho.\n"

#: src/modules/filesystem.md:24
msgid "// Re-export types from this module.\n"
msgstr "// Re-exporta tipos deste m√≥dulo.\n"

#: src/modules/filesystem.md:28
msgid "/// Sow the given seed packets.\n"
msgstr "/// Semeia os pacotes de semente fornecidos.\n"

#: src/modules/filesystem.md:33
msgid "/// Harvest the produce in the garden that is ready.\n"
msgstr "/// Colhe os vegetais no jardim que est√° pronto.\n"

#: src/modules/filesystem.md:42
msgid ""
"Before Rust 2018, modules needed to be located at `module/mod.rs` instead of "
"`module.rs`, and this is still a working alternative for editions after 2018."
msgstr ""
"Antes do Rust 2018, os m√≥dulos precisavam estar localizados em `module/mod."
"rs` ao inv√©s de `module.rs`, e esta ainda √© uma alternativa funcional para "
"edi√ß√µes posteriores a 2018."

#: src/modules/filesystem.md:45
msgid ""
"The main reason to introduce `filename.rs` as alternative to `filename/mod."
"rs` was because many files named `mod.rs` can be hard to distinguish in IDEs."
msgstr ""
"A principal raz√£o para introduzir `nome_de_arquivo.rs` como alternativa a "
"`nome_de_arquivo/mod.rs` foi porque muitos arquivos denominados `mod.rs` "
"podem ser dif√≠ceis de distinguir em IDEs."

#: src/modules/filesystem.md:48
msgid "Deeper nesting can use folders, even if the main module is a file:"
msgstr ""
"O aninhamento mais profundo pode usar pastas, mesmo que o m√≥dulo principal "
"seja um arquivo:"

#: src/modules/filesystem.md:58
msgid ""
"The place rust will look for modules can be changed with a compiler "
"directive:"
msgstr ""
"O local no qual o Rust ir√° procurar por m√≥dulos pode ser alterado por meio "
"de uma diretiva de compilador:"

#: src/modules/filesystem.md:61
msgid "\"some/path.rs\""
msgstr "\"algum/caminho.rs\""

#: src/modules/filesystem.md:65
msgid ""
"This is useful, for example, if you would like to place tests for a module "
"in a file named `some_module_test.rs`, similar to the convention in Go."
msgstr ""
"Isto √© √∫til, por exemplo, se voc√™ quiser colocar testes para um m√≥dulo em um "
"arquivo chamado `algum_modulo_teste.rs`, semelhante √† conven√ß√£o em Go."

#: src/modules/visibility.md:3
msgid "Modules are a privacy boundary:"
msgstr "M√≥dulos s√£o limitadores de privacidade:"

#: src/modules/visibility.md:5
msgid "Module items are private by default (hides implementation details)."
msgstr ""
"Itens do m√≥dulo s√£o privados por padr√£o (ocultam detalhes de implementa√ß√£o)."

#: src/modules/visibility.md:6
msgid "Parent and sibling items are always visible."
msgstr "Itens paternos e fraternos s√£o sempre vis√≠veis."

#: src/modules/visibility.md:7
msgid ""
"In other words, if an item is visible in module `foo`, it's visible in all "
"the descendants of `foo`."
msgstr ""
"Em outras palavras, se um item √© vis√≠vel no m√≥dulo `foo`, ele √© vis√≠vel em "
"todos os descendentes de `foo`."

#: src/modules/visibility.md:13
msgid "\"outer::private\""
msgstr "\"outer::private\""

#: src/modules/visibility.md:17
msgid "\"outer::public\""
msgstr "\"outer::public\""

#: src/modules/visibility.md:22
msgid "\"outer::inner::private\""
msgstr "\"outer::inner::private\""

#: src/modules/visibility.md:26
msgid "\"outer::inner::public\""
msgstr "\"outer::inner::public\""

#: src/modules/visibility.md:39
msgid "Use the `pub` keyword to make modules public."
msgstr "Use a palavra reservada `pub` para tornar m√≥dulos p√∫blicos."

#: src/modules/visibility.md:41
msgid ""
"Additionally, there are advanced `pub(...)` specifiers to restrict the scope "
"of public visibility."
msgstr ""
"Adicionamente, existem especificadores `pub(...)` avan√ßados para restringir "
"o escopo de visibilidade p√∫blica."

#: src/modules/visibility.md:44
msgid ""
"See the [Rust Reference](https://doc.rust-lang.org/reference/visibility-and-"
"privacy.html#pubin-path-pubcrate-pubsuper-and-pubself)."
msgstr ""
"Veja a [Refer√™ncia Rust](https://doc.rust-lang.org/reference/visibility-and-"
"privacy.html#pubin-path-pubcrate-pubsuper-and-pubself)."

#: src/modules/visibility.md:46
msgid "Configuring `pub(crate)` visibility is a common pattern."
msgstr "A configura√ß√£o de visibilidade `pub(crate)` √© um padr√£o comum."

#: src/modules/visibility.md:47
msgid "Less commonly, you can give visibility to a specific path."
msgstr "Menos comum, voc√™ pode dar visibilidade para um caminho espec√≠fico."

#: src/modules/visibility.md:48
msgid ""
"In any case, visibility must be granted to an ancestor module (and all of "
"its descendants)."
msgstr ""
"Em todo caso, a visibilidade deve ser concedida a um m√≥dulo ancestral (e a "
"todos os seus descendentes)."

#: src/modules/paths.md:1
msgid "use, super, self"
msgstr "use, super, self"

#: src/modules/paths.md:3
msgid ""
"A module can bring symbols from another module into scope with `use`. You "
"will typically see something like this at the top of each module:"
msgstr ""
"Um m√≥dulo pode trazer s√≠mbolos de outro m√≥dulo para o escopo com `use`. "
"Normalmente, voc√™ ver√° algo assim na parte superior de cada m√≥dulo:"

#: src/modules/paths.md:11
msgid "Paths"
msgstr "Caminhos (_Paths_)"

#: src/modules/paths.md:13
msgid "Paths are resolved as follows:"
msgstr "Caminhos s√£o resolvidos da seguinte forma:"

#: src/modules/paths.md:15
msgid "As a relative path:"
msgstr "Como um caminho relativo:"

#: src/modules/paths.md:16
msgid "`foo` or `self::foo` refers to `foo` in the current module,"
msgstr "`foo` ou `self::foo` referem-se √† `foo` no m√≥dulo atual,"

#: src/modules/paths.md:17
msgid "`super::foo` refers to `foo` in the parent module."
msgstr "`super::foo` refere-se √† `foo` no m√≥dulo pai."

#: src/modules/paths.md:19
msgid "As an absolute path:"
msgstr "Como um caminho absoluto:"

#: src/modules/paths.md:20
msgid "`crate::foo` refers to `foo` in the root of the current crate,"
msgstr "`crate::foo` refere-se √† `foo` na raiz do _crate_ atual,"

#: src/modules/paths.md:21
msgid "`bar::foo` refers to `foo` in the `bar` crate."
msgstr "`bar::foo` refere-se a `foo` no _crate_ `bar`."

#: src/modules/paths.md:25
msgid ""
"It is common to \"re-export\" symbols at a shorter path. For example, the "
"top-level `lib.rs` in a crate might have"
msgstr ""
"√â comum \"re-exportar\" s√≠mbolos em um caminho mais curto. Por exemplo, o "
"n√≠vel superior `lib.rs` em um _crate_ pode ter"

#: src/modules/paths.md:35
msgid ""
"making `DiskStorage` and `NetworkStorage` available to other crates with a "
"convenient, short path."
msgstr ""
"tornando `DiskStorage` e `NetworkStorage` dispon√≠veis para outros _crates_ "
"com um caminho conveniente e curto."

#: src/modules/paths.md:38
msgid ""
"For the most part, only items that appear in a module need to be `use`'d. "
"However, a trait must be in scope to call any methods on that trait, even if "
"a type implementing that trait is already in scope. For example, to use the "
"`read_to_string` method on a type implementing the `Read` trait, you need to "
"`use std::io::Read`."
msgstr ""
"Na maior parte, apenas itens que aparecem em um m√≥dulo precisam ser `use`. "
"No entanto, um _trait_ deve estar no escopo para chamar quaisquer m√©todos "
"nesse _trait_, mesmo que um tipo que implemente esse _trait_ j√° esteja no "
"escopo. Por exemplo, para usar o m√©todo `read_to_string` em um tipo que "
"implementa o _trait_ `Read`, voc√™ precisa `use std::io::Read`."

#: src/modules/paths.md:44
msgid ""
"The `use` statement can have a wildcard: `use std::io::*`. This is "
"discouraged because it is not clear which items are imported, and those "
"might change over time."
msgstr ""
"A instru√ß√£o `use` pode ter um curinga: `use std::io::*`. Isso √© "
"desencorajado porque n√£o est√° claro quais itens s√£o importados, e eles podem "
"mudar ao longo do tempo."

#: src/modules/exercise.md:3
msgid ""
"In this exercise, you will reorganize the GUI Library exercise from the "
"\"Methods and Traits\" segment of the course into a collection of modules. "
"It is typical to put each type or set of closely-related types into its own "
"module, so each widget type should get its own module."
msgstr ""
"Neste exerc√≠cio, voc√™ ir√° reorganizar o exerc√≠cio da Biblioteca GUI da se√ß√£o "
"\"M√©todos e Traits\" do curso em uma cole√ß√£o de m√≥dulos. √â comum colocar-se "
"cada tipo ou conjunto de tipos intimamente relacionados em seu pr√≥prio "
"m√≥dulo, ent√£o cada tipo de widget deve ter seu pr√≥prio m√≥dulo."

#: src/modules/exercise.md:8
msgid ""
"If you no longer have your version, that's fine - refer back to the "
"[provided solution](../methods-and-traits/solution.html)."
msgstr ""
"Se voc√™ n√£o tiver mais sua vers√£o, tudo bem - consulte a [solu√ß√£o fornecida]"
"(../methods-and-traits/solution.html)."

#: src/modules/exercise.md:11
msgid "Cargo Setup"
msgstr "Configura√ß√£o do Cargo"

#: src/modules/exercise.md:13
msgid ""
"The Rust playground only supports one file, so you will need to make a Cargo "
"project on your local filesystem:"
msgstr ""
"O _playground_ do Rust suporta apenas um arquivo, ent√£o voc√™ precisar√° criar "
"um projeto Cargo em seu sistema de arquivos local:"

#: src/modules/exercise.md:22
msgid ""
"Edit `src/main.rs` to add `mod` statements, and add additional files in the "
"`src` directory."
msgstr ""
"Edite `src/main.rs` para adicionar declara√ß√µes `mod`, e adicione arquivos "
"adicionais no diret√≥rio `src`."

#: src/modules/exercise.md:27
msgid ""
"Encourage students to divide the code in a way that feels natural for them, "
"and get accustomed to the required `mod`, `use`, and `pub` declarations. "
"Afterward, discuss what organizations are most idiomatic."
msgstr ""
"Incentive os alunos a dividir o c√≥digo de uma maneira que pare√ßa natural "
"para eles, e se acostumem com as declara√ß√µes `mod`, `use` e `pub` "
"necess√°rias. Depois, discuta quais organiza√ß√µes s√£o mais idiom√°ticas."

#: src/modules/solution.md:30
msgid "// ---- src/widgets.rs ----\n"
msgstr "// ---- src/widgets.rs ----\n"

#: src/modules/solution.md:56
msgid "// ---- src/widgets/label.rs ----\n"
msgstr "// ---- src/widgets/label.rs ----\n"

#: src/modules/solution.md:71
msgid "// ANCHOR_END: Label-width\n"
msgstr "// ANCHOR_END: Label-width\n"

#: src/modules/solution.md:75
msgid "// ANCHOR: Label-draw_into\n"
msgstr "// ANCHOR: Label-draw_into\n"

#: src/modules/solution.md:77
msgid "// ANCHOR_END: Label-draw_into\n"
msgstr "// ANCHOR_END: Label-draw_into\n"

#: src/modules/solution.md:84
msgid "// ---- src/widgets/button.rs ----\n"
msgstr "// ---- src/widgets/button.rs ----\n"

#: src/modules/solution.md:99
msgid "// ANCHOR_END: Button-width\n"
msgstr "// ANCHOR_END: Button-width\n"

#: src/modules/solution.md:103
msgid "// ANCHOR: Button-draw_into\n"
msgstr "// ANCHOR: Button-draw_into\n"

#: src/modules/solution.md:105
msgid "// ANCHOR_END: Button-draw_into\n"
msgstr "// ANCHOR_END: Button-draw_into\n"

#: src/modules/solution.md:120
msgid "// ---- src/widgets/window.rs ----\n"
msgstr "// ---- src/widgets/window.rs ----\n"

#: src/modules/solution.md:147
msgid ""
"// ANCHOR_END: Window-width\n"
"        // Add 4 paddings for borders\n"
msgstr ""
"// ANCHOR_END: Window-width\n"
"        // Adiciona 4 preenchimentos para as bordas\n"

#: src/modules/solution.md:152
msgid "// ANCHOR: Window-draw_into\n"
msgstr "// ANCHOR: Window-draw_into\n"

#: src/modules/solution.md:154
msgid "// ANCHOR_END: Window-draw_into\n"
msgstr "// ANCHOR_END: Window-draw_into\n"

#: src/modules/solution.md:177
msgid "// ---- src/main.rs ----\n"
msgstr "// ---- src/main.rs ----\n"

#: src/testing/unit-tests.md:1
msgid "Unit Tests"
msgstr "Testes Unit√°rios"

#: src/testing/unit-tests.md:3
msgid "Rust and Cargo come with a simple unit test framework:"
msgstr "Rust e Cargo v√™m com uma estrutura de testes unit√°rios simples:"

#: src/testing/unit-tests.md:5
msgid "Unit tests are supported throughout your code."
msgstr "Testes unit√°rios s√£o suportados em todo o seu c√≥digo."

#: src/testing/unit-tests.md:7
msgid "Integration tests are supported via the `tests/` directory."
msgstr "Testes de integra√ß√£o s√£o suportados atrav√©s do diret√≥rio `tests/`."

#: src/testing/unit-tests.md:9
msgid ""
"Tests are marked with `#[test]`. Unit tests are often put in a nested "
"`tests` module, using `#[cfg(test)]` to conditionally compile them only when "
"building tests."
msgstr ""
"Testes s√£o marcados com `#[test]`. Testes unit√°rios s√£o frequentemente "
"colocados em um m√≥dulo aninhado `tests`, usando `#[cfg(test)]` para compil√°-"
"los condicionalmente apenas ao construir testes."

#: src/testing/unit-tests.md:37
msgid "\"Hello World\""
msgstr "\"Hello World\""

#: src/testing/unit-tests.md:42
msgid "This lets you unit test private helpers."
msgstr "Isso permite que voc√™ tenha testes unit√°rios auxiliares privados."

#: src/testing/unit-tests.md:43
msgid "The `#[cfg(test)]` attribute is only active when you run `cargo test`."
msgstr ""
"O atributo `#[cfg(test)]` somente fica ativo quando voc√™ executa `cargo "
"test`."

#: src/testing/unit-tests.md:47
msgid "Run the tests in the playground in order to show their results."
msgstr "Execute os testes no _playground_ para mostrar seus resultados."

#: src/testing/other.md:3
msgid "Integration Tests"
msgstr "Testes de Integra√ß√£o"

#: src/testing/other.md:5
msgid "If you want to test your library as a client, use an integration test."
msgstr ""
"Se quiser testar sua biblioteca como um cliente, use um teste de integra√ß√£o."

#: src/testing/other.md:7
msgid "Create a `.rs` file under `tests/`:"
msgstr "Crie um arquivo `.rs` em `tests/`:"

#: src/testing/other.md:10
msgid "// tests/my_library.rs\n"
msgstr "// tests/my_library.rs\n"

#: src/testing/other.md:19
msgid "These tests only have access to the public API of your crate."
msgstr "Esses testes t√™m acesso somente √† API p√∫blica do seu crate."

#: src/testing/other.md:21
msgid "Documentation Tests"
msgstr "Testes de Documenta√ß√£o"

#: src/testing/other.md:23
msgid "Rust has built-in support for documentation tests:"
msgstr "Rust tem suporte embutido para testes de documenta√ß√£o:"

#: src/testing/other.md:26
msgid ""
"/// Shortens a string to the given length.\n"
"///\n"
"/// ```\n"
"/// # use playground::shorten_string;\n"
"/// assert_eq!(shorten_string(\"Hello World\", 5), \"Hello\");\n"
"/// assert_eq!(shorten_string(\"Hello World\", 20), \"Hello World\");\n"
"/// ```\n"
msgstr ""
"/// Reduz uma string para o comprimento fornecido.\n"
"///\n"
"/// ```\n"
"/// # use playground::shorten_string;\n"
"/// assert_eq!(shorten_string(\"Hello World\", 5), \"Hello\");\n"
"/// assert_eq!(shorten_string(\"Hello World\", 20), \"Hello World\");\n"
"/// ```\n"

#: src/testing/other.md:38
msgid "Code blocks in `///` comments are automatically seen as Rust code."
msgstr ""
"Blocos de c√≥digo em coment√°rios `///` s√£o vistos automaticamente como c√≥digo "
"Rust."

#: src/testing/other.md:39
msgid "The code will be compiled and executed as part of `cargo test`."
msgstr "O c√≥digo ser√° compilado e executado como parte do `cargo test`."

#: src/testing/other.md:40
msgid ""
"Adding `#` in the code will hide it from the docs, but will still compile/"
"run it."
msgstr ""
"Adicionar `#` no c√≥digo o ocultar√° da documenta√ß√£o, mas ainda o compilar√°/"
"executar√°."

#: src/testing/other.md:42
msgid ""
"Test the above code on the [Rust Playground](https://play.rust-lang.org/?"
"version=stable&mode=debug&edition=2021&gist=3ce2ad13ea1302f6572cb15cd96becf0)."
msgstr ""
"Teste o c√≥digo acima no [Rust Playground](https://play.rust-lang.org/?"
"version=stable&mode=debug&edition=2021&gist=3ce2ad13ea1302f6572cb15cd96becf0)."

#: src/testing/useful-crates.md:3
msgid "Rust comes with only basic support for writing tests."
msgstr "Rust possui apenas suporte b√°sico para escrever testes."

#: src/testing/useful-crates.md:5
msgid "Here are some additional crates which we recommend for writing tests:"
msgstr ""
"Estes s√£o alguns _crates_ adicionais que recomendamos para a escrita de "
"testes:"

#: src/testing/useful-crates.md:7
msgid ""
"[googletest](https://docs.rs/googletest): Comprehensive test assertion "
"library in the tradition of GoogleTest for C++."
msgstr ""
"[googletest](https://docs.rs/googletest): Biblioteca abrangente para testes "
"de assertividade na tradi√ß√£o de GoogleTest para C++."

#: src/testing/useful-crates.md:9
msgid "[proptest](https://docs.rs/proptest): Property-based testing for Rust."
msgstr ""
"[proptest](https://docs.rs/proptest): Testes baseados em propriedades para "
"Rust."

#: src/testing/useful-crates.md:10
msgid ""
"[rstest](https://docs.rs/rstest): Support for fixtures and parameterised "
"tests."
msgstr ""
"[rstest](https://docs.rs/rstest): Suporte para testes parametrizados e "
"acess√≥rios."

#: src/testing/googletest.md:3
msgid ""
"The [GoogleTest](https://docs.rs/googletest/) crate allows for flexible test "
"assertions using _matchers_:"
msgstr ""
"O _crate_ [GoogleTest](https://docs.rs/googletest/) permite assertividade de "
"testes flex√≠vel usando _matchers_ (correspondentes):"

#: src/testing/googletest.md:11
msgid "\"baz\""
msgstr "\"baz\""

#: src/testing/googletest.md:12
msgid "\"xyz\""
msgstr "\"xyz\""

#: src/testing/googletest.md:16
msgid ""
"If we change the last element to `\"!\"`, the test fails with a structured "
"error message pin-pointing the error:"
msgstr ""
"Se mudarmos o √∫ltimo elemento para `\"!\"`, o teste falha com uma mensagem "
"de erro estruturada apontando o erro:"

#: src/testing/googletest.md:36
msgid ""
"GoogleTest is not part of the Rust Playground, so you need to run this "
"example in a local environment. Use `cargo add googletest` to quickly add it "
"to an existing Cargo project."
msgstr ""
"GoogleTest n√£o faz parte do _playground_ do Rust, ent√£o voc√™ precisa "
"executar este exemplo em um ambiente local. Use `cargo add googletest` para "
"adicion√°-lo rapidamente a um projeto Cargo existente."

#: src/testing/googletest.md:40
msgid ""
"The `use googletest::prelude::*;` line imports a number of [commonly used "
"macros and types](https://docs.rs/googletest/latest/googletest/prelude/index."
"html)."
msgstr ""
"A linha `use googletest::prelude::*;` importa uma s√©rie de [macros e tipos "
"comumente usados](https://docs.rs/googletest/latest/googletest/prelude/index."
"html)."

#: src/testing/googletest.md:43
msgid "This just scratches the surface, there are many builtin matchers."
msgstr "Isso apenas arranha a superf√≠cie, h√° muitos _matchers_ embutidos."

#: src/testing/googletest.md:45
msgid ""
"A particularly nice feature is that mismatches in multi-line strings strings "
"are shown as a diff:"
msgstr ""
"Uma caracter√≠stica particularmente agrad√°vel √© que as diferen√ßas em strings "
"de v√°rias linhas s√£o mostradas como uma diferen√ßa:"

#: src/testing/googletest.md:51
msgid ""
"\"Memory safety found,\\n\\\n"
"                 Rust's strong typing guides the way,\\n\\\n"
"                 Secure code you'll write.\""
msgstr ""
"\"Memory safety found,\\n\\\n"
"                 Rust's strong typing guides the way,\\n\\\n"
"                 Secure code you'll write.\""

#: src/testing/googletest.md:56
msgid ""
"\"Memory safety found,\\n\\\n"
"            Rust's silly humor guides the way,\\n\\\n"
"            Secure code you'll write.\""
msgstr ""

#: src/testing/googletest.md:63
msgid "shows a color-coded diff (colors not shown here):"
msgstr "mostra uma diferen√ßa usando cores (n√£o mostradas aqui):"

#: src/testing/googletest.md:80
msgid ""
"The crate is a Rust port of [GoogleTest for C++](https://google.github.io/"
"googletest/)."
msgstr ""
"O _crate_ √© uma tradu√ß√£o para Rust do [GoogleTest para C++](https://google."
"github.io/googletest/)."

#: src/testing/googletest.md:85
msgid "GoogleTest is available for use in AOSP."
msgstr "GoogleTest est√° dispon√≠vel para uso no AOSP."

#: src/testing/mocking.md:3
msgid ""
"For mocking, [Mockall](https://docs.rs/mockall/) is a widely used library. "
"You need to refactor your code to use traits, which you can then quickly "
"mock:"
msgstr ""
"Para _mocking_, [Mockall](https://docs.rs/mockall/) √© uma biblioteca muito "
"usada. Voc√™ precisa refatorar seu c√≥digo para usar _traits_, que voc√™ pode "
"ent√£o rapidamente _\"mockar\"_:"

#: src/testing/mocking.md:26
msgid ""
"The advice here is for Android (AOSP) where Mockall is the recommended "
"mocking library. There are other [mocking libraries available on crates.io]"
"(https://crates.io/keywords/mock), in particular in the area of mocking HTTP "
"services. The other mocking libraries work in a similar fashion as Mockall, "
"meaning that they make it easy to get a mock implementation of a given trait."
msgstr ""
"O conselho aqui √© para Android (AOSP), onde Mockall √© a biblioteca de "
"_mocking_ recomendada. Existem outras [bibliotecas de _mocking_ dispon√≠veis "
"em crates.io](https://crates.io/keywords/mock), em particular na √°rea de "
"_mocking_ de servi√ßos HTTP. As outras bibliotecas de _mocking_ funcionam de "
"maneira semelhante ao Mockall, o que significa que elas facilitam a "

#: src/testing/mocking.md:33
msgid ""
"Note that mocking is somewhat _controversial_: mocks allow you to completely "
"isolate a test from its dependencies. The immediate result is faster and "
"more stable test execution. On the other hand, the mocks can be configured "
"wrongly and return output different from what the real dependencies would do."
msgstr ""
"Observe que o _mocking_ √© um tanto _controverso_: _mocks_ permitem que voc√™ "
"isole completamente um teste de suas depend√™ncias. O resultado imediato √© "
"uma execu√ß√£o de teste mais r√°pida e est√°vel. Por outro lado, os _mocks_ "
"podem ser configurados incorretamente e retornar uma sa√≠da diferente daquela "
"que as depend√™ncias reais fariam."

#: src/testing/mocking.md:38
msgid ""
"If at all possible, it is recommended that you use the real dependencies. As "
"an example, many databases allow you to configure an in-memory backend. This "
"means that you get the correct behavior in your tests, plus they are fast "
"and will automatically clean up after themselves."
msgstr ""
"Se poss√≠vel, √© recomend√°vel que voc√™ use as depend√™ncias reais. Como "
"exemplo, muitos bancos de dados permitem que voc√™ configure um _backend_ em "
"mem√≥ria. Isso significa que voc√™ obt√©m o comportamento correto em seus "
"testes, al√©m de serem r√°pidos e limparem automaticamente ap√≥s si mesmos."

#: src/testing/mocking.md:43
msgid ""
"Similarly, many web frameworks allow you to start an in-process server which "
"binds to a random port on `localhost`. Always prefer this over mocking away "
"the framework since it helps you test your code in the real environment."
msgstr ""
"Da mesma forma, muitos _frameworks_ da web permitem que voc√™ inicie um "
"servidor em processo que se vincula a uma porta aleat√≥ria em `localhost`. "
"Sempre prefira isso a _mockar_ o _framework_ pois isso ajuda voc√™ a testar "
"seu c√≥digo no ambiente real."

#: src/testing/mocking.md:47
msgid ""
"Mockall is not part of the Rust Playground, so you need to run this example "
"in a local environment. Use `cargo add mockall` to quickly add Mockall to an "
"existing Cargo project."
msgstr ""
"Mockall n√£o faz parte do _playground_ do Rust, ent√£o voc√™ precisa executar "
"este exemplo em um ambiente local. Use `cargo add mockall` para adicionar "
"rapidamente o Mockall a um projeto Cargo existente."

#: src/testing/mocking.md:51
msgid ""
"Mockall has a lot more functionality. In particular, you can set up "
"expectations which depend on the arguments passed. Here we use this to mock "
"a cat which becomes hungry 3 hours after the last time it was fed:"
msgstr ""
"Mockall tem muito mais funcionalidades. Em particular, voc√™ pode configurar "
"expectativas que dependem dos argumentos passados. Aqui usamos isso para "
"\"_mockar_\" um gato que fica com fome 3 horas ap√≥s a √∫ltima vez que foi "

#: src/testing/mocking.md:69
msgid ""
"You can use `.times(n)` to limit the number of times a mock method can be "
"called to `n` --- the mock will automatically panic when dropped if this "
"isn't satisfied."
msgstr ""
"Voc√™ pode usar `.times(n)` para limitar o n√∫mero de vezes que um m√©todo "
"_mock_ pode ser chamado para `n` --- o _mock_ automaticamente ir√° gerar um "
"p√¢nico quando descartado se isso n√£o for satisfeito."

#: src/testing/lints.md:3
msgid ""
"The Rust compiler produces fantastic error messages, as well as helpful "
"built-in lints. [Clippy](https://doc.rust-lang.org/clippy/) provides even "
"more lints, organized into groups that can be enabled per-project."
msgstr ""
"O compilador Rust produz mensagens de erro fant√°sticas, bem como alertas/"
"lints √∫teis embutidos. [Clippy](https://doc.rust-lang.org/clippy/) fornece "
"ainda mais lints, organizados em grupos que podem ser habilitados por "
"projeto."

#: src/testing/lints.md:14
msgid "\"X probably fits in a u16, right? {}\""
msgstr "\"X provavelmente cabe em um u16, certo? {}\""

#: src/testing/lints.md:20
msgid ""
"Run the code sample and examine the error message. There are also lints "
"visible here, but those will not be shown once the code compiles. Switch to "
"the Playground site to show those lints."
msgstr ""
"Execute o exemplo de c√≥digo e examine a mensagem de erro. Existem tamb√©m "
"alertas/lints vis√≠veis aqui, mas esses n√£o ser√£o mostrados uma vez que o "
"c√≥digo seja compilado. Mude para o site do _Playground_ para mostrar esses "
"lints."

#: src/testing/lints.md:24
msgid ""
"After resolving the lints, run `clippy` on the playground site to show "
"clippy warnings. Clippy has extensive documentation of its lints, and adds "
"new lints (including default-deny lints) all the time."
msgstr ""
"Depois de resolver os lints, execute `clippy` no site do _playground_ para "
"mostrar alertas/lints do clippy. Clippy tem uma extensa documenta√ß√£o de seus "
"lints, e adiciona novos lints (incluindo lints de nega√ß√£o padr√£o) o tempo "
"todo."

#: src/testing/lints.md:28
msgid ""
"Note that errors or warnings with `help: ...` can be fixed with `cargo fix` "
"or via your editor."
msgstr ""
"Observe que erros ou alertas/lints com `help: ...` podem ser corrigidos com "
"`cargo fix` ou via seu editor."

#: src/testing/exercise.md:3
msgid "Luhn Algorithm"
msgstr "Algoritmo de Luhn"

#: src/testing/exercise.md:5
msgid ""
"The [Luhn algorithm](https://en.wikipedia.org/wiki/Luhn_algorithm) is used "
"to validate credit card numbers. The algorithm takes a string as input and "
"does the following to validate the credit card number:"
msgstr ""
"O [algoritmo de Luhn](https://en.wikipedia.org/wiki/Luhn_algorithm) √© usado "
"para validar n√∫meros de cart√£o de cr√©dito. O algoritmo recebe uma string "
"como entrada e faz o seguinte para validar o n√∫mero do cart√£o de cr√©dito:"

#: src/testing/exercise.md:9
msgid "Ignore all spaces. Reject number with less than two digits."
msgstr "Ignore todos os espa√ßos. Rejeite n√∫mero com menos de dois d√≠gitos."

#: src/testing/exercise.md:11
msgid ""
"Moving from **right to left**, double every second digit: for the number "
"`1234`, we double `3` and `1`. For the number `98765`, we double `6` and `8`."
msgstr ""
"Movendo-se da **direita para a esquerda**, dobre cada segundo d√≠gito: para o "
"n√∫mero `1234`, dobramos `3` e `1`. Para o n√∫mero `98765`, dobramos `6` e `8`."

#: src/testing/exercise.md:14
msgid ""
"After doubling a digit, sum the digits if the result is greater than 9. So "
"doubling `7` becomes `14` which becomes `1 + 4 = 5`."
msgstr ""
"Depois de dobrar um d√≠gito, some os d√≠gitos se o resultado for maior que 9. "
"Ent√£o, dobrar `7` se torna `14` que se torna `1 + 4 = 5`."

#: src/testing/exercise.md:17
msgid "Sum all the undoubled and doubled digits."
msgstr "Some todos os d√≠gitos, dobrados ou n√£o."

#: src/testing/exercise.md:19
msgid "The credit card number is valid if the sum ends with `0`."
msgstr "O n√∫mero do cart√£o de cr√©dito √© v√°lido se a soma terminar em `0`."

#: src/testing/exercise.md:21
msgid ""
"The provided code provides a buggy implementation of the luhn algorithm, "
"along with two basic unit tests that confirm that most the algorithm is "
"implemented correctly."
msgstr ""
"O c√≥digo fornecido fornece uma implementa√ß√£o com bugs do algoritmo de Luhn, "
"junto com dois testes unit√°rios b√°sicos que confirmam que a maior parte do "
"algoritmo √© implementada corretamente."

#: src/testing/exercise.md:25
#, fuzzy
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and write additional "
"tests to uncover bugs in the provided implementation, fixing any bugs you "
"find."
msgstr ""
"Copie o c√≥digo abaixo para <https://play.rust-lang.org/> e escreva testes "
"adicionais para descobrir bugs na implementa√ß√£o fornecida, corrigindo "
"qualquer bug que voc√™ encontrar."

#: src/testing/exercise.md:57 src/testing/solution.md:69
msgid "\"4263 9826 4026 9299\""
msgstr "\"4263 9826 4026 9299\""

#: src/testing/exercise.md:58 src/testing/solution.md:70
msgid "\"4539 3195 0343 6467\""
msgstr "\"4539 3195 0343 6467\""

#: src/testing/exercise.md:59 src/testing/solution.md:71
msgid "\"7992 7398 713\""
msgstr "\"7992 7398 713\""

#: src/testing/exercise.md:64 src/testing/solution.md:76
msgid "\"4223 9826 4026 9299\""
msgstr "\"4223 9826 4026 9299\""

#: src/testing/exercise.md:65 src/testing/solution.md:77
msgid "\"4539 3195 0343 6476\""
msgstr "\"4539 3195 0343 6476\""

#: src/testing/exercise.md:66 src/testing/solution.md:78
msgid "\"8273 1232 7352 0569\""
msgstr "\"8273 1232 7352 0569\""

#: src/testing/solution.md:4
msgid "// This is the buggy version that appears in the problem.\n"
msgstr "// Esta √© a vers√£o com bugs que aparece no problema.\n"

#: src/testing/solution.md:27
msgid "// This is the solution and passes all of the tests below.\n"
msgstr "// Esta √© a solu√ß√£o e passa em todos os testes abaixo.\n"

#: src/testing/solution.md:56
msgid "\"1234 5678 1234 5670\""
msgstr "\"1234 5678 1234 5670\""

#: src/testing/solution.md:58
msgid "\"Is {cc_number} a valid credit card number? {}\""
msgstr "\"O n√∫mero do cart√£o de cr√©dito {cc_number} √© v√°lido? {}\""

#: src/testing/solution.md:59
msgid "\"yes\""
msgstr "\"sim\""

#: src/testing/solution.md:59
msgid "\"no\""
msgstr "\"n√£o\""

#: src/testing/solution.md:84
msgid "\"foo 0 0\""
msgstr "\"foo 0 0 \""

#: src/testing/solution.md:90
msgid "\" \""
msgstr "\" \""

#: src/testing/solution.md:91
msgid "\"  \""
msgstr "\"  \""

#: src/testing/solution.md:92
msgid "\"    \""
msgstr "\"    \""

#: src/testing/solution.md:97
msgid "\"0\""
msgstr "\"0\""

#: src/testing/solution.md:102
msgid "\" 0 0 \""
msgstr "\" 0 0 \""

#: src/error-handling/panics.md:3
msgid "Rust handles fatal errors with a \"panic\"."
msgstr "Rust lida com erros fatais com um \"p√¢nico\"."

#: src/error-handling/panics.md:5
msgid "Rust will trigger a panic if a fatal error happens at runtime:"
msgstr ""
"O Rust ir√° disparar um _panic_ (p√¢nico) se um erro fatal ocorrer em tempo de "
"execu√ß√£o:"

#: src/error-handling/panics.md:10
msgid "\"v[100]: {}\""
msgstr "\"v[100]: {}\""

#: src/error-handling/panics.md:14
msgid "Panics are for unrecoverable and unexpected errors."
msgstr "_P√¢nicos_ s√£o para erros irrecuper√°veis e inesperados."

#: src/error-handling/panics.md:15
msgid "Panics are symptoms of bugs in the program."
msgstr "P√¢nicos s√£o sintomas de bugs no programa."

#: src/error-handling/panics.md:16
msgid "Runtime failures like failed bounds checks can panic"
msgstr ""
"Falhas em tempo de execu√ß√£o como verifica√ß√µes de limites falhadas podem "
"disparar um p√¢nico"

#: src/error-handling/panics.md:17
msgid "Assertions (such as `assert!`) panic on failure"
msgstr "Asser√ß√µes (como `assert!`) disparam um p√¢nico em caso de falha"

#: src/error-handling/panics.md:18
msgid "Purpose-specific panics can use the `panic!` macro."
msgstr "P√¢nicos com moticos espec√≠ficos podem usar a macro `panic!`."

#: src/error-handling/panics.md:19
msgid ""
"A panic will \"unwind\" the stack, dropping values just as if the functions "
"had returned."
msgstr ""
"Um p√¢nico ir√° \"desenrolar\" a pilha, descartando valores como se as fun√ß√µes "
"tivessem retornado."

#: src/error-handling/panics.md:21
msgid ""
"Use non-panicking APIs (such as `Vec::get`) if crashing is not acceptable."
msgstr ""
"Use APIs que n√£o disparam erros do tipo _p√¢nico_ (como `Vec::get`) se n√£o "
"for aceit√°vel o travamento do programa."

#: src/error-handling/panics.md:25
msgid ""
"By default, a panic will cause the stack to unwind. The unwinding can be "
"caught:"
msgstr ""
"Por padr√£o, um p√¢nico causar√° a _resolu√ß√£o_ da pilha. A resolu√ß√£o pode ser "
"capturada:"

#: src/error-handling/panics.md:31
msgid "\"No problem here!\""
msgstr "\"Nenhum problema aqui!\""

#: src/error-handling/panics.md:32 src/error-handling/panics.md:37
msgid "\"{result:?}\""
msgstr "\"{result:?}\""

#: src/error-handling/panics.md:35
msgid "\"oh no!\""
msgstr "\"ah n√£o!\""

#: src/error-handling/panics.md:41
msgid ""
"Catching is unusual; do not attempt to implement exceptions with "
"`catch_unwind`!"
msgstr "Capturar √© incomum; n√£o tente implementar exce√ß√µes com `catch_unwind`!"

#: src/error-handling/panics.md:43
msgid ""
"This can be useful in servers which should keep running even if a single "
"request crashes."
msgstr ""
"Isso pode ser √∫til em servidores que devem continuar rodando mesmo se uma "
"requisi√ß√£o tenha falhado."

#: src/error-handling/panics.md:45
msgid "This does not work if `panic = 'abort'` is set in your `Cargo.toml`."
msgstr ""
"Isso n√£o funciona se `panic = 'abort'` estiver definido em seu `Cargo.toml`."

#: src/error-handling/try.md:3
msgid ""
"Runtime errors like connection-refused or file-not-found are handled with "
"the `Result` type, but matching this type on every call can be cumbersome. "
"The try-operator `?` is used to return errors to the caller. It lets you "
"turn the common"
msgstr ""
"Erros em tempo de execu√ß√£o como conex√£o recusada ou arquivo n√£o encontrado "
"s√£o tratados com o tipo `Result`, mas combinar esse tipo em cada chamada "
"pode ser complicado. O operador `?` √© usado para retornar erros ao chamador. "
"Ele permite que voc√™ transforme o comum"

#: src/error-handling/try.md:15
msgid "into the much simpler"
msgstr "no muito mais simples"

#: src/error-handling/try.md:21
msgid "We can use this to simplify our error handling code:"
msgstr ""
"Podemos usar isso para simplificar nosso c√≥digo de tratamento de erros:"

#: src/error-handling/try.md:42
msgid "//fs::write(\"config.dat\", \"alice\").unwrap();\n"
msgstr "//fs::write(\"config.dat\", \"alice\").unwrap();\n"

#: src/error-handling/try.md:43 src/error-handling/try-conversions.md:65
#: src/error-handling/thiserror-and-anyhow.md:33
msgid "\"config.dat\""
msgstr "\"config.dat\""

#: src/error-handling/try.md:44 src/error-handling/try-conversions.md:66
msgid "\"username or error: {username:?}\""
msgstr "\"username ou erro: {username:?}\""

#: src/error-handling/try.md:50
msgid "Simplify the `read_username` function to use `?`."
msgstr "Simplifique a fun√ß√£o `read_username` para usar `?`."

#: src/error-handling/try.md:54
msgid "The `username` variable can be either `Ok(string)` or `Err(error)`."
msgstr "A vari√°vel `username` pode ser `Ok(string)` ou `Err(error)`."

#: src/error-handling/try.md:55
msgid ""
"Use the `fs::write` call to test out the different scenarios: no file, empty "
"file, file with username."
msgstr ""
"Use a chamada `fs::write` para testar os diferentes cen√°rios: nenhum "
"arquivo, arquivo vazio e arquivo com nome de usu√°rio."

#: src/error-handling/try.md:57
msgid ""
"Note that `main` can return a `Result<(), E>` as long as it implements `std::"
"process:Termination`. In practice, this means that `E` implements `Debug`. "
"The executable will print the `Err` variant and return a nonzero exit status "
"on error."
msgstr ""
"Observe que `main` pode retornar um `Result<(), E>` desde que implemente "
"`std::process:Termination`. Na pr√°tica, isso significa que `E` implementa "
"`Debug`. O execut√°vel imprimir√° a variante `Err` e retornar√° um status de "
"sa√≠da diferente de zero em caso de erro."

#: src/error-handling/try-conversions.md:3
msgid ""
"The effective expansion of `?` is a little more complicated than previously "
"indicated:"
msgstr ""
"A expans√£o efetiva do operador `?` √© um pouco mais complicada do que "
"indicado anteriormente:"

#: src/error-handling/try-conversions.md:10
msgid "works the same as"
msgstr "funciona da mesma forma que"

#: src/error-handling/try-conversions.md:19
msgid ""
"The `From::from` call here means we attempt to convert the error type to the "
"type returned by the function. This makes it easy to encapsulate errors into "
"higher-level errors."
msgstr ""
"A chamada `From::from` aqui significa que tentamos converter o tipo de erro "
"para o tipo retornado pela fun√ß√£o. Isso torna f√°cil encapsular erros em "
"erros de n√≠vel superior."

#: src/error-handling/try-conversions.md:42
msgid "\"IO error: {e}\""
msgstr "\"Erro E/S: {e}\""

#: src/error-handling/try-conversions.md:43
msgid "\"Found no username in {path}\""
msgstr "\"Nome de usu√°rio n√£o encontrado em {path}\""

#: src/error-handling/try-conversions.md:64
#: src/error-handling/thiserror-and-anyhow.md:32
msgid "//fs::write(\"config.dat\", \"\").unwrap();\n"
msgstr "//fs::write(\"config.dat\", \"\").unwrap();\n"

#: src/error-handling/try-conversions.md:72
msgid ""
"The `?` operator must return a value compatible with the return type of the "
"function. For `Result`, it means that the error types have to be compatible. "
"A function that returns `Result<T, ErrorOuter>` can only use `?` on a value "
"of type `Result<U, ErrorInner>` if `ErrorOuter` and `ErrorInner` are the "
"same type or if `ErrorOuter` implements `From<ErrorInner>`."
msgstr ""
"O operador `?` deve retornar um valor compat√≠vel com o tipo de retorno da "
"fun√ß√£o. Para `Result`, isso significa que os tipos de erro devem ser "
"compat√≠veis. Uma fun√ß√£o que retorna `Result<T, ErrorOuter>` s√≥ pode usar `?` "
"em um valor do tipo `Result<U, ErrorInner>` se `ErrorOuter` e `ErrorInner` "
"forem do mesmo tipo ou se `ErrorOuter` implementar `From<ErrorInner>`."

#: src/error-handling/try-conversions.md:78
msgid ""
"A common alternative to a `From` implementation is `Result::map_err`, "
"especially when the conversion only happens in one place."
msgstr ""
"Uma alternativa comum a uma implementa√ß√£o `From` √© `Result::map_err`, "
"especialmente quando a convers√£o ocorre apenas em um local."

#: src/error-handling/try-conversions.md:81
msgid ""
"There is no compatibility requirement for `Option`. A function returning "
"`Option<T>` can use the `?` operator on `Option<U>` for arbitrary `T` and "
"`U` types."
msgstr ""
"N√£o h√° requisito de compatibilidade para `Option`. Uma fun√ß√£o que retorna "
"`Option<T>` pode usar o operador `?` em `Option<U>` para tipos `T` e `U` "
"arbitr√°rios."

#: src/error-handling/try-conversions.md:85
msgid ""
"A function that returns `Result` cannot use `?` on `Option` and vice versa. "
"However, `Option::ok_or` converts `Option` to `Result` whereas `Result::ok` "
"turns `Result` into `Option`."
msgstr ""
"Uma fun√ß√£o que retorna `Result` n√£o pode usar `?` em `Option` e vice-versa. "
"No entanto, `Option::ok_or` converte `Option` em `Result`, enquanto `Result::"
"ok` transforma `Result` em `Option`."

#: src/error-handling/error.md:1
msgid "Dynamic Error Types"
msgstr "Tipos de Erros Din√¢micos"

#: src/error-handling/error.md:3
msgid ""
"Sometimes we want to allow any type of error to be returned without writing "
"our own enum covering all the different possibilities. The `std::error::"
"Error` trait makes it easy to create a trait object that can contain any "
"error."
msgstr ""
"√Äs vezes, queremos permitir que qualquer tipo de erro seja retornado sem "
"escrever nosso pr√≥prio enum cobrindo todas as possibilidades diferentes. O "
"_trait_ `std::error::Error` torna f√°cil criar um objeto _trait_ que pode "
"conter qualquer erro."

#: src/error-handling/error.md:20 src/error-handling/error.md:21
msgid "\"count.dat\""
msgstr "\"count.dat\""

#: src/error-handling/error.md:20
msgid "\"1i3\""
msgstr "\"1i3\""

#: src/error-handling/error.md:22
msgid "\"Count: {count}\""
msgstr "\"Contagem: {count}\""

#: src/error-handling/error.md:23
msgid "\"Error: {err}\""
msgstr "\"Erro: {err}\""

#: src/error-handling/error.md:30
msgid ""
"The `read_count` function can return `std::io::Error` (from file operations) "
"or `std::num::ParseIntError` (from `String::parse`)."
msgstr ""
"A fun√ß√£o `read_count` pode retornar `std::io::Error` (de opera√ß√µes de "
"arquivo) ou `std::num::ParseIntError` (de `String::parse`)."

#: src/error-handling/error.md:33
msgid ""
"Boxing errors saves on code, but gives up the ability to cleanly handle "
"different error cases differently in the program. As such it's generally not "
"a good idea to use `Box<dyn Error>` in the public API of a library, but it "
"can be a good option in a program where you just want to display the error "
"message somewhere."
msgstr ""
"Encaixotar (_boxing_) erros economiza c√≥digo, mas sacrifica a capacidade de "
"lidar elegantemente com diferentes casos de erro de forma individualizada no "
"programa. Como tal, geralmente n√£o √© uma boa ideia usar `Box<dyn Error>` na "
"API p√∫blica de uma biblioteca, mas pode ser uma boa op√ß√£o em um programa "
"onde voc√™ s√≥ quer exibir a mensagem de erro em algum lugar."

#: src/error-handling/error.md:39
msgid ""
"Make sure to implement the `std::error::Error` trait when defining a custom "
"error type so it can be boxed. But if you need to support the `no_std` "
"attribute, keep in mind that the `std::error::Error` trait is currently "
"compatible with `no_std` in [nightly](https://github.com/rust-lang/rust/"
"issues/103765) only."
msgstr ""
"Certifique-se de implementar o _trait_ `std::error::Error` ao definir um "
"tipo de erro personalizado para que ele possa ser encaixotado. Mas se voc√™ "
"precisa suportar o atributo `no_std`, tenha em mente que o _trait_ `std."
"error::Error` √© atualmente compat√≠vel com `no_std` apenas em [nightly]"
"(https://github.com/rust-lang/rust/issues/103765)."

#: src/error-handling/thiserror-and-anyhow.md:3
msgid ""
"The [`thiserror`](https://docs.rs/thiserror/) and [`anyhow`](https://docs.rs/"
"anyhow/) crates are widely used to simplify error handling. `thiserror` "
"helps create custom error types that implement `From<T>`. `anyhow` helps "
"with error handling in functions, including adding contextual information to "
"your errors."
msgstr ""
"Os _crates_ [`thiserror`](https://docs.rs/thiserror/) e [`anyhow`](https://"
"docs.rs/anyhow/) s√£o amplamente utilizados para simplificar o tratamento de "
"erros. `thiserror` ajuda a criar tipos de erro personalizados que "
"implementam `From<T>`. `anyhow` ajuda no tratamento de erros em fun√ß√µes, "
"incluindo a adi√ß√£o de informa√ß√µes contextuais aos seus erros."

#: src/error-handling/thiserror-and-anyhow.md:16
msgid "\"Found no username in {0}\""
msgstr "\"Nome de usu√°rio n√£o encontrado em {0}\""

#: src/error-handling/thiserror-and-anyhow.md:22
msgid "\"Failed to open {path}\""
msgstr "\"Falha ao abrir {path}\""

#: src/error-handling/thiserror-and-anyhow.md:24
msgid "\"Failed to read\""
msgstr "\"Falha ao ler\""

#: src/error-handling/thiserror-and-anyhow.md:34
msgid "\"Username: {username}\""
msgstr "\"Nome do usu√°rio: {username}\""

#: src/error-handling/thiserror-and-anyhow.md:35
msgid "\"Error: {err:?}\""
msgstr "\"Erro: {err:?}\""

#: src/error-handling/thiserror-and-anyhow.md:42
msgid "`thiserror`"
msgstr "`thiserror`"

#: src/error-handling/thiserror-and-anyhow.md:44
msgid ""
"The `Error` derive macro is provided by `thiserror`, and has lots of useful "
"attributes to help define error types in a compact way."
msgstr ""
"A macro `Error` √© fornecida por `thiserror` e possui v√°rios atributos √∫teis "
"para ajudar a definir tipos de erro de forma compacta."

#: src/error-handling/thiserror-and-anyhow.md:46
msgid "The `std::error::Error` trait is derived automatically."
msgstr "O _trait_ `std::error::Error` √© derivado automaticamente."

#: src/error-handling/thiserror-and-anyhow.md:47
msgid "The message from `#[error]` is used to derive the `Display` trait."
msgstr "A mensagem de `#[error]` √© usada para derivar o _trait_ `Display`."

#: src/error-handling/thiserror-and-anyhow.md:49
msgid "`anyhow`"
msgstr "`anyhow`"

#: src/error-handling/thiserror-and-anyhow.md:51
msgid ""
"`anyhow::Error` is essentially a wrapper around `Box<dyn Error>`. As such "
"it's again generally not a good choice for the public API of a library, but "
"is widely used in applications."
msgstr ""
"`anyhow::Error` √© essencialmente um wrapper em torno de `Box<dyn Error>`. "
"Como tal, geralmente n√£o √© uma boa escolha para a API p√∫blica de uma "
"biblioteca, mas √© amplamente utilizado em aplica√ß√µes."

#: src/error-handling/thiserror-and-anyhow.md:54
msgid "`anyhow::Result<V>` is a type alias for `Result<V, anyhow::Error>`."
msgstr ""
"`anyhow::Result<V>` √© um _alias_ de tipo para `Result<V, anyhow::Error>`."

#: src/error-handling/thiserror-and-anyhow.md:55
msgid ""
"Actual error type inside of it can be extracted for examination if necessary."
msgstr ""
"O tipo de erro real dentro dele pode ser extra√≠do para exame, se necess√°rio."

#: src/error-handling/thiserror-and-anyhow.md:56
msgid ""
"Functionality provided by `anyhow::Result<T>` may be familiar to Go "
"developers, as it provides similar usage patterns and ergonomics to `(T, "
"error)` from Go."
msgstr ""
"A funcionalidade fornecida por `anyhow::Result<T>` pode ser familiar para "
"desenvolvedores Go, pois fornece padr√µes de uso e ergonomia semelhantes a "
"`(T, error)` de Go."

#: src/error-handling/thiserror-and-anyhow.md:59
msgid ""
"`anyhow::Context` is a trait implemented for the standard `Result` and "
"`Option` types. `use anyhow::Context` is necessary to enable `.context()` "
"and `.with_context()` on those types."
msgstr ""
"`anyhow::Context` √© um _trait_ implementado para os tipos padr√£o `Result` e "
"`Option`. `use anyhow::Context` √© necess√°rio para habilitar `.context()` e `."
"with_context()` nesses tipos."

#: src/error-handling/exercise.md:1
msgid "Exercise: Rewriting with Result"
msgstr "Exerc√≠cio: Reescrevendo com Result"

#: src/error-handling/exercise.md:3
msgid ""
"The following implements a very simple parser for an expression language. "
"However, it handles errors by panicking. Rewrite it to instead use idiomatic "
"error handling and propagate errors to a return from `main`. Feel free to "
"use `thiserror` and `anyhow`."
msgstr ""
"O seguinte implementa um analisador muito simples para uma linguagem de "
"express√£o. No entanto, ele lida com erros disparando um p√¢nico. Reescreva-o "
"para usar o tratamento de erros idiom√°tico e propagar erros para um retorno "
"de `main`. Sinta-se √† vontade para usar `thiserror` e `anyhow`."

#: src/error-handling/exercise.md:8
msgid ""
"HINT: start by fixing error handling in the `parse` function. Once that is "
"working correctly, update `Tokenizer` to implement "
"`Iterator<Item=Result<Token, TokenizerError>>` and handle that in the parser."
msgstr ""
"DICA: comece corrigindo o tratamento de erros na fun√ß√£o `parse`. Depois que "
"isso estiver funcionando corretamente, atualize `Tokenizer` para implementar "
"`Iterator<Item=Result<Token, TokenizerError>>` e trate isso no analisador "
"(_parser_)."

#: src/error-handling/exercise.md:15 src/error-handling/solution.md:9
msgid "/// An arithmetic operator.\n"
msgstr "/// Um operador aritm√©tico.\n"

#: src/error-handling/exercise.md:22 src/error-handling/solution.md:16
msgid "/// A token in the expression language.\n"
msgstr "/// Um token na linguagem de express√£o.\n"

#: src/error-handling/exercise.md:30 src/error-handling/solution.md:24
msgid "/// An expression in the expression language.\n"
msgstr "/// Uma express√£o na linguagem de express√£o.\n"

#: src/error-handling/exercise.md:34 src/error-handling/solution.md:28
msgid "/// A reference to a variable.\n"
msgstr "/// Uma refer√™ncia a uma vari√°vel.\n"

#: src/error-handling/exercise.md:36 src/error-handling/solution.md:30
msgid "/// A literal number.\n"
msgstr "/// Um n√∫mero literal.\n"

#: src/error-handling/exercise.md:38 src/error-handling/solution.md:32
msgid "/// A binary operation.\n"
msgstr "/// Uma opera√ß√£o bin√°ria.\n"

#: src/error-handling/exercise.md:62 src/error-handling/exercise.md:64
#: src/error-handling/solution.md:62 src/error-handling/solution.md:64
msgid "'z'"
msgstr "'z'"

#: src/error-handling/exercise.md:64 src/error-handling/solution.md:64
msgid "'_'"
msgstr "'_'"

#: src/error-handling/exercise.md:70 src/error-handling/solution.md:70
msgid "'+'"
msgstr "'+'"

#: src/error-handling/exercise.md:71 src/error-handling/solution.md:71
msgid "'-'"
msgstr "'-'"

#: src/error-handling/exercise.md:72
msgid "\"Unexpected character {c}\""
msgstr "\"Caractere inesperado {c}\""

#: src/error-handling/exercise.md:82 src/error-handling/solution.md:81
msgid "\"Unexpected end of input\""
msgstr "\"Fim de entrada inesperado\""

#: src/error-handling/exercise.md:86
msgid "\"Invalid 32-bit integer'\""
msgstr "\"Inteiro de 32 bits inv√°lido'\""

#: src/error-handling/exercise.md:90 src/error-handling/exercise.md:100
msgid "\"Unexpected token {tok:?}\""
msgstr "\"Token inesperado {tok:?}\""

#: src/error-handling/exercise.md:92 src/error-handling/solution.md:104
msgid "// Look ahead to parse a binary operation if present.\n"
msgstr "// Olhe adiante para analisar uma opera√ß√£o bin√°ria, se presente.\n"

#: src/error-handling/exercise.md:108 src/error-handling/solution.md:121
msgid "\"10+foo+20-30\""
msgstr "\"10+foo+20-30\""

#: src/error-handling/exercise.md:109 src/error-handling/solution.md:122
msgid "\"{expr:?}\""
msgstr "\"{expr:?}\""

#: src/error-handling/solution.md:42
msgid "\"Unexpected character '{0}' in input\""
msgstr "\"Caractere '{0}' inesperado na entrada\""

#: src/error-handling/solution.md:79
msgid "\"Tokenizer error: {0}\""
msgstr "\"Erro de tokenizador: {0}\""

#: src/error-handling/solution.md:83
msgid "\"Unexpected token {0:?}\""
msgstr "\"Token inesperado {0:?}\""

#: src/error-handling/solution.md:85
msgid "\"Invalid number\""
msgstr "\"N√∫mero inv√°lido\""

#: src/unsafe-rust/unsafe.md:3
msgid "The Rust language has two parts:"
msgstr "A linguagem Rust tem duas partes:"

#: src/unsafe-rust/unsafe.md:5
msgid "**Safe Rust:** memory safe, no undefined behavior possible."
msgstr ""
"**Rust Seguro (_Safe_):** mem√≥ria segura, nenhum comportamento indefinido √© "
"poss√≠vel."

#: src/unsafe-rust/unsafe.md:6
msgid ""
"**Unsafe Rust:** can trigger undefined behavior if preconditions are "
"violated."
msgstr ""
"**Rust Inseguro (_Unsafe_):** pode desencadear comportamento indefinido se "
"pr√©-condi√ß√µes forem violadas."

#: src/unsafe-rust/unsafe.md:8
msgid ""
"We saw mostly safe Rust in this course, but it's important to know what "
"Unsafe Rust is."
msgstr ""
"Veremos principalmente Rust seguro neste curso, mas √© importante saber o que "
"√© Rust inseguro."

#: src/unsafe-rust/unsafe.md:11
msgid ""
"Unsafe code is usually small and isolated, and its correctness should be "
"carefully documented. It is usually wrapped in a safe abstraction layer."
msgstr ""
"C√≥digo inseguro √© geralmente pequeno e isolado, e seu funcionamento correto "
"deve ser cuidadosamente documentado. Geralmente √© envolto em uma camada de "
"abstra√ß√£o segura."

#: src/unsafe-rust/unsafe.md:14
msgid "Unsafe Rust gives you access to five new capabilities:"
msgstr "O c√≥digo inseguro do Rust oferece acesso a cinco novos recursos:"

#: src/unsafe-rust/unsafe.md:16
msgid "Dereference raw pointers."
msgstr "Desreferenciar ponteiros brutos (_raw pointers_)."

#: src/unsafe-rust/unsafe.md:17
msgid "Access or modify mutable static variables."
msgstr "Acessar ou modificar vari√°veis est√°ticas mut√°veis."

#: src/unsafe-rust/unsafe.md:18
msgid "Access `union` fields."
msgstr "Acessar os campos de uma `union`."

#: src/unsafe-rust/unsafe.md:19
msgid "Call `unsafe` functions, including `extern` functions."
msgstr ""
"Chamar fun√ß√µes `unsafe` (inseguras), incluindo fun√ß√µes `extern` (externas)."

#: src/unsafe-rust/unsafe.md:20
msgid "Implement `unsafe` traits."
msgstr "Implementar _traits_ `unsafe`."

#: src/unsafe-rust/unsafe.md:22
msgid ""
"We will briefly cover unsafe capabilities next. For full details, please see "
"[Chapter 19.1 in the Rust Book](https://doc.rust-lang.org/book/ch19-01-"
"unsafe-rust.html) and the [Rustonomicon](https://doc.rust-lang.org/nomicon/)."
msgstr ""
"A seguir, abordaremos brevemente os recursos inseguros. Para detalhes "
"completos, consulte o [Cap√≠tulo 19.1 no Rust Book](https://doc.rust-lang.org/"
"book/ch19-01-unsafe-rust.html) e o [Rustonomicon](https://doc.rust-lang.org/"
"nomicon/)."

#: src/unsafe-rust/unsafe.md:28
msgid ""
"Unsafe Rust does not mean the code is incorrect. It means that developers "
"have turned off some compiler safety features and have to write correct code "
"by themselves. It means the compiler no longer enforces Rust's memory-safety "
"rules."
msgstr ""
"Rust inseguro n√£o significa que o c√≥digo esteja incorreto. Significa que os "
"desenvolvedores desligaram os recursos de seguran√ßa do compilador e precisam "
"escrever o c√≥digo corretamente por eles mesmos. Significa tamb√©m que o "
"compilador n√£o imp√µe mais as regras de seguran√ßa de mem√≥ria do Rust."

#: src/unsafe-rust/dereferencing.md:3
msgid "Creating pointers is safe, but dereferencing them requires `unsafe`:"
msgstr "Criar ponteiros √© seguro, mas desreferenci√°-los requer `unsafe`:"

#: src/unsafe-rust/dereferencing.md:7
msgid "\"careful!\""
msgstr "\"cuidado!\""

#: src/unsafe-rust/dereferencing.md:12
msgid ""
"// Safe because r1 and r2 were obtained from references and so are\n"
"    // guaranteed to be non-null and properly aligned, the objects "
"underlying\n"
"    // the references from which they were obtained are live throughout the\n"
"    // whole unsafe block, and they are not accessed either through the\n"
"    // references or concurrently through any other pointers.\n"
msgstr ""
"// Seguro porque r1 e r2 foram obtidos atrav√©s de refer√™ncias e logo √©\n"
"    // garantido que eles n√£o sejam nulos e sejam propriamente alinhados, os "
"objetos\n"
"    // cujas refer√™ncias foram obtidas s√£o v√°lidos por\n"
"    // todo o bloco inseguro, e eles n√£o sejam acessados tanto atrav√©s das\n"
"    // refer√™ncias ou concorrentemente atrav√©s de outros ponteiros.\n"

#: src/unsafe-rust/dereferencing.md:18
msgid "\"r1 is: {}\""
msgstr "\"r1 √©: {}\""

#: src/unsafe-rust/dereferencing.md:19
msgid "\"uhoh\""
msgstr "\"oh-oh\""

#: src/unsafe-rust/dereferencing.md:20
msgid "\"r2 is: {}\""
msgstr "\"r2 √©: {}\""

#: src/unsafe-rust/dereferencing.md:23
msgid ""
"// NOT SAFE. DO NOT DO THIS.\n"
"    /*\n"
"    let r3: &String = unsafe { &*r1 };\n"
"    drop(s);\n"
"    println!(\"r3 is: {}\", *r3);\n"
"    */"
msgstr ""
"// N√ÉO √â SEGURO. N√ÉO FA√áA ISSO.\n"
"    /*\n"
"    let r3: &String = unsafe { &*r1 };\n"
"    drop(s);\n"
"    println!(\"r3 √©: {}\", *r3);\n"
"    */"

#: src/unsafe-rust/dereferencing.md:34
msgid ""
"It is good practice (and required by the Android Rust style guide) to write "
"a comment for each `unsafe` block explaining how the code inside it "
"satisfies the safety requirements of the unsafe operations it is doing."
msgstr ""
"√â uma boa pr√°tica (e exigida pelo guia de estilo do Android Rust) escrever "
"um coment√°rio para cada bloco `unsafe` explicando como o c√≥digo dentro dele "
"satisfaz os requisitos de seguran√ßa para a opera√ß√£o insegura que est√° "
"fazendo."

#: src/unsafe-rust/dereferencing.md:38
msgid ""
"In the case of pointer dereferences, this means that the pointers must be "
"[_valid_](https://doc.rust-lang.org/std/ptr/index.html#safety), i.e.:"
msgstr ""
"No caso de desrefer√™ncia de ponteiros, isso significa que os ponteiros devem "
"ser [_v√°lidos_](https://doc.rust-lang.org/std/ptr/index.html#safety), ou "
"seja:"

#: src/unsafe-rust/dereferencing.md:41
msgid "The pointer must be non-null."
msgstr "O ponteiro deve ser n√£o nulo."

#: src/unsafe-rust/dereferencing.md:42
msgid ""
"The pointer must be _dereferenceable_ (within the bounds of a single "
"allocated object)."
msgstr ""
"O ponteiro deve ser _desreferenci√°vel_ (dentro dos limites de um √∫nico "
"objeto alocado)."

#: src/unsafe-rust/dereferencing.md:44
msgid "The object must not have been deallocated."
msgstr "O objeto n√£o deve ter sido desalocado."

#: src/unsafe-rust/dereferencing.md:45
msgid "There must not be concurrent accesses to the same location."
msgstr "N√£o deve haver acessos simult√¢neos √† mesma localiza√ß√£o."

#: src/unsafe-rust/dereferencing.md:46
msgid ""
"If the pointer was obtained by casting a reference, the underlying object "
"must be live and no reference may be used to access the memory."
msgstr ""
"Se o ponteiro foi obtido lan√ßando uma refer√™ncia, o objeto subjacente deve "
"estar v√°lido e nenhuma refer√™ncia pode ser usada para acessar a mem√≥ria."

#: src/unsafe-rust/dereferencing.md:49
msgid "In most cases the pointer must also be properly aligned."
msgstr ""
"Na maioria dos casos, o ponteiro tamb√©m deve estar alinhado corretamente."

#: src/unsafe-rust/dereferencing.md:51
msgid ""
"The \"NOT SAFE\" section gives an example of a common kind of UB bug: `*r1` "
"has the `'static` lifetime, so `r3` has type `&'static String`, and thus "
"outlives `s`. Creating a reference from a pointer requires _great care_."
msgstr ""
"A se√ß√£o \"N√ÉO √â SEGURO\" d√° um exemplo de um tipo comum de bug UB: `*r1` tem "
"o tempo de vida `'static`, ent√£o `r3` tem o tipo `&'static String`, e "
"portanto sobrevive a `s`. Criar uma refer√™ncia a partir de um ponteiro "
"requer _muito cuidado_."

#: src/unsafe-rust/mutable-static.md:3
msgid "It is safe to read an immutable static variable:"
msgstr "√â seguro ler uma vari√°vel est√°tica imut√°vel:"

#: src/unsafe-rust/mutable-static.md:6
msgid "\"Hello, world!\""
msgstr "\"Ol√°, mundo!\""

#: src/unsafe-rust/mutable-static.md:9
msgid "\"HELLO_WORLD: {HELLO_WORLD}\""
msgstr "\"HELLO_WORLD: {HELLO_WORLD}\""

#: src/unsafe-rust/mutable-static.md:13
msgid ""
"However, since data races can occur, it is unsafe to read and write mutable "
"static variables:"
msgstr ""
"No entanto, como podem ocorrer corridas de dados (_data races_), n√£o √© "
"seguro ler e gravar dados em vari√°veis est√°ticas mut√°veis:"

#: src/unsafe-rust/mutable-static.md:29
msgid "\"COUNTER: {COUNTER}\""
msgstr "\"COUNTER: {COUNTER}\""

#: src/unsafe-rust/mutable-static.md:36
msgid ""
"The program here is safe because it is single-threaded. However, the Rust "
"compiler is conservative and will assume the worst. Try removing the "
"`unsafe` and see how the compiler explains that it is undefined behavior to "
"mutate a static from multiple threads."
msgstr ""
"O programa aqui √© seguro porque √© _single-threaded_. No entanto, o "
"compilador Rust √© conservador e assumir√° o pior. Tente remover o `unsafe` e "
"veja como o compilador explica que √© um comportamento indefinido alterar uma "
"vari√°vel est√°tica de v√°rias _threads_."

#: src/unsafe-rust/mutable-static.md:41
msgid ""
"Using a mutable static is generally a bad idea, but there are some cases "
"where it might make sense in low-level `no_std` code, such as implementing a "
"heap allocator or working with some C APIs."
msgstr ""
"Usar uma vari√°vel est√°tica mut√°vel geralmente √© uma m√° ideia, mas h√° alguns "
"casos em que isso pode fazer sentido, tais como em c√≥digo `no_std` de baixo "
"n√≠vel, como implementar um alocador de heap ou trabalhar com algumas APIs C."

#: src/unsafe-rust/unions.md:3
msgid "Unions are like enums, but you need to track the active field yourself:"
msgstr ""
"_Unions_ s√£o como _enums_, mas voc√™ mesmo precisa rastrear o campo ativo:"

#: src/unsafe-rust/unions.md:14
msgid "\"int: {}\""
msgstr "\"int: {}\""

#: src/unsafe-rust/unions.md:15
msgid "\"bool: {}\""
msgstr "\"bool: {}\""

#: src/unsafe-rust/unions.md:15
msgid "// Undefined behavior!\n"
msgstr "// Comportamento indefinido!\n"

#: src/unsafe-rust/unions.md:21
msgid ""
"Unions are very rarely needed in Rust as you can usually use an enum. They "
"are occasionally needed for interacting with C library APIs."
msgstr ""
"_Unions_ raramente s√£o necess√°rias no Rust, pois geralmente voc√™ pode usar "
"um _enum_. Elas s√£o ocasionalmente necess√°rias para interagir com as APIs da "
"biblioteca C."

#: src/unsafe-rust/unions.md:24
msgid ""
"If you just want to reinterpret bytes as a different type, you probably want "
"[`std::mem::transmute`](https://doc.rust-lang.org/stable/std/mem/fn."
"transmute.html) or a safe wrapper such as the [`zerocopy`](https://crates.io/"
"crates/zerocopy) crate."
msgstr ""
"Se voc√™ deseja apenas reinterpretar os bytes como um tipo diferente, voc√™ "
"provavelmente deveria usar [`std::mem::transmute`](https://doc.rust-lang.org/"
"stable/std/mem/fn.transmute.html) ou um wrapper seguro como o _crate_ "
"[`zerocopy`](https://crates.io/crates/zerocopy)."

#: src/unsafe-rust/unsafe-functions.md:3 src/unsafe-rust/unsafe-functions.md:74
msgid "Calling Unsafe Functions"
msgstr "Chamando Fun√ß√µes Inseguras"

#: src/unsafe-rust/unsafe-functions.md:5
msgid ""
"A function or method can be marked `unsafe` if it has extra preconditions "
"you must uphold to avoid undefined behaviour:"
msgstr ""
"Uma fun√ß√£o ou m√©todo pode ser marcado como `unsafe` se houver pr√©-condi√ß√µes "
"extras que voc√™ deve respeitar para evitar comportamento indefinido:"

#: src/unsafe-rust/unsafe-functions.md:9 src/unsafe-rust/exercise.md:91
#: src/unsafe-rust/solution.md:41 src/android/interoperability/with-c.md:9
#: src/android/interoperability/with-c/rust.md:15
#: src/android/interoperability/with-c/rust.md:30
#: src/android/interoperability/cpp/cpp-bridge.md:29
#: src/android/interoperability/cpp/cpp-bridge.md:38
#: src/exercises/chromium/build-rules.md:8
#: src/exercises/chromium/build-rules.md:21
#: src/bare-metal/aps/inline-assembly.md:19
#: src/bare-metal/aps/better-uart/using.md:24
#: src/bare-metal/aps/logging/using.md:23 src/exercises/bare-metal/rtc.md:49
#: src/exercises/bare-metal/rtc.md:104 src/exercises/bare-metal/rtc.md:110
#: src/exercises/bare-metal/rtc.md:118 src/exercises/bare-metal/rtc.md:124
#: src/exercises/bare-metal/rtc.md:130 src/exercises/bare-metal/rtc.md:136
#: src/exercises/bare-metal/rtc.md:142 src/exercises/bare-metal/rtc.md:148
#: src/exercises/bare-metal/solutions-afternoon.md:43
msgid "\"C\""
msgstr "\"C\""

#: src/unsafe-rust/unsafe-functions.md:14
msgid "\"üóª‚ààüåè\""
msgstr "\"üóª‚ààüåè\""

#: src/unsafe-rust/unsafe-functions.md:16
msgid ""
"// Safe because the indices are in the correct order, within the bounds of\n"
"    // the string slice, and lie on UTF-8 sequence boundaries.\n"
msgstr ""
"// Seguro porque os √≠ndices est√£o na ordem correta, dentro dos limites da\n"
"    // slice da string, e contido dentro da sequ√™ncia UTF-8.\n"

#: src/unsafe-rust/unsafe-functions.md:19
#: src/unsafe-rust/unsafe-functions.md:20
#: src/unsafe-rust/unsafe-functions.md:21
msgid "\"emoji: {}\""
msgstr "\"emoji: {}\""

#: src/unsafe-rust/unsafe-functions.md:24
msgid "\"char count: {}\""
msgstr "\"contador de caracteres: {}\""

#: src/unsafe-rust/unsafe-functions.md:27
msgid "// Undefined behavior if abs misbehaves.\n"
msgstr "// Comportamento indefinido se abs se comportar mal.\n"

#: src/unsafe-rust/unsafe-functions.md:28
msgid "\"Absolute value of -3 according to C: {}\""
msgstr "\"Valor absoluto de -3 de acordo com C: {}\""

#: src/unsafe-rust/unsafe-functions.md:31
msgid ""
"// Not upholding the UTF-8 encoding requirement breaks memory safety!\n"
"    // println!(\"emoji: {}\", unsafe { emojis.get_unchecked(0..3) });\n"
"    // println!(\"char count: {}\", count_chars(unsafe {\n"
"    // emojis.get_unchecked(0..3) }));\n"
msgstr ""
"// N√£o manter o requerimento de codifica√ß√£o UTF-8 viola seguran√ßa de "
"mem√≥ria!\n"
"    // println!(\"emoji: {}\", unsafe { emojis.get_unchecked(0..3) });\n"
"    // println!(\"contador caracter: {}\", count_chars(unsafe {\n"
"    // emojis.get_unchecked(0..3) }));\n"

#: src/unsafe-rust/unsafe-functions.md:42
#: src/unsafe-rust/unsafe-functions.md:86
msgid "Writing Unsafe Functions"
msgstr "Escrevendo Fun√ß√µes Inseguras"

#: src/unsafe-rust/unsafe-functions.md:44
msgid ""
"You can mark your own functions as `unsafe` if they require particular "
"conditions to avoid undefined behaviour."
msgstr ""
"Voc√™ pode marcar suas pr√≥prias fun√ß√µes como _inseguras_ (`unsafe`) se elas "
"exigirem condi√ß√µes espec√≠ficas para evitar comportamentos indefinidos."

#: src/unsafe-rust/unsafe-functions.md:48
msgid ""
"/// Swaps the values pointed to by the given pointers.\n"
"///\n"
"/// # Safety\n"
"///\n"
"/// The pointers must be valid and properly aligned.\n"
msgstr ""
"/// Troca os valores apontadoes pelos ponteiros fornecidos.\n"
"///\n"
"/// # Seguran√ßa\n"
"///\n"
"/// Os ponteiros precisam ser v√°lidos e corretamente alinhados.\n"

#: src/unsafe-rust/unsafe-functions.md:63
msgid "// Safe because ...\n"
msgstr "// Seguro porque ...\n"

#: src/unsafe-rust/unsafe-functions.md:68
msgid "\"a = {}, b = {}\""
msgstr "\"a = {}, b = {}\""

#: src/unsafe-rust/unsafe-functions.md:76
msgid ""
"`get_unchecked`, like most `_unchecked` functions, is unsafe, because it can "
"create UB if the range is incorrect. `abs` is incorrect for a different "
"reason: it is an external function (FFI). Calling external functions is "
"usually only a problem when those functions do things with pointers which "
"might violate Rust's memory model, but in general any C function might have "
"undefined behaviour under any arbitrary circumstances."
msgstr ""
"`get_unchecked`, como a maioria das fun√ß√µes `_unchecked`, √© insegura, porque "
"pode criar UB se o intervalo estiver incorreto. `abs` est√° incorreto por um "
"motivo diferente: √© uma fun√ß√£o externa (FFI). Chamar fun√ß√µes externas √© "
"geralmente um problema apenas quando essas fun√ß√µes fazem coisas com "
"ponteiros que podem violar o modelo de mem√≥ria do Rust, mas, em geral, "
"qualquer fun√ß√£o C pode ter comportamento indefinido sob quaisquer "
"circunst√¢ncias arbitr√°rias."

#: src/unsafe-rust/unsafe-functions.md:83
msgid ""
"The `\"C\"` in this example is the ABI; [other ABIs are available too]"
"(https://doc.rust-lang.org/reference/items/external-blocks.html)."
msgstr ""
"O `\"C\"` neste exemplo √© o ABI; [outros ABIs tamb√©m est√£o dispon√≠veis]"
"(https://doc.rust-lang.org/reference/items/external-blocks.html)."

#: src/unsafe-rust/unsafe-functions.md:88
msgid ""
"We wouldn't actually use pointers for a `swap` function - it can be done "
"safely with references."
msgstr ""
"Na verdade, n√£o usar√≠amos ponteiros para uma fun√ß√£o `swap` - isto pode ser "
"feito com refer√™ncias com seguran√ßa."

#: src/unsafe-rust/unsafe-functions.md:91
msgid ""
"Note that unsafe code is allowed within an unsafe function without an "
"`unsafe` block. We can prohibit this with `#[deny(unsafe_op_in_unsafe_fn)]`. "
"Try adding it and see what happens. This will likely change in a future Rust "
"edition."
msgstr ""
"Observe que o c√≥digo inseguro √© permitido dentro de uma fun√ß√£o insegura sem "
"um bloco `unsafe`. Podemos proibir isso com "
"`#[deny(unsafe_op_in_unsafe_fn)]`. Tente adicion√°-lo e veja o que acontece. "
"Isso provavelmente mudar√° em uma edi√ß√£o futura do Rust."

#: src/unsafe-rust/unsafe-traits.md:1
msgid "Implementing Unsafe Traits"
msgstr "Implementando Traits Inseguros"

#: src/unsafe-rust/unsafe-traits.md:3
msgid ""
"Like with functions, you can mark a trait as `unsafe` if the implementation "
"must guarantee particular conditions to avoid undefined behaviour."
msgstr ""
"Assim como nas fun√ß√µes, voc√™ pode marcar um `trait` como `unsafe` se a "
"implementa√ß√£o precisa garantir condi√ß√µes particulares para evitar "
"comportamento indefinido."

#: src/unsafe-rust/unsafe-traits.md:6
msgid ""
"For example, the `zerocopy` crate has an unsafe trait that looks [something "
"like this](https://docs.rs/zerocopy/latest/zerocopy/trait.AsBytes.html):"
msgstr ""
"Por exemplo, o _crate_ `zerocopy` tem um _trait_ inseguro que parece [algo "
"assim](https://docs.rs/zerocopy/latest/zerocopy/trait.AsBytes.html):"

#: src/unsafe-rust/unsafe-traits.md:12
msgid ""
"/// ...\n"
"/// # Safety\n"
"/// The type must have a defined representation and no padding.\n"
msgstr ""
"/// ...\n"
"/// # Seguran√ßa\n"
"/// O tipo precisa ter uma representa√ß√£o definida e nenhum preenchimento.\n"

#: src/unsafe-rust/unsafe-traits.md:26
msgid "// Safe because u32 has a defined representation and no padding.\n"
msgstr ""
"// Seguro porque u32 possui uma representa√ß√£o definida e sem preenchimento.\n"

#: src/unsafe-rust/unsafe-traits.md:33
msgid ""
"There should be a `# Safety` section on the Rustdoc for the trait explaining "
"the requirements for the trait to be safely implemented."
msgstr ""
"Deve haver uma se√ß√£o `# Safety` no Rustdoc para o `trait` explicando os "
"requisitos para ser implementado com seguran√ßa."

#: src/unsafe-rust/unsafe-traits.md:36
msgid ""
"The actual safety section for `AsBytes` is rather longer and more "
"complicated."
msgstr ""
"Na verdade, a se√ß√£o de seguran√ßa para `AsBytes` √© bem mais longa e "
"complicada."

#: src/unsafe-rust/unsafe-traits.md:38
msgid "The built-in `Send` and `Sync` traits are unsafe."
msgstr "Os _traits_ integrados `Send` e `Sync` s√£o inseguros."

#: src/unsafe-rust/exercise.md:1
msgid "Safe FFI Wrapper"
msgstr "Wrapper FFI seguro"

#: src/unsafe-rust/exercise.md:3
msgid ""
"Rust has great support for calling functions through a _foreign function "
"interface_ (FFI). We will use this to build a safe wrapper for the `libc` "
"functions you would use from C to read the names of files in a directory."
msgstr ""
"Rust tem √≥timo suporte para chamar fun√ß√µes por meio de uma interface para "
"fun√ß√µes externas (_Function Foreign Interface_ - FFI). Usaremos isso para "
"construir um _wrapper_ (inv√≥lucro) seguro para as fun√ß√µes da `libc` de C que "
"voc√™ usaria para ler os nomes dos arquivos de um diret√≥rio."

#: src/unsafe-rust/exercise.md:7
msgid "You will want to consult the manual pages:"
msgstr "Voc√™ vai querer consultar as p√°ginas do manual:"

#: src/unsafe-rust/exercise.md:9
msgid "[`opendir(3)`](https://man7.org/linux/man-pages/man3/opendir.3.html)"
msgstr "[`opendir(3)`](https://man7.org/linux/man-pages/man3/opendir.3.html)"

#: src/unsafe-rust/exercise.md:10
msgid "[`readdir(3)`](https://man7.org/linux/man-pages/man3/readdir.3.html)"
msgstr "[`readdir(3)`](https://man7.org/linux/man-pages/man3/readdir.3.html)"

#: src/unsafe-rust/exercise.md:11
msgid "[`closedir(3)`](https://man7.org/linux/man-pages/man3/closedir.3.html)"
msgstr "[`closedir(3)`](https://man7.org/linux/man-pages/man3/closedir.3.html)"

#: src/unsafe-rust/exercise.md:13
msgid ""
"You will also want to browse the [`std::ffi`](https://doc.rust-lang.org/std/"
"ffi/) module. There you find a number of string types which you need for the "
"exercise:"
msgstr ""
"Voc√™ tamb√©m vai querer navegar pelo m√≥dulo [`std::ffi`](https://doc.rust-"
"lang.org/std/ffi/). L√° voc√™ encontrar√° um n√∫mero de tipos de string que voc√™ "
"precisar√° para o exerc√≠cio:"

#: src/unsafe-rust/exercise.md:16
msgid "Encoding"
msgstr "Codifica√ß√£o"

#: src/unsafe-rust/exercise.md:16
msgid "Use"
msgstr "Uso"

#: src/unsafe-rust/exercise.md:18
msgid ""
"[`str`](https://doc.rust-lang.org/std/primitive.str.html) and [`String`]"
"(https://doc.rust-lang.org/std/string/struct.String.html)"
msgstr ""
"[`str`](https://doc.rust-lang.org/std/primitive.str.html) e [`String`]"
"(https://doc.rust-lang.org/std/string/struct.String.html)"

#: src/unsafe-rust/exercise.md:18
msgid "UTF-8"
msgstr "UTF-8"

#: src/unsafe-rust/exercise.md:18
msgid "Text processing in Rust"
msgstr "Processamento de texto em Rust"

#: src/unsafe-rust/exercise.md:19
msgid ""
"[`CStr`](https://doc.rust-lang.org/std/ffi/struct.CStr.html) and [`CString`]"
"(https://doc.rust-lang.org/std/ffi/struct.CString.html)"
msgstr ""
"[`CStr`](https://doc.rust-lang.org/std/ffi/struct.CStr.html) e [`CString`]"
"(https://doc.rust-lang.org/std/ffi/struct.CString.html)"

#: src/unsafe-rust/exercise.md:19
msgid "NUL-terminated"
msgstr "terminado em NUL"

#: src/unsafe-rust/exercise.md:19
msgid "Communicating with C functions"
msgstr "Comunica√ß√£o com fun√ß√µes em C"

#: src/unsafe-rust/exercise.md:20
msgid ""
"[`OsStr`](https://doc.rust-lang.org/std/ffi/struct.OsStr.html) and "
"[`OsString`](https://doc.rust-lang.org/std/ffi/struct.OsString.html)"
msgstr ""
"[`OsStr`](https://doc.rust-lang.org/std/ffi/struct.OsStr.html) e [`OsString`]"
"(https://doc.rust-lang.org/std/ffi/struct.OsString.html)"

#: src/unsafe-rust/exercise.md:20
msgid "OS-specific"
msgstr "espec√≠fico ao SO"

#: src/unsafe-rust/exercise.md:20
msgid "Communicating with the OS"
msgstr "Comunica√ß√£o com o SO"

#: src/unsafe-rust/exercise.md:22
msgid "You will convert between all these types:"
msgstr "Voc√™ ir√° converter entre todos estes tipos:"

#: src/unsafe-rust/exercise.md:24
msgid ""
"`&str` to `CString`: you need to allocate space for a trailing `\\0` "
"character,"
msgstr ""
"`&str` para `CString`: voc√™ precisa alocar espa√ßo para o caracter terminador "
"`\\0`,"

#: src/unsafe-rust/exercise.md:25
msgid "`CString` to `*const i8`: you need a pointer to call C functions,"
msgstr ""
"`CString` para `*const i8`: voc√™ precisa de um ponteiro para chamar fun√ß√µes "
"em C,"

#: src/unsafe-rust/exercise.md:26
msgid ""
"`*const i8` to `&CStr`: you need something which can find the trailing `\\0` "
"character,"
msgstr ""
"`*const i8` para `&CStr`: voc√™ voc√™ precisa de algo que pode encontrar o "
"caracter terminador `\\0`,"

#: src/unsafe-rust/exercise.md:28
msgid ""
"`&CStr` to `&[u8]`: a slice of bytes is the universal interface for \"some "
"unknown data\","
msgstr ""
"`&CStr` para `&[u8]`: um _slice_ de bytes √© a interface universal para "
"\"algum dado desconhecido\","

#: src/unsafe-rust/exercise.md:30
msgid ""
"`&[u8]` to `&OsStr`: `&OsStr` is a step towards `OsString`, use [`OsStrExt`]"
"(https://doc.rust-lang.org/std/os/unix/ffi/trait.OsStrExt.html) to create it,"
msgstr ""
"`&[u8]` para `&OsStr`: `&OsStr` √© um passo em dire√ß√£o a `OsString`, use "
"[`OsStrExt`](https://doc.rust-lang.org/std/os/unix/ffi/trait.OsStrExt.html) "
"para cri√°-lo,"

#: src/unsafe-rust/exercise.md:33
msgid ""
"`&OsStr` to `OsString`: you need to clone the data in `&OsStr` to be able to "
"return it and call `readdir` again."
msgstr ""
"`&OsStr` para `OsString`: voc√™ precisa clonar os dados em `&OsStr` para "
"poder retorn√°-lo e chamar `readdir` novamente."

#: src/unsafe-rust/exercise.md:36
msgid ""
"The [Nomicon](https://doc.rust-lang.org/nomicon/ffi.html) also has a very "
"useful chapter about FFI."
msgstr ""
"O [Nomicon](https://doc.rust-lang.org/nomicon/ffi.html) tamb√©m tem um "
"cap√≠tulo bastante √∫til sobre FFI."

#: src/unsafe-rust/exercise.md:47
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and fill in the missing "
"functions and methods:"
msgstr ""
"Copie o c√≥digo abaixo para <https://play.rust-lang.org/> e implemente as "
"fun√ß√µes e m√©todos que faltam:"

#: src/unsafe-rust/exercise.md:56 src/unsafe-rust/exercise.md:69
#: src/unsafe-rust/exercise.md:80 src/unsafe-rust/exercise.md:94
#: src/unsafe-rust/exercise.md:102 src/unsafe-rust/solution.md:6
#: src/unsafe-rust/solution.md:19 src/unsafe-rust/solution.md:30
#: src/unsafe-rust/solution.md:44 src/unsafe-rust/solution.md:52
msgid "\"macos\""
msgstr "\"macos\""

#: src/unsafe-rust/exercise.md:59 src/unsafe-rust/solution.md:9
msgid "// Opaque type. See https://doc.rust-lang.org/nomicon/ffi.html.\n"
msgstr "// Tipo opaco. Veja https://doc.rust-lang.org/nomicon/ffi.html.\n"

#: src/unsafe-rust/exercise.md:66 src/unsafe-rust/solution.md:16
msgid ""
"// Layout according to the Linux man page for readdir(3), where ino_t and\n"
"    // off_t are resolved according to the definitions in\n"
"    // /usr/include/x86_64-linux-gnu/{sys/types.h, bits/typesizes.h}.\n"
msgstr ""
"// Layout de acordo com a p√°gina man do Linux para readdir(3), onde ino_t e\n"
"    // off_t s√£o resolvidos de acordo com as defini√ß√µes em\n"
"    // /usr/include/x86_64-linux-gnu/{sys/types.h, bits/typesizes.h}.\n"

#: src/unsafe-rust/exercise.md:79 src/unsafe-rust/solution.md:29
msgid "// Layout according to the macOS man page for dir(5).\n"
msgstr "// Layout de acordo com a p√°gina man do macOS man page para dir(5).\n"

#: src/unsafe-rust/exercise.md:94 src/unsafe-rust/exercise.md:102
#: src/unsafe-rust/solution.md:44 src/unsafe-rust/solution.md:52
msgid "\"x86_64\""
msgstr "\"x86_64\""

#: src/unsafe-rust/exercise.md:97 src/unsafe-rust/solution.md:47
msgid ""
"// See https://github.com/rust-lang/libc/issues/414 and the section on\n"
"        // _DARWIN_FEATURE_64_BIT_INODE in the macOS man page for stat(2).\n"
"        //\n"
"        // \"Platforms that existed before these updates were available\" "
"refers\n"
"        // to macOS (as opposed to iOS / wearOS / etc.) on Intel and "
"PowerPC.\n"
msgstr ""
"// Veja https://github.com/rust-lang/libc/issues/414 e a se√ß√£o sobre\n"
"        // _DARWIN_FEATURE_64_BIT_INODE na p√°gina man do macOS para "
"stat(2).\n"
"        //\n"
"        // \"Plataformas que existiram antes destas atualiza√ß√µes estarem "
"dispon√≠veis\" refere-se\n"
"        // ao macOS (ao contr√°rio do iOS / wearOS / etc.) em Intel e "
"PowerPC.\n"

#: src/unsafe-rust/exercise.md:103 src/unsafe-rust/solution.md:53
msgid "\"readdir$INODE64\""
msgstr "\"readdir$INODE64\""

#: src/unsafe-rust/exercise.md:121 src/unsafe-rust/solution.md:71
msgid ""
"// Call opendir and return a Ok value if that worked,\n"
"        // otherwise return Err with a message.\n"
msgstr ""
"// Chama opendir e retorna um valor Ok se funcionar,\n"
"        // ou retorna Err com uma mensagem.\n"

#: src/unsafe-rust/exercise.md:130
msgid "// Keep calling readdir until we get a NULL pointer back.\n"
msgstr ""
"// Continua chamando readdir at√© n√≥s obtermos um ponteiro NULL de volta.\n"

#: src/unsafe-rust/exercise.md:137 src/unsafe-rust/solution.md:105
msgid "// Call closedir as needed.\n"
msgstr "// Chama closedir se necess√°rio.\n"

#: src/unsafe-rust/exercise.md:143 src/unsafe-rust/solution.md:116
#: src/unsafe-rust/solution.md:140 src/unsafe-rust/solution.md:155
#: src/android/interoperability/with-c/rust.md:44
msgid "\".\""
msgstr "\".\""

#: src/unsafe-rust/exercise.md:144 src/unsafe-rust/solution.md:117
msgid "\"files: {:#?}\""
msgstr "\"files: {:#?}\""

#: src/unsafe-rust/solution.md:74
msgid "\"Invalid path: {err}\""
msgstr ""

#: src/unsafe-rust/solution.md:75
msgid "// SAFETY: path.as_ptr() cannot be NULL.\n"
msgstr "// SEGURAN√áA: path.as_ptr() n√£o pode ser NULL.\n"

#: src/unsafe-rust/solution.md:78
msgid "\"Could not open {:?}\""
msgstr "\"N√£o foi poss√≠vel abrir {:?}\""

#: src/unsafe-rust/solution.md:88
msgid ""
"// Keep calling readdir until we get a NULL pointer back.\n"
"        // SAFETY: self.dir is never NULL.\n"
msgstr ""
"// Continua chamando readdir at√© n√≥s obtermos um ponteiro NULL de volta.\n"
"        // SEGURAN√áA: self.dir nunca √© NULL.\n"

#: src/unsafe-rust/solution.md:92
msgid "// We have reached the end of the directory.\n"
msgstr "// Chegamos ao final do diret√≥rio.\n"

#: src/unsafe-rust/solution.md:95
msgid ""
"// SAFETY: dirent is not NULL and dirent.d_name is NUL\n"
"        // terminated.\n"
msgstr "// SEGURAN√áA: dirent n√£o √© NULL e dirent.d_name √© terminado em NUL\n"

#: src/unsafe-rust/solution.md:107
msgid "// SAFETY: self.dir is not NULL.\n"
msgstr "// SEGURAN√áA: self.dir n√£o √© NULL.\n"

#: src/unsafe-rust/solution.md:109
msgid "\"Could not close {:?}\""
msgstr "\"N√£o foi poss√≠vel fechar {:?}\""

#: src/unsafe-rust/solution.md:128
msgid "\"no-such-directory\""
msgstr "\"no-such-directory\""

#: src/unsafe-rust/solution.md:136 src/unsafe-rust/solution.md:151
msgid "\"Non UTF-8 character in path\""
msgstr "\"Caracter n√£o UTF-8 no caminho\""

#: src/unsafe-rust/solution.md:140 src/unsafe-rust/solution.md:155
msgid "\"..\""
msgstr "\"..\""

#: src/unsafe-rust/solution.md:147 src/unsafe-rust/solution.md:155
msgid "\"foo.txt\""
msgstr "\"foo.txt\""

#: src/unsafe-rust/solution.md:147
msgid "\"The Foo Diaries\\n\""
msgstr "\"The Foo Diaries\\n\""

#: src/unsafe-rust/solution.md:148 src/unsafe-rust/solution.md:155
msgid "\"bar.png\""
msgstr "\"bar.png\""

#: src/unsafe-rust/solution.md:148
msgid "\"<PNG>\\n\""
msgstr "\"<PNG>\\n\""

#: src/unsafe-rust/solution.md:149 src/unsafe-rust/solution.md:155
msgid "\"crab.rs\""
msgstr "\"crab.rs\""

#: src/unsafe-rust/solution.md:149
msgid "\"//! Crab\\n\""
msgstr "\"//! Caranguejo (Crab)\\n\""

#: src/android.md:1
msgid "Welcome to Rust in Android"
msgstr "Bem-vindo ao Rust para Android"

#: src/android.md:3
msgid ""
"Rust is supported for system software on Android. This means that you can "
"write new services, libraries, drivers or even firmware in Rust (or improve "
"existing code as needed)."
msgstr ""
"O Rust √© suportado para software de sistema no Android. Isso significa que "
"voc√™ pode escrever novos servi√ßos, bibliotecas, drivers ou at√© mesmo "
"firmware em Rust (ou melhorar o c√≥digo existente conforme necess√°rio)."

#: src/android.md:7
msgid ""
"We will attempt to call Rust from one of your own projects today. So try to "
"find a little corner of your code base where we can move some lines of code "
"to Rust. The fewer dependencies and \"exotic\" types the better. Something "
"that parses some raw bytes would be ideal."
msgstr ""
"Hoje tentaremos chamar Rust a partir de um de seus pr√≥prios projetos. Ent√£o "
"tente encontrar um cantinho da sua base de c√≥digo onde podemos mover algumas "
"linhas de c√≥digo para o Rust. Quanto menos depend√™ncias e tipos "
"\"ex√≥ticos\", melhor. Algo que analise alguns bytes brutos seria o ideal."

#: src/android.md:14
msgid ""
"The speaker may mention any of the following given the increased use of Rust "
"in Android:"
msgstr ""
"O instrutor pode mencionar qualquer um dos seguintes, dada a crescente "
"utiliza√ß√£o do Rust no Android:"

#: src/android.md:17
msgid ""
"Service example: [DNS over HTTP](https://security.googleblog.com/2022/07/dns-"
"over-http3-in-android.html)"
msgstr ""
"Exemplo de servi√ßo: [DNS sobre HTTP](https://security.googleblog.com/2022/07/"
"dns-over-http3-in-android.html)"

#: src/android.md:20
msgid ""
"Libraries: [Rutabaga Virtual Graphics Interface](https://crosvm.dev/book/"
"appendix/rutabaga_gfx.html)"
msgstr ""
"Bibliotecas: [Interface Gr√°fica Virtual Rutabaga](https://crosvm.dev/book/"
"appendix/rutabaga_gfx.html)"

#: src/android.md:23
msgid ""
"Kernel Drivers: [Binder](https://lore.kernel.org/rust-for-linux/20231101-"
"rust-binder-v1-0-08ba9197f637@google.com/)"
msgstr ""
"Drivers de kernel: [Binder](https://lore.kernel.org/rust-for-linux/20231101-"
"rust-binder-v1-0-08ba9197f637@google.com/)"

#: src/android.md:26
msgid ""
"Firmware: [pKVM firmware](https://security.googleblog.com/2023/10/bare-metal-"
"rust-in-android.html)"
msgstr ""
"Firmware: [firmware pKVM](https://security.googleblog.com/2023/10/bare-metal-"
"rust-in-android.html)"

#: src/android/setup.md:3
msgid ""
"We will be using a Cuttlefish Android Virtual Device to test our code. Make "
"sure you have access to one or create a new one with:"
msgstr ""
"Usaremos um Dispositivo Virtual Android Cuttlefish para testar nosso c√≥digo. "
"Certifique-se de ter acesso a um ou crie um novo com:"

#: src/android/setup.md:12
msgid ""
"Please see the [Android Developer Codelab](https://source.android.com/docs/"
"setup/start) for details."
msgstr ""
"Consulte o [Codelab para Desenvolvedor Android](https://source.android.com/"
"docs/setup/start) para maiores detalhes."

#: src/android/setup.md:20
msgid ""
"Cuttlefish is a reference Android device designed to work on generic Linux "
"desktops. MacOS support is also planned."
msgstr ""
"Cuttlefish √© um dispositivo Android de refer√™ncia projetado para funcionar "
"em desktops Linux gen√©ricos. O suporte ao MacOS tamb√©m est√° planejado."

#: src/android/setup.md:23
msgid ""
"The Cuttlefish system image maintains high fidelity to real devices, and is "
"the ideal emulator to run many Rust use cases."
msgstr ""
"A imagem do sistema Cuttlefish mant√©m alta fidelidade aos dispositivos "
"reais, e √© o emulador ideal para executar muitos casos de uso do Rust."

#: src/android/build-rules.md:3
msgid "The Android build system (Soong) supports Rust via a number of modules:"
msgstr ""
"O sistema de compila√ß√£o do Android (Soong) oferece suporte ao Rust por meio "
"de v√°rios m√≥dulos:"

#: src/android/build-rules.md:5
msgid "Module Type"
msgstr "Tipo de M√≥dulo"

#: src/android/build-rules.md:5
msgid "Description"
msgstr "Descri√ß√£o"

#: src/android/build-rules.md:7
msgid "`rust_binary`"
msgstr "`rust_binary`"

#: src/android/build-rules.md:7
msgid "Produces a Rust binary."
msgstr "Produz um bin√°rio Rust."

#: src/android/build-rules.md:8
msgid "`rust_library`"
msgstr "`rust_library`"

#: src/android/build-rules.md:8
msgid "Produces a Rust library, and provides both `rlib` and `dylib` variants."
msgstr "Produz uma biblioteca Rust e fornece as variantes `rlib` e `dylib`."

#: src/android/build-rules.md:9
msgid "`rust_ffi`"
msgstr "`rust_ffi`"

#: src/android/build-rules.md:9
msgid ""
"Produces a Rust C library usable by `cc` modules, and provides both static "
"and shared variants."
msgstr ""
"Produz uma biblioteca Rust C utiliz√°vel por m√≥dulos `cc` e fornece variantes "
"est√°ticas e compartilhadas."

#: src/android/build-rules.md:10
msgid "`rust_proc_macro`"
msgstr "`rust_proc_macro`"

#: src/android/build-rules.md:10
msgid ""
"Produces a `proc-macro` Rust library. These are analogous to compiler "
"plugins."
msgstr ""
"Produz uma biblioteca Rust `proc-macro`. Estes s√£o an√°logos aos plugins do "
"compilador."

#: src/android/build-rules.md:11
msgid "`rust_test`"
msgstr "`rust_test`"

#: src/android/build-rules.md:11
msgid "Produces a Rust test binary that uses the standard Rust test harness."
msgstr ""
"Produz um bin√°rio de teste Rust que usa a funcionalidade padr√£o de teste do "
"Rust."

#: src/android/build-rules.md:12
msgid "`rust_fuzz`"
msgstr "`rust_fuzz`"

#: src/android/build-rules.md:12
msgid "Produces a Rust fuzz binary leveraging `libfuzzer`."
msgstr "Produz um bin√°rio Rust fuzz aproveitando `libfuzzer`."

#: src/android/build-rules.md:13
msgid "`rust_protobuf`"
msgstr "`rust_protobuf`"

#: src/android/build-rules.md:13
msgid ""
"Generates source and produces a Rust library that provides an interface for "
"a particular protobuf."
msgstr ""
"Gera o c√≥digo-fonte e produz uma biblioteca Rust que fornece uma interface "
"para um _protobuf_ espec√≠fico."

#: src/android/build-rules.md:14
msgid "`rust_bindgen`"
msgstr "`rust_bindgen`"

#: src/android/build-rules.md:14
msgid ""
"Generates source and produces a Rust library containing Rust bindings to C "
"libraries."
msgstr ""
"Gera fonte e produz uma biblioteca Rust contendo v√≠nculos em Rust para "
"bibliotecas C."

#: src/android/build-rules.md:16
msgid "We will look at `rust_binary` and `rust_library` next."
msgstr "Veremos `rust_binary` e `rust_library` a seguir."

#: src/android/build-rules.md:20
msgid "Additional items speaker may mention:"
msgstr "Itens adicionais que o instrutor pode mencionar:"

#: src/android/build-rules.md:22
msgid ""
"Cargo is not optimized for multi-language repos, and also downloads packages "
"from the internet."
msgstr ""
"Cargo n√£o √© otimizado para reposit√≥rios multi-idiomas e tamb√©m baixa pacotes "
"da internet."

#: src/android/build-rules.md:25
msgid ""
"For compliance and performance, Android must have crates in-tree. It must "
"also interop with C/C++/Java code. Soong fills that gap."
msgstr ""
"Para conformidade e desempenho, o Android deve ter _crates_ no reposit√≥rio. "
"Tamb√©m deve interoperar com c√≥digo C/C++/Java. Soong preenche essa lacuna."

#: src/android/build-rules.md:28
msgid ""
"Soong has many similarities to Bazel, which is the open-source variant of "
"Blaze (used in google3)."
msgstr ""
"Soong tem muitas semelhan√ßas com o Bazel, que √© a variante de c√≥digo aberto "
"do Blaze (usado no google3)."

#: src/android/build-rules.md:31
msgid ""
"There is a plan to transition [Android](https://source.android.com/docs/"
"setup/build/bazel/introduction), [ChromeOS](https://chromium.googlesource."
"com/chromiumos/bazel/), and [Fuchsia](https://source.android.com/docs/setup/"
"build/bazel/introduction) to Bazel."
msgstr ""
"H√° um plano para transicionar o [Android](https://source.android.com/docs/"
"setup/build/bazel/introduction), [ChromeOS](https://chromium.googlesource."
"com/chromiumos/bazel/) e [Fuchsia](https://source.android.com/docs/setup/"
"build/bazel/introduction) para o Bazel."

#: src/android/build-rules.md:37
msgid "Learning Bazel-like build rules is useful for all Rust OS developers."
msgstr ""
"Aprender regras de compila√ß√£o semelhantes ao Bazel √© √∫til para todos os "
"desenvolvedores Rust de SO."

#: src/android/build-rules.md:39
msgid "Fun fact: Data from Star Trek is a Soong-type Android."
msgstr "Curiosidade: Data de Star Trek √© um Android do tipo Soong."

#: src/android/build-rules/binary.md:1
msgid "Rust Binaries"
msgstr "Bin√°rios do Rust"

#: src/android/build-rules/binary.md:3
msgid ""
"Let us start with a simple application. At the root of an AOSP checkout, "
"create the following files:"
msgstr ""
"Vamos come√ßar com um aplicativo simples. Na raiz de um checkout AOSP, crie "
"os seguintes arquivos:"

#: src/android/build-rules/binary.md:6 src/android/build-rules/library.md:13
msgid "_hello_rust/Android.bp_:"
msgstr "_hello_rust/Android.bp_:"

#: src/android/build-rules/binary.md:10 src/android/build-rules/binary.md:11
msgid "\"hello_rust\""
msgstr "\"hello_rust\""

#: src/android/build-rules/binary.md:12 src/android/build-rules/library.md:19
#: src/android/logging.md:12
msgid "\"src/main.rs\""
msgstr "\"src/main.rs\""

#: src/android/build-rules/binary.md:16 src/android/build-rules/library.md:34
msgid "_hello_rust/src/main.rs_:"
msgstr "_hello_rust/src/main.rs_:"

#: src/android/build-rules/binary.md:19 src/android/build-rules/library.md:37
msgid "//! Rust demo.\n"
msgstr "//! Rust demo.\n"

#: src/android/build-rules/binary.md:20 src/android/build-rules/library.md:41
msgid "/// Prints a greeting to standard output.\n"
msgstr "/// Imprime uma sauda√ß√£o na sa√≠da padr√£o.\n"

#: src/android/build-rules/binary.md:23 src/exercises/chromium/build-rules.md:9
msgid "\"Hello from Rust!\""
msgstr "\"Ol√° do Rust!\""

#: src/android/build-rules/binary.md:27
msgid "You can now build, push, and run the binary:"
msgstr "Agora voc√™ pode compilar, enviar e executar o bin√°rio:"

#: src/android/build-rules/binary.md:29
msgid ""
"```shell\n"
"m hello_rust\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust\" /data/local/tmp\n"
"adb shell /data/local/tmp/hello_rust\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust /data/local/tmp\"\n"
"adb shell /data/local/tmp/hello_rust\n"
"```"

#: src/android/build-rules/library.md:1
msgid "Rust Libraries"
msgstr "Bibliotecas de Rust"

#: src/android/build-rules/library.md:3
msgid "You use `rust_library` to create a new Rust library for Android."
msgstr ""
"Voc√™ usa `rust_library` para criar uma nova biblioteca Rust para Android."

#: src/android/build-rules/library.md:5
msgid "Here we declare a dependency on two libraries:"
msgstr "Aqui declaramos uma depend√™ncia em duas bibliotecas:"

#: src/android/build-rules/library.md:7
msgid "`libgreeting`, which we define below,"
msgstr "`libgreeting`, que definimos abaixo,"

#: src/android/build-rules/library.md:8
msgid ""
"`libtextwrap`, which is a crate already vendored in [`external/rust/crates/`]"
"(https://cs.android.com/android/platform/superproject/+/master:external/rust/"
"crates/)."
msgstr ""
"`libtextwrap`, que √© um `crate` j√° oferecido em [`external/rust/crates/`]"
"(https://cs.android.com/android/platform/superproject/+/master:external/rust/"
"crates/)."

#: src/android/build-rules/library.md:17 src/android/build-rules/library.md:18
msgid "\"hello_rust_with_dep\""
msgstr "\"hello_rust_with_dep\""

#: src/android/build-rules/library.md:21 src/android/build-rules/library.md:28
msgid "\"libgreetings\""
msgstr "\"libgreetings\""

#: src/android/build-rules/library.md:22
msgid "\"libtextwrap\""
msgstr "\"libtextwrap\""

#: src/android/build-rules/library.md:24
msgid "// Need this to avoid dynamic link error.\n"
msgstr "// Precisamos disso para evitar erro de liga√ß√£o din√¢mica.\n"

#: src/android/build-rules/library.md:29
msgid "\"greetings\""
msgstr "\"greetings\""

#: src/android/build-rules/library.md:30 src/android/aidl/implementation.md:29
#: src/android/interoperability/java.md:39
msgid "\"src/lib.rs\""
msgstr "\"src/lib.rs\""

#: src/android/build-rules/library.md:48
msgid "_hello_rust/src/lib.rs_:"
msgstr "_hello_rust/src/lib.rs_:"

#: src/android/build-rules/library.md:51
msgid "//! Greeting library.\n"
msgstr "//! Greeting library.\n"

#: src/android/build-rules/library.md:52
msgid "/// Greet `name`.\n"
msgstr "/// Sauda√ß√£o `nome`.\n"

#: src/android/build-rules/library.md:55
msgid "\"Hello {name}, it is very nice to meet you!\""
msgstr "\"Ol√° {nome}, prazer em conhec√™-lo!\""

#: src/android/build-rules/library.md:59
msgid "You build, push, and run the binary like before:"
msgstr "Voc√™ constr√≥i, envia e executa o bin√°rio como antes:"

#: src/android/build-rules/library.md:61
msgid ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/aidl.md:3
msgid ""
"The [Android Interface Definition Language (AIDL)](https://developer.android."
"com/guide/components/aidl) is supported in Rust:"
msgstr ""
"A [Linguagem de Defini√ß√£o de Interface Android (AIDL)](https://developer."
"android.com/guide/components/aidl) √© compat√≠vel com Rust:"

#: src/android/aidl.md:8
msgid "Rust code can call existing AIDL servers,"
msgstr "O c√≥digo Rust pode chamar servidores AIDL existentes,"

#: src/android/aidl.md:9
msgid "You can create new AIDL servers in Rust."
msgstr "Voc√™ pode criar novos servidores AIDL em Rust."

#: src/android/aidl/interface.md:1
msgid "AIDL Interfaces"
msgstr "Interfaces AIDL"

#: src/android/aidl/interface.md:3
msgid "You declare the API of your service using an AIDL interface:"
msgstr "Voc√™ declara a API do seu servi√ßo usando uma interface AIDL:"

#: src/android/aidl/interface.md:5
msgid ""
"_birthday_service/aidl/com/example/birthdayservice/IBirthdayService.aidl_:"
msgstr ""
"_birthday_service/aidl/com/example/birthdayservice/IBirthdayService.aidl_:"

#: src/android/aidl/interface.md:9 src/android/aidl/changing.md:8
msgid "/** Birthday service interface. */"
msgstr "/** Interface de servi√ßo de anivers√°rio. */"

#: src/android/aidl/interface.md:12 src/android/aidl/changing.md:11
msgid "/** Generate a Happy Birthday message. */"
msgstr "/** Gera uma mensagem de feliz anivers√°rio. */"

#: src/android/aidl/interface.md:17
msgid "_birthday_service/aidl/Android.bp_:"
msgstr "_birthday_service/aidl/Android.bp_:"

#: src/android/aidl/interface.md:21
msgid "\"com.example.birthdayservice\""
msgstr "\"com.example.birthdayservice\""

#: src/android/aidl/interface.md:22
msgid "\"com/example/birthdayservice/*.aidl\""
msgstr "\"com/example/birthdayservice/*.aidl\""

#: src/android/aidl/interface.md:25
msgid "// Rust is not enabled by default\n"
msgstr "// Rust n√£o est√° ativado por padr√£o\n"

#: src/android/aidl/interface.md:32
msgid ""
"Add `vendor_available: true` if your AIDL file is used by a binary in the "
"vendor partition."
msgstr ""
"Adicione `vendor_available: true` caso seu arquivo AIDL seja usado por um "
"bin√°rio na parti√ß√£o _vendor_."

#: src/android/aidl/implementation.md:1
msgid "Service Implementation"
msgstr "Implementa√ß√£o do Servi√ßo"

#: src/android/aidl/implementation.md:3
msgid "We can now implement the AIDL service:"
msgstr "Agora podemos implementar o servi√ßo AIDL:"

#: src/android/aidl/implementation.md:5
msgid "_birthday_service/src/lib.rs_:"
msgstr "_birthday_service/src/lib.rs_:"

#: src/android/aidl/implementation.md:8
msgid "//! Implementation of the `IBirthdayService` AIDL interface.\n"
msgstr "//! Implementation of the `IBirthdayService` AIDL interface.\n"

#: src/android/aidl/implementation.md:11
msgid "/// The `IBirthdayService` implementation.\n"
msgstr "/// A implementa√ß√£o de `IBirthdayService`.\n"

#: src/android/aidl/implementation.md:19
msgid "\"Happy Birthday {name}, congratulations with the {years} years!\""
msgstr "\"Feliz anivers√°rio {name}, parab√©ns pelos seus {years} anos!\""

#: src/android/aidl/implementation.md:24 src/android/aidl/server.md:28
#: src/android/aidl/client.md:36
msgid "_birthday_service/Android.bp_:"
msgstr "_birthday_service/Android.bp_:"

#: src/android/aidl/implementation.md:28 src/android/aidl/server.md:38
msgid "\"libbirthdayservice\""
msgstr "\"libbirthdayservice\""

#: src/android/aidl/implementation.md:30 src/android/aidl/server.md:13
#: src/android/aidl/client.md:12
msgid "\"birthdayservice\""
msgstr "\"birthdayservice\""

#: src/android/aidl/implementation.md:32 src/android/aidl/server.md:36
#: src/android/aidl/client.md:44
msgid "\"com.example.birthdayservice-rust\""
msgstr "\"com.example.birthdayservice-rust\""

#: src/android/aidl/implementation.md:33 src/android/aidl/server.md:37
#: src/android/aidl/client.md:45
msgid "\"libbinder_rs\""
msgstr "\"libbinder_rs\""

#: src/android/aidl/server.md:1
msgid "AIDL Server"
msgstr "Servidor AIDL"

#: src/android/aidl/server.md:3
msgid "Finally, we can create a server which exposes the service:"
msgstr "Finalmente, podemos criar um servidor que exp√µe o servi√ßo:"

#: src/android/aidl/server.md:5
msgid "_birthday_service/src/server.rs_:"
msgstr "_birthday_service/src/server.rs_:"

#: src/android/aidl/server.md:8 src/android/aidl/client.md:8
msgid "//! Birthday service.\n"
msgstr "//! Birthday service.\n"

#: src/android/aidl/server.md:14
msgid "/// Entry point for birthday service.\n"
msgstr "/// Ponto de entrada para servi√ßo de anivers√°rio.\n"

#: src/android/aidl/server.md:23
msgid "\"Failed to register service\""
msgstr "\"Falha ao registrar o servi√ßo\""

#: src/android/aidl/server.md:32 src/android/aidl/server.md:33
msgid "\"birthday_server\""
msgstr "\"birthday_server\""

#: src/android/aidl/server.md:34
msgid "\"src/server.rs\""
msgstr "\"src/server.rs\""

#: src/android/aidl/server.md:40 src/android/aidl/client.md:47
msgid "// To avoid dynamic link error.\n"
msgstr ""

#: src/android/aidl/deploy.md:3
msgid "We can now build, push, and start the service:"
msgstr "Agora podemos compilar, enviar e iniciar o servi√ßo:"

#: src/android/aidl/deploy.md:5
msgid ""
"```shell\n"
"m birthday_server\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_server\" /data/local/"
"tmp\n"
"adb root\n"
"adb shell /data/local/tmp/birthday_server\n"
"```"
msgstr ""
"```shell\n"
"m birthday_server\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_server /data/local/"
"tmp\"\n"
"adb root\n"
"adb shell /data/local/tmp/birthday_server\n"
"```"

#: src/android/aidl/deploy.md:12
msgid "In another terminal, check that the service runs:"
msgstr "Em outro terminal, verifique se o servi√ßo est√° sendo executado:"

#: src/android/aidl/deploy.md:22
msgid "You can also call the service with `service call`:"
msgstr "Voc√™ tamb√©m pode chamar o servi√ßo com `service call`:"

#: src/android/aidl/client.md:1
msgid "AIDL Client"
msgstr "Cliente AIDL"

#: src/android/aidl/client.md:3
msgid "Finally, we can create a Rust client for our new service."
msgstr "Por fim, podemos criar um cliente Rust para nosso novo servi√ßo."

#: src/android/aidl/client.md:5
msgid "_birthday_service/src/client.rs_:"
msgstr "_birthday_server/src/client.rs_:"

#: src/android/aidl/client.md:13
msgid "/// Connect to the BirthdayService.\n"
msgstr "/// Connecta-se ao servi√ßo de anivers√°rio BirthdayService.\n"

#: src/android/aidl/client.md:19
msgid "/// Call the birthday service.\n"
msgstr "/// Chama o servi√ßo de anivers√°rio.\n"

#: src/android/aidl/client.md:29
msgid "\"Failed to connect to BirthdayService\""
msgstr "\"Falha ao conectar-se a BirthdayService\""

#: src/android/aidl/client.md:31
msgid "\"{msg}\""
msgstr "\"{msg}\""

#: src/android/aidl/client.md:40 src/android/aidl/client.md:41
msgid "\"birthday_client\""
msgstr "\"birthday_client\""

#: src/android/aidl/client.md:42
msgid "\"src/client.rs\""
msgstr "\"src/client.rs\""

#: src/android/aidl/client.md:51
msgid "Notice that the client does not depend on `libbirthdayservice`."
msgstr "Observe que o cliente n√£o depende de `libbirthdayservice`."

#: src/android/aidl/client.md:53
msgid "Build, push, and run the client on your device:"
msgstr "Compile, envie e execute o cliente em seu dispositivo:"

#: src/android/aidl/client.md:55
#, fuzzy
msgid ""
"```shell\n"
"m birthday_client\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_client\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/birthday_client Charlie 60\n"
"```"
msgstr ""
"```shell\n"
"m birthday_client\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_client /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/birthday_client Carlos 60\n"
"```"

#: src/android/aidl/changing.md:3
msgid ""
"Let us extend the API with more functionality: we want to let clients "
"specify a list of lines for the birthday card:"
msgstr ""
"Vamos estender a API com mais funcionalidades: queremos permitir que os "
"clientes especifiquem uma lista de frases para o cart√£o de anivers√°rio:"

#: src/android/logging.md:3
msgid ""
"You should use the `log` crate to automatically log to `logcat` (on-device) "
"or `stdout` (on-host):"
msgstr ""
"Voc√™ deve usar o `crate` `log` para logar automaticamente no `logcat` (no "
"dispositivo) ou `stdout` (no _host_):"

#: src/android/logging.md:6
msgid "_hello_rust_logs/Android.bp_:"
msgstr "_hello_rust_logs/Android.bp_:"

#: src/android/logging.md:10 src/android/logging.md:11
msgid "\"hello_rust_logs\""
msgstr "\"hello_rust_logs\""

#: src/android/logging.md:14
msgid "\"liblog_rust\""
msgstr "\"liblog_rust\""

#: src/android/logging.md:15
msgid "\"liblogger\""
msgstr "\"liblogger\""

#: src/android/logging.md:21
msgid "_hello_rust_logs/src/main.rs_:"
msgstr "_hello_rust_logs/src/main.rs_:"

#: src/android/logging.md:24
msgid "//! Rust logging demo.\n"
msgstr "//! Rust logging demo.\n"

#: src/android/logging.md:27
msgid "/// Logs a greeting.\n"
msgstr "/// Registra uma sauda√ß√£o.\n"

#: src/android/logging.md:32
msgid "\"rust\""
msgstr "\"rust\""

#: src/android/logging.md:35
msgid "\"Starting program.\""
msgstr "\"Iniciando programa.\""

#: src/android/logging.md:36
msgid "\"Things are going fine.\""
msgstr "\"As coisas est√£o indo bem.\""

#: src/android/logging.md:37
msgid "\"Something went wrong!\""
msgstr "\"Algo deu errado!\""

#: src/android/logging.md:41 src/android/interoperability/with-c/bindgen.md:96
#: src/android/interoperability/with-c/rust.md:72
msgid "Build, push, and run the binary on your device:"
msgstr "Compile, envie e execute o bin√°rio em seu dispositivo:"

#: src/android/logging.md:43
msgid ""
"```shell\n"
"m hello_rust_logs\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_logs\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/hello_rust_logs\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_logs\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_logs /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_logs\n"
"```"

#: src/android/logging.md:49
msgid "The logs show up in `adb logcat`:"
msgstr "Os logs aparecem em `adb logcat`:"

#: src/android/interoperability.md:3
msgid ""
"Rust has excellent support for interoperability with other languages. This "
"means that you can:"
msgstr ""
"O Rust tem excelente suporte para interoperabilidade com outras linguagens. "
"Isso significa que voc√™ pode:"

#: src/android/interoperability.md:6
msgid "Call Rust functions from other languages."
msgstr "Chamar fun√ß√µes Rust em outras linguagens."

#: src/android/interoperability.md:7
msgid "Call functions written in other languages from Rust."
msgstr "Chamar fun√ß√µes escritas em outras linguagens no Rust."

#: src/android/interoperability.md:9
msgid ""
"When you call functions in a foreign language we say that you're using a "
"_foreign function interface_, also known as FFI."
msgstr ""
"Quando voc√™ chama fun√ß√µes em outra linguagem, dizemos que voc√™ est√° usando "
"uma _interface de fun√ß√£o externa_, tamb√©m conhecida como FFI."

#: src/android/interoperability/with-c.md:1
msgid "Interoperability with C"
msgstr "Interoperabilidade com C"

#: src/android/interoperability/with-c.md:3
msgid ""
"Rust has full support for linking object files with a C calling convention. "
"Similarly, you can export Rust functions and call them from C."
msgstr ""
"_Rust_ tem suporte completo para vincular arquivos de objeto com uma "
"conven√ß√£o de chamada C. Da mesma forma, voc√™ pode exportar fun√ß√µes Rust e "
"cham√°-las em C."

#: src/android/interoperability/with-c.md:6
msgid "You can do it by hand if you want:"
msgstr "Voc√™ pode fazer isso manualmente se quiser:"

#: src/android/interoperability/with-c.md:16
msgid "\"{x}, {abs_x}\""
msgstr "\"{x}, {abs_x}\""

#: src/android/interoperability/with-c.md:20
msgid ""
"We already saw this in the [Safe FFI Wrapper exercise](../../exercises/day-3/"
"safe-ffi-wrapper.md)."
msgstr ""
"J√° vimos isso no exerc√≠cio [Safe FFI Wrapper ](../../exercises/day-3/safe-"
"ffi-wrapper.md)."

#: src/android/interoperability/with-c.md:23
msgid ""
"This assumes full knowledge of the target platform. Not recommended for "
"production."
msgstr ""
"Isso pressup√µe conhecimento total da plataforma de destino. N√£o recomendado "
"para produ√ß√£o."

#: src/android/interoperability/with-c.md:26
msgid "We will look at better options next."
msgstr "Veremos op√ß√µes melhores a seguir."

#: src/android/interoperability/with-c/bindgen.md:1
msgid "Using Bindgen"
msgstr "Usando Bindgen"

#: src/android/interoperability/with-c/bindgen.md:3
msgid ""
"The [bindgen](https://rust-lang.github.io/rust-bindgen/introduction.html) "
"tool can auto-generate bindings from a C header file."
msgstr ""
"A ferramenta [bindgen](https://rust-lang.github.io/rust-bindgen/introduction."
"html) pode gerar v√≠nculos (_bindings_) automaticamente a partir de um "
"arquivo de cabe√ßalho C."

#: src/android/interoperability/with-c/bindgen.md:6
msgid "First create a small C library:"
msgstr "Primeiro crie uma pequena biblioteca C:"

#: src/android/interoperability/with-c/bindgen.md:8
msgid "_interoperability/bindgen/libbirthday.h_:"
msgstr "_interoperability/bindgen/libbirthday.h_:"

#: src/android/interoperability/with-c/bindgen.md:19
msgid "_interoperability/bindgen/libbirthday.c_:"
msgstr "_interoperability/bindgen/libbirthday.c_:"

#: src/android/interoperability/with-c/bindgen.md:22
msgid "<stdio.h>"
msgstr "<stdio.h>"

#: src/android/interoperability/with-c/bindgen.md:23
#: src/android/interoperability/with-c/bindgen.md:50
msgid "\"libbirthday.h\""
msgstr "\"libbirthday.h\""

#: src/android/interoperability/with-c/bindgen.md:26
#: src/android/interoperability/with-c/bindgen.md:29
msgid "\"+--------------\\n\""
msgstr "\"+--------------\\n\""

#: src/android/interoperability/with-c/bindgen.md:27
msgid "\"| Happy Birthday %s!\\n\""
msgstr "\"|Feliz Anivers√°rio %s!\\n\""

#: src/android/interoperability/with-c/bindgen.md:28
msgid "\"| Congratulations with the %i years!\\n\""
msgstr "\"|Parab√©ns pelos %i anos!\\n\""

#: src/android/interoperability/with-c/bindgen.md:33
msgid "Add this to your `Android.bp` file:"
msgstr "Adicione isto ao seu arquivo `Android.bp`:"

#: src/android/interoperability/with-c/bindgen.md:35
#: src/android/interoperability/with-c/bindgen.md:55
#: src/android/interoperability/with-c/bindgen.md:69
#: src/android/interoperability/with-c/bindgen.md:106
msgid "_interoperability/bindgen/Android.bp_:"
msgstr "_interoperability/bindgen/Android.bp_:"

#: src/android/interoperability/with-c/bindgen.md:39
#: src/android/interoperability/with-c/bindgen.md:63
msgid "\"libbirthday\""
msgstr "\"libbirthday\""

#: src/android/interoperability/with-c/bindgen.md:40
msgid "\"libbirthday.c\""
msgstr "\"libbirthday.c\""

#: src/android/interoperability/with-c/bindgen.md:44
msgid ""
"Create a wrapper header file for the library (not strictly needed in this "
"example):"
msgstr ""
"Crie um arquivo de cabe√ßalho _wrapper_ para a biblioteca (n√£o estritamente "
"necess√°rio neste exemplo):"

#: src/android/interoperability/with-c/bindgen.md:47
msgid "_interoperability/bindgen/libbirthday_wrapper.h_:"
msgstr "_interoperability/bindgen/libbirthday_wrapper.h_:"

#: src/android/interoperability/with-c/bindgen.md:53
msgid "You can now auto-generate the bindings:"
msgstr "Agora voc√™ pode gerar automaticamente as vincula√ß√µes (_bindings_):"

#: src/android/interoperability/with-c/bindgen.md:59
#: src/android/interoperability/with-c/bindgen.md:75
msgid "\"libbirthday_bindgen\""
msgstr "\"libbirthday_bindgen\""

#: src/android/interoperability/with-c/bindgen.md:60
msgid "\"birthday_bindgen\""
msgstr "\"birthday_bindgen\""

#: src/android/interoperability/with-c/bindgen.md:61
msgid "\"libbirthday_wrapper.h\""
msgstr "\"libbirthday_wrapper.h\""

#: src/android/interoperability/with-c/bindgen.md:62
msgid "\"bindings\""
msgstr "\"bindings\""

#: src/android/interoperability/with-c/bindgen.md:67
msgid "Finally, we can use the bindings in our Rust program:"
msgstr ""
"Finalmente, podemos usar as vincula√ß√µes (_bindings_) em nosso programa Rust:"

#: src/android/interoperability/with-c/bindgen.md:73
msgid "\"print_birthday_card\""
msgstr "\"print_birthday_card\""

#: src/android/interoperability/with-c/bindgen.md:74
msgid "\"main.rs\""
msgstr "\"main.rs\""

#: src/android/interoperability/with-c/bindgen.md:79
msgid "_interoperability/bindgen/main.rs_:"
msgstr "_interoperability/bindgen/main.rs_:"

#: src/android/interoperability/with-c/bindgen.md:82
msgid "//! Bindgen demo.\n"
msgstr "//! Bindgen demo.\n"

#: src/android/interoperability/with-c/bindgen.md:89
msgid "// SAFETY: `print_card` is safe to call with a valid `card` pointer.\n"
msgstr ""
"// SEGURAN√áA: `print_card` √© seguro para chamar com um ponteiro `card` "
"v√°lido.\n"

#: src/android/interoperability/with-c/bindgen.md:98
msgid ""
"```shell\n"
"m print_birthday_card\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/print_birthday_card\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/print_birthday_card\n"
"```"
msgstr ""
"```shell\n"
"m print_birthday_card\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/print_birthday_card /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/print_birthday_card\n"
"```"

#: src/android/interoperability/with-c/bindgen.md:104
msgid "Finally, we can run auto-generated tests to ensure the bindings work:"
msgstr ""
"Por fim, podemos executar testes gerados automaticamente para garantir que "
"as vincula√ß√µes funcionem:"

#: src/android/interoperability/with-c/bindgen.md:110
#: src/android/interoperability/with-c/bindgen.md:112
msgid "\"libbirthday_bindgen_test\""
msgstr "\"libbirthday_bindgen_test\""

#: src/android/interoperability/with-c/bindgen.md:111
msgid "\":libbirthday_bindgen\""
msgstr "\":libbirthday_bindgen\""

#: src/android/interoperability/with-c/bindgen.md:113
msgid "\"general-tests\""
msgstr "\"general-tests\""

#: src/android/interoperability/with-c/bindgen.md:115
#: src/android/interoperability/with-c/bindgen.md:116
msgid "\"none\""
msgstr "\"none\""

#: src/android/interoperability/with-c/bindgen.md:115
msgid "// Generated file, skip linting\n"
msgstr "// Arquivo gerado, pule o linting\n"

#: src/android/interoperability/with-c/rust.md:1
msgid "Calling Rust"
msgstr "Chamando Rust"

#: src/android/interoperability/with-c/rust.md:3
msgid "Exporting Rust functions and types to C is easy:"
msgstr "Exportar fun√ß√µes e tipos do Rust para C √© f√°cil:"

#: src/android/interoperability/with-c/rust.md:5
msgid "_interoperability/rust/libanalyze/analyze.rs_"
msgstr "_interoperability/rust/libanalyze/analyze.rs_"

#: src/android/interoperability/with-c/rust.md:8
msgid "//! Rust FFI demo.\n"
msgstr "//! Rust FFI demo.\n"

#: src/android/interoperability/with-c/rust.md:12
msgid "/// Analyze the numbers.\n"
msgstr "/// Analisar os n√∫meros.\n"

#: src/android/interoperability/with-c/rust.md:17
msgid "\"x ({x}) is smallest!\""
msgstr "\"x ({x}) √© o menor!\""

#: src/android/interoperability/with-c/rust.md:19
msgid "\"y ({y}) is probably larger than x ({x})\""
msgstr "\"y ({y}) √© provavelmente maior que x ({x})\""

#: src/android/interoperability/with-c/rust.md:24
msgid "_interoperability/rust/libanalyze/analyze.h_"
msgstr "_interoperability/rust/libanalyze/analyze.h_"

#: src/android/interoperability/with-c/rust.md:37
msgid "_interoperability/rust/libanalyze/Android.bp_"
msgstr "_interoperability/rust/libanalyze/Android.bp_"

#: src/android/interoperability/with-c/rust.md:41
#: src/android/interoperability/with-c/rust.md:68
msgid "\"libanalyze_ffi\""
msgstr "\"libanalyze_ffi\""

#: src/android/interoperability/with-c/rust.md:42
msgid "\"analyze_ffi\""
msgstr "\"analyze_ffi\""

#: src/android/interoperability/with-c/rust.md:43
msgid "\"analyze.rs\""
msgstr "\"analyze.rs\""

#: src/android/interoperability/with-c/rust.md:48
msgid "We can now call this from a C binary:"
msgstr "Agora podemos cham√°-lo a partir de um bin√°rio C:"

#: src/android/interoperability/with-c/rust.md:50
msgid "_interoperability/rust/analyze/main.c_"
msgstr "_interoperability/rust/analisar/main.c_"

#: src/android/interoperability/with-c/rust.md:53
msgid "\"analyze.h\""
msgstr "\"analyze.h\""

#: src/android/interoperability/with-c/rust.md:62
msgid "_interoperability/rust/analyze/Android.bp_"
msgstr "_interoperability/rust/analyze/Android.bp_"

#: src/android/interoperability/with-c/rust.md:66
msgid "\"analyze_numbers\""
msgstr "\"analyze_numbers\""

#: src/android/interoperability/with-c/rust.md:67
msgid "\"main.c\""
msgstr "\"main.c\""

#: src/android/interoperability/with-c/rust.md:74
msgid ""
"```shell\n"
"m analyze_numbers\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/analyze_numbers\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/analyze_numbers\n"
"```"
msgstr ""
"```shell\n"
"m analyze_numbers\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/analyze_numbers /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/analyze_numbers\n"
"```"

#: src/android/interoperability/with-c/rust.md:82
msgid ""
"`#[no_mangle]` disables Rust's usual name mangling, so the exported symbol "
"will just be the name of the function. You can also use `#[export_name = "
"\"some_name\"]` to specify whatever name you want."
msgstr ""
"`#[no_mangle]` desativa a altera√ß√£o de name usual do Rust, ent√£o o s√≠mbolo "
"exportado ser√° apenas o nome da fun√ß√£o. Voc√™ tamb√©m pode usar `#[export_name "
"= \"algum_nome\"]` para especificar qualquer nome que desejar."

#: src/android/interoperability/cpp.md:3
msgid ""
"The [CXX crate](https://cxx.rs/) makes it possible to do safe "
"interoperability between Rust and C++."
msgstr ""
"O [crate CXX](https://cxx.rs/) possibilita a interoperabilidade segura entre "
"Rust e C++."

#: src/android/interoperability/cpp.md:6
msgid "The overall approach looks like this:"
msgstr "A abordagem geral √© assim:"

#: src/android/interoperability/cpp/bridge.md:3
msgid ""
"CXX relies on a description of the function signatures that will be exposed "
"from each language to the other. You provide this description using extern "
"blocks in a Rust module annotated with the `#[cxx::bridge]` attribute macro."
msgstr ""
"O CXX depende de uma descri√ß√£o das assinaturas de fun√ß√£o que ser√£o expostas "
"de cada linguagem para a outra. Voc√™ fornece essa descri√ß√£o usando blocos "
"externos em um m√≥dulo Rust anotado com a macro de atributo `#[cxx::bridge]`."

#: src/android/interoperability/cpp/bridge.md:9
msgid "\"org::blobstore\""
msgstr "\"org::blobstore\""

#: src/android/interoperability/cpp/bridge.md:11
msgid "// Shared structs with fields visible to both languages.\n"
msgstr ""
"// Estruturas compartilhadas com campos vis√≠veis para ambas as linguagens.\n"

#: src/android/interoperability/cpp/bridge.md:17
#: src/android/interoperability/cpp/generated-cpp.md:6
msgid "// Rust types and signatures exposed to C++.\n"
msgstr "// Tipos e assinaturas Rust expostos ao C++.\n"

#: src/android/interoperability/cpp/bridge.md:18
#: src/android/interoperability/cpp/rust-bridge.md:6
#: src/android/interoperability/cpp/generated-cpp.md:7
#: src/android/interoperability/cpp/rust-result.md:6
#: src/chromium/interoperability-with-cpp/example-bindings.md:9
#: src/chromium/interoperability-with-cpp/error-handling-qr.md:10
#: src/chromium/interoperability-with-cpp/error-handling-png.md:9
msgid "\"Rust\""
msgstr "\"Rust\""

#: src/android/interoperability/cpp/bridge.md:24
#: src/android/interoperability/cpp/cpp-bridge.md:6
msgid "// C++ types and signatures exposed to Rust.\n"
msgstr "// Tipos e assinaturas C++ expostos ao Rust.\n"

#: src/android/interoperability/cpp/bridge.md:25
#: src/android/interoperability/cpp/cpp-bridge.md:7
#: src/android/interoperability/cpp/cpp-exception.md:6
#: src/chromium/interoperability-with-cpp/example-bindings.md:15
msgid "\"C++\""
msgstr "\"C++\""

#: src/android/interoperability/cpp/bridge.md:26
#: src/android/interoperability/cpp/cpp-bridge.md:8
msgid "\"include/blobstore.h\""
msgstr "\"include/blobstore.h\""

#: src/android/interoperability/cpp/bridge.md:40
msgid "The bridge is generally declared in an `ffi` module within your crate."
msgstr ""
"O _bridge_ geralmente √© declarado em um m√≥dulo `ffi` dentro do seu _crate_."

#: src/android/interoperability/cpp/bridge.md:41
msgid ""
"From the declarations made in the bridge module, CXX will generate matching "
"Rust and C++ type/function definitions in order to expose those items to "
"both languages."
msgstr ""
"A partir das declara√ß√µes feitas no m√≥dulo _bridge_, o CXX gerar√° defini√ß√µes "
"de tipo/fun√ß√£o correspondentes em Rust e C++ para expor esses itens para "
"ambas as linguagens."

#: src/android/interoperability/cpp/bridge.md:44
msgid ""
"To view the generated Rust code, use [cargo-expand](https://github.com/"
"dtolnay/cargo-expand) to view the expanded proc macro. For most of the "
"examples you would use `cargo expand ::ffi` to expand just the `ffi` module "
"(though this doesn't apply for Android projects)."
msgstr ""
"Para visualizar o c√≥digo Rust gerado, use [cargo-expand](https://github.com/"
"dtolnay/cargo-expand) para visualizar a macro de procedimento expandida. "
"Para a maioria dos exemplos, voc√™ usaria `cargo expand ::ffi` para expandir "
"apenas o m√≥dulo `ffi` (embora isso n√£o se aplique a projetos Android)."

#: src/android/interoperability/cpp/bridge.md:47
msgid "To view the generated C++ code, look in `target/cxxbridge`."
msgstr "Para visualizar o c√≥digo C++ gerado, procure em `target/cxxbridge`."

#: src/android/interoperability/cpp/rust-bridge.md:1
msgid "Rust Bridge Declarations"
msgstr "Declara√ß√µes de _Bridge_ Rust"

#: src/android/interoperability/cpp/rust-bridge.md:7
msgid "// Opaque type\n"
msgstr "// Tipo opaco\n"

#: src/android/interoperability/cpp/rust-bridge.md:8
msgid "// Method on `MyType`\n"
msgstr "// M√©todo em `MyType`\n"

#: src/android/interoperability/cpp/rust-bridge.md:9
msgid "// Free function\n"
msgstr "// Fun√ß√£o livre\n"

#: src/android/interoperability/cpp/rust-bridge.md:28
msgid ""
"Items declared in the `extern \"Rust\"` reference items that are in scope in "
"the parent module."
msgstr ""
"Os itens declarados em `extern \"Rust\"` referenciam itens que est√£o no "
"escopo no m√≥dulo pai."

#: src/android/interoperability/cpp/rust-bridge.md:30
msgid ""
"The CXX code generator uses your `extern \"Rust\"` section(s) to produce a C+"
"+ header file containing the corresponding C++ declarations. The generated "
"header has the same path as the Rust source file containing the bridge, "
"except with a .rs.h file extension."
msgstr ""
"O gerador de c√≥digo CXX usa sua(s) se√ß√£o(√µes) `extern \"Rust\"` para "
"produzir um arquivo de cabe√ßalho C++ contendo as declara√ß√µes C++ "
"correspondentes. O cabe√ßalho gerado tem o mesmo caminho do arquivo de origem "
"Rust contendo a ponte, exceto com uma extens√£o de arquivo .rs.h."

#: src/android/interoperability/cpp/generated-cpp.md:15
msgid "Results in (roughly) the following C++:"
msgstr "Resulta (aproximadamente) no seguinte C++:"

#: src/android/interoperability/cpp/cpp-bridge.md:1
msgid "C++ Bridge Declarations"
msgstr "Declara√ß√µes de _Bridge_ C++"

#: src/android/interoperability/cpp/cpp-bridge.md:20
msgid "Results in (roughly) the following Rust:"
msgstr "Resulta (aproximadamente) no seguinte Rust:"

#: src/android/interoperability/cpp/cpp-bridge.md:30
msgid "\"org$blobstore$cxxbridge1$new_blobstore_client\""
msgstr "\"org$blobstore$cxxbridge1$new_blobstore_client\""

#: src/android/interoperability/cpp/cpp-bridge.md:39
msgid "\"org$blobstore$cxxbridge1$BlobstoreClient$put\""
msgstr "\"org$blobstore$cxxbridge1$BlobstoreClient$put\""

#: src/android/interoperability/cpp/cpp-bridge.md:56
msgid ""
"The programmer does not need to promise that the signatures they have typed "
"in are accurate. CXX performs static assertions that the signatures exactly "
"correspond with what is declared in C++."
msgstr ""
"O programador n√£o precisa prometer que as assinaturas que ele digitou est√£o "
"corretas. O CXX realiza verifica√ß√µes est√°ticas de que as assinaturas "
"correspondem exatamente ao que √© declarado em C++."

#: src/android/interoperability/cpp/cpp-bridge.md:59
msgid ""
"`unsafe extern` blocks allow you to declare C++ functions that are safe to "
"call from Rust."
msgstr ""
"Os blocos `unsafe extern` permitem que voc√™ declare fun√ß√µes C++ que podem "
"ser chamadas com seguran√ßa do Rust."

#: src/android/interoperability/cpp/shared-types.md:9
msgid "// A=1, J=11, Q=12, K=13\n"
msgstr "// A=1, J=11, Q=12, K=13\n"

#: src/android/interoperability/cpp/shared-types.md:23
msgid "Only C-like (unit) enums are supported."
msgstr "Apenas enums C-like (unit) s√£o suportados."

#: src/android/interoperability/cpp/shared-types.md:24
msgid ""
"A limited number of traits are supported for `#[derive()]` on shared types. "
"Corresponding functionality is also generated for the C++ code, e.g. if you "
"derive `Hash` also generates an implementation of `std::hash` for the "
"corresponding C++ type."
msgstr ""
"Um n√∫mero limitado de _traits_ s√£o suportados para `#[derive()]` em tipos "
"compartilhados. A funcionalidade correspondente tamb√©m √© gerada para o "
"c√≥digo C++, por exemplo, se voc√™ derivar `Hash` tamb√©m gera uma "
"implementa√ß√£o de `std::hash` para o tipo C++ correspondente."

#: src/android/interoperability/cpp/shared-enums.md:15
msgid "Generated Rust:"
msgstr "Rust gerado:"

#: src/android/interoperability/cpp/shared-enums.md:33
msgid "Generated C++:"
msgstr "C++ gerado:"

#: src/android/interoperability/cpp/shared-enums.md:46
msgid ""
"On the Rust side, the code generated for shared enums is actually a struct "
"wrapping a numeric value. This is because it is not UB in C++ for an enum "
"class to hold a value different from all of the listed variants, and our "
"Rust representation needs to have the same behavior."
msgstr ""
"No lado Rust, o c√≥digo gerado para enums compartilhados √© realmente uma "
"estrutura que envolve um valor num√©rico. Isso ocorre porque n√£o √© UB em C++ "
"para uma classe enum ter um valor diferente de todas as variantes listadas, "
"e nossa representa√ß√£o Rust precisa ter o mesmo comportamento."

#: src/android/interoperability/cpp/rust-result.md:13
msgid "\"fallible1 requires depth > 0\""
msgstr "\"fallible1 requer profundidade > 0\""

#: src/android/interoperability/cpp/rust-result.md:16
msgid "\"Success!\""
msgstr "\"Sucesso!\""

#: src/android/interoperability/cpp/rust-result.md:22
msgid ""
"Rust functions that return `Result` are translated to exceptions on the C++ "
"side."
msgstr ""
"As fun√ß√µes Rust que retornam `Result` s√£o traduzidas para exce√ß√µes no lado C+"
"+."

#: src/android/interoperability/cpp/rust-result.md:24
msgid ""
"The exception thrown will always be of type `rust::Error`, which primarily "
"exposes a way to get the error message string. The error message will come "
"from the error type's `Display` impl."
msgstr ""
"A exce√ß√£o lan√ßada sempre ser√° do tipo `rust::Error`, que exp√µe "
"principalmente uma maneira de obter a string da mensagem de erro. A mensagem "
"de erro vir√° da implementa√ß√£o `Display` do tipo de erro."

#: src/android/interoperability/cpp/rust-result.md:27
msgid ""
"A panic unwinding from Rust to C++ will always cause the process to "
"immediately terminate."
msgstr ""
"Um p√¢nico propagando do Rust para o C++ sempre far√° com que o processo "

#: src/android/interoperability/cpp/cpp-exception.md:7
msgid "\"example/include/example.h\""
msgstr "\"example/include/example.h\""

#: src/android/interoperability/cpp/cpp-exception.md:14
msgid "\"Error: {}\""
msgstr "\"Erro: {}\""

#: src/android/interoperability/cpp/cpp-exception.md:22
msgid ""
"C++ functions declared to return a `Result` will catch any thrown exception "
"on the C++ side and return it as an `Err` value to the calling Rust function."
msgstr ""
"As fun√ß√µes C++ declaradas para retornar um `Result` capturar√£o qualquer "
"exce√ß√£o lan√ßada no lado C++ e a retornar√£o como um valor `Err` para a fun√ß√£o "

#: src/android/interoperability/cpp/cpp-exception.md:24
msgid ""
"If an exception is thrown from an extern \"C++\" function that is not "
"declared by the CXX bridge to return `Result`, the program calls C++'s `std::"
"terminate`. The behavior is equivalent to the same exception being thrown "
"through a `noexcept` C++ function."
msgstr ""
"Se uma exce√ß√£o for lan√ßada de uma fun√ß√£o externa \"C++\" que n√£o √© declarada "
"pela _bridge_ CXX para retornar `Result`, o programa chama `std::terminate` "
"do C++. O comportamento √© equivalente √† mesma exce√ß√£o sendo lan√ßada por meio "
"de uma fun√ß√£o `noexcept` C++."

#: src/android/interoperability/cpp/type-mapping.md:3
msgid "Rust Type"
msgstr "Tipo em Rust"

#: src/android/interoperability/cpp/type-mapping.md:3
msgid "C++ Type"
msgstr "Tipo em C++"

#: src/android/interoperability/cpp/type-mapping.md:5
msgid "`rust::String`"
msgstr "`rust::String`"

#: src/android/interoperability/cpp/type-mapping.md:6
msgid "`&str`"
msgstr "`&str`"

#: src/android/interoperability/cpp/type-mapping.md:6
msgid "`rust::Str`"
msgstr "`rust::Str`"

#: src/android/interoperability/cpp/type-mapping.md:7
msgid "`CxxString`"
msgstr "`CxxString`"

#: src/android/interoperability/cpp/type-mapping.md:7
msgid "`std::string`"
msgstr "`std::string`"

#: src/android/interoperability/cpp/type-mapping.md:8
msgid "`&[T]`/`&mut [T]`"
msgstr "`&[T]`/`&mut [T]`"

#: src/android/interoperability/cpp/type-mapping.md:8
msgid "`rust::Slice`"
msgstr "`rust::Slice`"

#: src/android/interoperability/cpp/type-mapping.md:9
msgid "`rust::Box<T>`"
msgstr "`rust::Box<T>`"

#: src/android/interoperability/cpp/type-mapping.md:10
msgid "`UniquePtr<T>`"
msgstr "`UniquePtr<T>`"

#: src/android/interoperability/cpp/type-mapping.md:10
msgid "`std::unique_ptr<T>`"
msgstr "`std::unique_ptr<T>`"

#: src/android/interoperability/cpp/type-mapping.md:11
msgid "`Vec<T>`"
msgstr "`Vec<T>`"

#: src/android/interoperability/cpp/type-mapping.md:11
msgid "`rust::Vec<T>`"
msgstr "`rust::Vec<T>`"

#: src/android/interoperability/cpp/type-mapping.md:12
msgid "`CxxVector<T>`"
msgstr "`CxxVector<T>`"

#: src/android/interoperability/cpp/type-mapping.md:12
msgid "`std::vector<T>`"
msgstr "`std::vector<T>`"

#: src/android/interoperability/cpp/type-mapping.md:16
msgid ""
"These types can be used in the fields of shared structs and the arguments "
"and returns of extern functions."
msgstr ""
"Esses tipos podem ser usados nos campos de _structs_ compartilhadas e nos "
"argumentos e retornos de fun√ß√µes externas."

#: src/android/interoperability/cpp/type-mapping.md:18
msgid ""
"Note that Rust's `String` does not map directly to `std::string`. There are "
"a few reasons for this:"
msgstr ""
"Observe que a `String` do Rust n√£o √© mapeada diretamente para `std::string`. "
"H√° algumas raz√µes para isso:"

#: src/android/interoperability/cpp/type-mapping.md:20
msgid ""
"`std::string` does not uphold the UTF-8 invariant that `String` requires."
msgstr "`std::string` n√£o mant√©m a invariante UTF-8 que `String` requer."

#: src/android/interoperability/cpp/type-mapping.md:21
msgid ""
"The two types have different layouts in memory and so can't be passed "
"directly between languages."
msgstr ""
"Os dois tipos t√™m layouts diferentes na mem√≥ria e, portanto, n√£o podem ser "
"passados diretamente entre as linguagens."

#: src/android/interoperability/cpp/type-mapping.md:23
msgid ""
"`std::string` requires move constructors that don't match Rust's move "
"semantics, so a `std::string` can't be passed by value to Rust."
msgstr ""
"`std::string` requer construtores de movimento que n√£o correspondem √† "
"sem√¢ntica de movimento do Rust, portanto, uma `std::string` n√£o pode ser "
"passada por valor para o Rust."

#: src/android/interoperability/cpp/android-build-cpp.md:1
#: src/android/interoperability/cpp/android-cpp-genrules.md:1
#: src/android/interoperability/cpp/android-build-rust.md:1
msgid "Building in Android"
msgstr "Compilando no Android"

#: src/android/interoperability/cpp/android-build-cpp.md:3
msgid ""
"Create a `cc_library_static` to build the C++ library, including the CXX "
"generated header and source file."
msgstr ""
"Crie uma `cc_library_static` para compilar a biblioteca C++, incluindo o "
"cabe√ßalho e o arquivo de origem gerados pelo CXX."

#: src/android/interoperability/cpp/android-build-cpp.md:8
#: src/android/interoperability/cpp/android-build-rust.md:10
msgid "\"libcxx_test_cpp\""
msgstr "\"libcxx_test_cpp\""

#: src/android/interoperability/cpp/android-build-cpp.md:9
msgid "\"cxx_test.cpp\""
msgstr "\"cxx_test.cpp\""

#: src/android/interoperability/cpp/android-build-cpp.md:11
msgid "\"cxx-bridge-header\""
msgstr "\"cxx-bridge-header\""

#: src/android/interoperability/cpp/android-build-cpp.md:12
#: src/android/interoperability/cpp/android-cpp-genrules.md:10
msgid "\"libcxx_test_bridge_header\""
msgstr "\"libcxx_test_bridge_header\""

#: src/android/interoperability/cpp/android-build-cpp.md:14
#: src/android/interoperability/cpp/android-cpp-genrules.md:19
msgid "\"libcxx_test_bridge_code\""
msgstr "\"libcxx_test_bridge_code\""

#: src/android/interoperability/cpp/android-build-cpp.md:20
msgid ""
"Point out that `libcxx_test_bridge_header` and `libcxx_test_bridge_code` are "
"the dependencies for the CXX-generated C++ bindings. We'll show how these "
"are setup on the next slide."
msgstr ""
"Observe que `libcxx_test_bridge_header` e `libcxx_test_bridge_code` s√£o as "
"depend√™ncias para as vincula√ß√µes C++ geradas pelo CXX. Mostraremos como "
"essas s√£o configuradas no pr√≥ximo slide."

#: src/android/interoperability/cpp/android-build-cpp.md:23
msgid ""
"Note that you also need to depend on the `cxx-bridge-header` library in "
"order to pull in common CXX definitions."
msgstr ""
"Observe que voc√™ tamb√©m precisa depender da biblioteca `cxx-bridge-header` "
"para puxar as defini√ß√µes CXX comuns."

#: src/android/interoperability/cpp/android-build-cpp.md:25
msgid ""
"Full docs for using CXX in Android can be found in [the Android docs]"
"(https://source.android.com/docs/setup/build/rust/building-rust-modules/"
"android-rust-patterns#rust-cpp-interop-using-cxx). You may want to share "
"that link with the class so that students know where they can find these "
"instructions again in the future."
msgstr ""
"Documenta√ß√£o completa para usar CXX no Android pode ser encontrada na "
"[documenta√ß√£o do Android](https://source.android.com/docs/setup/build/rust/"
"building-rust-modules/android-rust-patterns#rust-cpp-interop-using-cxx). "
"Voc√™ pode querer compartilhar esse link com a classe para que os alunos "
"saibam onde podem encontrar essas instru√ß√µes novamente no futuro."

#: src/android/interoperability/cpp/android-cpp-genrules.md:3
msgid ""
"Create two genrules: One to generate the CXX header, and one to generate the "
"CXX source file. These are then used as inputs to the `cc_library_static`."
msgstr ""
"Crie duas regras de gera√ß√£o: uma para gerar o cabe√ßalho CXX e outra para "
"gerar o arquivo de origem CXX. Estes s√£o ent√£o usados como entradas para a "
"`cc_library_static`."

#: src/android/interoperability/cpp/android-cpp-genrules.md:7
msgid ""
"// Generate a C++ header containing the C++ bindings\n"
"// to the Rust exported functions in lib.rs.\n"
msgstr ""
"// Gera um cabe√ßalho C++ contendo as vincula√ß√µes C++\n"
"// para as fun√ß√µes exportadas do Rust em lib.rs.\n"

#: src/android/interoperability/cpp/android-cpp-genrules.md:11
#: src/android/interoperability/cpp/android-cpp-genrules.md:20
msgid "\"cxxbridge\""
msgstr "\"cxxbridge\""

#: src/android/interoperability/cpp/android-cpp-genrules.md:12
msgid "\"$(location cxxbridge) $(in) --header > $(out)\""
msgstr "\"$(location cxxbridge) $(in) --header > $(out)\""

#: src/android/interoperability/cpp/android-cpp-genrules.md:13
#: src/android/interoperability/cpp/android-cpp-genrules.md:22
#: src/android/interoperability/cpp/android-build-rust.md:8
msgid "\"lib.rs\""
msgstr "\"lib.rs\""

#: src/android/interoperability/cpp/android-cpp-genrules.md:14
msgid "\"lib.rs.h\""
msgstr "\"lib.rs.h\""

#: src/android/interoperability/cpp/android-cpp-genrules.md:16
msgid "// Generate the C++ code that Rust calls into.\n"
msgstr "// Gera o c√≥digo C++ que o Rust chama.\n"

#: src/android/interoperability/cpp/android-cpp-genrules.md:21
msgid "\"$(location cxxbridge) $(in) > $(out)\""
msgstr "\"$(location cxxbridge) $(in) > $(out)\""

#: src/android/interoperability/cpp/android-cpp-genrules.md:23
msgid "\"lib.rs.cc\""
msgstr "\"lib.rs.cc\""

#: src/android/interoperability/cpp/android-cpp-genrules.md:29
msgid ""
"The `cxxbridge` tool is a standalone tool that generates the C++ side of the "
"bridge module. It is included in Android and available as a Soong tool."
msgstr ""
"A ferramenta `cxxbridge` √© uma ferramenta independente que gera o lado C++ "
"do m√≥dulo _bridge_. Ele est√° inclu√≠do no Android e est√° dispon√≠vel como uma "
"ferramenta Soong."

#: src/android/interoperability/cpp/android-cpp-genrules.md:31
msgid ""
"By convention, if your Rust source file is `lib.rs` your header file will be "
"named `lib.rs.h` and your source file will be named `lib.rs.cc`. This naming "
"convention isn't enforced, though."
msgstr ""
"Por conven√ß√£o, se o seu arquivo de origem Rust for `lib.rs`, seu arquivo de "
"cabe√ßalho ser√° chamado `lib.rs.h` e seu arquivo de origem ser√° chamado `lib."
"rs.cc`. Essa conven√ß√£o de nomenclatura n√£o √© aplicada, no entanto."

#: src/android/interoperability/cpp/android-build-rust.md:3
msgid ""
"Create a `rust_binary` that depends on `libcxx` and your `cc_library_static`."
msgstr ""
"Crie um `rust_binary` que depende de `libcxx` e sua `cc_library_static`."

#: src/android/interoperability/cpp/android-build-rust.md:7
msgid "\"cxx_test\""
msgstr "\"cxx_test\""

#: src/android/interoperability/cpp/android-build-rust.md:9
msgid "\"libcxx\""
msgstr "\"libcxx\""

#: src/android/interoperability/java.md:1
msgid "Interoperability with Java"
msgstr "Interoperabilidade com Java"

#: src/android/interoperability/java.md:3
msgid ""
"Java can load shared objects via [Java Native Interface (JNI)](https://en."
"wikipedia.org/wiki/Java_Native_Interface). The [`jni` crate](https://docs.rs/"
"jni/) allows you to create a compatible library."
msgstr ""
"Java pode carregar objetos compartilhados via [Java Native Interface (JNI)]"
"(https://en.wikipedia.org/wiki/Java_Native_Interface). O [crate `jni`]"
"(https://docs.rs/jni/) permite que voc√™ crie uma biblioteca compat√≠vel."

#: src/android/interoperability/java.md:8
msgid "First, we create a Rust function to export to Java:"
msgstr "Primeiro, criamos uma fun√ß√£o Rust para exportar para Java:"

#: src/android/interoperability/java.md:10
msgid "_interoperability/java/src/lib.rs_:"
msgstr "_interoperability/java/src/lib.rs_:"

#: src/android/interoperability/java.md:13
msgid "//! Rust <-> Java FFI demo.\n"
msgstr "//! Rust <-> Java FFI demo.\n"

#: src/android/interoperability/java.md:18
msgid "/// HelloWorld::hello method implementation.\n"
msgstr "/// Implementa√ß√£o do m√©todo HelloWorld::hello.\n"

#: src/android/interoperability/java.md:21
msgid "\"system\""
msgstr "\"system\""

#: src/android/interoperability/java.md:27
msgid "\"Hello, {input}!\""
msgstr "\"Ol√°, {input}!\""

#: src/android/interoperability/java.md:33
#: src/android/interoperability/java.md:63
msgid "_interoperability/java/Android.bp_:"
msgstr "_interoperability/java/Android.bp_:"

#: src/android/interoperability/java.md:37
#: src/android/interoperability/java.md:70
msgid "\"libhello_jni\""
msgstr "\"libhello_jni\""

#: src/android/interoperability/java.md:38
#: src/android/interoperability/java.md:53
msgid "\"hello_jni\""
msgstr "\"hello_jni\""

#: src/android/interoperability/java.md:40
msgid "\"libjni\""
msgstr "\"libjni\""

#: src/android/interoperability/java.md:44
msgid "Finally, we can call this function from Java:"
msgstr "Finalmente, podemos chamar esta fun√ß√£o do Java:"

#: src/android/interoperability/java.md:46
msgid "_interoperability/java/HelloWorld.java_:"
msgstr "_interoperability/java/HelloWorld.java_:"

#: src/android/interoperability/java.md:67
msgid "\"helloworld_jni\""
msgstr "\"helloworld_jni\""

#: src/android/interoperability/java.md:68
msgid "\"HelloWorld.java\""
msgstr "\"HelloWorld.java\""

#: src/android/interoperability/java.md:69
msgid "\"HelloWorld\""
msgstr "\"HelloWorld\""

#: src/android/interoperability/java.md:74
msgid "Finally, you can build, sync, and run the binary:"
msgstr "Por fim, voc√™ pode criar, sincronizar e executar o bin√°rio:"

#: src/exercises/android/morning.md:3
msgid ""
"This is a group exercise: We will look at one of the projects you work with "
"and try to integrate some Rust into it. Some suggestions:"
msgstr ""
"Este √© um exerc√≠cio em grupo: N√≥s iremos ver um dos projetos com os quais "
"voc√™ trabalha e tentar integrar um pouco de Rust nele. Algumas sugest√µes:"

#: src/exercises/android/morning.md:6
msgid "Call your AIDL service with a client written in Rust."
msgstr "Chame seu servi√ßo AIDL com um cliente escrito em Rust."

#: src/exercises/android/morning.md:8
msgid "Move a function from your project to Rust and call it."
msgstr "Mova uma fun√ß√£o do seu projeto para o Rust e a chame."

#: src/exercises/android/morning.md:12
msgid ""
"No solution is provided here since this is open-ended: it relies on someone "
"in the class having a piece of code which you can turn in to Rust on the fly."
msgstr ""
"Nenhuma solu√ß√£o √© fornecida aqui, pois isso √© aberto: depende de voc√™ ter "
"uma classe tendo um peda√ßo de c√≥digo que voc√™ pode transformar em Rust em "
"tempo real."

#: src/chromium.md:1
#, fuzzy
msgid "Welcome to Rust in Chromium"
msgstr "Bem-vindo ao Rust para Android"

#: src/chromium.md:3
msgid ""
"Rust is supported for third-party libraries in Chromium, with first-party "
"glue code to connect between Rust and existing Chromium C++ code."
msgstr ""

#: src/chromium.md:6
msgid ""
"Today, we'll call into Rust to do something silly with strings. If you've "
"got a corner of the code where you're displaying a UTF8 string to the user, "
"feel free to follow this recipe in your part of the codebase instead of the "
"exact part we talk about."
msgstr ""

#: src/chromium/setup.md:3
msgid ""
"Make sure you can build and run Chromium. Any platform and set of build "
"flags is OK, so long as your code is relatively recent (commit position "
"1223636 onwards, corresponding to November 2023):"
msgstr ""

#: src/chromium/setup.md:13
msgid ""
"(A component, debug build is recommended for quickest iteration time. This "
"is the default!)"
msgstr ""

#: src/chromium/setup.md:16
msgid ""
"See [How to build Chromium](https://www.chromium.org/developers/how-tos/get-"
"the-code/) if you aren't already at that point. Be warned: setting up to "
"build Chromium takes time."
msgstr ""

#: src/chromium/setup.md:21
msgid "It's also recommended that you have Visual Studio code installed."
msgstr ""

#: src/chromium/setup.md:23
msgid "About the exercises"
msgstr ""

#: src/chromium/setup.md:25
msgid ""
"This part of the course has a series of exercises which build on each other. "
"We'll be doing them spread throughout the course instead of just at the end. "
"If you don't have time to complete a certain part, don't worry: you can "
"catch up in the next slot."
msgstr ""

#: src/chromium/cargo.md:3
msgid ""
"Rust community typically uses `cargo` and libraries from [crates.io](https://"
"crates.io/). Chromium is built using `gn` and `ninja` and a curated set of "
"dependencies."
msgstr ""

#: src/chromium/cargo.md:6
msgid "When writing code in Rust, your choices are:"
msgstr ""

#: src/chromium/cargo.md:8
msgid ""
"Use `gn` and `ninja` with the help of the templates from `//build/rust/*."
"gni` (e.g. `rust_static_library` that we'll meet later). This uses "
"Chromium's audited toolchain and crates."
msgstr ""

#: src/chromium/cargo.md:11
msgid ""
"Use `cargo`, but [restrict yourself to Chromium's audited toolchain and "
"crates](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/"
"docs/rust.md#Using-cargo)"
msgstr ""

#: src/chromium/cargo.md:13
msgid ""
"Use `cargo`, trusting a [toolchain](https://rustup.rs/) and/or [crates "
"downloaded from the internet](https://crates.io/)"
msgstr ""

#: src/chromium/cargo.md:16
msgid ""
"From here on we'll be focusing on `gn` and `ninja`, because this is how Rust "
"code can be built into the Chromium browser. At the same time, Cargo is an "
"important part of the Rust ecosystem and you should keep it in your toolbox."
msgstr ""

#: src/chromium/cargo.md:20
#, fuzzy
msgid "Mini exercise"
msgstr "Exerc√≠cios"

#: src/chromium/cargo.md:22
msgid "Split into small groups and:"
msgstr ""

#: src/chromium/cargo.md:24
msgid ""
"Brainstorm scenarios where `cargo` may offer an advantage and assess the "
"risk profile of these scenarios."
msgstr ""

#: src/chromium/cargo.md:26
msgid ""
"Discuss which tools, libraries, and groups of people need to be trusted when "
"using `gn` and `ninja`, offline `cargo`, etc."
msgstr ""

#: src/chromium/cargo.md:31
msgid ""
"Ask students to avoid peeking at the speaker notes before completing the "
"exercise. Assuming folks taking the course are physically together, ask them "
"to discuss in small groups of 3-4 people."
msgstr ""

#: src/chromium/cargo.md:35
msgid ""
"Notes/hints related to the first part of the exercise (\"scenarios where "
"Cargo may offer an advantage\"):"
msgstr ""

#: src/chromium/cargo.md:38
msgid ""
"It's fantastic that when writing a tool, or prototyping a part of Chromium, "
"one has access to the rich ecosystem of crates.io libraries. There is a "
"crate for almost anything and they are usually quite pleasant to use. "
"(`clap` for command-line parsing, `serde` for serializing/deserializing to/"
"from various formats, `itertools` for working with iterators, etc.)."
msgstr ""

#: src/chromium/cargo.md:44
msgid ""
"`cargo` makes it easy to try a library (just add a single line to `Cargo."
"toml` and start writing code)"
msgstr ""

#: src/chromium/cargo.md:46
msgid ""
"It may be worth comparing how CPAN helped make `perl` a popular choice. Or "
"comparing with `python` + `pip`."
msgstr ""

#: src/chromium/cargo.md:49
msgid ""
"Development experience is made really nice not only by core Rust tools (e.g. "
"using `rustup` to switch to a different `rustc` version when testing a crate "
"that needs to work on nightly, current stable, and older stable) but also by "
"an ecosystem of third-party tools (e.g. Mozilla provides `cargo vet` for "
"streamlining and sharing security audits; `criterion` crate gives a "
"streamlined way to run benchmarks)."
msgstr ""

#: src/chromium/cargo.md:56
msgid ""
"`cargo` makes it easy to add a tool via `cargo install --locked cargo-vet`."
msgstr ""

#: src/chromium/cargo.md:57
msgid "It may be worth comparing with Chrome Extensions or VScode extensions."
msgstr ""

#: src/chromium/cargo.md:59
msgid ""
"Broad, generic examples of projects where `cargo` may be the right choice:"
msgstr ""

#: src/chromium/cargo.md:61
msgid ""
"Perhaps surprisingly, Rust is becoming increasingly popular in the industry "
"for writing command line tools. The breadth and ergonomics of libraries is "
"comparable to Python, while being more robust (thanks to the rich "
"typesystem) and running faster (as a compiled, rather than interpreted "
"language)."
msgstr ""

#: src/chromium/cargo.md:66
msgid ""
"Participating in the Rust ecosystem requires using standard Rust tools like "
"Cargo. Libraries that want to get external contributions, and want to be "
"used outside of Chromium (e.g. in Bazel or Android/Soong build environments) "
"should probably use Cargo."
msgstr ""

#: src/chromium/cargo.md:71
msgid "Examples of Chromium-related projects that are `cargo`\\-based:"
msgstr ""

#: src/chromium/cargo.md:72
msgid ""
"`serde_json_lenient` (experimented with in other parts of Google which "
"resulted in PRs with performance improvements)"
msgstr ""

#: src/chromium/cargo.md:74
msgid "Fontations libraries like `font-types`"
msgstr ""

#: src/chromium/cargo.md:75
msgid ""
"`gnrt` tool (we will meet it later in the course) which depends on `clap` "
"for command-line parsing and on `toml` for configuration files."
msgstr ""

#: src/chromium/cargo.md:77
msgid ""
"Disclaimer: a unique reason for using `cargo` was unavailability of `gn` "
"when building and bootstrapping Rust standard library when building Rust "
"toolchain.)"
msgstr ""

#: src/chromium/cargo.md:80
msgid ""
"`run_gnrt.py` uses Chromium's copy of `cargo` and `rustc`. `gnrt` depends on "
"third-party libraries downloaded from the internet, by `run_gnrt.py` asks "
"`cargo` that only `--locked` content is allowed via `Cargo.lock`.)"
msgstr ""

#: src/chromium/cargo.md:84
msgid ""
"Students may identify the following items as being implicitly or explicitly "
"trusted:"
msgstr ""

#: src/chromium/cargo.md:87
msgid ""
"`rustc` (the Rust compiler) which in turn depends on the LLVM libraries, the "
"Clang compiler, the `rustc` sources (fetched from GitHub, reviewed by Rust "
"compiler team), binary Rust compiler downloaded for bootstrapping"
msgstr ""

#: src/chromium/cargo.md:90
msgid ""
"`rustup` (it may be worth pointing out that `rustup` is developed under the "
"umbrella of the https://github.com/rust-lang/ organization - same as `rustc`)"
msgstr ""

#: src/chromium/cargo.md:92
msgid "`cargo`, `rustfmt`, etc."
msgstr ""

#: src/chromium/cargo.md:93
msgid ""
"Various internal infrastructure (bots that build `rustc`, system for "
"distributing the prebuilt toolchain to Chromium engineers, etc.)"
msgstr ""

#: src/chromium/cargo.md:95
msgid "Cargo tools like `cargo audit`, `cargo vet`, etc."
msgstr ""

#: src/chromium/cargo.md:96
msgid ""
"Rust libraries vendored into `//third_party/rust` (audited by "
"security@chromium.org)"
msgstr ""

#: src/chromium/cargo.md:98
msgid "Other Rust libraries (some niche, some quite popular and commonly used)"
msgstr ""

#: src/chromium/policy.md:1
msgid "Chromium Rust policy"
msgstr ""

#: src/chromium/policy.md:3
msgid ""
"Chromium does not yet allow first-party Rust except in rare cases as "
"approved by Chromium's [Area Tech Leads](https://source.chromium.org/"
"chromium/chromium/src/+/main:ATL_OWNERS)."
msgstr ""

#: src/chromium/policy.md:7
msgid ""
"Chromium's policy on third party libraries is outlined [here](https://"
"chromium.googlesource.com/chromium/src/+/main/docs/adding_to_third_party."
"md#rust) - Rust is allowed for third party libraries under various "
"circumstances, including if they're the best option for performance or for "
"security."
msgstr ""

#: src/chromium/policy.md:12
msgid ""
"Very few Rust libraries directly expose a C/C++ API, so that means that "
"nearly all such libraries will require a small amount of first-party glue "
"code."
msgstr ""

#: src/chromium/policy.md:15
#, fuzzy
msgid ""
"```bob\n"
"\"C++\"                           Rust\n"
".- - - - - - - - - -.           .- - - - - - - - - - - - - - - - - - - - - - "
"-.\n"
":                   :           :                                             :\n"
": Existing Chromium :           :  Chromium Rust              Existing "
"Rust   :\n"
": \"C++\"             :           :  \"wrapper\"                  "
"crate           :\n"
": +---------------+ :           : +----------------+          +-------------"
"+ :\n"
": |               | :           : |                |          |             "
"| :\n"
": |         o-----+-+-----------+-+->            o-+----------+-->          "
"| :\n"
": |               | : Language  : |                | Crate    |             "
"| :\n"
": +---------------+ : boundary  : +----------------+ API      +-------------"
"+ :\n"
":                   :           :                                             :\n"
"`- - - - - - - - - -'           `- - - - - - - - - - - - - - - - - - - - - - "
"-'\n"
"```"
msgstr ""
"```bob\n"
" Pilha                           Heap\n"
".- - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - - "
"-.\n"
":                         :     :                                             :\n"
":    "
"lista                :     :                                             :\n"
":   +----+----+           :     :    +----+----+    +----+------"
"+             :\n"
":   | 1  | o--+-----------+-----+--->| 2  | o--+--->| // | null "
"|             :\n"
":   +----+----+           :     :    +----+----+    +----+------"
"+             :\n"
":                         :     :                                             :\n"
":                         :     :                                             :\n"
"`- - - - - - - - - - - - -'     '- - - - - - - - - - - - - - - - - - - - - - "
"-'\n"
"```"

#: src/chromium/policy.md:30
msgid ""
"First-party Rust glue code for a particular third-party crate should "
"normally be kept in `third_party/rust/<crate>/<version>/wrapper`."
msgstr ""

#: src/chromium/policy.md:33
msgid "Because of this, today's course will be heavily focused on:"
msgstr ""

#: src/chromium/policy.md:35
msgid "Bringing in third-party Rust libraries (\"crates\")"
msgstr ""

#: src/chromium/policy.md:36
msgid "Writing glue code to be able to use those crates from Chromium C++."
msgstr ""

#: src/chromium/policy.md:38
msgid "If this policy changes over time, the course will evolve to keep up."
msgstr ""

#: src/chromium/build-rules.md:1
#, fuzzy
msgid "Build rules"
msgstr "Regras de Constru√ß√£o (Build)"

#: src/chromium/build-rules.md:3
msgid ""
"Rust code is usually built using `cargo`. Chromium builds with `gn` and "
"`ninja` for efficiency --- its static rules allow maximum parallelism. Rust "
"is no exception."
msgstr ""

#: src/chromium/build-rules.md:7
msgid "Adding Rust code to Chromium"
msgstr ""

#: src/chromium/build-rules.md:9
msgid ""
"In some existing Chromium `BUILD.gn` file, declare a `rust_static_library`:"
msgstr ""

#: src/chromium/build-rules.md:11
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules.md:20
msgid ""
"You can also add `deps` on other Rust targets. Later we'll use this to "
"depend upon third party code."
msgstr ""

#: src/chromium/build-rules.md:25
msgid ""
"You must specify _both_ the crate root, _and_ a full list of sources. The "
"`crate_root` is the file given to the Rust compiler representing the root "
"file of the compilation unit --- typically `lib.rs`. `sources` is a complete "
"list of all source files which `ninja` needs in order to determine when "
"rebuilds are necessary."
msgstr ""

#: src/chromium/build-rules.md:31
msgid ""
"(There's no such thing as a Rust `source_set`, because in Rust, an entire "
"crate is a compilation unit. A `static_library` is the smallest unit.)"
msgstr ""

#: src/chromium/build-rules.md:34
msgid ""
"Students might be wondering why we need a gn template, rather than using "
"[gn's built-in support for Rust static libraries](https://gn.googlesource."
"com/gn/+/main/docs/reference.md#func_static_library). The answer is that "
"this template provides support for CXX interop, Rust features, and unit "
"tests, some of which we'll use later."
msgstr ""

#: src/chromium/build-rules/unsafe.md:1
msgid "Including `unsafe` Rust Code"
msgstr ""

#: src/chromium/build-rules/unsafe.md:3
msgid ""
"Unsafe Rust code is forbidden in `rust_static_library` by default --- it "
"won't compile. If you need unsafe Rust code, add `allow_unsafe = true` to "
"the gn target. (Later in the course we'll see circumstances where this is "
"necessary.)"
msgstr ""

#: src/chromium/build-rules/unsafe.md:7
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [\n"
"    \"lib.rs\",\n"
"    \"hippopotamus.rs\"\n"
"  ]\n"
"  allow_unsafe = true\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules/depending.md:3
msgid "Simply add the above target to the `deps` of some Chromium C++ target."
msgstr ""

#: src/chromium/build-rules/depending.md:5
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"}\n"
"\n"
"# or source_set, static_library etc.\n"
"component(\"preexisting_cpp\") {\n"
"  deps = [ \":my_rust_lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules/vscode.md:3
msgid ""
"Types are elided in Rust code, which makes a good IDE even more useful than "
"for C++. Visual Studio code works well for Rust in Chromium. To use it,"
msgstr ""

#: src/chromium/build-rules/vscode.md:6
msgid ""
"Ensure your VSCode has the `rust-analyzer` extension, not earlier forms of "
"Rust support"
msgstr ""

#: src/chromium/build-rules/vscode.md:8
msgid ""
"`gn gen out/Debug --export-rust-project` (or equivalent for your output "
"directory)"
msgstr ""

#: src/chromium/build-rules/vscode.md:10
msgid "`ln -s out/Debug/rust-project.json rust-project.json`"
msgstr ""

#: src/chromium/build-rules/vscode.md:16
msgid ""
"A demo of some of the code annotation and exploration features of rust-"
"analyzer might be beneficial if the audience are naturally skeptical of IDEs."
msgstr ""

#: src/chromium/build-rules/vscode.md:19
msgid ""
"The following steps may help with the demo (but feel free to instead use a "
"piece of Chromium-related Rust that you are most familiar with):"
msgstr ""

#: src/chromium/build-rules/vscode.md:22
msgid "Open `components/qr_code_generator/qr_code_generator_ffi_glue.rs`"
msgstr ""

#: src/chromium/build-rules/vscode.md:23
msgid ""
"Place the cursor over the `QrCode::new` call (around line 26) in "
"\\`qr_code_generator_ffi_glue.rs"
msgstr ""

#: src/chromium/build-rules/vscode.md:25
msgid ""
"Demo **show documentation** (typical bindings: vscode = ctrl k i; vim/CoC = "
"K)."
msgstr ""

#: src/chromium/build-rules/vscode.md:27
msgid ""
"Demo **go to definition** (typical bindings: vscode = F12; vim/CoC = g d). "
"(This will take you to `//third_party/rust/.../qr_code-.../src/lib.rs`.)"
msgstr ""

#: src/chromium/build-rules/vscode.md:29
msgid ""
"Demo **outline** and navigate to the `QrCode::with_bits` method (around line "
"164; the outline is in the file explorer pane in vscode; typical vim/CoC "
"bindings = space o)"
msgstr ""

#: src/chromium/build-rules/vscode.md:32
msgid ""
"Demo **type annotations** (there are quote a few nice examples in the "
"`QrCode::with_bits` method)"
msgstr ""

#: src/chromium/build-rules/vscode.md:35
msgid ""
"It may be worth pointing out that `gn gen ... --export-rust-project` will "
"need to be rerun after editing `BUILD.gn` files (which we will do a few "
"times throughout the exercises in this session)."
msgstr ""

#: src/exercises/chromium/build-rules.md:1
#, fuzzy
msgid "Build rules exercise"
msgstr "Regras de Constru√ß√£o (Build)"

#: src/exercises/chromium/build-rules.md:3
msgid ""
"In your Chromium build, add a new Rust target to `//ui/base/BUILD.gn` "
"containing:"
msgstr ""

#: src/exercises/chromium/build-rules.md:13
msgid ""
"**Important**: note that `no_mangle` here is considered a type of unsafety "
"by the Rust compiler, so you'll need to to allow unsafe code in your `gn` "
"target."
msgstr ""

#: src/exercises/chromium/build-rules.md:16
msgid ""
"Add this new Rust target as a dependency of `//ui/base:base`. Declare this "
"function at the top of `ui/base/resource/resource_bundle.cc` (later, we'll "
"see how this can be automated by bindings generation tools):"
msgstr ""

#: src/exercises/chromium/build-rules.md:24
msgid ""
"Call this function from somewhere in `ui/base/resource/resource_bundle.cc` - "
"we suggest the top of `ResourceBundle::MaybeMangleLocalizedString`. Build "
"and run Chromium, and ensure that \"Hello from Rust!\" is printed lots of "
"times."
msgstr ""

#: src/exercises/chromium/build-rules.md:28
msgid ""
"If you use VSCode, now set up Rust to work well in VSCode. It will be useful "
"in subsequent exercises. If you've succeeded, you will be able to use right-"
"click \"Go to definition\" on `println!`."
msgstr ""

#: src/exercises/chromium/build-rules.md:32
#: src/exercises/chromium/interoperability-with-cpp.md:48
msgid "Where to find help"
msgstr ""

#: src/exercises/chromium/build-rules.md:34
msgid ""
"The options available to the [`rust_static_library` gn template](https://"
"source.chromium.org/chromium/chromium/src/+/main:build/rust/"
"rust_static_library.gni;l=16)"
msgstr ""

#: src/exercises/chromium/build-rules.md:35
msgid ""
"Information about [`#[no_mangle]`](https://doc.rust-lang.org/beta/reference/"
"abi.html#the-no_mangle-attribute)"
msgstr ""

#: src/exercises/chromium/build-rules.md:36
msgid ""
"Information about [`extern \"C\"`](https://doc.rust-lang.org/std/keyword."
"extern.html)"
msgstr ""

#: src/exercises/chromium/build-rules.md:37
msgid ""
"Information about gn's [`--export-rust-project`](https://gn.googlesource.com/"
"gn/+/main/docs/reference.md#compilation-database) switch"
msgstr ""

#: src/exercises/chromium/build-rules.md:38
msgid ""
"[How to install rust-analyzer in VSCode](https://code.visualstudio.com/docs/"
"languages/rust)"
msgstr ""

#: src/exercises/chromium/build-rules.md:44
msgid ""
"This example is unusual because it boils down to the lowest-common-"
"denominator interop language, C. Both C++ and Rust can natively declare and "
"call C ABI functions. Later in the course, we'll connect C++ directly to "
"Rust."
msgstr ""

#: src/exercises/chromium/build-rules.md:48
msgid ""
"`allow_unsafe = true` is required here because `#[no_mangle]` might allow "
"Rust to generate two functions with the same name, and Rust can no longer "
"guarantee that the right one is called."
msgstr ""

#: src/exercises/chromium/build-rules.md:52
msgid ""
"If you need a pure Rust executable, you can also do that using the "
"`rust_executable` gn template."
msgstr ""

#: src/chromium/testing.md:3
msgid ""
"Rust community typically authors unit tests in a module placed in the same "
"source file as the code being tested. This was covered [earlier](../testing."
"md) in the course and looks like this:"
msgstr ""

#: src/chromium/testing.md:17
msgid ""
"In Chromium we place unit tests in a separate source file and we continue to "
"follow this practice for Rust --- this makes tests consistently discoverable "
"and helps to avoid rebuilding `.rs` files a second time (in the `test` "
"configuration)."
msgstr ""

#: src/chromium/testing.md:22
msgid ""
"This results in the following options for testing Rust code in Chromium:"
msgstr ""

#: src/chromium/testing.md:24
msgid ""
"Native Rust tests (i.e. `#[test]`). Discouraged outside of `//third_party/"
"rust`."
msgstr ""

#: src/chromium/testing.md:26
msgid ""
"`gtest` tests authored in C++ and exercising Rust via FFI calls. Sufficient "
"when Rust code is just a thin FFI layer and the existing unit tests provide "
"sufficient coverage for the feature."
msgstr ""

#: src/chromium/testing.md:29
msgid ""
"`gtest` tests authored in Rust and using the crate under test through its "
"public API (using `pub mod for_testing { ... }` if needed). This is the "
"subject of the next few slides."
msgstr ""

#: src/chromium/testing.md:35
msgid ""
"Mention that native Rust tests of third-party crates should eventually be "
"exercised by Chromium bots. (Such testing is needed rarely --- only after "
"adding or updating third-party crates.)"
msgstr ""

#: src/chromium/testing.md:39
msgid ""
"Some examples may help illustrate when C++ `gtest` vs Rust `gtest` should be "
"used:"
msgstr ""

#: src/chromium/testing.md:42
msgid ""
"QR has very little functionality in the first-party Rust layer (it's just a "
"thin FFI glue) and therefore uses the existing C++ unit tests for testing "
"both the C++ and the Rust implementation (parameterizing the tests so they "
"enable or disable Rust using a `ScopedFeatureList`)."
msgstr ""

#: src/chromium/testing.md:47
msgid ""
"Hypothetical/WIP PNG integration may need to implement memory-safe "
"implementation of pixel transformations that are provided by `libpng` but "
"missing in the `png` crate - e.g. RGBA => BGRA, or gamma correction. Such "
"functionality may benefit from separate tests authored in Rust."
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md:3
msgid ""
"The [`rust_gtest_interop`](https://chromium.googlesource.com/chromium/src/+/"
"main/testing/rust_gtest_interop/README.md) library provides a way to:"
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md:5
msgid ""
"Use a Rust function as a `gtest` testcase (using the `#[gtest(...)]` "
"attribute)"
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md:7
msgid ""
"Use `expect_eq!` and similar macros (similar to `assert_eq!` but not "
"panicking and not terminating the test when the assertion fails)."
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md:10
#, fuzzy
msgid "Example:"
msgstr "Exemplo"

#: src/chromium/testing/build-gn.md:3
msgid ""
"The simplest way to build Rust `gtest` tests is to add them to an existing "
"test binary that already contains tests authored in C++. For example:"
msgstr ""

#: src/chromium/testing/build-gn.md:6
msgid ""
"```gn\n"
"test(\"ui_base_unittests\") {\n"
"  ...\n"
"  sources += [ \"my_rust_lib_unittest.rs\" ]\n"
"  deps += [ \":my_rust_lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/testing/build-gn.md:14
msgid ""
"Authoring Rust tests in a separate `static_library` also works, but requires "
"manually declaring the dependency on the support libraries:"
msgstr ""

#: src/chromium/testing/build-gn.md:17
msgid ""
"```gn\n"
"rust_static_library(\"my_rust_lib_unittests\") {\n"
"  testonly = true\n"
"  is_gtest_unittests = true\n"
"  crate_root = \"my_rust_lib_unittest.rs\"\n"
"  sources = [ \"my_rust_lib_unittest.rs\" ]\n"
"  deps = [\n"
"    \":my_rust_lib\",\n"
"    \"//testing/rust_gtest_interop\",\n"
"  ]\n"
"}\n"
"\n"
"test(\"ui_base_unittests\") {\n"
"  ...\n"
"  deps += [ \":my_rust_lib_unittests\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md:3
msgid ""
"After adding `:my_rust_lib` to GN `deps`, we still need to learn how to "
"import and use `my_rust_lib` from `my_rust_lib_unittest.rs`. We haven't "
"provided an explicit `crate_name` for `my_rust_lib` so its crate name is "
"computed based on the full target path and name. Fortunately we can avoid "
"working with such an unwieldy name by using the `chromium::import!` macro "
"from the automatically-imported `chromium` crate:"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md:12
msgid "\"//ui/base:my_rust_lib\""
msgstr ""

#: src/chromium/testing/chromium-import-macro.md:18
msgid "Under the covers the macro expands to something similar to:"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md:26
msgid ""
"More information can be found in [the doc comment](https://source.chromium."
"org/chromium/chromium/src/+/main:build/rust/chromium_prelude/"
"chromium_prelude.rs?q=f:chromium_prelude.rs%20pub.use.*%5Cbimport%5Cb;%20-f:"
"third_party&ss=chromium%2Fchromium%2Fsrc) of the `chromium::import` macro."
msgstr ""

#: src/chromium/testing/chromium-import-macro.md:31
msgid ""
"`rust_static_library` supports specifying an explicit name via `crate_name` "
"property, but doing this is discouraged. And it is discouraged because the "
"crate name has to be globally unique. crates.io guarantees uniqueness of its "
"crate names so `cargo_crate` GN targets (generated by the `gnrt` tool "
"covered in a later section) use short crate names."
msgstr ""

#: src/exercises/chromium/testing.md:1
#, fuzzy
msgid "Testing exercise"
msgstr "Rust on Exercism"

#: src/exercises/chromium/testing.md:3
msgid "Time for another exercise!"
msgstr ""

#: src/exercises/chromium/testing.md:5
msgid "In your Chromium build:"
msgstr ""

#: src/exercises/chromium/testing.md:7
msgid ""
"Add a testable function next to `hello_from_rust`. Some suggestions: adding "
"two integers received as arguments, computing the nth Fibonacci number, "
"summing integers in a slice, etc."
msgstr ""

#: src/exercises/chromium/testing.md:10
msgid "Add a separate `..._unittest.rs` file with a test for the new function."
msgstr ""

#: src/exercises/chromium/testing.md:11
msgid "Add the new tests to `BUILD.gn`."
msgstr ""

#: src/exercises/chromium/testing.md:12
msgid "Build the tests, run them, and verify that the new test works."
msgstr ""

#: src/chromium/interoperability-with-cpp.md:3
msgid ""
"The Rust community offers multiple options for C++/Rust interop, with new "
"tools being developed all the time. At the moment, Chromium uses a tool "
"called CXX."
msgstr ""

#: src/chromium/interoperability-with-cpp.md:6
msgid ""
"You describe your whole language boundary in an interface definition "
"language (which looks a lot like Rust) and then CXX tools generate "
"declarations for functions and types in both Rust and C++."
msgstr ""

#: src/chromium/interoperability-with-cpp.md:12
#, fuzzy
msgid ""
"See the [CXX tutorial](https://cxx.rs/tutorial.html) for a full example of "
"using this."
msgstr ""
"Veja o [tutorial CXX](https://cxx.rs/tutorial.html) para um exemplo completo "
"de como us√°-lo."

#: src/chromium/interoperability-with-cpp.md:19
msgid ""
"Talk through the diagram. Explain that behind the scenes, this is doing just "
"the same as you previously did. Point out that automating the process has "
"the following benefits:"
msgstr ""

#: src/chromium/interoperability-with-cpp.md:23
msgid ""
"The tool guarantees that the C++ and Rust sides match (e.g. you get compile "
"errors if the `#[cxx::bridge]` doesn't match the actual C++ or Rust "
"definitions, but with out-of-sync manual bindings you'd get Undefined "
"Behavior)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md:27
msgid ""
"The tool automates generation of FFI thunks (small, C-ABI-compatible, free "
"functions) for non-C features (e.g. enabling FFI calls into Rust or C++ "
"methods; manual bindings would require authoring such top-level, free "
"functions manually)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md:31
msgid "The tool and the library can handle a set of core types - for example:"
msgstr ""

#: src/chromium/interoperability-with-cpp.md:32
msgid ""
"`&[T]` can be passed across the FFI boundary, even though it doesn't "
"guarantee any particular ABI or memory layout. With manual bindings `std::"
"span<T>` / `&[T]` have to be manually destructured and rebuilt out of a "
"pointer and length - this is error-prone given that each language represents "
"empty slices slightly differently)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md:37
msgid ""
"Smart pointers like `std::unique_ptr<T>`, `std::shared_ptr<T>`, and/or `Box` "
"are natively supported. With manual bindings, one would have to pass C-ABI-"
"compatible raw pointers, which would increase lifetime and memory-safety "
"risks."
msgstr ""

#: src/chromium/interoperability-with-cpp.md:41
msgid ""
"`rust::String` and `CxxString` types understand and maintain differences in "
"string representation across the languages (e.g. `rust::String::lossy` can "
"build a Rust string from non-UTF8 input and `rust::String::c_str` can NUL-"
"terminate a string)."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:3
msgid ""
"CXX requires that the whole C++/Rust boundary is declared in `cxx::bridge` "
"modules inside `.rs` source code."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:16
msgid "\"example/include/blobstore.h\""
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:24
msgid "// Definitions of Rust types and functions go here\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:30
msgid "Point out:"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:32
msgid ""
"Although this looks like a regular Rust `mod`, the `#[cxx::bridge]` "
"procedural macro does complex things to it. The generated code is quite a "
"bit more sophisticated - though this does still result in a `mod` called "
"`ffi` in your code."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:36
msgid "Native support for C++'s `std::unique_ptr` in Rust"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:37
#, fuzzy
msgid "Native support for Rust slices in C++"
msgstr "Suporte integrado para testes."

#: src/chromium/interoperability-with-cpp/example-bindings.md:38
msgid "Calls from C++ to Rust, and Rust types (in the top part)"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:39
msgid "Calls from Rust to C++, and C++ types (in the bottom part)"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md:41
msgid ""
"**Common misconception**: It _looks_ like a C++ header is being parsed by "
"Rust, but this is misleading. This header is never interpreted by Rust, but "
"simply `#include`d in the generated C++ code for the benefit of C++ "
"compilers."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:3
msgid ""
"By far the most useful page when using CXX is the [type reference](https://"
"cxx.rs/bindings.html)."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:5
msgid "CXX fundamentally suits cases where:"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:7
msgid ""
"Your Rust-C++ interface is sufficiently simple that you can declare all of "
"it."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:8
msgid ""
"You're using only the types natively supported by CXX already, for example "
"`std::unique_ptr`, `std::string`, `&[u8]` etc."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:11
msgid ""
"It has many limitations --- for example lack of support for Rust's `Option` "
"type."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:14
msgid ""
"These limitations constrain us to using Rust in Chromium only for well "
"isolated \"leaf nodes\" rather than for arbitrary Rust-C++ interop. When "
"considering a use-case for Rust in Chromium, a good starting point is to "
"draft the CXX bindings for the language boundary to see if it appears simple "
"enough."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:26
msgid ""
"You should also discuss some of the other sticky points with CXX, for "
"example:"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:28
msgid ""
"Its error handling is based around C++ exceptions (given on the next slide)"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md:29
msgid "Function pointers are awkward to use."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:3
msgid ""
"CXX's [support for `Result<T,E>`](https://cxx.rs/binding/result.html) relies "
"on C++ exceptions, so we can't use that in Chromium. Alternatives:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:6
msgid "The `T` part of `Result<T, E>` can be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:7
msgid ""
"Returned via out parameters (e.g. via `&mut T`). This requires that `T` can "
"be passed across the FFI boundary - for example `T` has to be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:9
msgid "A primitive type (like `u32` or `usize`)"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:10
msgid ""
"A type natively supported by `cxx` (like `UniquePtr<T>`) that has a suitable "
"default value to use in a failure case (_unlike_ `Box<T>`)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:12
msgid ""
"Retained on the Rust side, and exposed via reference. This may be needed "
"when `T` is a Rust type, which cannot be passed across the FFI boundary, and "
"cannot be stored in `UniquePtr<T>`."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:16
msgid "The `E` part of `Result<T, E>` can be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:17
msgid ""
"Returned as a boolean (e.g. `true` representing success, and `false` "
"representing failure)"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md:19
msgid ""
"Preserving error details is in theory possible, but so far hasn't been "
"needed in practice."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md:1
#, fuzzy
msgid "CXX Error Handling: QR Example"
msgstr "Tratamento de Erros"

#: src/chromium/interoperability-with-cpp/error-handling-qr.md:3
msgid ""
"The QR code generator is [an example](https://source.chromium.org/chromium/"
"chromium/src/+/main:components/qr_code_generator/qr_code_generator_ffi_glue."
"rs;l=13-18;drc=7bf1b75b910ca430501b9c6a74c1d18a0223ecca) where a boolean is "
"used to communicate success vs failure, and where the successful result can "
"be passed across the FFI boundary:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md:8
msgid "\"qr_code_generator\""
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md:23
msgid ""
"Students may be curious about the semantics of the `out_qr_size` output. "
"This is not the size of the vector, but the size of the QR code (and "
"admittedly it is a bit redundant - this is the square root of the size of "
"the vector)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md:27
msgid ""
"It may be worth pointing out the importance of initializing `out_qr_size` "
"before calling into the Rust function. Creation of a Rust reference that "
"points to uninitialized memory results in Undefined Behavior (unlike in C++, "
"when only the act of dereferencing such memory results in UB)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md:32
msgid ""
"If students ask about `Pin`, then explain why CXX needs it for mutable "
"references to C++ data: the answer is that C++ data can‚Äôt be moved around "
"like Rust data, because it may contain self-referential pointers."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md:1
#, fuzzy
msgid "CXX Error Handling: PNG Example"
msgstr "Tratamento de Erros"

#: src/chromium/interoperability-with-cpp/error-handling-png.md:3
msgid ""
"A prototype of a PNG decoder illustrates what can be done when the "
"successful result cannot be passed across the FFI boundary:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md:7
#, fuzzy
msgid "\"gfx::rust_bindings\""
msgstr "\"bindings\""

#: src/chromium/interoperability-with-cpp/error-handling-png.md:10
msgid ""
"/// This returns an FFI-friendly equivalent of `Result<PngReader<'a>,\n"
"        /// ()>`.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md:14
msgid "/// C++ bindings for the `crate::png::ResultOfPngReader` type.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md:21
msgid "/// C++ bindings for the `crate::png::PngReader` type.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md:32
msgid ""
"`PngReader` and `ResultOfPngReader` are Rust types --- objects of these "
"types cannot cross the FFI boundary without indirection of a `Box<T>`. We "
"can't have an `out_parameter: &mut PngReader`, because CXX doesn't allow C++ "
"to store Rust objects by value."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md:37
msgid ""
"This example illustrates that even though CXX doesn't support arbitrary "
"generics nor templates, we can still pass them across the FFI boundary by "
"manually specializing / monomorphizing them into a non-generic type. In the "
"example `ResultOfPngReader` is a non-generic type that forwards into "
"appropriate methods of `Result<T, E>` (e.g. into `is_err`, `unwrap`, and/or "
"`as_mut`)."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:1
msgid "Using cxx in Chromium"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:3
msgid ""
"In Chromium, we define an independent `#[cxx::bridge] mod` for each leaf-"
"node where we want to use Rust. You'd typically have one for each "
"`rust_static_library`. Just add"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:7
msgid ""
"```gn\n"
"cxx_bindings = [ \"my_rust_file.rs\" ]\n"
"   # list of files containing #[cxx::bridge], not all source files\n"
"allow_unsafe = true\n"
"```"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:13
msgid ""
"to your existing `rust_static_library` target alongside `crate_root` and "
"`sources`."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:16
msgid "C++ headers will be generated at a sensible location, so you can just"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:19
msgid "\"ui/base/my_rust_file.rs.h\""
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:22
msgid ""
"You will find some utility functions in `//base` to convert to/from Chromium "
"C++ types to CXX Rust types --- for example [`SpanToRustSlice`](https://"
"source.chromium.org/chromium/chromium/src/+/main:base/containers/span_rust.h;"
"l=21)."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:27
msgid "Students may ask --- why do we still need `allow_unsafe = true`?"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:29
msgid ""
"The broad answer is that no C/C++ code is \"safe\" by the normal Rust "
"standards. Calling back and forth to C/C++ from Rust may do arbitrary things "
"to memory, and compromise the safety of Rust's own data layouts. Presence of "
"_too many_ `unsafe` keywords in C/C++ interop can harm the signal-to-noise "
"ratio of such a keyword, and is [controversial](https://steveklabnik.com/"
"writing/the-cxx-debate), but strictly, bringing any foreign code into a Rust "
"binary can cause unexpected behavior from Rust's perspective."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md:36
msgid ""
"The narrow answer lies in the diagram at the top of [this page](../"
"interoperability-with-cpp.md) --- behind the scenes, CXX generates Rust "
"`unsafe` and `extern \"C\"` functions just like we did manually in the "
"previous section."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:1
#, fuzzy
msgid "Exercise: Interoperability with C++"
msgstr "Interoperabilidade com C"

#: src/exercises/chromium/interoperability-with-cpp.md:3
msgid "Part one"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:5
msgid ""
"In the Rust file you previously created, add a `#[cxx::bridge]` which "
"specifies a single function, to be called from C++, called "
"`hello_from_rust`, taking no parameters and returning no value."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:8
msgid ""
"Modify your previous `hello_from_rust` function to remove `extern \"C\"` and "
"`#[no_mangle]`. This is now just a standard Rust function."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:10
msgid "Modify your `gn` target to build these bindings."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:11
msgid ""
"In your C++ code, remove the forward-declaration of `hello_from_rust`. "
"Instead, include the generated header file."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:13
msgid "Build and run!"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:15
msgid "Part two"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:17
msgid ""
"It's a good idea to play with CXX a little. It helps you think about how "
"flexible Rust in Chromium actually is."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:20
#, fuzzy
msgid "Some things to try:"
msgstr "\"Algo deu errado!\""

#: src/exercises/chromium/interoperability-with-cpp.md:22
msgid "Call back into C++ from Rust. You will need:"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:23
msgid ""
"An additional header file which you can `include!` from your `cxx::bridge`. "
"You'll need to declare your C++ function in that new header file."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:25
msgid ""
"An `unsafe` block to call such a function, or alternatively specify the "
"`unsafe` keyword in your `#[cxx::bridge]` [as described here](https://cxx.rs/"
"extern-c++.html#functions-and-member-functions)."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:27
msgid ""
"You may also need to `#include \"third_party/rust/cxx/v1/crate/include/cxx."
"h\"`"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:29
msgid "Pass a C++ string from C++ into Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:30
msgid "Pass a reference to a C++ object into Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:31
msgid ""
"Intentionally get the Rust function signatures mismatched from the `#[cxx::"
"bridge]`, and get used to the errors you see."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:33
msgid ""
"Intentionally get the C++ function signatures mismatched from the `#[cxx::"
"bridge]`, and get used to the errors you see."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:35
msgid ""
"Pass a `std::unique_ptr` of some type from C++ into Rust, so that Rust can "
"own some C++ object."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:37
msgid ""
"Create a Rust object and pass it into C++, so that C++ owns it. (Hint: you "
"need a `Box`)."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:39
msgid "Declare some methods on a C++ type. Call them from Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:40
msgid "Declare some methods on a Rust type. Call them from C++."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:42
msgid "Part three"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:44
msgid ""
"Now you understand the strengths and limitations of CXX interop, think of a "
"couple of use-cases for Rust in Chromium where the interface would be "
"sufficiently simple. Sketch how you might define that interface."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:50
msgid "The [`cxx` binding reference](https://cxx.rs/bindings.html)"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:51
msgid ""
"The [`rust_static_library` gn template](https://source.chromium.org/chromium/"
"chromium/src/+/main:build/rust/rust_static_library.gni;l=16)"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:57
msgid "Some of the questions you may encounter:"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:59
msgid ""
"I'm seeing a problem initializing a variable of type X with type Y, where X "
"and Y are both function types. This is because your C++ function doesn't "
"quite match the declaration in your `cxx::bridge`."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md:62
msgid ""
"I seem to be able to freely convert C++ references into Rust references. "
"Doesn't that risk UB? For CXX's _opaque_ types, no, because they are zero-"
"sized. For CXX trivial types yes, it's _possible_ to cause UB, although "
"CXX's design makes it quite difficult to craft such an example."
msgstr ""

#: src/chromium/adding-third-party-crates.md:3
msgid ""
"Rust libraries are called \"crates\" and are found at [crates.io](https://"
"crates.io). It's _very easy_ for Rust crates to depend upon one another. So "
"they do!"
msgstr ""

#: src/chromium/adding-third-party-crates.md:6
#, fuzzy
msgid "C++ library"
msgstr "Bibliotecas do Rust"

#: src/chromium/adding-third-party-crates.md:6
#, fuzzy
msgid "Rust crate"
msgstr "O Ecossistema do Rust"

#: src/chromium/adding-third-party-crates.md:8
#, fuzzy
msgid "Build system"
msgstr "O Ecossistema do Rust"

#: src/chromium/adding-third-party-crates.md:8
#: src/chromium/adding-third-party-crates.md:10
msgid "Lots"
msgstr ""

#: src/chromium/adding-third-party-crates.md:8
msgid "Consistent: `Cargo.toml`"
msgstr ""

#: src/chromium/adding-third-party-crates.md:9
msgid "Typical library size"
msgstr ""

#: src/chromium/adding-third-party-crates.md:9
msgid "Large-ish"
msgstr ""

#: src/chromium/adding-third-party-crates.md:9
msgid "Small"
msgstr ""

#: src/chromium/adding-third-party-crates.md:10
msgid "Transitive dependencies"
msgstr ""

#: src/chromium/adding-third-party-crates.md:10
msgid "Few"
msgstr ""

#: src/chromium/adding-third-party-crates.md:12
msgid "For a Chromium engineer, this has pros and cons:"
msgstr ""

#: src/chromium/adding-third-party-crates.md:14
msgid ""
"All crates use a common build system so we can automate their inclusion into "
"Chromium..."
msgstr ""

#: src/chromium/adding-third-party-crates.md:16
msgid ""
"... but, crates typically have transitive dependencies, so you will likely "
"have to bring in multiple libraries."
msgstr ""

#: src/chromium/adding-third-party-crates.md:19
msgid "We'll discuss:"
msgstr ""

#: src/chromium/adding-third-party-crates.md:21
msgid "How to put a crate in the Chromium source code tree"
msgstr ""

#: src/chromium/adding-third-party-crates.md:22
msgid "How to make `gn` build rules for it"
msgstr ""

#: src/chromium/adding-third-party-crates.md:23
msgid "How to audit its source code for sufficient safety."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md:1
msgid "Configuring the `Cargo.toml` file to add crates"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md:3
msgid ""
"Chromium has a single set of centrally-managed direct crate dependencies. "
"These are managed through a single [`Cargo.toml`](https://source.chromium."
"org/chromium/chromium/src/+/main:third_party/rust/chromium_crates_io/Cargo."
"toml):"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md:6
msgid ""
"```toml\n"
"[dependencies]\n"
"bitflags = \"1\"\n"
"cfg-if = \"1\"\n"
"cxx = \"1\"\n"
"# lots more...\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md:14
msgid ""
"As with any other `Cargo.toml`, you can specify [more details about the "
"dependencies](https://doc.rust-lang.org/cargo/reference/specifying-"
"dependencies.html) --- most commonly, you'll want to specify the `features` "
"that you wish to enable in the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md:18
msgid ""
"When adding a crate to Chromium, you'll often need to provide some extra "
"information in an additional file, `gnrt_config.toml`, which we'll meet next."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md:3
msgid ""
"Alongside `Cargo.toml` is [`gnrt_config.toml`](https://source.chromium.org/"
"chromium/chromium/src/+/main:third_party/rust/chromium_crates_io/gnrt_config."
"toml). This contains Chromium-specific extensions to crate handling."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md:6
msgid ""
"If you add a new crate, you should specify at least the `group`. This is one "
"of:"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md:15
#: src/chromium/adding-third-party-crates/depending-on-a-crate.md:15
msgid "For instance,"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md:22
msgid ""
"Depending on the crate source code layout, you may also need to use this "
"file to specify where its `LICENSE` file(s) can be found."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md:25
msgid ""
"Later, we'll see some other things you will need to configure in this file "
"to resolve problems."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md:3
msgid ""
"A tool called `gnrt` knows how to download crates and how to generate `BUILD."
"gn` rules."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md:6
msgid "To start, download the crate you want like this:"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md:13
msgid ""
"Although the `gnrt` tool is part of the Chromium source code, by running "
"this command you will be downloading and running its dependencies from "
"`crates.io`. See [the earlier section](../cargo.md) discussing this security "
"decision."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md:17
msgid "This `vendor` command may download:"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md:19
#, fuzzy
msgid "Your crate"
msgstr "Crates √öteis para Testes"

#: src/chromium/adding-third-party-crates/downloading-crates.md:20
msgid "Direct and transitive dependencies"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md:21
msgid ""
"New versions of other crates, as required by `cargo` to resolve the complete "
"set of crates required by Chromium."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md:24
msgid ""
"Chromium maintains patches for some crates, kept in `//third_party/rust/"
"chromium_crates_io/patches`. These will be reapplied automatically, but if "
"patching fails you may need to take manual action."
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:3
msgid ""
"Once you've downloaded the crate, generate the `BUILD.gn` files like this:"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:9
msgid "Now run `git status`. You should find:"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:11
msgid ""
"At least one new crate source code in `third_party/rust/chromium_crates_io/"
"vendor`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:13
msgid ""
"At least one new `BUILD.gn` in `third_party/rust/<crate name>/v<major semver "
"version>`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:15
msgid "An appropriate `README.chromium`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:17
#, fuzzy
msgid ""
"The \"major semver version\" is a [Rust \"semver\" version number](https://"
"doc.rust-lang.org/cargo/reference/semver.html)."
msgstr ""
"Consulte a [Refer√™ncia do Rust](https://doc.rust-lang.org/reference/type-"
"layout.html)."

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:19
msgid ""
"Take a close look, especially at the things generated in `third_party/rust`."
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md:23
msgid ""
"Talk a little about semver --- and specifically the way that in Chromium "
"it's to allow multiple incompatible versions of a crate, which is "
"discouraged but sometimes necessary in the Cargo ecosystem."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:3
msgid ""
"If your build fails, it may be because of a `build.rs`: programs which do "
"arbitrary things at build time. This is fundamentally at odds with the "
"design of `gn` and `ninja` which aim for static, deterministic, build rules "
"to maximize parallelism and repeatability of builds."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:8
msgid ""
"Some `build.rs` actions are automatically supported; others require action:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:10
msgid "build script effect"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:10
msgid "Supported by our gn templates"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:10
msgid "Work required by you"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:12
msgid "Checking rustc version to configure features on and off"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:12
#: src/chromium/adding-third-party-crates/resolving-problems.md:13
msgid "None"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:13
msgid "Checking platform or CPU to configure features on and off"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:14
#, fuzzy
msgid "Generating code"
msgstr "Generics"

#: src/chromium/adding-third-party-crates/resolving-problems.md:14
msgid "Yes - specify in `gnrt_config.toml`"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:15
msgid "Building C/C++"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:15
#: src/chromium/adding-third-party-crates/resolving-problems.md:16
msgid "Patch around it"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:16
msgid "Arbitrary other actions"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md:18
msgid ""
"Fortunately, most crates don't contain a build script, and fortunately, most "
"build scripts only do the top two actions."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md:3
msgid ""
"If `ninja` complains about missing files, check the `build.rs` to see if it "
"writes source code files."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md:6
msgid ""
"If so, modify [`gnrt_config.toml`](../configuring-gnrt-config-toml.md) to "
"add `build-script-outputs` to the crate. If this is a transitive dependency, "
"that is, one on which Chromium code should not directly depend, also add "
"`allow-first-party-usage=false`. There are several examples already in that "
"file:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md:11
msgid ""
"```toml\n"
"[crate.unicode-linebreak]\n"
"allow-first-party-usage = false\n"
"build-script-outputs = [\"tables.rs\"]\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md:17
msgid ""
"Now rerun [`gnrt.py -- gen`](../generating-gn-build-rules.md) to regenerate "
"`BUILD.gn` files to inform ninja that this particular output file is input "
"to subsequent build steps."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md:3
msgid ""
"Some crates use the [`cc`](https://crates.io/crates/cc) crate to build and "
"link C/C++ libraries. Other crates parse C/C++ using [`bindgen`](https://"
"crates.io/crates/bindgen) within their build scripts. These actions can't be "
"supported in a Chromium context --- our gn, ninja and LLVM build system is "
"very specific in expressing relationships between build actions."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md:8
msgid "So, your options are:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md:10
msgid "Avoid these crates"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md:11
msgid "Apply a patch to the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md:13
msgid ""
"Patches should be kept in `third_party/rust/chromium_crates_io/patches/"
"<crate>` - see for example the [patches against the `cxx` crate](https://"
"source.chromium.org/chromium/chromium/src/+/main:third_party/rust/"
"chromium_crates_io/patches/cxx/) - and will be applied automatically by "
"`gnrt` each time it upgrades the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md:3
msgid ""
"Once you've added a third-party crate and generated build rules, depending "
"on a crate is simple. Find your `rust_static_library` target, and add a "
"`dep` on the `:lib` target within your crate."
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md:7
#, fuzzy
msgid "Specifically,"
msgstr "espec√≠fico ao SO"

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md:9
msgid ""
"```bob\n"
"                     +------------+      +----------------------+\n"
"\"//third_party/rust\" | crate name | \"/v\" | major semver version | \":"
"lib\"\n"
"                     +------------+      +----------------------+\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md:17
msgid ""
"```gn\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"  deps = [ \"//third_party/rust/example_rust_crate/v1:lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:1
msgid "Auditing Third Party Crates"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:3
msgid ""
"Adding new libraries is subject to Chromium's standard [policies](https://"
"chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/rust."
"md#Third_party-review), but of course also subject to security review. As "
"you may be bringing in not just a single crate but also transitive "
"dependencies, there may be a lot of code to review. On the other hand, safe "
"Rust code can have limited negative side effects. How should you review it?"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:9
msgid ""
"Over time Chromium aims to move to a process based around [cargo vet]"
"(https://mozilla.github.io/cargo-vet/)."
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:11
msgid ""
"Meanwhile, for each new crate addition, we are checking for the following:"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:13
msgid ""
"Understand why each crate is used. What's the relationship between crates? "
"If the build system for each crate contains a `build.rs` or procedural "
"macros, work out what they're for. Are they compatible with the way Chromium "
"is normally built?"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:17
msgid "Check each crate seems to be reasonably well maintained"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:18
msgid ""
"Use `cd third-party/rust/chromium_crates_io; cargo audit` to check for known "
"vulnerabilities (first you'll need to `cargo install cargo-audit`, which "
"ironically involves downloading lots of dependencies from the internet[2](../"
"cargo.md))"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:21
msgid ""
"Ensure any `unsafe` code is good enough for the [Rule of Two](https://"
"chromium.googlesource.com/chromium/src/+/main/docs/security/rule-of-2."
"md#unsafe-code-in-safe-languages)"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:22
msgid "Check for any use of `fs` or `net` APIs"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:23
msgid ""
"Read all the code at a sufficient level to look for anything out of place "
"that might have been maliciously inserted. (You can't realistically aim for "
"100% perfection here: there's often just too much code.)"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md:27
msgid ""
"These are just guidelines --- work with reviewers from `security@chromium."
"org` to work out the right way to become confident of the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:1
msgid "Checking Crates into Chromium Source Code"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:3
msgid "`git status` should reveal:"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:5
msgid "Crate code in `//third_party/rust/chromium_crates_io`"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:6
msgid ""
"Metadata (`BUILD.gn` and `README.chromium`) in `//third_party/rust/<crate>/"
"<version>`"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:9
msgid "Please also add an `OWNERS` file in the latter location."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:11
msgid ""
"You should land all this, along with your `Cargo.toml` and `gnrt_config."
"toml` changes, into the Chromium repo."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:14
msgid ""
"**Important**: you need to use `git add -f` because otherwise `.gitignore` "
"files may result in some files being skipped."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md:17
msgid ""
"As you do so, you might find presubmit checks fail because of non-inclusive "
"language. This is because Rust crate data tends to include names of git "
"branches, and many projects still use non-inclusive terminology there. So "
"you may need to run:"
msgstr ""

#: src/chromium/adding-third-party-crates/keeping-up-to-date.md:3
msgid ""
"As the OWNER of any third party Chromium dependency, you are [expected to "
"keep it up to date with any security fixes](https://chromium.googlesource."
"com/chromium/src/+/main/docs/adding_to_third_party.md#add-owners). It is "
"hoped that we will soon automate this for Rust crates, but for now, it's "
"still your responsibility just as it is for any other third party dependency."
msgstr ""

#: src/exercises/chromium/third-party.md:3
msgid ""
"Add [uwuify](https://crates.io/crates/uwuify) to Chromium, turning off the "
"crate's [default features](https://doc.rust-lang.org/cargo/reference/"
"features.html#the-default-feature). Assume that the crate will be used in "
"shipping Chromium, but won't be used to handle untrustworthy input."
msgstr ""

#: src/exercises/chromium/third-party.md:7
msgid ""
"(In the next exercise we'll use uwuify from Chromium, but feel free to skip "
"ahead and do that now if you like. Or, you could create a new "
"[`rust_executable` target](https://source.chromium.org/chromium/chromium/src/"
"+/main:build/rust/rust_executable.gni) which uses `uwuify`)."
msgstr ""

#: src/exercises/chromium/third-party.md:13
msgid "Students will need to download lots of transitive dependencies."
msgstr ""

#: src/exercises/chromium/third-party.md:15
msgid "The total crates needed are:"
msgstr ""

#: src/exercises/chromium/third-party.md:17
#, fuzzy
msgid "`instant`,"
msgstr "Constant"

#: src/exercises/chromium/third-party.md:18
msgid "`lock_api`,"
msgstr ""

#: src/exercises/chromium/third-party.md:19
msgid "`parking_lot`,"
msgstr ""

#: src/exercises/chromium/third-party.md:20
msgid "`parking_lot_core`,"
msgstr ""

#: src/exercises/chromium/third-party.md:21
msgid "`redox_syscall`,"
msgstr ""

#: src/exercises/chromium/third-party.md:22
msgid "`scopeguard`,"
msgstr ""

#: src/exercises/chromium/third-party.md:23
msgid "`smallvec`, and"
msgstr ""

#: src/exercises/chromium/third-party.md:24
msgid "`uwuify`."
msgstr ""

#: src/exercises/chromium/third-party.md:26
msgid ""
"If students are downloading even more than that, they probably forgot to "
"turn off the default features."
msgstr ""

#: src/exercises/chromium/third-party.md:29
msgid ""
"Thanks to [Daniel Liu](https://github.com/Daniel-Liu-c0deb0t) for this crate!"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:1
msgid "Bringing It Together --- Exercise"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:3
msgid ""
"In this exercise, you're going to add a whole new Chromium feature, bringing "
"together everything you already learned."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:6
msgid "The Brief from Product Management"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:8
msgid ""
"A community of pixies has been discovered living in a remote rainforest. "
"It's important that we get Chromium for Pixies delivered to them as soon as "
"possible."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:11
msgid ""
"The requirement is to translate all Chromium's UI strings into Pixie "
"language."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:13
msgid ""
"There's not time to wait for proper translations, but fortunately pixie "
"language is very close to English, and it turns out there's a Rust crate "
"which does the translation."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:17
msgid ""
"In fact, you already [imported that crate in the previous exercise](https://"
"crates.io/crates/uwuify)."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:19
msgid ""
"(Obviously, real translations of Chrome require incredible care and "
"diligence. Don't ship this!)"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:22
msgid "Steps"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:24
msgid ""
"Modify `ResourceBundle::MaybeMangleLocalizedString` so that it uwuifies all "
"strings before display. In this special build of Chromium, it should always "
"do this irrespective of the setting of `mangle_localized_strings_`."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:28
msgid ""
"If you've done everything right across all these exercises, congratulations, "
"you should have created Chrome for pixies!"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:36
msgid ""
"UTF16 vs UTF8. Students should be aware that Rust strings are always UTF8, "
"and will probably decide that it's better to do the conversion on the C++ "
"side using `base::UTF16ToUTF8` and back again."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:39
msgid ""
"If students decide to do the conversion on the Rust side, they'll need to "
"consider [`String::from_utf16`](https://doc.rust-lang.org/std/string/struct."
"String.html#method.from_utf16), consider error handling, and consider which "
"[CXX supported types can transfer a lot of u16s](https://cxx.rs/binding/"
"slice.html)."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:42
msgid ""
"Students may design the C++/Rust boundary in several different ways, e.g. "
"taking and returning strings by value, or taking a mutable reference to a "
"string. If a mutable reference is used, CXX will likely tell the student "
"that they need to use [`Pin`](https://doc.rust-lang.org/std/pin/). You may "
"need to explain what `Pin` does, and then explain why CXX needs it for "
"mutable references to C++ data: the answer is that C++ data can't be moved "
"around like Rust data, because it may contain self-referential pointers."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:49
msgid ""
"The C++ target containing `ResourceBundle::MaybeMangleLocalizedString` will "
"need to depend on a `rust_static_library` target. The student probably "
"already did this."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md:52
msgid ""
"The `rust_static_library` target will need to depend on `//third_party/rust/"
"uwuify/v0_2:lib`."
msgstr ""

#: src/exercises/chromium/solutions.md:3
msgid ""
"Solutions to the Chromium exercises can be found in [this series of CLs]"
"(https://chromium-review.googlesource.com/c/chromium/src/+/5096560)."
msgstr ""

#: src/bare-metal.md:1
msgid "Welcome to Bare Metal Rust"
msgstr "Bem-vindo ao Rust _Bare Metal_ ü¶Ä"

#: src/bare-metal.md:3
msgid ""
"This is a standalone one-day course about bare-metal Rust, aimed at people "
"who are familiar with the basics of Rust (perhaps from completing the "
"Comprehensive Rust course), and ideally also have some experience with bare-"
"metal programming in some other language such as C."
msgstr ""

#: src/bare-metal.md:8
msgid ""
"Today we will talk about 'bare-metal' Rust: running Rust code without an OS "
"underneath us. This will be divided into several parts:"
msgstr ""

#: src/bare-metal.md:11
msgid "What is `no_std` Rust?"
msgstr ""

#: src/bare-metal.md:12
msgid "Writing firmware for microcontrollers."
msgstr ""

#: src/bare-metal.md:13
msgid "Writing bootloader / kernel code for application processors."
msgstr ""

#: src/bare-metal.md:14
msgid "Some useful crates for bare-metal Rust development."
msgstr ""

#: src/bare-metal.md:16
msgid ""
"For the microcontroller part of the course we will use the [BBC micro:bit]"
"(https://microbit.org/) v2 as an example. It's a [development board](https://"
"tech.microbit.org/hardware/) based on the Nordic nRF51822 microcontroller "
"with some LEDs and buttons, an I2C-connected accelerometer and compass, and "
"an on-board SWD debugger."
msgstr ""

#: src/bare-metal.md:22
msgid ""
"To get started, install some tools we'll need later. On gLinux or Debian:"
msgstr ""

#: src/bare-metal.md:34
msgid ""
"And give users in the `plugdev` group access to the micro:bit programmer:"
msgstr ""

#: src/bare-metal.md:44 src/bare-metal/microcontrollers/debugging.md:33
msgid "On MacOS:"
msgstr ""

#: src/bare-metal/no_std.md:7
msgid "`core`"
msgstr ""

#: src/bare-metal/no_std.md:17
msgid "`std`"
msgstr ""

#: src/bare-metal/no_std.md:24
msgid "Slices, `&str`, `CStr`"
msgstr ""

#: src/bare-metal/no_std.md:25
msgid "`NonZeroU8`..."
msgstr ""

#: src/bare-metal/no_std.md:26
msgid "`Option`, `Result`"
msgstr ""

#: src/bare-metal/no_std.md:27
msgid "`Display`, `Debug`, `write!`..."
msgstr ""

#: src/bare-metal/no_std.md:29
msgid "`panic!`, `assert_eq!`..."
msgstr ""

#: src/bare-metal/no_std.md:30
msgid "`NonNull` and all the usual pointer-related functions"
msgstr ""

#: src/bare-metal/no_std.md:31
msgid "`Future` and `async`/`await`"
msgstr ""

#: src/bare-metal/no_std.md:32
msgid "`fence`, `AtomicBool`, `AtomicPtr`, `AtomicU32`..."
msgstr ""

#: src/bare-metal/no_std.md:33
msgid "`Duration`"
msgstr ""

#: src/bare-metal/no_std.md:38
msgid "`Box`, `Cow`, `Arc`, `Rc`"
msgstr ""

#: src/bare-metal/no_std.md:39
msgid "`Vec`, `BinaryHeap`, `BtreeMap`, `LinkedList`, `VecDeque`"
msgstr ""

#: src/bare-metal/no_std.md:40
msgid "`String`, `CString`, `format!`"
msgstr ""

#: src/bare-metal/no_std.md:45
msgid "`Error`"
msgstr ""

#: src/bare-metal/no_std.md:47
msgid "`Mutex`, `Condvar`, `Barrier`, `Once`, `RwLock`, `mpsc`"
msgstr ""

#: src/bare-metal/no_std.md:48
msgid "`File` and the rest of `fs`"
msgstr ""

#: src/bare-metal/no_std.md:49
msgid "`println!`, `Read`, `Write`, `Stdin`, `Stdout` and the rest of `io`"
msgstr ""

#: src/bare-metal/no_std.md:50
msgid "`Path`, `OsString`"
msgstr ""

#: src/bare-metal/no_std.md:51
msgid "`net`"
msgstr ""

#: src/bare-metal/no_std.md:52
msgid "`Command`, `Child`, `ExitCode`"
msgstr ""

#: src/bare-metal/no_std.md:53
msgid "`spawn`, `sleep` and the rest of `thread`"
msgstr ""

#: src/bare-metal/no_std.md:54
msgid "`SystemTime`, `Instant`"
msgstr ""

#: src/bare-metal/no_std.md:62
msgid "`HashMap` depends on RNG."
msgstr ""

#: src/bare-metal/no_std.md:63
msgid "`std` re-exports the contents of both `core` and `alloc`."
msgstr ""

#: src/bare-metal/minimal.md:1
msgid "A minimal `no_std` program"
msgstr ""

#: src/bare-metal/minimal.md:19
msgid "This will compile to an empty binary."
msgstr ""

#: src/bare-metal/minimal.md:20
msgid "`std` provides a panic handler; without it we must provide our own."
msgstr ""

#: src/bare-metal/minimal.md:21
msgid "It can also be provided by another crate, such as `panic-halt`."
msgstr ""

#: src/bare-metal/minimal.md:22
msgid ""
"Depending on the target, you may need to compile with `panic = \"abort\"` to "
"avoid an error about `eh_personality`."
msgstr ""

#: src/bare-metal/minimal.md:24
msgid ""
"Note that there is no `main` or any other entry point; it's up to you to "
"define your own entry point. This will typically involve a linker script and "
"some assembly code to set things up ready for Rust code to run."
msgstr ""

#: src/bare-metal/alloc.md:3
msgid ""
"To use `alloc` you must implement a [global (heap) allocator](https://doc."
"rust-lang.org/stable/std/alloc/trait.GlobalAlloc.html)."
msgstr ""

#: src/bare-metal/alloc.md:23
msgid ""
"// Safe because `HEAP` is only used here and `entry` is only called once.\n"
msgstr ""

#: src/bare-metal/alloc.md:25
msgid "// Give the allocator some memory to allocate.\n"
msgstr ""

#: src/bare-metal/alloc.md:29
msgid "// Now we can do things that require heap allocation.\n"
msgstr ""

#: src/bare-metal/alloc.md:31
msgid "\"A string\""
msgstr ""

#: src/bare-metal/alloc.md:37
msgid ""
"`buddy_system_allocator` is a third-party crate implementing a basic buddy "
"system allocator. Other crates are available, or you can write your own or "
"hook into your existing allocator."
msgstr ""

#: src/bare-metal/alloc.md:40
msgid ""
"The const parameter of `LockedHeap` is the max order of the allocator; i.e. "
"in this case it can allocate regions of up to 2\\*\\*32 bytes."
msgstr ""

#: src/bare-metal/alloc.md:42
msgid ""
"If any crate in your dependency tree depends on `alloc` then you must have "
"exactly one global allocator defined in your binary. Usually this is done in "
"the top-level binary crate."
msgstr ""

#: src/bare-metal/alloc.md:45
msgid ""
"`extern crate panic_halt as _` is necessary to ensure that the `panic_halt` "
"crate is linked in so we get its panic handler."
msgstr ""

#: src/bare-metal/alloc.md:47
msgid "This example will build but not run, as it doesn't have an entry point."
msgstr ""

#: src/bare-metal/microcontrollers.md:3
msgid ""
"The `cortex_m_rt` crate provides (among other things) a reset handler for "
"Cortex M microcontrollers."
msgstr ""

#: src/bare-metal/microcontrollers.md:24
msgid ""
"Next we'll look at how to access peripherals, with increasing levels of "
"abstraction."
msgstr ""

#: src/bare-metal/microcontrollers.md:29
msgid ""
"The `cortex_m_rt::entry` macro requires that the function have type `fn() -"
"> !`, because returning to the reset handler doesn't make sense."
msgstr ""

#: src/bare-metal/microcontrollers.md:31
msgid "Run the example with `cargo embed --bin minimal`"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:3
msgid ""
"Most microcontrollers access peripherals via memory-mapped IO. Let's try "
"turning on an LED on our micro:bit:"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:16
msgid "/// GPIO port 0 peripheral address\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:19
msgid "// GPIO peripheral offsets\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:24
msgid "// PIN_CNF fields\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:34
#: src/bare-metal/microcontrollers/pacs.md:21
#: src/bare-metal/microcontrollers/hals.md:26
msgid "// Configure GPIO 0 pins 21 and 28 as push-pull outputs.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:37
#: src/bare-metal/microcontrollers/mmio.md:59
msgid ""
"// Safe because the pointers are to valid peripheral control registers, and\n"
"    // no aliases exist.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:56
#: src/bare-metal/microcontrollers/pacs.md:39
#: src/bare-metal/microcontrollers/hals.md:30
msgid "// Set pin 28 low and pin 21 high to turn the LED on.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:72
msgid ""
"GPIO 0 pin 21 is connected to the first column of the LED matrix, and pin 28 "
"to the first row."
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md:75
#: src/bare-metal/microcontrollers/pacs.md:61
#: src/bare-metal/microcontrollers/hals.md:44
#: src/bare-metal/microcontrollers/board-support.md:37
msgid "Run the example with:"
msgstr ""

#: src/bare-metal/microcontrollers/pacs.md:1
msgid "Peripheral Access Crates"
msgstr ""

#: src/bare-metal/microcontrollers/pacs.md:3
msgid ""
"[`svd2rust`](https://crates.io/crates/svd2rust) generates mostly-safe Rust "
"wrappers for memory-mapped peripherals from [CMSIS-SVD](https://www.keil.com/"
"pack/doc/CMSIS/SVD/html/index.html) files."
msgstr ""

#: src/bare-metal/microcontrollers/pacs.md:49
msgid ""
"SVD (System View Description) files are XML files typically provided by "
"silicon vendors which describe the memory map of the device."
msgstr ""

#: src/bare-metal/microcontrollers/pacs.md:51
msgid ""
"They are organised by peripheral, register, field and value, with names, "
"descriptions, addresses and so on."
msgstr ""

#: src/bare-metal/microcontrollers/pacs.md:53
msgid ""
"SVD files are often buggy and incomplete, so there are various projects "
"which patch the mistakes, add missing details, and publish the generated "
"crates."
msgstr ""

#: src/bare-metal/microcontrollers/pacs.md:56
msgid "`cortex-m-rt` provides the vector table, among other things."
msgstr ""

#: src/bare-metal/microcontrollers/pacs.md:57
msgid ""
"If you `cargo install cargo-binutils` then you can run `cargo objdump --bin "
"pac -- -d --no-show-raw-insn` to see the resulting binary."
msgstr ""

#: src/bare-metal/microcontrollers/hals.md:1
msgid "HAL crates"
msgstr ""

#: src/bare-metal/microcontrollers/hals.md:3
msgid ""
"[HAL crates](https://github.com/rust-embedded/awesome-embedded-rust#hal-"
"implementation-crates) for many microcontrollers provide wrappers around "
"various peripherals. These generally implement traits from [`embedded-hal`]"
"(https://crates.io/crates/embedded-hal)."
msgstr ""

#: src/bare-metal/microcontrollers/hals.md:23
msgid "// Create HAL wrapper for GPIO port 0.\n"
msgstr ""

#: src/bare-metal/microcontrollers/hals.md:40
msgid ""
"`set_low` and `set_high` are methods on the `embedded_hal` `OutputPin` trait."
msgstr ""

#: src/bare-metal/microcontrollers/hals.md:41
msgid ""
"HAL crates exist for many Cortex-M and RISC-V devices, including various "
"STM32, GD32, nRF, NXP, MSP430, AVR and PIC microcontrollers."
msgstr ""

#: src/bare-metal/microcontrollers/board-support.md:1
msgid "Board support crates"
msgstr "Atalhos de teclado"

#: src/bare-metal/microcontrollers/board-support.md:3
msgid ""
"Board support crates provide a further level of wrapping for a specific "
"board for convenience."
msgstr ""

#: src/bare-metal/microcontrollers/board-support.md:31
msgid ""
"In this case the board support crate is just providing more useful names, "
"and a bit of initialisation."
msgstr ""

#: src/bare-metal/microcontrollers/board-support.md:33
msgid ""
"The crate may also include drivers for some on-board devices outside of the "
"microcontroller itself."
msgstr ""

#: src/bare-metal/microcontrollers/board-support.md:35
msgid "`microbit-v2` includes a simple driver for the LED matrix."
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:1
msgid "The type state pattern"
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:11
msgid "// let gpio0_01_again = gpio0.p0_01; // Error, moved.\n"
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:19
msgid "// pin_input.is_high(); // Error, moved.\n"
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:33
msgid ""
"Pins don't implement `Copy` or `Clone`, so only one instance of each can "
"exist. Once a pin is moved out of the port struct nobody else can take it."
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:35
msgid ""
"Changing the configuration of a pin consumes the old pin instance, so you "
"can‚Äôt keep use the old instance afterwards."
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:37
msgid ""
"The type of a value indicates the state that it is in: e.g. in this case, "
"the configuration state of a GPIO pin. This encodes the state machine into "
"the type system, and ensures that you don't try to use a pin in a certain "
"way without properly configuring it first. Illegal state transitions are "
"caught at compile time."
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:42
msgid ""
"You can call `is_high` on an input pin and `set_high` on an output pin, but "
"not vice-versa."
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md:44
msgid "Many HAL crates follow this pattern."
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:3
msgid ""
"The [`embedded-hal`](https://crates.io/crates/embedded-hal) crate provides a "
"number of traits covering common microcontroller peripherals."
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:6
msgid "GPIO"
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:7
msgid "ADC"
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:8
msgid "I2C, SPI, UART, CAN"
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:9
msgid "RNG"
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:10
msgid "Timers"
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:11
msgid "Watchdogs"
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:13
msgid ""
"Other crates then implement [drivers](https://github.com/rust-embedded/"
"awesome-embedded-rust#driver-crates) in terms of these traits, e.g. an "
"accelerometer driver might need an I2C or SPI bus implementation."
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:20
msgid ""
"There are implementations for many microcontrollers, as well as other "
"platforms such as Linux on Raspberry Pi."
msgstr ""

#: src/bare-metal/microcontrollers/embedded-hal.md:22
msgid ""
"There is work in progress on an `async` version of `embedded-hal`, but it "
"isn't stable yet."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:3
msgid ""
"[probe-rs](https://probe.rs/) is a handy toolset for embedded debugging, "
"like OpenOCD but better integrated."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:6
msgid ""
"SWD (Serial Wire Debug) and JTAG via CMSIS-DAP, ST-Link and J-Link probes"
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:7
msgid "GDB stub and Microsoft DAP (Debug Adapter Protocol) server"
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:8
msgid "Cargo integration"
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:10
msgid ""
"`cargo-embed` is a cargo subcommand to build and flash binaries, log RTT "
"(Real Time Transfers) output and connect GDB. It's configured by an `Embed."
"toml` file in your project directory."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:16
msgid ""
"[CMSIS-DAP](https://arm-software.github.io/CMSIS_5/DAP/html/index.html) is "
"an Arm standard protocol over USB for an in-circuit debugger to access the "
"CoreSight Debug Access Port of various Arm Cortex processors. It's what the "
"on-board debugger on the BBC micro:bit uses."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:20
msgid ""
"ST-Link is a range of in-circuit debuggers from ST Microelectronics, J-Link "
"is a range from SEGGER."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:22
msgid ""
"The Debug Access Port is usually either a 5-pin JTAG interface or 2-pin "
"Serial Wire Debug."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:24
msgid ""
"probe-rs is a library which you can integrate into your own tools if you "
"want to."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:26
msgid ""
"The [Microsoft Debug Adapter Protocol](https://microsoft.github.io/debug-"
"adapter-protocol/) lets VSCode and other IDEs debug code running on any "
"supported microcontroller."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:30
msgid "cargo-embed is a binary built using the probe-rs library."
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md:31
msgid ""
"RTT (Real Time Transfers) is a mechanism to transfer data between the debug "
"host and the target through a number of ringbuffers."
msgstr ""

#: src/bare-metal/microcontrollers/debugging.md:3
msgid "_Embed.toml_:"
msgstr ""

#: src/bare-metal/microcontrollers/debugging.md:15
msgid "In one terminal under `src/bare-metal/microcontrollers/examples/`:"
msgstr ""

#: src/bare-metal/microcontrollers/debugging.md:23
#, fuzzy
msgid "In another terminal in the same directory:"
msgstr "Em outro terminal, verifique se o servi√ßo √© executado:"

#: src/bare-metal/microcontrollers/debugging.md:25
msgid "On gLinux or Debian:"
msgstr ""

#: src/bare-metal/microcontrollers/debugging.md:43
msgid "In GDB, try running:"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:1
#: src/bare-metal/aps/other-projects.md:1
msgid "Other projects"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:3
msgid "[RTIC](https://rtic.rs/)"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:4
msgid "\"Real-Time Interrupt-driven Concurrency\""
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:5
msgid ""
"Shared resource management, message passing, task scheduling, timer queue"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:6
msgid "[Embassy](https://embassy.dev/)"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:7
msgid "`async` executors with priorities, timers, networking, USB"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:8
msgid "[TockOS](https://www.tockos.org/documentation/getting-started)"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:9
msgid ""
"Security-focused RTOS with preemptive scheduling and Memory Protection Unit "
"support"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:11
msgid "[Hubris](https://hubris.oxide.computer/)"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:12
msgid ""
"Microkernel RTOS from Oxide Computer Company with memory protection, "
"unprivileged drivers, IPC"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:14
msgid "[Bindings for FreeRTOS](https://github.com/lobaro/FreeRTOS-rust)"
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:15
msgid ""
"Some platforms have `std` implementations, e.g. [esp-idf](https://esp-rs."
"github.io/book/overview/using-the-standard-library.html)."
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:20
msgid "RTIC can be considered either an RTOS or a concurrency framework."
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:21
msgid "It doesn't include any HALs."
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:22
msgid ""
"It uses the Cortex-M NVIC (Nested Virtual Interrupt Controller) for "
"scheduling rather than a proper kernel."
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:24
msgid "Cortex-M only."
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:25
msgid ""
"Google uses TockOS on the Haven microcontroller for Titan security keys."
msgstr ""

#: src/bare-metal/microcontrollers/other-projects.md:26
msgid ""
"FreeRTOS is mostly written in C, but there are Rust bindings for writing "
"applications."
msgstr ""

#: src/exercises/bare-metal/morning.md:3
msgid ""
"We will read the direction from an I2C compass, and log the readings to a "
"serial port."
msgstr ""

#: src/exercises/bare-metal/morning.md:8
#: src/exercises/concurrency/morning.md:12
msgid ""
"After looking at the exercises, you can look at the [solutions](solutions-"
"morning.md) provided."
msgstr ""
"Depois de ver os exerc√≠cios, voc√™ pode ver as [solu√ß√µes](solutions-morning."
"md) fornecidas."

#: src/exercises/bare-metal/compass.md:3
msgid ""
"We will read the direction from an I2C compass, and log the readings to a "
"serial port. If you have time, try displaying it on the LEDs somehow too, or "
"use the buttons somehow."
msgstr ""

#: src/exercises/bare-metal/compass.md:7
msgid "Hints:"
msgstr ""

#: src/exercises/bare-metal/compass.md:9
msgid ""
"Check the documentation for the [`lsm303agr`](https://docs.rs/lsm303agr/"
"latest/lsm303agr/) and [`microbit-v2`](https://docs.rs/microbit-v2/latest/"
"microbit/) crates, as well as the [micro:bit hardware](https://tech.microbit."
"org/hardware/)."
msgstr ""

#: src/exercises/bare-metal/compass.md:13
msgid ""
"The LSM303AGR Inertial Measurement Unit is connected to the internal I2C bus."
msgstr ""

#: src/exercises/bare-metal/compass.md:14
msgid ""
"TWI is another name for I2C, so the I2C master peripheral is called TWIM."
msgstr ""

#: src/exercises/bare-metal/compass.md:15
msgid ""
"The LSM303AGR driver needs something implementing the `embedded_hal::"
"blocking::i2c::WriteRead` trait. The [`microbit::hal::Twim`](https://docs.rs/"
"microbit-v2/latest/microbit/hal/struct.Twim.html) struct implements this."
msgstr ""

#: src/exercises/bare-metal/compass.md:19
msgid ""
"You have a [`microbit::Board`](https://docs.rs/microbit-v2/latest/microbit/"
"struct.Board.html) struct with fields for the various pins and peripherals."
msgstr ""

#: src/exercises/bare-metal/compass.md:22
msgid ""
"You can also look at the [nRF52833 datasheet](https://infocenter.nordicsemi."
"com/pdf/nRF52833_PS_v1.5.pdf) if you want, but it shouldn't be necessary for "
"this exercise."
msgstr ""

#: src/exercises/bare-metal/compass.md:26
msgid ""
"Download the [exercise template](../../comprehensive-rust-exercises.zip) and "
"look in the `compass` directory for the following files."
msgstr ""

#: src/exercises/bare-metal/compass.md:29 src/exercises/bare-metal/rtc.md:22
#, fuzzy
msgid "_src/main.rs_:"
msgstr "_hello_rust/src/main.rs_:"

#: src/exercises/bare-metal/compass.md:47
#: src/exercises/bare-metal/solutions-morning.md:32
msgid "// Configure serial port.\n"
msgstr ""

#: src/exercises/bare-metal/compass.md:55
msgid ""
"// Set up the I2C controller and Inertial Measurement Unit.\n"
"    // TODO\n"
msgstr ""

#: src/exercises/bare-metal/compass.md:58
#: src/exercises/bare-metal/solutions-morning.md:56
msgid "\"Ready.\""
msgstr ""

#: src/exercises/bare-metal/compass.md:61
msgid ""
"// Read compass data and log it to the serial port.\n"
"        // TODO\n"
msgstr ""

#: src/exercises/bare-metal/compass.md:67 src/exercises/bare-metal/rtc.md:387
msgid "_Cargo.toml_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/compass.md:89
msgid "_Embed.toml_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/compass.md:105 src/exercises/bare-metal/rtc.md:988
msgid "_.cargo/config.toml_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/compass.md:118
msgid "See the serial output on Linux with:"
msgstr ""

#: src/exercises/bare-metal/compass.md:126
msgid ""
"Or on Mac OS something like (the device name may be slightly different):"
msgstr ""

#: src/exercises/bare-metal/compass.md:134
msgid "Use Ctrl+A Ctrl+Q to quit picocom."
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md:1
#, fuzzy
msgid "Bare Metal Rust Morning Exercise"
msgstr "Dia 3 Exerc√≠cio matinal"

#: src/exercises/bare-metal/solutions-morning.md:5
#, fuzzy
msgid "([back to exercise](compass.md))"
msgstr "([voltar ao exerc√≠cio](for-loops.md))"

#: src/exercises/bare-metal/solutions-morning.md:40
msgid "// Set up the I2C controller and Inertial Measurement Unit.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md:41
msgid "\"Setting up IMU...\""
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md:49
msgid "// Set up display and timer.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md:59
msgid "// Read compass data and log it to the serial port.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md:67
msgid "\"{},{},{}\\t{},{},{}\""
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md:105
msgid ""
"// If button A is pressed, switch to the next mode and briefly blink all "
"LEDs\n"
"        // on.\n"
msgstr ""

#: src/bare-metal/aps.md:1
msgid "Application processors"
msgstr ""

#: src/bare-metal/aps.md:3
msgid ""
"So far we've talked about microcontrollers, such as the Arm Cortex-M series. "
"Now let's try writing something for Cortex-A. For simplicity we'll just work "
"with QEMU's aarch64 ['virt'](https://qemu-project.gitlab.io/qemu/system/arm/"
"virt.html) board."
msgstr ""

#: src/bare-metal/aps.md:10
msgid ""
"Broadly speaking, microcontrollers don't have an MMU or multiple levels of "
"privilege (exception levels on Arm CPUs, rings on x86), while application "
"processors do."
msgstr ""

#: src/bare-metal/aps.md:13
msgid ""
"QEMU supports emulating various different machines or board models for each "
"architecture. The 'virt' board doesn't correspond to any particular real "
"hardware, but is designed purely for virtual machines."
msgstr ""

#: src/bare-metal/aps/entry-point.md:3
msgid ""
"Before we can start running Rust code, we need to do some initialisation."
msgstr ""

#: src/bare-metal/aps/entry-point.md:5
msgid ""
"```armasm\n"
".section .init.entry, \"ax\"\n"
".global entry\n"
"entry:\n"
"    /*\n"
"     * Load and apply the memory management configuration, ready to enable "
"MMU and\n"
"     * caches.\n"
"     */\n"
"    adrp x30, idmap\n"
"    msr ttbr0_el1, x30\n"
"\n"
"    mov_i x30, .Lmairval\n"
"    msr mair_el1, x30\n"
"\n"
"    mov_i x30, .Ltcrval\n"
"    /* Copy the supported PA range into TCR_EL1.IPS. */\n"
"    mrs x29, id_aa64mmfr0_el1\n"
"    bfi x30, x29, #32, #4\n"
"\n"
"    msr tcr_el1, x30\n"
"\n"
"    mov_i x30, .Lsctlrval\n"
"\n"
"    /*\n"
"     * Ensure everything before this point has completed, then invalidate "
"any\n"
"     * potentially stale local TLB entries before they start being used.\n"
"     */\n"
"    isb\n"
"    tlbi vmalle1\n"
"    ic iallu\n"
"    dsb nsh\n"
"    isb\n"
"\n"
"    /*\n"
"     * Configure sctlr_el1 to enable MMU and cache and don't proceed until "
"this\n"
"     * has completed.\n"
"     */\n"
"    msr sctlr_el1, x30\n"
"    isb\n"
"\n"
"    /* Disable trapping floating point access in EL1. */\n"
"    mrs x30, cpacr_el1\n"
"    orr x30, x30, #(0x3 << 20)\n"
"    msr cpacr_el1, x30\n"
"    isb\n"
"\n"
"    /* Zero out the bss section. */\n"
"    adr_l x29, bss_begin\n"
"    adr_l x30, bss_end\n"
"0:  cmp x29, x30\n"
"    b.hs 1f\n"
"    stp xzr, xzr, [x29], #16\n"
"    b 0b\n"
"\n"
"1:  /* Prepare the stack. */\n"
"    adr_l x30, boot_stack_end\n"
"    mov sp, x30\n"
"\n"
"    /* Set up exception vector. */\n"
"    adr x30, vector_table_el1\n"
"    msr vbar_el1, x30\n"
"\n"
"    /* Call into Rust code. */\n"
"    bl main\n"
"\n"
"    /* Loop forever waiting for interrupts. */\n"
"2:  wfi\n"
"    b 2b\n"
"```"
msgstr ""

#: src/bare-metal/aps/entry-point.md:77
msgid ""
"This is the same as it would be for C: initialising the processor state, "
"zeroing the BSS, and setting up the stack pointer."
msgstr ""

#: src/bare-metal/aps/entry-point.md:79
msgid ""
"The BSS (block starting symbol, for historical reasons) is the part of the "
"object file which containing statically allocated variables which are "
"initialised to zero. They are omitted from the image, to avoid wasting space "
"on zeroes. The compiler assumes that the loader will take care of zeroing "
"them."
msgstr ""

#: src/bare-metal/aps/entry-point.md:84
msgid ""
"The BSS may already be zeroed, depending on how memory is initialised and "
"the image is loaded, but we zero it to be sure."
msgstr ""

#: src/bare-metal/aps/entry-point.md:86
msgid ""
"We need to enable the MMU and cache before reading or writing any memory. If "
"we don't:"
msgstr ""

#: src/bare-metal/aps/entry-point.md:88
msgid ""
"Unaligned accesses will fault. We build the Rust code for the `aarch64-"
"unknown-none` target which sets `+strict-align` to prevent the compiler "
"generating unaligned accesses, so it should be fine in this case, but this "
"is not necessarily the case in general."
msgstr ""

#: src/bare-metal/aps/entry-point.md:92
msgid ""
"If it were running in a VM, this can lead to cache coherency issues. The "
"problem is that the VM is accessing memory directly with the cache disabled, "
"while the host has cacheable aliases to the same memory. Even if the host "
"doesn't explicitly access the memory, speculative accesses can lead to cache "
"fills, and then changes from one or the other will get lost when the cache "
"is cleaned or the VM enables the cache. (Cache is keyed by physical address, "
"not VA or IPA.)"
msgstr ""

#: src/bare-metal/aps/entry-point.md:99
msgid ""
"For simplicity, we just use a hardcoded pagetable (see `idmap.S`) which "
"identity maps the first 1 GiB of address space for devices, the next 1 GiB "
"for DRAM, and another 1 GiB higher up for more devices. This matches the "
"memory layout that QEMU uses."
msgstr ""

#: src/bare-metal/aps/entry-point.md:103
msgid ""
"We also set up the exception vector (`vbar_el1`), which we'll see more about "
"later."
msgstr ""

#: src/bare-metal/aps/entry-point.md:105
msgid ""
"All examples this afternoon assume we will be running at exception level 1 "
"(EL1). If you need to run at a different exception level you'll need to "
"modify `entry.S` accordingly."
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:1
msgid "Inline assembly"
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:3
msgid ""
"Sometimes we need to use assembly to do things that aren't possible with "
"Rust code. For example, to make an HVC (hypervisor call) to tell the "
"firmware to power off the system:"
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:20
msgid ""
"// Safe because this only uses the declared registers and doesn't do\n"
"    // anything with memory.\n"
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:23
msgid "\"hvc #0\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:24
msgid "\"w0\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:25
msgid "\"w1\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:26
msgid "\"w2\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:27
msgid "\"w3\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:28
msgid "\"w4\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:29
msgid "\"w5\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:30
msgid "\"w6\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:31
msgid "\"w7\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:40
msgid ""
"(If you actually want to do this, use the [`smccc`](https://crates.io/crates/"
"smccc) crate which has wrappers for all these functions.)"
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:45
msgid ""
"PSCI is the Arm Power State Coordination Interface, a standard set of "
"functions to manage system and CPU power states, among other things. It is "
"implemented by EL3 firmware and hypervisors on many systems."
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:48
msgid ""
"The `0 => _` syntax means initialise the register to 0 before running the "
"inline assembly code, and ignore its contents afterwards. We need to use "
"`inout` rather than `in` because the call could potentially clobber the "
"contents of the registers."
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:52
msgid ""
"This `main` function needs to be `#[no_mangle]` and `extern \"C\"` because "
"it is called from our entry point in `entry.S`."
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:54
msgid ""
"`_x0`‚Äì`_x3` are the values of registers `x0`‚Äì`x3`, which are conventionally "
"used by the bootloader to pass things like a pointer to the device tree. "
"According to the standard aarch64 calling convention (which is what `extern "
"\"C\"` specifies to use), registers `x0`‚Äì`x7` are used for the first 8 "
"arguments passed to a function, so `entry.S` doesn't need to do anything "
"special except make sure it doesn't change these registers."
msgstr ""

#: src/bare-metal/aps/inline-assembly.md:60
msgid ""
"Run the example in QEMU with `make qemu_psci` under `src/bare-metal/aps/"
"examples`."
msgstr ""

#: src/bare-metal/aps/mmio.md:1
msgid "Volatile memory access for MMIO"
msgstr ""

#: src/bare-metal/aps/mmio.md:3
msgid "Use `pointer::read_volatile` and `pointer::write_volatile`."
msgstr ""

#: src/bare-metal/aps/mmio.md:4
msgid "Never hold a reference."
msgstr ""

#: src/bare-metal/aps/mmio.md:5
msgid ""
"`addr_of!` lets you get fields of structs without creating an intermediate "
"reference."
msgstr ""

#: src/bare-metal/aps/mmio.md:10
msgid ""
"Volatile access: read or write operations may have side-effects, so prevent "
"the compiler or hardware from reordering, duplicating or eliding them."
msgstr ""

#: src/bare-metal/aps/mmio.md:12
msgid ""
"Usually if you write and then read, e.g. via a mutable reference, the "
"compiler may assume that the value read is the same as the value just "
"written, and not bother actually reading memory."
msgstr ""

#: src/bare-metal/aps/mmio.md:15
msgid ""
"Some existing crates for volatile access to hardware do hold references, but "
"this is unsound. Whenever a reference exist, the compiler may choose to "
"dereference it."
msgstr ""

#: src/bare-metal/aps/mmio.md:18
msgid ""
"Use the `addr_of!` macro to get struct field pointers from a pointer to the "
"struct."
msgstr ""

#: src/bare-metal/aps/uart.md:1
msgid "Let's write a UART driver"
msgstr ""

#: src/bare-metal/aps/uart.md:3
msgid ""
"The QEMU 'virt' machine has a [PL011](https://developer.arm.com/"
"documentation/ddi0183/g) UART, so let's write a driver for that."
msgstr ""

#: src/bare-metal/aps/uart.md:9
msgid "/// Minimal driver for a PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/uart.md:17 src/bare-metal/aps/better-uart/driver.md:13
msgid ""
"/// Constructs a new instance of the UART driver for a PL011 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the 8 MMIO control registers of "
"a\n"
"    /// PL011 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/bare-metal/aps/uart.md:29 src/bare-metal/aps/better-uart/driver.md:25
#: src/exercises/bare-metal/rtc.md:337
msgid "/// Writes a single byte to the UART.\n"
msgstr ""

#: src/bare-metal/aps/uart.md:31 src/bare-metal/aps/better-uart/driver.md:27
#: src/exercises/bare-metal/rtc.md:339
msgid "// Wait until there is room in the TX buffer.\n"
msgstr ""

#: src/bare-metal/aps/uart.md:34 src/bare-metal/aps/uart.md:46
msgid ""
"// Safe because we know that the base address points to the control\n"
"        // registers of a PL011 device which is appropriately mapped.\n"
msgstr ""

#: src/bare-metal/aps/uart.md:37 src/bare-metal/aps/better-uart/driver.md:33
#: src/exercises/bare-metal/rtc.md:345
msgid "// Write to the TX buffer.\n"
msgstr ""

#: src/bare-metal/aps/uart.md:41 src/bare-metal/aps/better-uart/driver.md:37
#: src/exercises/bare-metal/rtc.md:349
msgid "// Wait until the UART is no longer busy.\n"
msgstr ""

#: src/bare-metal/aps/uart.md:55
msgid ""
"Note that `Uart::new` is unsafe while the other methods are safe. This is "
"because as long as the caller of `Uart::new` guarantees that its safety "
"requirements are met (i.e. that there is only ever one instance of the "
"driver for a given UART, and nothing else aliasing its address space), then "
"it is always safe to call `write_byte` later because we can assume the "
"necessary preconditions."
msgstr ""

#: src/bare-metal/aps/uart.md:61
msgid ""
"We could have done it the other way around (making `new` safe but "
"`write_byte` unsafe), but that would be much less convenient to use as every "
"place that calls `write_byte` would need to reason about the safety"
msgstr ""

#: src/bare-metal/aps/uart.md:64
msgid ""
"This is a common pattern for writing safe wrappers of unsafe code: moving "
"the burden of proof for soundness from a large number of places to a smaller "
"number of places."
msgstr ""

#: src/bare-metal/aps/uart/traits.md:1
#, fuzzy
msgid "More traits"
msgstr "Traits (Caracter√≠sticas)"

#: src/bare-metal/aps/uart/traits.md:3
msgid ""
"We derived the `Debug` trait. It would be useful to implement a few more "
"traits too."
msgstr ""

#: src/bare-metal/aps/uart/traits.md:17 src/exercises/bare-metal/rtc.md:381
#: src/exercises/bare-metal/solutions-afternoon.md:223
msgid ""
"// Safe because it just contains a pointer to device memory, which can be\n"
"// accessed from any context.\n"
msgstr ""

#: src/bare-metal/aps/uart/traits.md:25
msgid ""
"Implementing `Write` lets us use the `write!` and `writeln!` macros with our "
"`Uart` type."
msgstr ""

#: src/bare-metal/aps/uart/traits.md:27
msgid ""
"Run the example in QEMU with `make qemu_minimal` under `src/bare-metal/aps/"
"examples`."
msgstr ""

#: src/bare-metal/aps/better-uart.md:1
msgid "A better UART driver"
msgstr ""

#: src/bare-metal/aps/better-uart.md:3
msgid ""
"The PL011 actually has [a bunch more registers](https://developer.arm.com/"
"documentation/ddi0183/g/programmers-model/summary-of-registers), and adding "
"offsets to construct pointers to access them is error-prone and hard to "
"read. Plus, some of them are bit fields which would be nice to access in a "
"structured way."
msgstr ""

#: src/bare-metal/aps/better-uart.md:7
msgid "Offset"
msgstr ""

#: src/bare-metal/aps/better-uart.md:7
msgid "Register name"
msgstr ""

#: src/bare-metal/aps/better-uart.md:7
msgid "Width"
msgstr ""

#: src/bare-metal/aps/better-uart.md:9
msgid "0x00"
msgstr ""

#: src/bare-metal/aps/better-uart.md:9
msgid "DR"
msgstr ""

#: src/bare-metal/aps/better-uart.md:9
msgid "12"
msgstr ""

#: src/bare-metal/aps/better-uart.md:10
msgid "0x04"
msgstr ""

#: src/bare-metal/aps/better-uart.md:10
msgid "RSR"
msgstr ""

#: src/bare-metal/aps/better-uart.md:11
msgid "0x18"
msgstr ""

#: src/bare-metal/aps/better-uart.md:11
msgid "FR"
msgstr ""

#: src/bare-metal/aps/better-uart.md:11
msgid "9"
msgstr ""

#: src/bare-metal/aps/better-uart.md:12
msgid "0x20"
msgstr ""

#: src/bare-metal/aps/better-uart.md:12
msgid "ILPR"
msgstr ""

#: src/bare-metal/aps/better-uart.md:13
msgid "0x24"
msgstr ""

#: src/bare-metal/aps/better-uart.md:13
msgid "IBRD"
msgstr ""

#: src/bare-metal/aps/better-uart.md:13 src/bare-metal/aps/better-uart.md:16
msgid "16"
msgstr ""

#: src/bare-metal/aps/better-uart.md:14
msgid "0x28"
msgstr ""

#: src/bare-metal/aps/better-uart.md:14
msgid "FBRD"
msgstr ""

#: src/bare-metal/aps/better-uart.md:15
msgid "0x2c"
msgstr ""

#: src/bare-metal/aps/better-uart.md:15
msgid "LCR_H"
msgstr ""

#: src/bare-metal/aps/better-uart.md:16
msgid "0x30"
msgstr ""

#: src/bare-metal/aps/better-uart.md:16
msgid "CR"
msgstr ""

#: src/bare-metal/aps/better-uart.md:17
msgid "0x34"
msgstr ""

#: src/bare-metal/aps/better-uart.md:17
msgid "IFLS"
msgstr ""

#: src/bare-metal/aps/better-uart.md:18
msgid "0x38"
msgstr ""

#: src/bare-metal/aps/better-uart.md:18
msgid "IMSC"
msgstr ""

#: src/bare-metal/aps/better-uart.md:18 src/bare-metal/aps/better-uart.md:19
#: src/bare-metal/aps/better-uart.md:20 src/bare-metal/aps/better-uart.md:21
msgid "11"
msgstr ""

#: src/bare-metal/aps/better-uart.md:19
msgid "0x3c"
msgstr ""

#: src/bare-metal/aps/better-uart.md:19
msgid "RIS"
msgstr ""

#: src/bare-metal/aps/better-uart.md:20
msgid "0x40"
msgstr ""

#: src/bare-metal/aps/better-uart.md:20
msgid "MIS"
msgstr ""

#: src/bare-metal/aps/better-uart.md:21
msgid "0x44"
msgstr ""

#: src/bare-metal/aps/better-uart.md:21
msgid "ICR"
msgstr ""

#: src/bare-metal/aps/better-uart.md:22
msgid "0x48"
msgstr ""

#: src/bare-metal/aps/better-uart.md:22
msgid "DMACR"
msgstr ""

#: src/bare-metal/aps/better-uart.md:26
msgid "There are also some ID registers which have been omitted for brevity."
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:3
msgid ""
"The [`bitflags`](https://crates.io/crates/bitflags) crate is useful for "
"working with bitflags."
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:10
#: src/exercises/bare-metal/rtc.md:241
msgid "/// Flags from the UART flag register.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:14
#: src/exercises/bare-metal/rtc.md:245
msgid "/// Clear to send.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:16
#: src/exercises/bare-metal/rtc.md:247
msgid "/// Data set ready.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:18
#: src/exercises/bare-metal/rtc.md:249
msgid "/// Data carrier detect.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:20
#: src/exercises/bare-metal/rtc.md:251
msgid "/// UART busy transmitting data.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:22
#: src/exercises/bare-metal/rtc.md:253
msgid "/// Receive FIFO is empty.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:24
#: src/exercises/bare-metal/rtc.md:255
msgid "/// Transmit FIFO is full.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:26
#: src/exercises/bare-metal/rtc.md:257
msgid "/// Receive FIFO is full.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:28
#: src/exercises/bare-metal/rtc.md:259
msgid "/// Transmit FIFO is empty.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:30
#: src/exercises/bare-metal/rtc.md:261
msgid "/// Ring indicator.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md:38
msgid ""
"The `bitflags!` macro creates a newtype something like `Flags(u16)`, along "
"with a bunch of method implementations to get and set flags."
msgstr ""

#: src/bare-metal/aps/better-uart/registers.md:1
msgid "Multiple registers"
msgstr ""

#: src/bare-metal/aps/better-uart/registers.md:3
msgid ""
"We can use a struct to represent the memory layout of the UART's registers."
msgstr ""

#: src/bare-metal/aps/better-uart/registers.md:43
msgid ""
"[`#[repr(C)]`](https://doc.rust-lang.org/reference/type-layout.html#the-c-"
"representation) tells the compiler to lay the struct fields out in order, "
"following the same rules as C. This is necessary for our struct to have a "
"predictable layout, as default Rust representation allows the compiler to "
"(among other things) reorder fields however it sees fit."
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md:3
msgid "Now let's use the new `Registers` struct in our driver."
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md:6
msgid "/// Driver for a PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md:30
#: src/bare-metal/aps/better-uart/driver.md:54
#: src/exercises/bare-metal/rtc.md:342 src/exercises/bare-metal/rtc.md:366
msgid ""
"// Safe because we know that self.registers points to the control\n"
"        // registers of a PL011 device which is appropriately mapped.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md:41
#: src/exercises/bare-metal/rtc.md:353
msgid ""
"/// Reads and returns a pending byte, or `None` if nothing has been\n"
"    /// received.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md:48
#: src/exercises/bare-metal/rtc.md:360
msgid "// TODO: Check for error conditions in bits 8-11.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md:63
msgid ""
"Note the use of `addr_of!` / `addr_of_mut!` to get pointers to individual "
"fields without creating an intermediate reference, which would be unsound."
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:1
#: src/bare-metal/aps/logging/using.md:1
#, fuzzy
msgid "Using it"
msgstr "Usando Bingen"

#: src/bare-metal/aps/better-uart/using.md:3
msgid ""
"Let's write a small program using our driver to write to the serial console, "
"and echo incoming bytes."
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:19
#: src/bare-metal/aps/logging/using.md:18 src/exercises/bare-metal/rtc.md:44
#: src/exercises/bare-metal/solutions-afternoon.md:33
msgid "/// Base address of the primary PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:25
#: src/bare-metal/aps/logging/using.md:24 src/exercises/bare-metal/rtc.md:50
#: src/exercises/bare-metal/solutions-afternoon.md:44
msgid ""
"// Safe because `PL011_BASE_ADDRESS` is the base address of a PL011 device,\n"
"    // and nothing else accesses that address range.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:29
#: src/bare-metal/aps/logging/using.md:29
msgid "\"main({x0:#x}, {x1:#x}, {x2:#x}, {x3:#x})\""
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:35
msgid "b'\\r'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:36
#: src/async/pitfalls/cancellation.md:27
msgid "b'\\n'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:38
msgid "b'q'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:44
msgid "\"Bye!\""
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:51
msgid ""
"As in the [inline assembly](../inline-assembly.md) example, this `main` "
"function is called from our entry point code in `entry.S`. See the speaker "
"notes there for details."
msgstr ""

#: src/bare-metal/aps/better-uart/using.md:54
msgid ""
"Run the example in QEMU with `make qemu` under `src/bare-metal/aps/examples`."
msgstr ""

#: src/bare-metal/aps/logging.md:3
msgid ""
"It would be nice to be able to use the logging macros from the [`log`]"
"(https://crates.io/crates/log) crate. We can do this by implementing the "
"`Log` trait."
msgstr ""

#: src/bare-metal/aps/logging.md:26 src/exercises/bare-metal/rtc.md:193
msgid "\"[{}] {}\""
msgstr ""

#: src/bare-metal/aps/logging.md:35 src/exercises/bare-metal/rtc.md:202
msgid "/// Initialises UART logger.\n"
msgstr ""

#: src/bare-metal/aps/logging.md:48
msgid ""
"The unwrap in `log` is safe because we initialise `LOGGER` before calling "
"`set_logger`."
msgstr ""

#: src/bare-metal/aps/logging/using.md:3
msgid "We need to initialise the logger before we use it."
msgstr ""

#: src/bare-metal/aps/logging/using.md:38 src/exercises/bare-metal/rtc.md:72
#: src/exercises/bare-metal/solutions-afternoon.md:115
msgid "\"{info}\""
msgstr ""

#: src/bare-metal/aps/logging/using.md:46
msgid "Note that our panic handler can now log details of panics."
msgstr ""

#: src/bare-metal/aps/logging/using.md:47
msgid ""
"Run the example in QEMU with `make qemu_logger` under `src/bare-metal/aps/"
"examples`."
msgstr ""

#: src/bare-metal/aps/exceptions.md:3
msgid ""
"AArch64 defines an exception vector table with 16 entries, for 4 types of "
"exceptions (synchronous, IRQ, FIQ, SError) from 4 states (current EL with "
"SP0, current EL with SPx, lower EL using AArch64, lower EL using AArch32). "
"We implement this in assembly to save volatile registers to the stack before "
"calling into Rust code:"
msgstr ""

#: src/bare-metal/aps/exceptions.md:67
msgid "EL is exception level; all our examples this afternoon run in EL1."
msgstr ""

#: src/bare-metal/aps/exceptions.md:68
msgid ""
"For simplicity we aren't distinguishing between SP0 and SPx for the current "
"EL exceptions, or between AArch32 and AArch64 for the lower EL exceptions."
msgstr ""

#: src/bare-metal/aps/exceptions.md:70
msgid ""
"For this example we just log the exception and power down, as we don't "
"expect any of them to actually happen."
msgstr ""

#: src/bare-metal/aps/exceptions.md:72
msgid ""
"We can think of exception handlers and our main execution context more or "
"less like different threads. [`Send` and `Sync`](../../concurrency/send-sync."
"md) will control what we can share between them, just like with threads. For "
"example, if we want to share some value between exception handlers and the "
"rest of the program, and it's `Send` but not `Sync`, then we'll need to wrap "
"it in something like a `Mutex` and put it in a static."
msgstr ""

#: src/bare-metal/aps/other-projects.md:3
msgid "[oreboot](https://github.com/oreboot/oreboot)"
msgstr ""

#: src/bare-metal/aps/other-projects.md:4
msgid "\"coreboot without the C\""
msgstr ""

#: src/bare-metal/aps/other-projects.md:5
msgid "Supports x86, aarch64 and RISC-V."
msgstr ""

#: src/bare-metal/aps/other-projects.md:6
msgid "Relies on LinuxBoot rather than having many drivers itself."
msgstr ""

#: src/bare-metal/aps/other-projects.md:7
msgid ""
"[Rust RaspberryPi OS tutorial](https://github.com/rust-embedded/rust-"
"raspberrypi-OS-tutorials)"
msgstr ""

#: src/bare-metal/aps/other-projects.md:8
msgid ""
"Initialisation, UART driver, simple bootloader, JTAG, exception levels, "
"exception handling, page tables"
msgstr ""

#: src/bare-metal/aps/other-projects.md:10
msgid ""
"Some dodginess around cache maintenance and initialisation in Rust, not "
"necessarily a good example to copy for production code."
msgstr ""

#: src/bare-metal/aps/other-projects.md:12
msgid "[`cargo-call-stack`](https://crates.io/crates/cargo-call-stack)"
msgstr ""

#: src/bare-metal/aps/other-projects.md:13
msgid "Static analysis to determine maximum stack usage."
msgstr ""

#: src/bare-metal/aps/other-projects.md:17
msgid ""
"The RaspberryPi OS tutorial runs Rust code before the MMU and caches are "
"enabled. This will read and write memory (e.g. the stack). However:"
msgstr ""

#: src/bare-metal/aps/other-projects.md:19
msgid ""
"Without the MMU and cache, unaligned accesses will fault. It builds with "
"`aarch64-unknown-none` which sets `+strict-align` to prevent the compiler "
"generating unaligned accesses so it should be alright, but this is not "
"necessarily the case in general."
msgstr ""

#: src/bare-metal/aps/other-projects.md:23
msgid ""
"If it were running in a VM, this can lead to cache coherency issues. The "
"problem is that the VM is accessing memory directly with the cache disabled, "
"while the host has cacheable aliases to the same memory. Even if the host "
"doesn't explicitly access the memory, speculative accesses can lead to cache "
"fills, and then changes from one or the other will get lost. Again this is "
"alright in this particular case (running directly on the hardware with no "
"hypervisor), but isn't a good pattern in general."
msgstr ""

#: src/bare-metal/useful-crates.md:1
msgid "Useful crates"
msgstr "Crates √öteis para Testes"

#: src/bare-metal/useful-crates.md:3
msgid ""
"We'll go over a few crates which solve some common problems in bare-metal "
"programming."
msgstr ""

#: src/bare-metal/useful-crates/zerocopy.md:3
msgid ""
"The [`zerocopy`](https://docs.rs/zerocopy/) crate (from Fuchsia) provides "
"traits and macros for safely converting between byte sequences and other "
"types."
msgstr ""

#: src/bare-metal/useful-crates/zerocopy.md:42
msgid ""
"This is not suitable for MMIO (as it doesn't use volatile reads and writes), "
"but can be useful for working with structures shared with hardware e.g. by "
"DMA, or sent over some external interface."
msgstr ""

#: src/bare-metal/useful-crates/zerocopy.md:48
msgid ""
"`FromBytes` can be implemented for types for which any byte pattern is "
"valid, and so can safely be converted from an untrusted sequence of bytes."
msgstr ""

#: src/bare-metal/useful-crates/zerocopy.md:50
msgid ""
"Attempting to derive `FromBytes` for these types would fail, because "
"`RequestType` doesn't use all possible u32 values as discriminants, so not "
"all byte patterns are valid."
msgstr ""

#: src/bare-metal/useful-crates/zerocopy.md:53
msgid ""
"`zerocopy::byteorder` has types for byte-order aware numeric primitives."
msgstr ""

#: src/bare-metal/useful-crates/zerocopy.md:54
msgid ""
"Run the example with `cargo run` under `src/bare-metal/useful-crates/"
"zerocopy-example/`. (It won't run in the Playground because of the crate "
"dependency.)"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md:3
msgid ""
"The [`aarch64-paging`](https://crates.io/crates/aarch64-paging) crate lets "
"you create page tables according to the AArch64 Virtual Memory System "
"Architecture."
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md:14
msgid "// Create a new page table with identity mapping.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md:16
msgid "// Map a 2 MiB region of memory as read-only.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md:21
msgid "// Set `TTBR0_EL1` to activate the page table.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md:28
msgid ""
"For now it only supports EL1, but support for other exception levels should "
"be straightforward to add."
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md:30
msgid ""
"This is used in Android for the [Protected VM Firmware](https://cs.android."
"com/android/platform/superproject/+/master:packages/modules/Virtualization/"
"pvmfw/)."
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md:31
msgid ""
"There's no easy way to run this example, as it needs to run on real hardware "
"or under QEMU."
msgstr ""

#: src/bare-metal/useful-crates/buddy_system_allocator.md:3
msgid ""
"[`buddy_system_allocator`](https://crates.io/crates/buddy_system_allocator) "
"is a third-party crate implementing a basic buddy system allocator. It can "
"be used both for [`LockedHeap`](https://docs.rs/buddy_system_allocator/0.9.0/"
"buddy_system_allocator/struct.LockedHeap.html) implementing [`GlobalAlloc`]"
"(https://doc.rust-lang.org/core/alloc/trait.GlobalAlloc.html) so you can use "
"the standard `alloc` crate (as we saw [before](../alloc.md)), or for "
"allocating other address space. For example, we might want to allocate MMIO "
"space for PCI BARs:"
msgstr ""

#: src/bare-metal/useful-crates/buddy_system_allocator.md:29
msgid "PCI BARs always have alignment equal to their size."
msgstr ""

#: src/bare-metal/useful-crates/buddy_system_allocator.md:30
msgid ""
"Run the example with `cargo run` under `src/bare-metal/useful-crates/"
"allocator-example/`. (It won't run in the Playground because of the crate "
"dependency.)"
msgstr ""

#: src/bare-metal/useful-crates/tinyvec.md:3
msgid ""
"Sometimes you want something which can be resized like a `Vec`, but without "
"heap allocation. [`tinyvec`](https://crates.io/crates/tinyvec) provides "
"this: a vector backed by an array or slice, which could be statically "
"allocated or on the stack, which keeps track of how many elements are used "
"and panics if you try to use more than are allocated."
msgstr ""

#: src/bare-metal/useful-crates/tinyvec.md:25
msgid ""
"`tinyvec` requires that the element type implement `Default` for "
"initialisation."
msgstr ""

#: src/bare-metal/useful-crates/tinyvec.md:27
msgid ""
"The Rust Playground includes `tinyvec`, so this example will run fine inline."
msgstr ""

#: src/bare-metal/useful-crates/spin.md:3
msgid ""
"`std::sync::Mutex` and the other synchronisation primitives from `std::sync` "
"are not available in `core` or `alloc`. How can we manage synchronisation or "
"interior mutability, such as for sharing state between different CPUs?"
msgstr ""

#: src/bare-metal/useful-crates/spin.md:7
msgid ""
"The [`spin`](https://crates.io/crates/spin) crate provides spinlock-based "
"equivalents of many of these primitives."
msgstr ""

#: src/bare-metal/useful-crates/spin.md:26
msgid "Be careful to avoid deadlock if you take locks in interrupt handlers."
msgstr ""

#: src/bare-metal/useful-crates/spin.md:27
msgid ""
"`spin` also has a ticket lock mutex implementation; equivalents of `RwLock`, "
"`Barrier` and `Once` from `std::sync`; and `Lazy` for lazy initialisation."
msgstr ""

#: src/bare-metal/useful-crates/spin.md:29
msgid ""
"The [`once_cell`](https://crates.io/crates/once_cell) crate also has some "
"useful types for late initialisation with a slightly different approach to "
"`spin::once::Once`."
msgstr ""

#: src/bare-metal/useful-crates/spin.md:31
msgid ""
"The Rust Playground includes `spin`, so this example will run fine inline."
msgstr ""

#: src/bare-metal/android.md:3
msgid ""
"To build a bare-metal Rust binary in AOSP, you need to use a "
"`rust_ffi_static` Soong rule to build your Rust code, then a `cc_binary` "
"with a linker script to produce the binary itself, and then a `raw_binary` "
"to convert the ELF to a raw binary ready to be run."
msgstr ""

#: src/bare-metal/android/vmbase.md:1
msgid "vmbase"
msgstr ""

#: src/bare-metal/android/vmbase.md:3
msgid ""
"For VMs running under crosvm on aarch64, the [vmbase](https://android."
"googlesource.com/platform/packages/modules/Virtualization/+/refs/heads/"
"master/vmbase/) library provides a linker script and useful defaults for the "
"build rules, along with an entry point, UART console logging and more."
msgstr ""

#: src/bare-metal/android/vmbase.md:24
msgid ""
"The `main!` macro marks your main function, to be called from the `vmbase` "
"entry point."
msgstr ""

#: src/bare-metal/android/vmbase.md:26
msgid ""
"The `vmbase` entry point handles console initialisation, and issues a "
"PSCI_SYSTEM_OFF to shutdown the VM if your main function returns."
msgstr ""

#: src/exercises/bare-metal/afternoon.md:3
msgid "We will write a driver for the PL031 real-time clock device."
msgstr ""

#: src/exercises/bare-metal/afternoon.md:7
#: src/exercises/concurrency/afternoon.md:13
msgid ""
"After looking at the exercises, you can look at the [solutions](solutions-"
"afternoon.md) provided."
msgstr ""
"Depois de ver os exerc√≠cios, voc√™ pode ver as [solu√ß√µes](solutions-afternoon."
"md) fornecidas."

#: src/exercises/bare-metal/rtc.md:1
#: src/exercises/bare-metal/solutions-afternoon.md:3
msgid "RTC driver"
msgstr ""

#: src/exercises/bare-metal/rtc.md:3
msgid ""
"The QEMU aarch64 virt machine has a [PL031](https://developer.arm.com/"
"documentation/ddi0224/c) real-time clock at 0x9010000. For this exercise, "
"you should write a driver for it."
msgstr ""

#: src/exercises/bare-metal/rtc.md:6
msgid ""
"Use it to print the current time to the serial console. You can use the "
"[`chrono`](https://crates.io/crates/chrono) crate for date/time formatting."
msgstr ""

#: src/exercises/bare-metal/rtc.md:8
msgid ""
"Use the match register and raw interrupt status to busy-wait until a given "
"time, e.g. 3 seconds in the future. (Call [`core::hint::spin_loop`](https://"
"doc.rust-lang.org/core/hint/fn.spin_loop.html) inside the loop.)"
msgstr ""

#: src/exercises/bare-metal/rtc.md:11
msgid ""
"_Extension if you have time:_ Enable and handle the interrupt generated by "
"the RTC match. You can use the driver provided in the [`arm-gic`](https://"
"docs.rs/arm-gic/) crate to configure the Arm Generic Interrupt Controller."
msgstr ""

#: src/exercises/bare-metal/rtc.md:14
msgid "Use the RTC interrupt, which is wired to the GIC as `IntId::spi(2)`."
msgstr ""

#: src/exercises/bare-metal/rtc.md:15
msgid ""
"Once the interrupt is enabled, you can put the core to sleep via `arm_gic::"
"wfi()`, which will cause the core to sleep until it receives an interrupt."
msgstr ""

#: src/exercises/bare-metal/rtc.md:19
msgid ""
"Download the [exercise template](../../comprehensive-rust-exercises.zip) and "
"look in the `rtc` directory for the following files."
msgstr ""

#: src/exercises/bare-metal/rtc.md:40
#: src/exercises/bare-metal/solutions-afternoon.md:29
msgid "/// Base addresses of the GICv3.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:55
#: src/exercises/bare-metal/solutions-afternoon.md:49
msgid "\"main({:#x}, {:#x}, {:#x}, {:#x})\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:57
#: src/exercises/bare-metal/solutions-afternoon.md:51
msgid ""
"// Safe because `GICD_BASE_ADDRESS` and `GICR_BASE_ADDRESS` are the base\n"
"    // addresses of a GICv3 distributor and redistributor respectively, and\n"
"    // nothing else accesses those address ranges.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:63
msgid "// TODO: Create instance of RTC driver and print current time.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:65
msgid "// TODO: Wait for 3 seconds.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:78
msgid ""
"_src/exceptions.rs_ (you should only need to change this for the 3rd part of "
"the exercise):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:84 src/exercises/bare-metal/rtc.md:159
#: src/exercises/bare-metal/rtc.md:218 src/exercises/bare-metal/rtc.md:418
#, fuzzy
msgid ""
"// Copyright 2023 Google LLC\n"
"//\n"
"// Licensed under the Apache License, Version 2.0 (the \"License\");\n"
"// you may not use this file except in compliance with the License.\n"
"// You may obtain a copy of the License at\n"
"//\n"
"//      http://www.apache.org/licenses/LICENSE-2.0\n"
"//\n"
"// Unless required by applicable law or agreed to in writing, software\n"
"// distributed under the License is distributed on an \"AS IS\" BASIS,\n"
"// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
"// See the License for the specific language governing permissions and\n"
"// limitations under the License.\n"
msgstr ""
"// Copyright 2022 Google LLC\n"
"//\n"
"// Licensed under the Apache License, Version 2.0 (the \"License\");\n"
"// you may not use this file except in compliance with the License.\n"
"// You may obtain a copy of the License at\n"
"//\n"
"//      http://www.apache.org/licenses/LICENSE-2.0\n"
"//\n"
"// Unless required by applicable law or agreed to in writing, software\n"
"// distributed under the License is distributed on an \"AS IS\" BASIS,\n"
"// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
"// See the License for the specific language governing permissions and\n"
"// limitations under the License.\n"

#: src/exercises/bare-metal/rtc.md:105
msgid "\"sync_exception_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:111
msgid "\"irq_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:113
msgid "\"No pending interrupt\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:114
msgid "\"IRQ {intid:?}\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:119
msgid "\"fiq_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:125
msgid "\"serr_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:131
msgid "\"sync_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:137
msgid "\"irq_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:143
msgid "\"fiq_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:149
msgid "\"serr_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:154
msgid "_src/logger.rs_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:172
msgid "// ANCHOR: main\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:213
msgid "_src/pl011.rs_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:236
msgid "// ANCHOR: Flags\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:264
msgid "// ANCHOR_END: Flags\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:268
msgid ""
"/// Flags from the UART Receive Status Register / Error Clear Register.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:272
msgid "/// Framing error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:274
msgid "/// Parity error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:276
msgid "/// Break error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:278
msgid "/// Overrun error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:282
msgid "// ANCHOR: Registers\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:314
msgid "// ANCHOR_END: Registers\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:316
msgid ""
"// ANCHOR: Uart\n"
"/// Driver for a PL011 UART.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:325
msgid ""
"/// Constructs a new instance of the UART driver for a PL011 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the MMIO control registers of "
"a\n"
"    /// PL011 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:370
msgid "// ANCHOR_END: Uart\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md:413
msgid "_build.rs_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:436 src/exercises/bare-metal/rtc.md:438
msgid "\"linux\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:437 src/exercises/bare-metal/rtc.md:439
msgid "\"CROSS_COMPILE\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:437
msgid "\"aarch64-linux-gnu\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:439
msgid "\"aarch64-none-elf\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:442
msgid "\"entry.S\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:443
msgid "\"exceptions.S\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:444
msgid "\"idmap.S\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:445
msgid "\"empty\""
msgstr ""

#: src/exercises/bare-metal/rtc.md:449
msgid "_entry.S_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:453
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
".macro adr_l, reg:req, sym:req\n"
"\tadrp \\reg, \\sym\n"
"\tadd \\reg, \\reg, :lo12:\\sym\n"
".endm\n"
"\n"
".macro mov_i, reg:req, imm:req\n"
"\tmovz \\reg, :abs_g3:\\imm\n"
"\tmovk \\reg, :abs_g2_nc:\\imm\n"
"\tmovk \\reg, :abs_g1_nc:\\imm\n"
"\tmovk \\reg, :abs_g0_nc:\\imm\n"
".endm\n"
"\n"
".set .L_MAIR_DEV_nGnRE,\t0x04\n"
".set .L_MAIR_MEM_WBWA,\t0xff\n"
".set .Lmairval, .L_MAIR_DEV_nGnRE | (.L_MAIR_MEM_WBWA << 8)\n"
"\n"
"/* 4 KiB granule size for TTBR0_EL1. */\n"
".set .L_TCR_TG0_4KB, 0x0 << 14\n"
"/* 4 KiB granule size for TTBR1_EL1. */\n"
".set .L_TCR_TG1_4KB, 0x2 << 30\n"
"/* Disable translation table walk for TTBR1_EL1, generating a translation "
"fault instead. */\n"
".set .L_TCR_EPD1, 0x1 << 23\n"
"/* Translation table walks for TTBR0_EL1 are inner sharable. */\n"
".set .L_TCR_SH_INNER, 0x3 << 12\n"
"/*\n"
" * Translation table walks for TTBR0_EL1 are outer write-back read-allocate "
"write-allocate\n"
" * cacheable.\n"
" */\n"
".set .L_TCR_RGN_OWB, 0x1 << 10\n"
"/*\n"
" * Translation table walks for TTBR0_EL1 are inner write-back read-allocate "
"write-allocate\n"
" * cacheable.\n"
" */\n"
".set .L_TCR_RGN_IWB, 0x1 << 8\n"
"/* Size offset for TTBR0_EL1 is 2**39 bytes (512 GiB). */\n"
".set .L_TCR_T0SZ_512, 64 - 39\n"
".set .Ltcrval, .L_TCR_TG0_4KB | .L_TCR_TG1_4KB | .L_TCR_EPD1 | ."
"L_TCR_RGN_OWB\n"
".set .Ltcrval, .Ltcrval | .L_TCR_RGN_IWB | .L_TCR_SH_INNER | ."
"L_TCR_T0SZ_512\n"
"\n"
"/* Stage 1 instruction access cacheability is unaffected. */\n"
".set .L_SCTLR_ELx_I, 0x1 << 12\n"
"/* SP alignment fault if SP is not aligned to a 16 byte boundary. */\n"
".set .L_SCTLR_ELx_SA, 0x1 << 3\n"
"/* Stage 1 data access cacheability is unaffected. */\n"
".set .L_SCTLR_ELx_C, 0x1 << 2\n"
"/* EL0 and EL1 stage 1 MMU enabled. */\n"
".set .L_SCTLR_ELx_M, 0x1 << 0\n"
"/* Privileged Access Never is unchanged on taking an exception to EL1. */\n"
".set .L_SCTLR_EL1_SPAN, 0x1 << 23\n"
"/* SETEND instruction disabled at EL0 in aarch32 mode. */\n"
".set .L_SCTLR_EL1_SED, 0x1 << 8\n"
"/* Various IT instructions are disabled at EL0 in aarch32 mode. */\n"
".set .L_SCTLR_EL1_ITD, 0x1 << 7\n"
".set .L_SCTLR_EL1_RES1, (0x1 << 11) | (0x1 << 20) | (0x1 << 22) | (0x1 << "
"28) | (0x1 << 29)\n"
".set .Lsctlrval, .L_SCTLR_ELx_M | .L_SCTLR_ELx_C | .L_SCTLR_ELx_SA | ."
"L_SCTLR_EL1_ITD | .L_SCTLR_EL1_SED\n"
".set .Lsctlrval, .Lsctlrval | .L_SCTLR_ELx_I | .L_SCTLR_EL1_SPAN | ."
"L_SCTLR_EL1_RES1\n"
"\n"
"/**\n"
" * This is a generic entry point for an image. It carries out the operations "
"required to prepare the\n"
" * loaded image to be run. Specifically, it zeroes the bss section using "
"registers x25 and above,\n"
" * prepares the stack, enables floating point, and sets up the exception "
"vector. It preserves x0-x3\n"
" * for the Rust entry point, as these may contain boot parameters.\n"
" */\n"
".section .init.entry, \"ax\"\n"
".global entry\n"
"entry:\n"
"\t/* Load and apply the memory management configuration, ready to enable MMU "
"and caches. */\n"
"\tadrp x30, idmap\n"
"\tmsr ttbr0_el1, x30\n"
"\n"
"\tmov_i x30, .Lmairval\n"
"\tmsr mair_el1, x30\n"
"\n"
"\tmov_i x30, .Ltcrval\n"
"\t/* Copy the supported PA range into TCR_EL1.IPS. */\n"
"\tmrs x29, id_aa64mmfr0_el1\n"
"\tbfi x30, x29, #32, #4\n"
"\n"
"\tmsr tcr_el1, x30\n"
"\n"
"\tmov_i x30, .Lsctlrval\n"
"\n"
"\t/*\n"
"\t * Ensure everything before this point has completed, then invalidate any "
"potentially stale\n"
"\t * local TLB entries before they start being used.\n"
"\t */\n"
"\tisb\n"
"\ttlbi vmalle1\n"
"\tic iallu\n"
"\tdsb nsh\n"
"\tisb\n"
"\n"
"\t/*\n"
"\t * Configure sctlr_el1 to enable MMU and cache and don't proceed until "
"this has completed.\n"
"\t */\n"
"\tmsr sctlr_el1, x30\n"
"\tisb\n"
"\n"
"\t/* Disable trapping floating point access in EL1. */\n"
"\tmrs x30, cpacr_el1\n"
"\torr x30, x30, #(0x3 << 20)\n"
"\tmsr cpacr_el1, x30\n"
"\tisb\n"
"\n"
"\t/* Zero out the bss section. */\n"
"\tadr_l x29, bss_begin\n"
"\tadr_l x30, bss_end\n"
"0:\tcmp x29, x30\n"
"\tb.hs 1f\n"
"\tstp xzr, xzr, [x29], #16\n"
"\tb 0b\n"
"\n"
"1:\t/* Prepare the stack. */\n"
"\tadr_l x30, boot_stack_end\n"
"\tmov sp, x30\n"
"\n"
"\t/* Set up exception vector. */\n"
"\tadr x30, vector_table_el1\n"
"\tmsr vbar_el1, x30\n"
"\n"
"\t/* Call into Rust code. */\n"
"\tbl main\n"
"\n"
"\t/* Loop forever waiting for interrupts. */\n"
"2:\twfi\n"
"\tb 2b\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md:598
msgid "_exceptions.S_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:602
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
"/**\n"
" * Saves the volatile registers onto the stack. This currently takes 14\n"
" * instructions, so it can be used in exception handlers with 18 "
"instructions\n"
" * left.\n"
" *\n"
" * On return, x0 and x1 are initialised to elr_el2 and spsr_el2 "
"respectively,\n"
" * which can be used as the first and second arguments of a subsequent "
"call.\n"
" */\n"
".macro save_volatile_to_stack\n"
"\t/* Reserve stack space and save registers x0-x18, x29 & x30. */\n"
"\tstp x0, x1, [sp, #-(8 * 24)]!\n"
"\tstp x2, x3, [sp, #8 * 2]\n"
"\tstp x4, x5, [sp, #8 * 4]\n"
"\tstp x6, x7, [sp, #8 * 6]\n"
"\tstp x8, x9, [sp, #8 * 8]\n"
"\tstp x10, x11, [sp, #8 * 10]\n"
"\tstp x12, x13, [sp, #8 * 12]\n"
"\tstp x14, x15, [sp, #8 * 14]\n"
"\tstp x16, x17, [sp, #8 * 16]\n"
"\tstr x18, [sp, #8 * 18]\n"
"\tstp x29, x30, [sp, #8 * 20]\n"
"\n"
"\t/*\n"
"\t * Save elr_el1 & spsr_el1. This such that we can take nested exception\n"
"\t * and still be able to unwind.\n"
"\t */\n"
"\tmrs x0, elr_el1\n"
"\tmrs x1, spsr_el1\n"
"\tstp x0, x1, [sp, #8 * 22]\n"
".endm\n"
"\n"
"/**\n"
" * Restores the volatile registers from the stack. This currently takes 14\n"
" * instructions, so it can be used in exception handlers while still leaving "
"18\n"
" * instructions left; if paired with save_volatile_to_stack, there are 4\n"
" * instructions to spare.\n"
" */\n"
".macro restore_volatile_from_stack\n"
"\t/* Restore registers x2-x18, x29 & x30. */\n"
"\tldp x2, x3, [sp, #8 * 2]\n"
"\tldp x4, x5, [sp, #8 * 4]\n"
"\tldp x6, x7, [sp, #8 * 6]\n"
"\tldp x8, x9, [sp, #8 * 8]\n"
"\tldp x10, x11, [sp, #8 * 10]\n"
"\tldp x12, x13, [sp, #8 * 12]\n"
"\tldp x14, x15, [sp, #8 * 14]\n"
"\tldp x16, x17, [sp, #8 * 16]\n"
"\tldr x18, [sp, #8 * 18]\n"
"\tldp x29, x30, [sp, #8 * 20]\n"
"\n"
"\t/* Restore registers elr_el1 & spsr_el1, using x0 & x1 as scratch. */\n"
"\tldp x0, x1, [sp, #8 * 22]\n"
"\tmsr elr_el1, x0\n"
"\tmsr spsr_el1, x1\n"
"\n"
"\t/* Restore x0 & x1, and release stack space. */\n"
"\tldp x0, x1, [sp], #8 * 24\n"
".endm\n"
"\n"
"/**\n"
" * This is a generic handler for exceptions taken at the current EL while "
"using\n"
" * SP0. It behaves similarly to the SPx case by first switching to SPx, "
"doing\n"
" * the work, then switching back to SP0 before returning.\n"
" *\n"
" * Switching to SPx and calling the Rust handler takes 16 instructions. To\n"
" * restore and return we need an additional 16 instructions, so we can "
"implement\n"
" * the whole handler within the allotted 32 instructions.\n"
" */\n"
".macro current_exception_sp0 handler:req\n"
"\tmsr spsel, #1\n"
"\tsave_volatile_to_stack\n"
"\tbl \\handler\n"
"\trestore_volatile_from_stack\n"
"\tmsr spsel, #0\n"
"\teret\n"
".endm\n"
"\n"
"/**\n"
" * This is a generic handler for exceptions taken at the current EL while "
"using\n"
" * SPx. It saves volatile registers, calls the Rust handler, restores "
"volatile\n"
" * registers, then returns.\n"
" *\n"
" * This also works for exceptions taken from EL0, if we don't care about\n"
" * non-volatile registers.\n"
" *\n"
" * Saving state and jumping to the Rust handler takes 15 instructions, and\n"
" * restoring and returning also takes 15 instructions, so we can fit the "
"whole\n"
" * handler in 30 instructions, under the limit of 32.\n"
" */\n"
".macro current_exception_spx handler:req\n"
"\tsave_volatile_to_stack\n"
"\tbl \\handler\n"
"\trestore_volatile_from_stack\n"
"\teret\n"
".endm\n"
"\n"
".section .text.vector_table_el1, \"ax\"\n"
".global vector_table_el1\n"
".balign 0x800\n"
"vector_table_el1:\n"
"sync_cur_sp0:\n"
"\tcurrent_exception_sp0 sync_exception_current\n"
"\n"
".balign 0x80\n"
"irq_cur_sp0:\n"
"\tcurrent_exception_sp0 irq_current\n"
"\n"
".balign 0x80\n"
"fiq_cur_sp0:\n"
"\tcurrent_exception_sp0 fiq_current\n"
"\n"
".balign 0x80\n"
"serr_cur_sp0:\n"
"\tcurrent_exception_sp0 serr_current\n"
"\n"
".balign 0x80\n"
"sync_cur_spx:\n"
"\tcurrent_exception_spx sync_exception_current\n"
"\n"
".balign 0x80\n"
"irq_cur_spx:\n"
"\tcurrent_exception_spx irq_current\n"
"\n"
".balign 0x80\n"
"fiq_cur_spx:\n"
"\tcurrent_exception_spx fiq_current\n"
"\n"
".balign 0x80\n"
"serr_cur_spx:\n"
"\tcurrent_exception_spx serr_current\n"
"\n"
".balign 0x80\n"
"sync_lower_64:\n"
"\tcurrent_exception_spx sync_lower\n"
"\n"
".balign 0x80\n"
"irq_lower_64:\n"
"\tcurrent_exception_spx irq_lower\n"
"\n"
".balign 0x80\n"
"fiq_lower_64:\n"
"\tcurrent_exception_spx fiq_lower\n"
"\n"
".balign 0x80\n"
"serr_lower_64:\n"
"\tcurrent_exception_spx serr_lower\n"
"\n"
".balign 0x80\n"
"sync_lower_32:\n"
"\tcurrent_exception_spx sync_lower\n"
"\n"
".balign 0x80\n"
"irq_lower_32:\n"
"\tcurrent_exception_spx irq_lower\n"
"\n"
".balign 0x80\n"
"fiq_lower_32:\n"
"\tcurrent_exception_spx fiq_lower\n"
"\n"
".balign 0x80\n"
"serr_lower_32:\n"
"\tcurrent_exception_spx serr_lower\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md:783
msgid "_idmap.S_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:787
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
".set .L_TT_TYPE_BLOCK, 0x1\n"
".set .L_TT_TYPE_PAGE,  0x3\n"
".set .L_TT_TYPE_TABLE, 0x3\n"
"\n"
"/* Access flag. */\n"
".set .L_TT_AF, 0x1 << 10\n"
"/* Not global. */\n"
".set .L_TT_NG, 0x1 << 11\n"
".set .L_TT_XN, 0x3 << 53\n"
"\n"
".set .L_TT_MT_DEV, 0x0 << 2\t\t\t// MAIR #0 (DEV_nGnRE)\n"
".set .L_TT_MT_MEM, (0x1 << 2) | (0x3 << 8)\t// MAIR #1 (MEM_WBWA), inner "
"shareable\n"
"\n"
".set .L_BLOCK_DEV, .L_TT_TYPE_BLOCK | .L_TT_MT_DEV | .L_TT_AF | .L_TT_XN\n"
".set .L_BLOCK_MEM, .L_TT_TYPE_BLOCK | .L_TT_MT_MEM | .L_TT_AF | .L_TT_NG\n"
"\n"
".section \".rodata.idmap\", \"a\", %progbits\n"
".global idmap\n"
".align 12\n"
"idmap:\n"
"\t/* level 1 */\n"
"\t.quad\t\t.L_BLOCK_DEV | 0x0\t\t    // 1 GiB of device mappings\n"
"\t.quad\t\t.L_BLOCK_MEM | 0x40000000\t// 1 GiB of DRAM\n"
"\t.fill\t\t254, 8, 0x0\t\t\t// 254 GiB of unmapped VA space\n"
"\t.quad\t\t.L_BLOCK_DEV | 0x4000000000 // 1 GiB of device mappings\n"
"\t.fill\t\t255, 8, 0x0\t\t\t// 255 GiB of remaining VA space\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md:832
msgid "_image.ld_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:836
msgid ""
"```ld\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
"/*\n"
" * Code will start running at this symbol which is placed at the start of "
"the\n"
" * image.\n"
" */\n"
"ENTRY(entry)\n"
"\n"
"MEMORY\n"
"{\n"
"\timage : ORIGIN = 0x40080000, LENGTH = 2M\n"
"}\n"
"\n"
"SECTIONS\n"
"{\n"
"\t/*\n"
"\t * Collect together the code.\n"
"\t */\n"
"\t.init : ALIGN(4096) {\n"
"\t\ttext_begin = .;\n"
"\t\t*(.init.entry)\n"
"\t\t*(.init.*)\n"
"\t} >image\n"
"\t.text : {\n"
"\t\t*(.text.*)\n"
"\t} >image\n"
"\ttext_end = .;\n"
"\n"
"\t/*\n"
"\t * Collect together read-only data.\n"
"\t */\n"
"\t.rodata : ALIGN(4096) {\n"
"\t\trodata_begin = .;\n"
"\t\t*(.rodata.*)\n"
"\t} >image\n"
"\t.got : {\n"
"\t\t*(.got)\n"
"\t} >image\n"
"\trodata_end = .;\n"
"\n"
"\t/*\n"
"\t * Collect together the read-write data including .bss at the end which\n"
"\t * will be zero'd by the entry code.\n"
"\t */\n"
"\t.data : ALIGN(4096) {\n"
"\t\tdata_begin = .;\n"
"\t\t*(.data.*)\n"
"\t\t/*\n"
"\t\t * The entry point code assumes that .data is a multiple of 32\n"
"\t\t * bytes long.\n"
"\t\t */\n"
"\t\t. = ALIGN(32);\n"
"\t\tdata_end = .;\n"
"\t} >image\n"
"\n"
"\t/* Everything beyond this point will not be included in the binary. */\n"
"\tbin_end = .;\n"
"\n"
"\t/* The entry point code assumes that .bss is 16-byte aligned. */\n"
"\t.bss : ALIGN(16)  {\n"
"\t\tbss_begin = .;\n"
"\t\t*(.bss.*)\n"
"\t\t*(COMMON)\n"
"\t\t. = ALIGN(16);\n"
"\t\tbss_end = .;\n"
"\t} >image\n"
"\n"
"\t.stack (NOLOAD) : ALIGN(4096) {\n"
"\t\tboot_stack_begin = .;\n"
"\t\t. += 40 * 4096;\n"
"\t\t. = ALIGN(4096);\n"
"\t\tboot_stack_end = .;\n"
"\t} >image\n"
"\n"
"\t. = ALIGN(4K);\n"
"\tPROVIDE(dma_region = .);\n"
"\n"
"\t/*\n"
"\t * Remove unused sections from the image.\n"
"\t */\n"
"\t/DISCARD/ : {\n"
"\t\t/* The image loads itself so doesn't need these sections. */\n"
"\t\t*(.gnu.hash)\n"
"\t\t*(.hash)\n"
"\t\t*(.interp)\n"
"\t\t*(.eh_frame_hdr)\n"
"\t\t*(.eh_frame)\n"
"\t\t*(.note.gnu.build-id)\n"
"\t}\n"
"}\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md:943
msgid "_Makefile_ (you shouldn't need to change this):"
msgstr ""

#: src/exercises/bare-metal/rtc.md:948
#, fuzzy
msgid "# Copyright 2023 Google LLC"
msgstr ""
"// Copyright 2022 Google LLC\n"
"//\n"
"// Licensed under the Apache License, Version 2.0 (the \"License\");\n"
"// you may not use this file except in compliance with the License.\n"
"// You may obtain a copy of the License at\n"
"//\n"
"//      http://www.apache.org/licenses/LICENSE-2.0\n"
"//\n"
"// Unless required by applicable law or agreed to in writing, software\n"
"// distributed under the License is distributed on an \"AS IS\" BASIS,\n"
"// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
"// See the License for the specific language governing permissions and\n"
"// limitations under the License.\n"

#: src/exercises/bare-metal/rtc.md:962
msgid "$(shell uname -s)"
msgstr ""

#: src/exercises/bare-metal/rtc.md:964
msgid "aarch64-linux-gnu"
msgstr ""

#: src/exercises/bare-metal/rtc.md:981
msgid "stdio -display none -kernel $< -s"
msgstr ""

#: src/exercises/bare-metal/rtc.md:984
msgid "cargo clean"
msgstr ""

#: src/exercises/bare-metal/rtc.md:999
msgid "Run the code in QEMU with `make qemu`."
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:1
msgid "Bare Metal Rust Afternoon"
msgstr "Bare Metal Rust Tarde"

#: src/exercises/bare-metal/solutions-afternoon.md:5
#, fuzzy
msgid "([back to exercise](rtc.md))"
msgstr "([voltar ao exerc√≠cio](luhn.md))"

#: src/exercises/bare-metal/solutions-afternoon.md:7
#, fuzzy
msgid "_main.rs_:"
msgstr "\"main.rs\""

#: src/exercises/bare-metal/solutions-afternoon.md:36
msgid "/// Base address of the PL031 RTC.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:38
msgid "/// The IRQ used by the PL031 RTC.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:57
msgid ""
"// Safe because `PL031_BASE_ADDRESS` is the base address of a PL031 device,\n"
"    // and nothing else accesses that address range.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:62
msgid "\"RTC: {time}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:70
msgid "// Wait for 3 seconds, without interrupts.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:73
#: src/exercises/bare-metal/solutions-afternoon.md:91
msgid "\"Waiting for {}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:75
#: src/exercises/bare-metal/solutions-afternoon.md:83
#: src/exercises/bare-metal/solutions-afternoon.md:96
#: src/exercises/bare-metal/solutions-afternoon.md:104
msgid "\"matched={}, interrupt_pending={}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:87
#: src/exercises/bare-metal/solutions-afternoon.md:108
msgid "\"Finished waiting\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:89
msgid "// Wait another 3 seconds for an interrupt.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:121
msgid "_pl031.rs_:"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:128
msgid "/// Data register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:130
msgid "/// Match register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:132
msgid "/// Load register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:134
msgid "/// Control register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:137
msgid "/// Interrupt Mask Set or Clear register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:140
msgid "/// Raw Interrupt Status\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:143
msgid "/// Masked Interrupt Status\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:146
msgid "/// Interrupt Clear Register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:150
msgid "/// Driver for a PL031 real-time clock.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:158
msgid ""
"/// Constructs a new instance of the RTC driver for a PL031 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the MMIO control registers of "
"a\n"
"    /// PL031 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:170
msgid "/// Reads the current RTC value.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:172
#: src/exercises/bare-metal/solutions-afternoon.md:180
#: src/exercises/bare-metal/solutions-afternoon.md:188
#: src/exercises/bare-metal/solutions-afternoon.md:199
#: src/exercises/bare-metal/solutions-afternoon.md:211
#: src/exercises/bare-metal/solutions-afternoon.md:218
msgid ""
"// Safe because we know that self.registers points to the control\n"
"        // registers of a PL031 device which is appropriately mapped.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:177
msgid ""
"/// Writes a match value. When the RTC value matches this then an interrupt\n"
"    /// will be generated (if it is enabled).\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:185
msgid ""
"/// Returns whether the match register matches the RTC value, whether or "
"not\n"
"    /// the interrupt is enabled.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:194
msgid ""
"/// Returns whether there is currently an interrupt pending.\n"
"    ///\n"
"    /// This should be true if and only if `matched` returns true and the\n"
"    /// interrupt is masked.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:205
msgid ""
"/// Sets or clears the interrupt mask.\n"
"    ///\n"
"    /// When the mask is true the interrupt is enabled; when it is false "
"the\n"
"    /// interrupt is disabled.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md:216
msgid "/// Clears a pending interrupt, if any.\n"
msgstr ""

#: src/concurrency.md:1
#, fuzzy
msgid "Welcome to Concurrency in Rust"
msgstr "Bem-vindo ao Comprehensive Rust ü¶Ä"

#: src/concurrency.md:3
msgid ""
"Rust has full support for concurrency using OS threads with mutexes and "
"channels."
msgstr ""
"Rust tem suporte total para concorr√™ncia usando _threads_ do SO com "
"_mutexes_ e _channels_ (canais)."

#: src/concurrency.md:6
msgid ""
"The Rust type system plays an important role in making many concurrency bugs "
"compile time bugs. This is often referred to as _fearless concurrency_ since "
"you can rely on the compiler to ensure correctness at runtime."
msgstr ""
"O sistema de tipos do Rust desempenha um papel importante na convers√£o de "
"muitos erros de concorr√™ncia em erros de tempo de compila√ß√£o. Isso "
"geralmente √© chamado de _concorr√™ncia sem medo_, pois voc√™ pode confiar no "
"compilador para garantir a exatid√£o no tempo de execu√ß√£o."

#: src/concurrency/threads.md:3
msgid "Rust threads work similarly to threads in other languages:"
msgstr ""
"_Threads_ em Rust funcionam de maneira semelhante √†s _threads_ em outras "
"linguagens:"

#: src/concurrency/threads.md:12
#, fuzzy
msgid "\"Count in thread: {i}!\""
msgstr ""
"fn main() { thread::spawn(|| { for i in 1..10 { println!(\"Contador na "
"thread: {i}!\"); thread::sleep(Duration::from_millis(5)); } });"

#: src/concurrency/threads.md:18
msgid "\"Main thread: {i}\""
msgstr ""

#: src/concurrency/threads.md:24
msgid "Threads are all daemon threads, the main thread does not wait for them."
msgstr ""
"_Threads_ s√£o todas \"_daemon threads_\", o _thread_ principal n√£o espera "
"por elas."

#: src/concurrency/threads.md:25
msgid "Thread panics are independent of each other."
msgstr "\"_Panics_\" em _threads_ s√£o independentes uns dos outros."

#: src/concurrency/threads.md:26
msgid "Panics can carry a payload, which can be unpacked with `downcast_ref`."
msgstr ""
"\"_Panics_\" podem carregar um _payload_ (carga √∫til), que pode ser "
"descompactado com `downcast_ref`."

#: src/concurrency/threads.md:32
msgid ""
"Notice that the thread is stopped before it reaches 10 --- the main thread "
"is not waiting."
msgstr ""

#: src/concurrency/threads.md:35
msgid ""
"Use `let handle = thread::spawn(...)` and later `handle.join()` to wait for "
"the thread to finish."
msgstr ""

#: src/concurrency/threads.md:38
msgid "Trigger a panic in the thread, notice how this doesn't affect `main`."
msgstr ""

#: src/concurrency/threads.md:40
msgid ""
"Use the `Result` return value from `handle.join()` to get access to the "
"panic payload. This is a good time to talk about [`Any`](https://doc.rust-"
"lang.org/std/any/index.html)."
msgstr ""

#: src/concurrency/scoped-threads.md:3
msgid "Normal threads cannot borrow from their environment:"
msgstr "_Threads_ normais n√£o podem emprestar de seu ambiente:"

#: src/concurrency/scoped-threads.md:20
msgid ""
"However, you can use a [scoped thread](https://doc.rust-lang.org/std/thread/"
"fn.scope.html) for this:"
msgstr ""
"No entanto, voc√™ pode usar uma [_thread_ com escopo](https://doc.rust-lang."
"org/std/thread/fn.scope.html) para isso:"

#: src/concurrency/scoped-threads.md:40
#, fuzzy
msgid ""
"The reason for that is that when the `thread::scope` function completes, all "
"the threads are guaranteed to be joined, so they can return borrowed data."
msgstr ""
"A raz√£o para isso √© que, quando a fun√ß√£o `thread::scope` for conclu√≠da, "
"todas as _threads_ ser√£o unidas, para que possam retornar dados emprestados."

#: src/concurrency/scoped-threads.md:42
#, fuzzy
msgid ""
"Normal Rust borrowing rules apply: you can either borrow mutably by one "
"thread, or immutably by any number of threads."
msgstr ""
"Aplicam-se as regras normais de empr√©stimo do Rust: o empr√©stimo pode ser "
"mut√°vel, para uma `thread` ou imut√°vel para qualquer n√∫mero de _threads_."

#: src/concurrency/channels.md:3
msgid ""
"Rust channels have two parts: a `Sender<T>` and a `Receiver<T>`. The two "
"parts are connected via the channel, but you only see the end-points."
msgstr ""
"Os _channels_ (canais) em Rust t√™m duas partes: um `Sender<T>` e um "
"`Receiver<T>`. As duas partes est√£o conectadas atrav√©s do _channel_, mas "
"voc√™ s√≥ v√™ os _end-points_."

#: src/concurrency/channels.md:15 src/concurrency/channels.md:16
#: src/concurrency/channels.md:20
msgid "\"Received: {:?}\""
msgstr ""

#: src/concurrency/channels.md:26
msgid ""
"`mpsc` stands for Multi-Producer, Single-Consumer. `Sender` and `SyncSender` "
"implement `Clone` (so you can make multiple producers) but `Receiver` does "
"not."
msgstr ""
"`mpsc` significa Multi-Produtor, √önico-Consumidor. `Sender` e `SyncSender` "
"implementam `Clone` (ent√£o voc√™ pode criar v√°rios produtores), mas "
"`Receiver` (consumidores) n√£o."

#: src/concurrency/channels.md:29
msgid ""
"`send()` and `recv()` return `Result`. If they return `Err`, it means the "
"counterpart `Sender` or `Receiver` is dropped and the channel is closed."
msgstr ""
"`send()` e `recv()` retornam `Result`. Se retornarem `Err`, significa que a "
"contraparte `Sender` ou `Receiver` √© descartada e o canal √© fechado."

#: src/concurrency/channels/unbounded.md:3
msgid "You get an unbounded and asynchronous channel with `mpsc::channel()`:"
msgstr "Voc√™ obt√©m um canal ilimitado e ass√≠ncrono com `mpsc::channel()`:"

#: src/concurrency/channels/unbounded.md:16
#: src/concurrency/channels/bounded.md:16
#, fuzzy
msgid "\"Message {i}\""
msgstr ""
"```\n"
"thread::spawn(move || {\n"
"    let thread_id = thread::current().id();\n"
"    for i in 1..10 {\n"
"        tx.send(format!(\"Mensagem {i}\")).unwrap();\n"
"        println!(\"{thread_id:?}: enviando a mensagem: {i}\");\n"
"    }\n"
"    println!(\"{thread_id:?}: feito\");\n"
"});\n"
"thread::sleep(Duration::from_millis(100));\n"
"```"

#: src/concurrency/channels/unbounded.md:17
#: src/concurrency/channels/bounded.md:17
msgid "\"{thread_id:?}: sent Message {i}\""
msgstr ""

#: src/concurrency/channels/unbounded.md:19
#: src/concurrency/channels/bounded.md:19
msgid "\"{thread_id:?}: done\""
msgstr ""

#: src/concurrency/channels/unbounded.md:24
#: src/concurrency/channels/bounded.md:24
msgid "\"Main: got {msg}\""
msgstr ""

#: src/concurrency/channels/bounded.md:3
#, fuzzy
msgid ""
"With bounded (synchronous) channels, `send` can block the current thread:"
msgstr "Canais limitados e s√≠ncronos fazem `send` bloquear o _thread_ atual:"

#: src/concurrency/channels/bounded.md:31
msgid ""
"Calling `send` will block the current thread until there is space in the "
"channel for the new message. The thread can be blocked indefinitely if there "
"is nobody who reads from the channel."
msgstr ""

#: src/concurrency/channels/bounded.md:34
msgid ""
"A call to `send` will abort with an error (that is why it returns `Result`) "
"if the channel is closed. A channel is closed when the receiver is dropped."
msgstr ""

#: src/concurrency/channels/bounded.md:36
msgid ""
"A bounded channel with a size of zero is called a \"rendezvous channel\". "
"Every send will block the current thread until another thread calls `read`."
msgstr ""

#: src/concurrency/send-sync.md:3
#, fuzzy
msgid ""
"How does Rust know to forbid shared access across threads? The answer is in "
"two traits:"
msgstr ""
"Como o Rust sabe proibir o acesso compartilhado entre threads? A resposta "
"est√° em duas caracter√≠sticas:"

#: src/concurrency/send-sync.md:6
msgid ""
"[`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html): a type `T` "
"is `Send` if it is safe to move a `T` across a thread boundary."
msgstr ""
"[`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html): um tipo `T` "
"√© `Send` se for seguro mover um `T` entre _threads_"

#: src/concurrency/send-sync.md:8
msgid ""
"[`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html): a type `T` "
"is `Sync` if it is safe to move a `&T` across a thread boundary."
msgstr ""
"[`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html): um tipo `T` "
"√© `Sync` se for seguro mover um `&T` entre _threads_"

#: src/concurrency/send-sync.md:11
msgid ""
"`Send` and `Sync` are [unsafe traits](../unsafe/unsafe-traits.md). The "
"compiler will automatically derive them for your types as long as they only "
"contain `Send` and `Sync` types. You can also implement them manually when "
"you know it is valid."
msgstr ""
"`Send` e `Sync` s√£o [`unsafe traits`](../unsafe/unsafe-traits.md). O "
"compilador os derivar√° automaticamente para seus tipos desde que contenham "
"apenas os tipos `Send` e `Sync`. Voc√™ tamb√©m pode implement√°-los manualmente "
"quando souber que s√£o v√°lidos."

#: src/concurrency/send-sync.md:21
#, fuzzy
msgid ""
"One can think of these traits as markers that the type has certain thread-"
"safety properties."
msgstr ""
"Pode-se pensar nesses _traits_ como marcadores de que o tipo possui certas "
"propriedades de seguran√ßa de _threads_."

#: src/concurrency/send-sync.md:23
#, fuzzy
msgid "They can be used in the generic constraints as normal traits."
msgstr "Eles podem ser usados nas restri√ß√µes gen√©ricas como _traits_ normais."

#: src/concurrency/send-sync/send.md:3
msgid ""
"A type `T` is [`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html) "
"if it is safe to move a `T` value to another thread."
msgstr ""
"Um tipo `T` √© [`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html) "
"se for seguro mover um valor `T` para outro _thread_."

#: src/concurrency/send-sync/send.md:5
msgid ""
"The effect of moving ownership to another thread is that _destructors_ will "
"run in that thread. So the question is when you can allocate a value in one "
"thread and deallocate it in another."
msgstr ""
"O efeito de mover a propriedade (ownership) para outro _thread_ √© que os "
"_destructors_ ser√£o executados nessa _thread_. Ent√£o a quest√£o √©: quando "
"voc√™ pode alocar um valor em um _thread_ e desaloc√°-lo em outro?"

#: src/concurrency/send-sync/send.md:13
msgid ""
"As an example, a connection to the SQLite library must only be accessed from "
"a single thread."
msgstr ""

#: src/concurrency/send-sync/sync.md:3
msgid ""
"A type `T` is [`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html) "
"if it is safe to access a `T` value from multiple threads at the same time."
msgstr ""
"Um tipo `T` √© [`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html) "
"se for seguro acessar um valor `T` de v√°rias threads ao mesmo tempo."

#: src/concurrency/send-sync/sync.md:6
msgid "More precisely, the definition is:"
msgstr "Mais precisamente, a defini√ß√£o √©:"

#: src/concurrency/send-sync/sync.md:8
msgid "`T` is `Sync` if and only if `&T` is `Send`"
msgstr "`T` √© `Sync` se e somente se `&T` √© `Send`"

#: src/concurrency/send-sync/sync.md:14
msgid ""
"This statement is essentially a shorthand way of saying that if a type is "
"thread-safe for shared use, it is also thread-safe to pass references of it "
"across threads."
msgstr ""
"Essa instru√ß√£o √© essencialmente uma maneira abreviada de dizer que, se um "
"tipo √© _thread-safe_ para uso compartilhado, tamb√©m √© _thread-safe_ passar "
"refer√™ncias a ele entre _threads_."

#: src/concurrency/send-sync/sync.md:18
msgid ""
"This is because if a type is Sync it means that it can be shared across "
"multiple threads without the risk of data races or other synchronization "
"issues, so it is safe to move it to another thread. A reference to the type "
"is also safe to move to another thread, because the data it references can "
"be accessed from any thread safely."
msgstr ""
"Isso ocorre porque, se um tipo for `Sync`, significa que ele pode ser "
"compartilhado entre v√°rios _threads_ sem o risco de corridas de dados ou "
"outros problemas de sincroniza√ß√£o, portanto, √© seguro mov√™-lo para outro "
"_thread_. Uma refer√™ncia ao tipo tamb√©m √© segura para mover para outro "
"_thread_, porque os dados a que ela faz refer√™ncia podem ser acessados de "
"qualquer _thread_ com seguran√ßa."

#: src/concurrency/send-sync/examples.md:3
msgid "`Send + Sync`"
msgstr "`Send + Sync`"

#: src/concurrency/send-sync/examples.md:5
msgid "Most types you come across are `Send + Sync`:"
msgstr "A maioria dos tipos que voc√™ encontra s√£o `Send + Sync`:"

#: src/concurrency/send-sync/examples.md:7
msgid "`i8`, `f32`, `bool`, `char`, `&str`, ..."
msgstr "`i8`, `f32`, `bool`, `char`, `&str`, ..."

#: src/concurrency/send-sync/examples.md:8
msgid "`(T1, T2)`, `[T; N]`, `&[T]`, `struct { x: T }`, ..."
msgstr "`(T1, T2)`, `[T; N]`, `&[T]`, `struct { x: T }`, ..."

#: src/concurrency/send-sync/examples.md:9
msgid "`String`, `Option<T>`, `Vec<T>`, `Box<T>`, ..."
msgstr "`String`, `Option<T>`, `Vec<T>`, `Box<T>`, ..."

#: src/concurrency/send-sync/examples.md:10
msgid "`Arc<T>`: Explicitly thread-safe via atomic reference count."
msgstr ""
"`Arc<T>`: Explicitamente _thread-safe_ via contagem de refer√™ncia at√¥mica."

#: src/concurrency/send-sync/examples.md:11
msgid "`Mutex<T>`: Explicitly thread-safe via internal locking."
msgstr "`Mutex<T>`: Explicitamente _thread-safe_ via bloqueio interno."

#: src/concurrency/send-sync/examples.md:12
msgid "`AtomicBool`, `AtomicU8`, ...: Uses special atomic instructions."
msgstr "`AtomicBool`, `AtomicU8`, ...: Usa instru√ß√µes at√¥micas especiais."

#: src/concurrency/send-sync/examples.md:14
msgid ""
"The generic types are typically `Send + Sync` when the type parameters are "
"`Send + Sync`."
msgstr ""
"Os tipos gen√©ricos s√£o tipicamente `Send + Sync` quando os par√¢metros de "
"tipo s√£o `Send + Sync`."

#: src/concurrency/send-sync/examples.md:17
msgid "`Send + !Sync`"
msgstr "`Send + !Sync`"

#: src/concurrency/send-sync/examples.md:19
msgid ""
"These types can be moved to other threads, but they're not thread-safe. "
"Typically because of interior mutability:"
msgstr ""
"Esses tipos podem ser movidos para outras _threads_, mas n√£o s√£o seguros "
"para _threads_. Normalmente por causa da mutabilidade interior:"

#: src/concurrency/send-sync/examples.md:22
msgid "`mpsc::Sender<T>`"
msgstr "`mpsc::Sender<T>`"

#: src/concurrency/send-sync/examples.md:23
msgid "`mpsc::Receiver<T>`"
msgstr "`mpsc::Receiver<T>`"

#: src/concurrency/send-sync/examples.md:24
msgid "`Cell<T>`"
msgstr "`Cell<T>`"

#: src/concurrency/send-sync/examples.md:25
msgid "`RefCell<T>`"
msgstr "`RefCell<T>`"

#: src/concurrency/send-sync/examples.md:27
msgid "`!Send + Sync`"
msgstr "`!Send + Sync`"

#: src/concurrency/send-sync/examples.md:29
msgid ""
"These types are thread-safe, but they cannot be moved to another thread:"
msgstr ""
"Esses tipos s√£o _thread-safe_, mas n√£o podem ser movidos para outro _thread_:"

#: src/concurrency/send-sync/examples.md:31
#, fuzzy
msgid ""
"`MutexGuard<T: Sync>`: Uses OS level primitives which must be deallocated on "
"the thread which created them."
msgstr ""
"`MutexGuard<T>`: Usa primitivas a n√≠vel de sistema operacional que devem ser "
"desalocadas no _thread_ que as criou."

#: src/concurrency/send-sync/examples.md:34
msgid "`!Send + !Sync`"
msgstr "`!Send + !Sync`"

#: src/concurrency/send-sync/examples.md:36
msgid "These types are not thread-safe and cannot be moved to other threads:"
msgstr ""
"Esses tipos n√£o s√£o _thread-safe_ e n√£o podem ser movidos para outros "
"_threads_:"

#: src/concurrency/send-sync/examples.md:38
msgid ""
"`Rc<T>`: each `Rc<T>` has a reference to an `RcBox<T>`, which contains a non-"
"atomic reference count."
msgstr ""
"`Rc<T>`: cada `Rc<T>` tem uma refer√™ncia a um `RcBox<T>`, que cont√©m uma "
"contagem de refer√™ncia n√£o at√¥mica."

#: src/concurrency/send-sync/examples.md:40
msgid ""
"`*const T`, `*mut T`: Rust assumes raw pointers may have special concurrency "
"considerations."
msgstr ""
"`*const T`, `*mut T`: Rust assume que ponteiros brutos podem ter "
"considera√ß√µes de especiais de concorr√™ncia."

#: src/concurrency/shared_state.md:3
msgid ""
"Rust uses the type system to enforce synchronization of shared data. This is "
"primarily done via two types:"
msgstr ""
"Rust usa o sistema de tipos para impor a sincroniza√ß√£o de dados "
"compartilhados. Isso √© feito principalmente atrav√©s de dois tipos:"

#: src/concurrency/shared_state.md:6
msgid ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html), atomic "
"reference counted `T`: handles sharing between threads and takes care to "
"deallocate `T` when the last reference is dropped,"
msgstr ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html), refer√™ncia "
"at√¥mica contada `T`: manipula o compartilhamento entre _threads_ e toma o "
"cuidado de desalocar `T` quando a √∫ltima refer√™ncia √© descartada,"

#: src/concurrency/shared_state.md:8
msgid ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html): ensures "
"mutually exclusive access to the `T` value."
msgstr ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html): garante "
"acesso mutuamente exclusivo ao valor `T`."

#: src/concurrency/shared_state/arc.md:3
#, fuzzy
msgid ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html) allows shared "
"read-only access via `Arc::clone`:"
msgstr ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html) permite "
"acesso somente leitura compartilhado por meio de seu m√©todo `clone`:"

#: src/concurrency/shared_state/arc.md:16
#, fuzzy
msgid "\"{thread_id:?}: {v:?}\""
msgstr ""
"fn main() { let v = Arc::new(vec![10, 20, 30\\]); let mut handles = Vec::"
"new(); for _ in 1..5 { let v = v.clone(); handles.push(thread::spawn(move || "
"{ let thread_id = thread::current().id(); println!(\"{thread_id:?}: "
"{v:?}\"); })); }"

#: src/concurrency/shared_state/arc.md:21
#: src/concurrency/shared_state/example.md:17
#: src/concurrency/shared_state/example.md:45
msgid "\"v: {v:?}\""
msgstr "\"v: {v:?}\""

#: src/concurrency/shared_state/arc.md:29
msgid ""
"`Arc` stands for \"Atomic Reference Counted\", a thread safe version of `Rc` "
"that uses atomic operations."
msgstr ""
"`Arc` significa \"Atomic Reference Counted\", uma vers√£o _thread-safe_ de "
"`Rc` que usa opera√ß√µes at√¥micas."

#: src/concurrency/shared_state/arc.md:31
#, fuzzy
msgid ""
"`Arc<T>` implements `Clone` whether or not `T` does. It implements `Send` "
"and `Sync` if and only if `T` implements them both."
msgstr ""
"`Arc<T>` implementa `Clone` quer `T` o fa√ßa ou n√£o. Ele implementa `Send` e "
"`Sync` se `T` implementa os dois."

#: src/concurrency/shared_state/arc.md:33
msgid ""
"`Arc::clone()` has the cost of atomic operations that get executed, but "
"after that the use of the `T` is free."
msgstr ""
"`Arc::clone()` tem o custo das opera√ß√µes at√¥micas que s√£o executadas, mas "
"depois disso o uso do `T` √© gratuito."

#: src/concurrency/shared_state/arc.md:35
msgid ""
"Beware of reference cycles, `Arc` does not use a garbage collector to detect "
"them."
msgstr ""
"Cuidado com os ciclos de refer√™ncia, `Arc` n√£o usa um coletor de lixo para "
"detect√°-los."

#: src/concurrency/shared_state/arc.md:37
msgid "`std::sync::Weak` can help."
msgstr "`std::sync::Weak` pode ajudar."

#: src/concurrency/shared_state/mutex.md:3
msgid ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) ensures "
"mutual exclusion _and_ allows mutable access to `T` behind a read-only "
"interface:"
msgstr ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) garante "
"exclus√£o m√∫tua _e_ permite acesso mut√°vel a `T` por tr√°s de uma interface "
"somente leitura:"

#: src/concurrency/shared_state/mutex.md:11
#: src/concurrency/shared_state/mutex.md:18
msgid "\"v: {:?}\""
msgstr ""

#: src/concurrency/shared_state/mutex.md:22
msgid ""
"Notice how we have a [`impl<T: Send> Sync for Mutex<T>`](https://doc.rust-"
"lang.org/std/sync/struct.Mutex.html#impl-Sync-for-Mutex%3CT%3E) blanket "
"implementation."
msgstr ""
"Observe como temos uma implementa√ß√£o [`impl<T: Send> Sync for Mutex<T>`]"
"(https://doc.rust-lang.org/std/sync/struct.Mutex.html#impl-Sync-for-"
"Mutex%3CT%3E) encoberta."

#: src/concurrency/shared_state/mutex.md:31
#, fuzzy
msgid ""
"`Mutex` in Rust looks like a collection with just one element --- the "
"protected data."
msgstr ""
"`Mutex` em Rust parece uma cole√ß√£o com apenas um elemento - os dados "
"protegidos."

#: src/concurrency/shared_state/mutex.md:33
#, fuzzy
msgid ""
"It is not possible to forget to acquire the mutex before accessing the "
"protected data."
msgstr ""
"N√£o √© poss√≠vel esquecer de adquirir o mutex antes de acessar os dados "
"protegidos."

#: src/concurrency/shared_state/mutex.md:35
#, fuzzy
msgid ""
"You can get an `&mut T` from an `&Mutex<T>` by taking the lock. The "
"`MutexGuard` ensures that the `&mut T` doesn't outlive the lock being held."
msgstr ""
"Voc√™ pode obter um `&mut T` de um `&Mutex<T>` obtendo um bloqueio (_lock_). "
"O `MutexGuard` garante que o `&mut T` n√£o sobrevive al√©m do bloqueio "
"(_lock_)."

#: src/concurrency/shared_state/mutex.md:37
#, fuzzy
msgid ""
"`Mutex<T>` implements both `Send` and `Sync` iff (if and only if) `T` "
"implements `Send`."
msgstr "`Mutex<T>` implementa `Send` e `Sync` se `T` implementa `Send`."

#: src/concurrency/shared_state/mutex.md:39
#, fuzzy
msgid "A read-write lock counterpart: `RwLock`."
msgstr "O bloqueio para leitura e grava√ß√£o - `RwLock`."

#: src/concurrency/shared_state/mutex.md:40
#, fuzzy
msgid "Why does `lock()` return a `Result`?"
msgstr "Por que `lock()` retorna um `Result`?"

#: src/concurrency/shared_state/mutex.md:41
#, fuzzy
msgid ""
"If the thread that held the `Mutex` panicked, the `Mutex` becomes "
"\"poisoned\" to signal that the data it protected might be in an "
"inconsistent state. Calling `lock()` on a poisoned mutex fails with a "
"[`PoisonError`](https://doc.rust-lang.org/std/sync/struct.PoisonError.html). "
"You can call `into_inner()` on the error to recover the data regardless."
msgstr ""
"Se o thread que manteve o `Mutex` entrou em p√¢nico, o `Mutex` torna-se "
"\"envenenado\" para sinalizar que os dados protegidos podem estar em um "
"estado inconsistente. Ao chamar `lock()` em um mutex envenenado o retorno √© "
"uma falha com um [`PoisonError`](https://doc.rust-lang.org/std/sync/struct."
"PoisonError.html). Voc√™ pode chamar `into_inner()` no erro para recuperar os "
"dados independentemente."

#: src/concurrency/shared_state/example.md:3
msgid "Let us see `Arc` and `Mutex` in action:"
msgstr "Vamos ver `Arc` e `Mutex` em a√ß√£o:"

#: src/concurrency/shared_state/example.md:6
#, fuzzy
msgid "// use std::sync::{Arc, Mutex};\n"
msgstr ""
"fn main() { let mut v = vec![10, 20, 30\\]; let handle = thread::spawn(|| "
"{ v.push(10); }); v.push(1000);"

#: src/concurrency/shared_state/example.md:23
msgid "Possible solution:"
msgstr ""

#: src/concurrency/shared_state/example.md:49
msgid "Notable parts:"
msgstr ""

#: src/concurrency/shared_state/example.md:51
#, fuzzy
msgid ""
"`v` is wrapped in both `Arc` and `Mutex`, because their concerns are "
"orthogonal."
msgstr ""
"`v` √© agrupado em ambos `Arc` e `Mutex`, porque seus interesses s√£o "
"ortogonais."

#: src/concurrency/shared_state/example.md:53
#, fuzzy
msgid ""
"Wrapping a `Mutex` in an `Arc` is a common pattern to share mutable state "
"between threads."
msgstr ""
"Envolver um `Mutex` em um `Arc` √© um padr√£o comum para compartilhar o estado "
"mut√°vel entre threads."

#: src/concurrency/shared_state/example.md:55
#, fuzzy
msgid ""
"`v: Arc<_>` needs to be cloned as `v2` before it can be moved into another "
"thread. Note `move` was added to the lambda signature."
msgstr ""
"`v: Arc<_>` precisa ser clonado como `v2` antes que possa ser movido para "
"outro thread. Note que `move` foi adicionado √† assinatura lambda."

#: src/concurrency/shared_state/example.md:57
#, fuzzy
msgid ""
"Blocks are introduced to narrow the scope of the `LockGuard` as much as "
"possible."
msgstr ""
"Os blocos s√£o introduzidos para restringir o escopo do `LockGuard` tanto "
"quanto poss√≠vel.\n"
"\n"
"Ainda precisamos adquirir o `Mutex` para imprimir nosso `Vec`."

#: src/exercises/concurrency/morning.md:3
msgid "Let us practice our new concurrency skills with"
msgstr "Vamos praticar nossas novas habilidades de concorr√™ncia com:"

#: src/exercises/concurrency/morning.md:5
#, fuzzy
msgid "Dining philosophers: a classic problem in concurrency."
msgstr ""
"Verificador de link _multi-threads_: um projeto maior  no qual voc√™ usar√° o "
"Cargo para baixar as depend√™ncias e tamb√©m verificar os links em paralelo."

#: src/exercises/concurrency/morning.md:7
msgid ""
"Multi-threaded link checker: a larger project where you'll use Cargo to "
"download dependencies and then check links in parallel."
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:3
msgid "The dining philosophers problem is a classic problem in concurrency:"
msgstr ""
"O problema dos fil√≥sofos jantando √© um problema cl√°ssico em concorr√™ncia:"

#: src/exercises/concurrency/dining-philosophers.md:5
msgid ""
"Five philosophers dine together at the same table. Each philosopher has "
"their own place at the table. There is a fork between each plate. The dish "
"served is a kind of spaghetti which has to be eaten with two forks. Each "
"philosopher can only alternately think and eat. Moreover, a philosopher can "
"only eat their spaghetti when they have both a left and right fork. Thus two "
"forks will only be available when their two nearest neighbors are thinking, "
"not eating. After an individual philosopher finishes eating, they will put "
"down both forks."
msgstr ""
"Cinco fil√≥sofos jantam juntos na mesma mesa. Cada fol√≥sofo tem seu pr√≥prio "
"lugar √† mesa. H√° um garfo entre cada prato. O prato servido √© uma esp√©cie de "
"espaguete que se come com dois garfos. Cada fil√≥sofo pode somente pensar ou "
"comer, alternadamente. Al√©m disso, um fil√≥sofo s√≥ pode comer seu espaguete "
"quando ele t√™m garfo esquerdo e direito. Assim, dois garfos s√≥ estar√£o "
"dispon√≠veis quando seus dois vizinhos mais pr√≥ximos estiverem pensando, n√£o "
"comendo. Depois de um fil√≥sofo individual termina de comer, ele abaixa os "
"dois garfos."

#: src/exercises/concurrency/dining-philosophers.md:13
#, fuzzy
msgid ""
"You will need a local [Cargo installation](../../cargo/running-locally.md) "
"for this exercise. Copy the code below to a file called `src/main.rs`, fill "
"out the blanks, and test that `cargo run` does not deadlock:"
msgstr ""
"Voc√™ precisar√° de uma \\[instala√ß√£o do Cargo\\]\\[../../cargo/running-"
"locally.md\\] local para esse exerc√≠cio. Copie o c√≥digo abaixo para o "
"arquivo `src/main.rs`, preencha os espa√ßos em branco, e teste se `cargo run` "
"n√£o trava:"

#: src/exercises/concurrency/dining-philosophers.md:28
#: src/exercises/concurrency/dining-philosophers-async.md:23
msgid ""
"// left_fork: ...\n"
"    // right_fork: ...\n"
"    // thoughts: ...\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:36
#: src/exercises/concurrency/solutions-morning.md:24
#: src/exercises/concurrency/dining-philosophers-async.md:31
#: src/exercises/concurrency/solutions-afternoon.md:25
msgid "\"Eureka! {} has a new idea!\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:41
#: src/exercises/concurrency/dining-philosophers-async.md:37
#: src/exercises/concurrency/solutions-afternoon.md:31
msgid "// Pick up forks...\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:42
#: src/exercises/concurrency/solutions-morning.md:33
#: src/exercises/concurrency/dining-philosophers-async.md:38
#: src/exercises/concurrency/solutions-afternoon.md:38
msgid "\"{} is eating...\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:48
#: src/exercises/concurrency/solutions-morning.md:39
#: src/exercises/concurrency/dining-philosophers-async.md:44
#: src/exercises/concurrency/solutions-afternoon.md:46
msgid "\"Socrates\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:48
#: src/exercises/concurrency/solutions-morning.md:39
#: src/exercises/concurrency/dining-philosophers-async.md:44
#: src/exercises/concurrency/solutions-afternoon.md:46
msgid "\"Hypatia\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:48
#: src/exercises/concurrency/solutions-morning.md:39
#: src/exercises/concurrency/dining-philosophers-async.md:44
#: src/exercises/concurrency/solutions-afternoon.md:46
msgid "\"Plato\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:48
#: src/exercises/concurrency/solutions-morning.md:39
#: src/exercises/concurrency/dining-philosophers-async.md:44
#: src/exercises/concurrency/solutions-afternoon.md:46
msgid "\"Aristotle\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:48
#: src/exercises/concurrency/solutions-morning.md:39
#: src/exercises/concurrency/dining-philosophers-async.md:44
#: src/exercises/concurrency/solutions-afternoon.md:46
msgid "\"Pythagoras\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:51
#: src/exercises/concurrency/dining-philosophers-async.md:48
#: src/exercises/concurrency/solutions-afternoon.md:50
msgid "// Create forks\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:53
#: src/exercises/concurrency/dining-philosophers-async.md:50
#: src/exercises/concurrency/solutions-afternoon.md:54
msgid "// Create philosophers\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:55
msgid "// Make each of them think and eat 100 times\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:57
#: src/exercises/concurrency/dining-philosophers-async.md:54
#: src/exercises/concurrency/solutions-afternoon.md:88
msgid "// Output their thoughts\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:61
msgid "You can use the following `Cargo.toml`:"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md:65
msgid ""
"```toml\n"
"[package]\n"
"name = \"dining-philosophers\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"```"
msgstr ""

#: src/exercises/concurrency/link-checker.md:3
msgid ""
"Let us use our new knowledge to create a multi-threaded link checker. It "
"should start at a webpage and check that links on the page are valid. It "
"should recursively check other pages on the same domain and keep doing this "
"until all pages have been validated."
msgstr ""
"Vamos usar nosso novo conhecimento para criar um verificador de links _multi-"
"threads_.  Comece em uma p√°gina da web e verifique se os links na p√°gina s√£o "
"v√°lidos.  Verifique recursivamente outras p√°ginas no mesmo dom√≠nio e "
"continue fazendo isso at√© que todas as p√°ginas tenham sido validadas."

#: src/exercises/concurrency/link-checker.md:8
msgid ""
"For this, you will need an HTTP client such as [`reqwest`](https://docs.rs/"
"reqwest/). Create a new Cargo project and `reqwest` it as a dependency with:"
msgstr ""
"Para isso, voc√™ precisar√° de um cliente HTTP como [`reqwest`](https://docs."
"rs/reqwest/). Crie um novo Project com o Cargo e adicione `reqwest` como uma "
"depend√™ncia:"

#: src/exercises/concurrency/link-checker.md:17
msgid ""
"If `cargo add` fails with `error: no such subcommand`, then please edit the "
"`Cargo.toml` file by hand. Add the dependencies listed below."
msgstr ""
"Se `cargo add` falhar com `error: no such subcommand`, edite o arquivo "
"`Cargo.toml` √† m√£o. Adicione as depend√™ncias listadas abaixo."

#: src/exercises/concurrency/link-checker.md:20
msgid ""
"You will also need a way to find links. We can use [`scraper`](https://docs."
"rs/scraper/) for that:"
msgstr ""
"Voc√™ tamb√©m precisar√° de uma maneira de encontrar links. Podemos usar "
"[`scraper`](https://docs.rs/scraper/) para isso:"

#: src/exercises/concurrency/link-checker.md:26
msgid ""
"Finally, we'll need some way of handling errors. We use [`thiserror`]"
"(https://docs.rs/thiserror/) for that:"
msgstr ""
"Por fim, precisaremos de alguma forma de lidar com os erros. Usamos "
"[`thiserror`](https://docs.rs/thiserror/) para isso:"

#: src/exercises/concurrency/link-checker.md:33
msgid ""
"The `cargo add` calls will update the `Cargo.toml` file to look like this:"
msgstr ""
"As chamadas `cargo add` ir√£o atualizar o arquivo `Cargo.toml` para ficar "
"assim:"

#: src/exercises/concurrency/link-checker.md:37
#, fuzzy
msgid ""
"```toml\n"
"[package]\n"
"name = \"link-checker\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"publish = false\n"
"\n"
"[dependencies]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"
msgstr ""
"```toml\n"
"[depend√™ncias]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"

#: src/exercises/concurrency/link-checker.md:50
msgid ""
"You can now download the start page. Try with a small site such as `https://"
"www.google.org/`."
msgstr ""
"Agora voc√™ pode baixar a p√°gina inicial. Tente com um pequeno site como "
"`https://www.google.org/`."

#: src/exercises/concurrency/link-checker.md:53
msgid "Your `src/main.rs` file should look something like this:"
msgstr "Seu arquivo `src/main.rs` deve se parecer com isto:"

#: src/exercises/concurrency/link-checker.md:65
#: src/exercises/concurrency/solutions-morning.md:97
msgid "\"request error: {0}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:67
#: src/exercises/concurrency/solutions-morning.md:99
msgid "\"bad http response: {0}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:78
#: src/exercises/concurrency/solutions-morning.md:110
msgid "\"Checking {:#}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:96
#: src/exercises/concurrency/solutions-morning.md:128
msgid "\"href\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:103
#: src/exercises/concurrency/solutions-morning.md:135
msgid "\"On {base_url:#}: ignored unparsable {href:?}: {err}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:112
#: src/exercises/concurrency/solutions-morning.md:245
msgid "\"https://www.google.org\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:115
msgid "\"Links: {links:#?}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:116
msgid "\"Could not extract links: {err:#}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md:121
msgid "Run the code in `src/main.rs` with"
msgstr "Execute o c√≥digo em `src/main.rs` com"

#: src/exercises/concurrency/link-checker.md:129
msgid ""
"Use threads to check the links in parallel: send the URLs to be checked to a "
"channel and let a few threads check the URLs in parallel."
msgstr ""
"Use _threads_ para verificar os links em paralelo: envie as URLs a serem "
"verificadas para um _channel_ e deixe alguns _threads_ verificarem as URLs "
"em paralelo."

#: src/exercises/concurrency/link-checker.md:131
msgid ""
"Extend this to recursively extract links from all pages on the `www.google."
"org` domain. Put an upper limit of 100 pages or so so that you don't end up "
"being blocked by the site."
msgstr ""
"Estenda isso para extrair recursivamente links de todas as p√°ginas no "
"dom√≠nio `www.google.org`. Coloque um limite m√°ximo de 100 p√°ginas ou menos "
"para que voc√™ n√£o acabe sendo bloqueado pelo site."

#: src/exercises/concurrency/solutions-morning.md:1
#, fuzzy
msgid "Concurrency Morning Exercise"
msgstr "Dia 3 Exerc√≠cio matinal"

#: src/exercises/concurrency/solutions-morning.md:5
msgid "([back to exercise](dining-philosophers.md))"
msgstr "([voltar ao exerc√≠cio](dining-philosophers.md))"

#: src/exercises/concurrency/solutions-morning.md:29
msgid "\"{} is trying to eat\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md:53
msgid ""
"// To avoid a deadlock, we have to break the symmetry\n"
"        // somewhere. This will swap the forks without deinitializing\n"
"        // either of them.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md:77
msgid "\"{thought}\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md:82
#, fuzzy
msgid "Link Checker"
msgstr "Verificador de links _multi-threads_"

#: src/exercises/concurrency/solutions-morning.md:84
#, fuzzy
msgid "([back to exercise](link-checker.md))"
msgstr "([voltar ao exerc√≠cio](luhn.md))"

#: src/exercises/concurrency/solutions-morning.md:154
msgid ""
"/// Determine whether links within the given page should be extracted.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md:162
msgid ""
"/// Mark the given page as visited, returning false if it had already\n"
"    /// been visited.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md:188
msgid "// The sender got dropped. No more commands coming in.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md:229
msgid "\"Got crawling error: {:#}\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md:247
msgid "\"Bad URLs: {:#?}\""
msgstr ""

#: src/async.md:1
#, fuzzy
msgid "Async Rust"
msgstr "Por que Rust?"

#: src/async.md:3
msgid ""
"\"Async\" is a concurrency model where multiple tasks are executed "
"concurrently by executing each task until it would block, then switching to "
"another task that is ready to make progress. The model allows running a "
"larger number of tasks on a limited number of threads. This is because the "
"per-task overhead is typically very low and operating systems provide "
"primitives for efficiently identifying I/O that is able to proceed."
msgstr ""

#: src/async.md:10
msgid ""
"Rust's asynchronous operation is based on \"futures\", which represent work "
"that may be completed in the future. Futures are \"polled\" until they "
"signal that they are complete."
msgstr ""

#: src/async.md:14
msgid ""
"Futures are polled by an async runtime, and several different runtimes are "
"available."
msgstr ""

#: src/async.md:19
msgid ""
"Python has a similar model in its `asyncio`. However, its `Future` type is "
"callback-based, and not polled. Async Python programs require a \"loop\", "
"similar to a runtime in Rust."
msgstr ""

#: src/async.md:23
msgid ""
"JavaScript's `Promise` is similar, but again callback-based. The language "
"runtime implements the event loop, so many of the details of Promise "
"resolution are hidden."
msgstr ""

#: src/async/async-await.md:3
msgid ""
"At a high level, async Rust code looks very much like \"normal\" sequential "
"code:"
msgstr ""

#: src/async/async-await.md:10
msgid "\"Count is: {i}!\""
msgstr ""

#: src/async/async-await.md:27
msgid ""
"Note that this is a simplified example to show the syntax. There is no long "
"running operation or any real concurrency in it!"
msgstr ""

#: src/async/async-await.md:30
msgid "What is the return type of an async call?"
msgstr ""

#: src/async/async-await.md:31
msgid "Use `let future: () = async_main(10);` in `main` to see the type."
msgstr ""

#: src/async/async-await.md:33
msgid ""
"The \"async\" keyword is syntactic sugar. The compiler replaces the return "
"type with a future."
msgstr ""

#: src/async/async-await.md:36
msgid ""
"You cannot make `main` async, without additional instructions to the "
"compiler on how to use the returned future."
msgstr ""

#: src/async/async-await.md:39
msgid ""
"You need an executor to run async code. `block_on` blocks the current thread "
"until the provided future has run to completion."
msgstr ""

#: src/async/async-await.md:42
msgid ""
"`.await` asynchronously waits for the completion of another operation. "
"Unlike `block_on`, `.await` doesn't block the current thread."
msgstr ""

#: src/async/async-await.md:45
msgid ""
"`.await` can only be used inside an `async` function (or block; these are "
"introduced later)."
msgstr ""

#: src/async/futures.md:3
msgid ""
"[`Future`](https://doc.rust-lang.org/std/future/trait.Future.html) is a "
"trait, implemented by objects that represent an operation that may not be "
"complete yet. A future can be polled, and `poll` returns a [`Poll`](https://"
"doc.rust-lang.org/std/task/enum.Poll.html)."
msgstr ""

#: src/async/futures.md:23
msgid ""
"An async function returns an `impl Future`. It's also possible (but "
"uncommon) to implement `Future` for your own types. For example, the "
"`JoinHandle` returned from `tokio::spawn` implements `Future` to allow "
"joining to it."
msgstr ""

#: src/async/futures.md:27
msgid ""
"The `.await` keyword, applied to a Future, causes the current async function "
"to pause until that Future is ready, and then evaluates to its output."
msgstr ""

#: src/async/futures.md:32
msgid ""
"The `Future` and `Poll` types are implemented exactly as shown; click the "
"links to show the implementations in the docs."
msgstr ""

#: src/async/futures.md:35
msgid ""
"We will not get to `Pin` and `Context`, as we will focus on writing async "
"code, rather than building new async primitives. Briefly:"
msgstr ""

#: src/async/futures.md:38
msgid ""
"`Context` allows a Future to schedule itself to be polled again when an "
"event occurs."
msgstr ""

#: src/async/futures.md:41
msgid ""
"`Pin` ensures that the Future isn't moved in memory, so that pointers into "
"that future remain valid. This is required to allow references to remain "
"valid after an `.await`."
msgstr ""

#: src/async/runtimes.md:3
msgid ""
"A _runtime_ provides support for performing operations asynchronously (a "
"_reactor_) and is responsible for executing futures (an _executor_). Rust "
"does not have a \"built-in\" runtime, but several options are available:"
msgstr ""

#: src/async/runtimes.md:7
msgid ""
"[Tokio](https://tokio.rs/): performant, with a well-developed ecosystem of "
"functionality like [Hyper](https://hyper.rs/) for HTTP or [Tonic](https://"
"github.com/hyperium/tonic) for gRPC."
msgstr ""

#: src/async/runtimes.md:10
msgid ""
"[async-std](https://async.rs/): aims to be a \"std for async\", and includes "
"a basic runtime in `async::task`."
msgstr ""

#: src/async/runtimes.md:12
msgid "[smol](https://docs.rs/smol/latest/smol/): simple and lightweight"
msgstr ""

#: src/async/runtimes.md:14
msgid ""
"Several larger applications have their own runtimes. For example, [Fuchsia]"
"(https://fuchsia.googlesource.com/fuchsia/+/refs/heads/main/src/lib/fuchsia-"
"async/src/lib.rs) already has one."
msgstr ""

#: src/async/runtimes.md:20
msgid ""
"Note that of the listed runtimes, only Tokio is supported in the Rust "
"playground. The playground also does not permit any I/O, so most interesting "
"async things can't run in the playground."
msgstr ""

#: src/async/runtimes.md:24
msgid ""
"Futures are \"inert\" in that they do not do anything (not even start an I/O "
"operation) unless there is an executor polling them. This differs from JS "
"Promises, for example, which will run to completion even if they are never "
"used."
msgstr ""

#: src/async/runtimes/tokio.md:3
msgid "Tokio provides:"
msgstr ""

#: src/async/runtimes/tokio.md:5
msgid "A multi-threaded runtime for executing asynchronous code."
msgstr ""

#: src/async/runtimes/tokio.md:6
msgid "An asynchronous version of the standard library."
msgstr ""

#: src/async/runtimes/tokio.md:7
msgid "A large ecosystem of libraries."
msgstr ""

#: src/async/runtimes/tokio.md:14
msgid "\"Count in task: {i}!\""
msgstr ""

#: src/async/runtimes/tokio.md:24
msgid "\"Main task: {i}\""
msgstr ""

#: src/async/runtimes/tokio.md:32
msgid "With the `tokio::main` macro we can now make `main` async."
msgstr ""

#: src/async/runtimes/tokio.md:34
msgid "The `spawn` function creates a new, concurrent \"task\"."
msgstr ""

#: src/async/runtimes/tokio.md:36
msgid "Note: `spawn` takes a `Future`, you don't call `.await` on `count_to`."
msgstr ""

#: src/async/runtimes/tokio.md:38
msgid "**Further exploration:**"
msgstr ""

#: src/async/runtimes/tokio.md:40
msgid ""
"Why does `count_to` not (usually) get to 10? This is an example of async "
"cancellation. `tokio::spawn` returns a handle which can be awaited to wait "
"until it finishes."
msgstr ""

#: src/async/runtimes/tokio.md:44
msgid "Try `count_to(10).await` instead of spawning."
msgstr ""

#: src/async/runtimes/tokio.md:46
msgid "Try awaiting the task returned from `tokio::spawn`."
msgstr ""

#: src/async/tasks.md:3
msgid "Rust has a task system, which is a form of lightweight threading."
msgstr ""

#: src/async/tasks.md:5
msgid ""
"A task has a single top-level future which the executor polls to make "
"progress. That future may have one or more nested futures that its `poll` "
"method polls, corresponding loosely to a call stack. Concurrency within a "
"task is possible by polling multiple child futures, such as racing a timer "
"and an I/O operation."
msgstr ""

#: src/async/tasks.md:16
msgid "\"127.0.0.1:0\""
msgstr ""

#: src/async/tasks.md:17
msgid "\"listening on port {}\""
msgstr ""

#: src/async/tasks.md:22
msgid "\"connection from {addr:?}\""
msgstr ""

#: src/async/tasks.md:25
msgid "b\"Who are you?\\n\""
msgstr ""

#: src/async/tasks.md:25 src/async/tasks.md:28 src/async/tasks.md:31
msgid "\"socket error\""
msgstr ""

#: src/async/tasks.md:30
msgid "\"Thanks for dialing in, {name}!\\n\""
msgstr ""

#: src/async/tasks.md:39 src/async/control-flow/join.md:36
msgid ""
"Copy this example into your prepared `src/main.rs` and run it from there."
msgstr ""

#: src/async/tasks.md:41
msgid ""
"Try connecting to it with a TCP connection tool like [nc](https://www.unix."
"com/man-page/linux/1/nc/) or [telnet](https://www.unix.com/man-page/linux/1/"
"telnet/)."
msgstr ""

#: src/async/tasks.md:45
msgid ""
"Ask students to visualize what the state of the example server would be with "
"a few connected clients. What tasks exist? What are their Futures?"
msgstr ""

#: src/async/tasks.md:48
msgid ""
"This is the first time we've seen an `async` block. This is similar to a "
"closure, but does not take any arguments. Its return value is a Future, "
"similar to an `async fn`."
msgstr ""

#: src/async/tasks.md:52
msgid ""
"Refactor the async block into a function, and improve the error handling "
"using `?`."
msgstr ""

#: src/async/channels.md:3
msgid ""
"Several crates have support for asynchronous channels. For instance `tokio`:"
msgstr ""

#: src/async/channels.md:13
msgid "\"Received {count} pings so far.\""
msgstr ""

#: src/async/channels.md:16
msgid "\"ping_handler complete\""
msgstr ""

#: src/async/channels.md:24
msgid "\"Failed to send ping.\""
msgstr ""

#: src/async/channels.md:25
msgid "\"Sent {} pings so far.\""
msgstr ""

#: src/async/channels.md:29
msgid "\"Something went wrong in ping handler task.\""
msgstr ""

#: src/async/channels.md:35
msgid "Change the channel size to `3` and see how it affects the execution."
msgstr ""

#: src/async/channels.md:37
msgid ""
"Overall, the interface is similar to the `sync` channels as seen in the "
"[morning class](concurrency/channels.md)."
msgstr ""

#: src/async/channels.md:40
msgid "Try removing the `std::mem::drop` call. What happens? Why?"
msgstr ""

#: src/async/channels.md:42
msgid ""
"The [Flume](https://docs.rs/flume/latest/flume/) crate has channels that "
"implement both `sync` and `async` `send` and `recv`. This can be convenient "
"for complex applications with both IO and heavy CPU processing tasks."
msgstr ""

#: src/async/channels.md:46
msgid ""
"What makes working with `async` channels preferable is the ability to "
"combine them with other `future`s to combine them and create complex control "
"flow."
msgstr ""

#: src/async/control-flow.md:1
#, fuzzy
msgid "Futures Control Flow"
msgstr "Controle de fluxo"

#: src/async/control-flow.md:3
msgid ""
"Futures can be combined together to produce concurrent compute flow graphs. "
"We have already seen tasks, that function as independent threads of "
"execution."
msgstr ""

#: src/async/control-flow.md:6
msgid "[Join](control-flow/join.md)"
msgstr ""

#: src/async/control-flow.md:7
msgid "[Select](control-flow/select.md)"
msgstr ""

#: src/async/control-flow/join.md:3
msgid ""
"A join operation waits until all of a set of futures are ready, and returns "
"a collection of their results. This is similar to `Promise.all` in "
"JavaScript or `asyncio.gather` in Python."
msgstr ""

#: src/async/control-flow/join.md:21
msgid "\"https://google.com\""
msgstr ""

#: src/async/control-flow/join.md:22
msgid "\"https://httpbin.org/ip\""
msgstr ""

#: src/async/control-flow/join.md:23
msgid "\"https://play.rust-lang.org/\""
msgstr ""

#: src/async/control-flow/join.md:24
msgid "\"BAD_URL\""
msgstr ""

#: src/async/control-flow/join.md:38
msgid ""
"For multiple futures of disjoint types, you can use `std::future::join!` but "
"you must know how many futures you will have at compile time. This is "
"currently in the `futures` crate, soon to be stabilised in `std::future`."
msgstr ""

#: src/async/control-flow/join.md:42
msgid ""
"The risk of `join` is that one of the futures may never resolve, this would "
"cause your program to stall."
msgstr ""

#: src/async/control-flow/join.md:45
msgid ""
"You can also combine `join_all` with `join!` for instance to join all "
"requests to an http service as well as a database query. Try adding a "
"`tokio::time::sleep` to the future, using `futures::join!`. This is not a "
"timeout (that requires `select!`, explained in the next chapter), but "
"demonstrates `join!`."
msgstr ""

#: src/async/control-flow/select.md:3
msgid ""
"A select operation waits until any of a set of futures is ready, and "
"responds to that future's result. In JavaScript, this is similar to `Promise."
"race`. In Python, it compares to `asyncio.wait(task_set, return_when=asyncio."
"FIRST_COMPLETED)`."
msgstr ""

#: src/async/control-flow/select.md:8
msgid ""
"Similar to a match statement, the body of `select!` has a number of arms, "
"each of the form `pattern = future => statement`. When the `future` is "
"ready, the `statement` is executed with the variables in `pattern` bound to "
"the `future`'s result."
msgstr ""

#: src/async/control-flow/select.md:39
msgid "\"Felix\""
msgstr ""

#: src/async/control-flow/select.md:39
msgid "\"Failed to send cat.\""
msgstr ""

#: src/async/control-flow/select.md:43
msgid "\"Rex\""
msgstr ""

#: src/async/control-flow/select.md:43
msgid "\"Failed to send dog.\""
msgstr ""

#: src/async/control-flow/select.md:48
msgid "\"Failed to receive winner\""
msgstr ""

#: src/async/control-flow/select.md:50
msgid "\"Winner is {winner:?}\""
msgstr ""

#: src/async/control-flow/select.md:56
msgid ""
"In this example, we have a race between a cat and a dog. "
"`first_animal_to_finish_race` listens to both channels and will pick "
"whichever arrives first. Since the dog takes 50ms, it wins against the cat "
"that take 500ms."
msgstr ""

#: src/async/control-flow/select.md:61
msgid ""
"You can use `oneshot` channels in this example as the channels are supposed "
"to receive only one `send`."
msgstr ""

#: src/async/control-flow/select.md:64
msgid ""
"Try adding a deadline to the race, demonstrating selecting different sorts "
"of futures."
msgstr ""

#: src/async/control-flow/select.md:67
msgid ""
"Note that `select!` drops unmatched branches, which cancels their futures. "
"It is easiest to use when every execution of `select!` creates new futures."
msgstr ""

#: src/async/control-flow/select.md:70
msgid ""
"An alternative is to pass `&mut future` instead of the future itself, but "
"this can lead to issues, further discussed in the pinning slide."
msgstr ""

#: src/async/pitfalls.md:1
msgid "Pitfalls of async/await"
msgstr ""

#: src/async/pitfalls.md:3
msgid ""
"Async / await provides convenient and efficient abstraction for concurrent "
"asynchronous programming. However, the async/await model in Rust also comes "
"with its share of pitfalls and footguns. We illustrate some of them in this "
"chapter:"
msgstr ""

#: src/async/pitfalls.md:7
msgid "[Blocking the Executor](pitfalls/blocking-executor.md)"
msgstr ""

#: src/async/pitfalls.md:8
msgid "[Pin](pitfalls/pin.md)"
msgstr ""

#: src/async/pitfalls.md:9
msgid "[Async Traits](pitfalls/async-traits.md)"
msgstr ""

#: src/async/pitfalls.md:10
msgid "[Cancellation](pitfalls/cancellation.md)"
msgstr ""

#: src/async/pitfalls/blocking-executor.md:1
msgid "Blocking the executor"
msgstr ""

#: src/async/pitfalls/blocking-executor.md:3
msgid ""
"Most async runtimes only allow IO tasks to run concurrently. This means that "
"CPU blocking tasks will block the executor and prevent other tasks from "
"being executed. An easy workaround is to use async equivalent methods where "
"possible."
msgstr ""

#: src/async/pitfalls/blocking-executor.md:14
msgid "\"future {id} slept for {duration_ms}ms, finished after {}ms\""
msgstr ""

#: src/async/pitfalls/blocking-executor.md:19
msgid "\"current_thread\""
msgstr ""

#: src/async/pitfalls/blocking-executor.md:29
msgid ""
"Run the code and see that the sleeps happen consecutively rather than "
"concurrently."
msgstr ""

#: src/async/pitfalls/blocking-executor.md:32
msgid ""
"The `\"current_thread\"` flavor puts all tasks on a single thread. This "
"makes the effect more obvious, but the bug is still present in the multi-"
"threaded flavor."
msgstr ""

#: src/async/pitfalls/blocking-executor.md:36
msgid ""
"Switch the `std::thread::sleep` to `tokio::time::sleep` and await its result."
msgstr ""

#: src/async/pitfalls/blocking-executor.md:38
msgid ""
"Another fix would be to `tokio::task::spawn_blocking` which spawns an actual "
"thread and transforms its handle into a future without blocking the executor."
msgstr ""

#: src/async/pitfalls/blocking-executor.md:41
msgid ""
"You should not think of tasks as OS threads. They do not map 1 to 1 and most "
"executors will allow many tasks to run on a single OS thread. This is "
"particularly problematic when interacting with other libraries via FFI, "
"where that library might depend on thread-local storage or map to specific "
"OS threads (e.g., CUDA). Prefer `tokio::task::spawn_blocking` in such "
"situations."
msgstr ""

#: src/async/pitfalls/blocking-executor.md:47
msgid ""
"Use sync mutexes with care. Holding a mutex over an `.await` may cause "
"another task to block, and that task may be running on the same thread."
msgstr ""

#: src/async/pitfalls/pin.md:3
msgid ""
"When you await a future, all local variables (that would ordinarily be "
"stored on a stack frame) are instead stored in the Future for the current "
"async block. If your future has pointers to data on the stack, those "
"pointers might get invalidated. This is unsafe."
msgstr ""

#: src/async/pitfalls/pin.md:8
msgid ""
"Therefore, you must guarantee that the addresses your future points to don't "
"change. That is why we need to \"pin\" futures. Using the same future "
"repeatedly in a `select!` often leads to issues with pinned values."
msgstr ""

#: src/async/pitfalls/pin.md:16
msgid ""
"// A work item. In this case, just sleep for the given time and respond\n"
"// with a message on the `respond_on` channel.\n"
msgstr ""

#: src/async/pitfalls/pin.md:24
msgid "// A worker which listens for work on a queue and performs it.\n"
msgstr ""

#: src/async/pitfalls/pin.md:31
msgid "// Pretend to work.\n"
msgstr ""

#: src/async/pitfalls/pin.md:34
msgid "\"failed to send response\""
msgstr ""

#: src/async/pitfalls/pin.md:37
msgid "// TODO: report number of iterations every 100ms\n"
msgstr ""

#: src/async/pitfalls/pin.md:41
msgid "// A requester which requests work and waits for it to complete.\n"
msgstr ""

#: src/async/pitfalls/pin.md:48
msgid "\"failed to send on work queue\""
msgstr ""

#: src/async/pitfalls/pin.md:49
msgid "\"failed waiting for response\""
msgstr ""

#: src/async/pitfalls/pin.md:58
msgid "\"work result for iteration {i}: {resp}\""
msgstr ""

#: src/async/pitfalls/pin.md:65
msgid ""
"You may recognize this as an example of the actor pattern. Actors typically "
"call `select!` in a loop."
msgstr ""

#: src/async/pitfalls/pin.md:68
msgid ""
"This serves as a summation of a few of the previous lessons, so take your "
"time with it."
msgstr ""

#: src/async/pitfalls/pin.md:71
msgid ""
"Naively add a `_ = sleep(Duration::from_millis(100)) => { println!(..) }` to "
"the `select!`. This will never execute. Why?"
msgstr ""

#: src/async/pitfalls/pin.md:74
msgid ""
"Instead, add a `timeout_fut` containing that future outside of the `loop`:"
msgstr ""

#: src/async/pitfalls/pin.md:85
msgid ""
"This still doesn't work. Follow the compiler errors, adding `&mut` to the "
"`timeout_fut` in the `select!` to work around the move, then using `Box::"
"pin`:"
msgstr ""

#: src/async/pitfalls/pin.md:99
msgid ""
"This compiles, but once the timeout expires it is `Poll::Ready` on every "
"iteration (a fused future would help with this). Update to reset "
"`timeout_fut` every time it expires."
msgstr ""

#: src/async/pitfalls/pin.md:103
msgid ""
"Box allocates on the heap. In some cases, `std::pin::pin!` (only recently "
"stabilized, with older code often using `tokio::pin!`) is also an option, "
"but that is difficult to use for a future that is reassigned."
msgstr ""

#: src/async/pitfalls/pin.md:107
msgid ""
"Another alternative is to not use `pin` at all but spawn another task that "
"will send to a `oneshot` channel every 100ms."
msgstr ""

#: src/async/pitfalls/async-traits.md:3
msgid ""
"Async methods in traits are not yet supported in the stable channel ([An "
"experimental feature exists in nightly and should be stabilized in the mid "
"term.](https://blog.rust-lang.org/inside-rust/2022/11/17/async-fn-in-trait-"
"nightly.html))"
msgstr ""

#: src/async/pitfalls/async-traits.md:6
msgid ""
"The crate [async_trait](https://docs.rs/async-trait/latest/async_trait/) "
"provides a workaround through a macro:"
msgstr ""

#: src/async/pitfalls/async-traits.md:35
msgid "\"running all sleepers..\""
msgstr ""

#: src/async/pitfalls/async-traits.md:39
msgid "\"slept for {}ms\""
msgstr ""

#: src/async/pitfalls/async-traits.md:56
msgid ""
"`async_trait` is easy to use, but note that it's using heap allocations to "
"achieve this. This heap allocation has performance overhead."
msgstr ""

#: src/async/pitfalls/async-traits.md:59
msgid ""
"The challenges in language support for `async trait` are deep Rust and "
"probably not worth describing in-depth. Niko Matsakis did a good job of "
"explaining them in [this post](https://smallcultfollowing.com/babysteps/"
"blog/2019/10/26/async-fn-in-traits-are-hard/) if you are interested in "
"digging deeper."
msgstr ""

#: src/async/pitfalls/async-traits.md:65
msgid ""
"Try creating a new sleeper struct that will sleep for a random amount of "
"time and adding it to the Vec."
msgstr ""

#: src/async/pitfalls/cancellation.md:3
msgid ""
"Dropping a future implies it can never be polled again. This is called "
"_cancellation_ and it can occur at any `await` point. Care is needed to "
"ensure the system works correctly even when futures are cancelled. For "
"example, it shouldn't deadlock or lose data."
msgstr ""

#: src/async/pitfalls/cancellation.md:35
msgid "\"not UTF-8\""
msgstr ""

#: src/async/pitfalls/cancellation.md:51
msgid "\"hi\\nthere\\n\""
msgstr ""

#: src/async/pitfalls/cancellation.md:57
msgid "\"tick!\""
msgstr ""

#: src/async/pitfalls/cancellation.md:72
msgid ""
"The compiler doesn't help with cancellation-safety. You need to read API "
"documentation and consider what state your `async fn` holds."
msgstr ""

#: src/async/pitfalls/cancellation.md:75
msgid ""
"Unlike `panic` and `?`, cancellation is part of normal control flow (vs "
"error-handling)."
msgstr ""

#: src/async/pitfalls/cancellation.md:78
msgid "The example loses parts of the string."
msgstr ""

#: src/async/pitfalls/cancellation.md:80
msgid ""
"Whenever the `tick()` branch finishes first, `next()` and its `buf` are "
"dropped."
msgstr ""

#: src/async/pitfalls/cancellation.md:83
msgid ""
"`LinesReader` can be made cancellation-safe by making `buf` part of the "
"struct:"
msgstr ""

#: src/async/pitfalls/cancellation.md:97
msgid "// prefix buf and bytes with self.\n"
msgstr ""

#: src/async/pitfalls/cancellation.md:106
msgid ""
"[`Interval::tick`](https://docs.rs/tokio/latest/tokio/time/struct.Interval."
"html#method.tick) is cancellation-safe because it keeps track of whether a "
"tick has been 'delivered'."
msgstr ""

#: src/async/pitfalls/cancellation.md:110
msgid ""
"[`AsyncReadExt::read`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncReadExt.html#method.read) is cancellation-safe because it either "
"returns or doesn't read data."
msgstr ""

#: src/async/pitfalls/cancellation.md:113
msgid ""
"[`AsyncBufReadExt::read_line`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncBufReadExt.html#method.read_line) is similar to the example and _isn't_ "
"cancellation-safe. See its documentation for details and alternatives."
msgstr ""

#: src/exercises/concurrency/afternoon.md:3
msgid ""
"To practice your Async Rust skills, we have again two exercises for you:"
msgstr ""

#: src/exercises/concurrency/afternoon.md:5
msgid ""
"Dining philosophers: we already saw this problem in the morning. This time "
"you are going to implement it with Async Rust."
msgstr ""

#: src/exercises/concurrency/afternoon.md:8
msgid ""
"A Broadcast Chat Application: this is a larger project that allows you "
"experiment with more advanced Async Rust features."
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md:1
#: src/exercises/concurrency/solutions-afternoon.md:3
#, fuzzy
msgid "Dining Philosophers --- Async"
msgstr "Fil√≥sofos jantando"

#: src/exercises/concurrency/dining-philosophers-async.md:3
msgid ""
"See [dining philosophers](dining-philosophers.md) for a description of the "
"problem."
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md:6
#, fuzzy
msgid ""
"As before, you will need a local [Cargo installation](../../cargo/running-"
"locally.md) for this exercise. Copy the code below to a file called `src/"
"main.rs`, fill out the blanks, and test that `cargo run` does not deadlock:"
msgstr ""
"Voc√™ precisar√° de uma \\[instala√ß√£o do Cargo\\]\\[../../cargo/running-"
"locally.md\\] local para esse exerc√≠cio. Copie o c√≥digo abaixo para o "
"arquivo `src/main.rs`, preencha os espa√ßos em branco, e teste se `cargo run` "
"n√£o trava:"

#: src/exercises/concurrency/dining-philosophers-async.md:52
#: src/exercises/concurrency/solutions-afternoon.md:78
msgid "// Make them think and eat\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md:58
msgid ""
"Since this time you are using Async Rust, you'll need a `tokio` dependency. "
"You can use the following `Cargo.toml`:"
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md:63
#, fuzzy
msgid ""
"```toml\n"
"[package]\n"
"name = \"dining-philosophers-async-dine\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"\n"
"[dependencies]\n"
"tokio = { version = \"1.26.0\", features = [\"sync\", \"time\", \"macros\", "
"\"rt-multi-thread\"] }\n"
"```"
msgstr ""
"```toml\n"
"[depend√™ncias]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"

#: src/exercises/concurrency/dining-philosophers-async.md:73
msgid ""
"Also note that this time you have to use the `Mutex` and the `mpsc` module "
"from the `tokio` crate."
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md:78
msgid "Can you make your implementation single-threaded?"
msgstr ""

#: src/exercises/concurrency/chat-app.md:3
msgid ""
"In this exercise, we want to use our new knowledge to implement a broadcast "
"chat application. We have a chat server that the clients connect to and "
"publish their messages. The client reads user messages from the standard "
"input, and sends them to the server. The chat server broadcasts each message "
"that it receives to all the clients."
msgstr ""

#: src/exercises/concurrency/chat-app.md:9
msgid ""
"For this, we use [a broadcast channel](https://docs.rs/tokio/latest/tokio/"
"sync/broadcast/fn.channel.html) on the server, and [`tokio_websockets`]"
"(https://docs.rs/tokio-websockets/) for the communication between the client "
"and the server."
msgstr ""

#: src/exercises/concurrency/chat-app.md:12
msgid "Create a new Cargo project and add the following dependencies:"
msgstr ""

#: src/exercises/concurrency/chat-app.md:14
msgid "_Cargo.toml_:"
msgstr ""

#: src/exercises/concurrency/chat-app.md:18
#, fuzzy
msgid ""
"```toml\n"
"[package]\n"
"name = \"chat-async\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"\n"
"[dependencies]\n"
"futures-util = { version = \"0.3.30\", features = [\"sink\"] }\n"
"http = \"1.0.0\"\n"
"tokio = { version = \"1.28.1\", features = [\"full\"] }\n"
"tokio-websockets = { version = \"0.5.0\", features = [\"client\", "
"\"fastrand\", \"server\", \"sha1_smol\"] }\n"
"```"
msgstr ""
"```toml\n"
"[depend√™ncias]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"

#: src/exercises/concurrency/chat-app.md:31
msgid "The required APIs"
msgstr ""

#: src/exercises/concurrency/chat-app.md:33
msgid ""
"You are going to need the following functions from `tokio` and "
"[`tokio_websockets`](https://docs.rs/tokio-websockets/). Spend a few minutes "
"to familiarize yourself with the API."
msgstr ""

#: src/exercises/concurrency/chat-app.md:37
msgid ""
"[StreamExt::next()](https://docs.rs/futures-util/0.3.28/futures_util/stream/"
"trait.StreamExt.html#method.next) implemented by `WebSocketStream`: for "
"asynchronously reading messages from a Websocket Stream."
msgstr ""

#: src/exercises/concurrency/chat-app.md:39
msgid ""
"[SinkExt::send()](https://docs.rs/futures-util/0.3.28/futures_util/sink/"
"trait.SinkExt.html#method.send) implemented by `WebSocketStream`: for "
"asynchronously sending messages on a Websocket Stream."
msgstr ""

#: src/exercises/concurrency/chat-app.md:41
msgid ""
"[Lines::next_line()](https://docs.rs/tokio/latest/tokio/io/struct.Lines."
"html#method.next_line): for asynchronously reading user messages from the "
"standard input."
msgstr ""

#: src/exercises/concurrency/chat-app.md:43
msgid ""
"[Sender::subscribe()](https://docs.rs/tokio/latest/tokio/sync/broadcast/"
"struct.Sender.html#method.subscribe): for subscribing to a broadcast channel."
msgstr ""

#: src/exercises/concurrency/chat-app.md:45
#, fuzzy
msgid "Two binaries"
msgstr "Bin√°rios Rust"

#: src/exercises/concurrency/chat-app.md:47
msgid ""
"Normally in a Cargo project, you can have only one binary, and one `src/main."
"rs` file. In this project, we need two binaries. One for the client, and one "
"for the server. You could potentially make them two separate Cargo projects, "
"but we are going to put them in a single Cargo project with two binaries. "
"For this to work, the client and the server code should go under `src/bin` "
"(see the [documentation](https://doc.rust-lang.org/cargo/reference/cargo-"
"targets.html#binaries))."
msgstr ""

#: src/exercises/concurrency/chat-app.md:54
msgid ""
"Copy the following server and client code into `src/bin/server.rs` and `src/"
"bin/client.rs`, respectively. Your task is to complete these files as "
"described below."
msgstr ""

#: src/exercises/concurrency/chat-app.md:58
#: src/exercises/concurrency/solutions-afternoon.md:99
#, fuzzy
msgid "_src/bin/server.rs_:"
msgstr "\"src/server.rs\""

#: src/exercises/concurrency/chat-app.md:77
#: src/exercises/concurrency/chat-app.md:124
msgid "// TODO: For a hint, see the description of the task below.\n"
msgstr ""

#: src/exercises/concurrency/chat-app.md:85
#: src/exercises/concurrency/solutions-afternoon.md:147
msgid "\"127.0.0.1:2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md:86
#: src/exercises/concurrency/solutions-afternoon.md:148
msgid "\"listening on port 2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md:90
#: src/exercises/concurrency/solutions-afternoon.md:152
msgid "\"New connection from {addr:?}\""
msgstr ""

#: src/exercises/concurrency/chat-app.md:93
#: src/exercises/concurrency/solutions-afternoon.md:155
msgid "// Wrap the raw TCP stream into a websocket.\n"
msgstr ""

#: src/exercises/concurrency/chat-app.md:102
#: src/exercises/concurrency/solutions-afternoon.md:164
#, fuzzy
msgid "_src/bin/client.rs_:"
msgstr "\"src/client.rs\""

#: src/exercises/concurrency/chat-app.md:116
#: src/exercises/concurrency/solutions-afternoon.md:176
msgid "\"ws://127.0.0.1:2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md:129
#, fuzzy
msgid "Running the binaries"
msgstr "Executando o curso"

#: src/exercises/concurrency/chat-app.md:131
msgid "Run the server with:"
msgstr ""

#: src/exercises/concurrency/chat-app.md:137
msgid "and the client with:"
msgstr ""

#: src/exercises/concurrency/chat-app.md:145
msgid "Implement the `handle_connection` function in `src/bin/server.rs`."
msgstr ""

#: src/exercises/concurrency/chat-app.md:146
msgid ""
"Hint: Use `tokio::select!` for concurrently performing two tasks in a "
"continuous loop. One task receives messages from the client and broadcasts "
"them. The other sends messages received by the server to the client."
msgstr ""

#: src/exercises/concurrency/chat-app.md:149
msgid "Complete the main function in `src/bin/client.rs`."
msgstr ""

#: src/exercises/concurrency/chat-app.md:150
msgid ""
"Hint: As before, use `tokio::select!` in a continuous loop for concurrently "
"performing two tasks: (1) reading user messages from standard input and "
"sending them to the server, and (2) receiving messages from the server, and "
"displaying them for the user."
msgstr ""

#: src/exercises/concurrency/chat-app.md:154
msgid ""
"Optional: Once you are done, change the code to broadcast messages to all "
"clients, but the sender of the message."
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:1
#, fuzzy
msgid "Concurrency Afternoon Exercise"
msgstr "Dia 1 Exerc√≠cios da Tarde"

#: src/exercises/concurrency/solutions-afternoon.md:5
#, fuzzy
msgid "([back to exercise](dining-philosophers-async.md))"
msgstr "([voltar ao exerc√≠cio](dining-philosophers.md))"

#: src/exercises/concurrency/solutions-afternoon.md:33
msgid ""
"// Add a delay before picking the second fork to allow the execution\n"
"        // to transfer to another task\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:41
msgid "// The locks are dropped here\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:61
msgid ""
"// To avoid a deadlock, we have to break the symmetry\n"
"            // somewhere. This will swap the forks without deinitializing\n"
"            // either of them.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:75
msgid "// tx is dropped here, so we don't need to explicitly drop it later\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:90
msgid "\"Here is a thought: {thought}\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:97
#, fuzzy
msgid "([back to exercise](chat-app.md))"
msgstr "([voltar ao exerc√≠cio](luhn.md))"

#: src/exercises/concurrency/solutions-afternoon.md:116
msgid "\"Welcome to chat! Type a message\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:119
msgid ""
"// A continuous loop for concurrently performing two tasks: (1) receiving\n"
"    // messages from `ws_stream` and broadcasting them, and (2) receiving\n"
"    // messages on `bcast_rx` and sending them to the client.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:128
msgid "\"From client {addr:?} {text:?}\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:183
msgid "// Continuous loop for concurrently sending and receiving messages.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md:190
msgid "\"From server: {}\""
msgstr ""

#: src/thanks.md:3
msgid ""
"_Thank you for taking Comprehensive Rust ü¶Ä!_ We hope you enjoyed it and "
"that it was useful."
msgstr ""
"_Obrigado por fazer o Comprehensive Rust ü¶Ä!_ Esperamos que tenha gostado e "
"que tenha sido √∫til."

#: src/thanks.md:6
msgid ""
"We've had a lot of fun putting the course together. The course is not "
"perfect, so if you spotted any mistakes or have ideas for improvements, "
"please get in [contact with us on GitHub](https://github.com/google/"
"comprehensive-rust/discussions). We would love to hear from you."
msgstr ""
"N√≥s nos divertimos muito montando o curso. O curso n√£o √© perfeito, portanto, "
"se voc√™ identificou algum erro ou tem ideias para melhorias, entre em [entre "
"em contato conosco em GitHub](https://github.com/google/comprehensive-rust/"
"discussions). N√≥s adorar√≠amos ouvir voc√™."

#: src/glossary.md:3
msgid ""
"The following is a glossary which aims to give a short definition of many "
"Rust terms. For translations, this also serves to connect the term back to "
"the English original."
msgstr ""

#: src/glossary.md:30
msgid ""
"allocate:  \n"
"Dynamic memory allocation on [the heap](memory-management/stack-vs-heap.md)."
msgstr ""

#: src/glossary.md:32
msgid ""
"argument:  \n"
"Information that is passed into a function or method."
msgstr ""

#: src/glossary.md:34
msgid ""
"Bare-metal Rust:  \n"
"Low-level Rust development, often deployed to a system without an operating "
"system. See [Bare-metal Rust](bare-metal.md)."
msgstr ""

#: src/glossary.md:37
msgid ""
"block:  \n"
"See [Blocks](control-flow/blocks.md) and _scope_."
msgstr ""

#: src/glossary.md:39
msgid ""
"borrow:  \n"
"See [Borrowing](ownership/borrowing.md)."
msgstr ""

#: src/glossary.md:41
msgid ""
"borrow checker:  \n"
"The part of the Rust compiler which checks that all borrows are valid."
msgstr ""

#: src/glossary.md:43
msgid ""
"brace:  \n"
"`{` and `}`. Also called _curly brace_, they delimit _blocks_."
msgstr ""

#: src/glossary.md:45
msgid ""
"build:  \n"
"The process of converting source code into executable code or a usable "
"program."
msgstr ""

#: src/glossary.md:48
msgid ""
"call:  \n"
"To invoke or execute a function or method."
msgstr ""

#: src/glossary.md:50
msgid ""
"channel:  \n"
"Used to safely pass messages [between threads](concurrency/channels.md)."
msgstr ""

#: src/glossary.md:52
msgid ""
"Comprehensive Rust ü¶Ä:  \n"
"The courses here are jointly called Comprehensive Rust ü¶Ä."
msgstr ""

#: src/glossary.md:54
msgid ""
"concurrency:  \n"
"The execution of multiple tasks or processes at the same time."
msgstr ""

#: src/glossary.md:56
msgid ""
"Concurrency in Rust:  \n"
"See [Concurrency in Rust](concurrency.md)."
msgstr ""

#: src/glossary.md:58
msgid ""
"constant:  \n"
"A value that does not change during the execution of a program."
msgstr ""

#: src/glossary.md:60
msgid ""
"control flow:  \n"
"The order in which the individual statements or instructions are executed in "
"a program."
msgstr ""

#: src/glossary.md:63
msgid ""
"crash:  \n"
"An unexpected and unhandled failure or termination of a program."
msgstr ""

#: src/glossary.md:65
msgid ""
"enumeration:  \n"
"A data type that consists of named constant values."
msgstr ""

#: src/glossary.md:67
msgid ""
"error:  \n"
"An unexpected condition or result that deviates from the expected behavior."
msgstr ""

#: src/glossary.md:69
msgid ""
"error handling:  \n"
"The process of managing and responding to errors that occur during program "
"execution."
msgstr ""

#: src/glossary.md:72
msgid ""
"exercise:  \n"
"A task or problem designed to practice and test programming skills."
msgstr ""

#: src/glossary.md:74
msgid ""
"function:  \n"
"A reusable block of code that performs a specific task."
msgstr ""

#: src/glossary.md:76
msgid ""
"garbage collector:  \n"
"A mechanism that automatically frees up memory occupied by objects that are "
"no longer in use."
msgstr ""

#: src/glossary.md:79
msgid ""
"generics:  \n"
"A feature that allows writing code with placeholders for types, enabling "
"code reuse with different data types."
msgstr ""

#: src/glossary.md:82
msgid ""
"immutable:  \n"
"Unable to be changed after creation."
msgstr ""

#: src/glossary.md:84
msgid ""
"integration test:  \n"
"A type of test that verifies the interactions between different parts or "
"components of a system."
msgstr ""

#: src/glossary.md:87
msgid ""
"keyword:  \n"
"A reserved word in a programming language that has a specific meaning and "
"cannot be used as an identifier."
msgstr ""

#: src/glossary.md:90
msgid ""
"library:  \n"
"A collection of precompiled routines or code that can be used by programs."
msgstr ""

#: src/glossary.md:92
msgid ""
"macro:  \n"
"Rust macros can be recognized by a `!` in the name. Macros are used when "
"normal functions are not enough. A typical example is `format!`, which takes "
"a variable number of arguments, which isn't supported by Rust functions."
msgstr ""

#: src/glossary.md:96
msgid ""
"`main` function:  \n"
"Rust programs start executing with the `main` function."
msgstr ""

#: src/glossary.md:98
msgid ""
"match:  \n"
"A control flow construct in Rust that allows for pattern matching on the "
"value of an expression."
msgstr ""

#: src/glossary.md:101
msgid ""
"memory leak:  \n"
"A situation where a program fails to release memory that is no longer "
"needed, leading to a gradual increase in memory usage."
msgstr ""

#: src/glossary.md:104
msgid ""
"method:  \n"
"A function associated with an object or a type in Rust."
msgstr ""

#: src/glossary.md:106
msgid ""
"module:  \n"
"A namespace that contains definitions, such as functions, types, or traits, "
"to organize code in Rust."
msgstr ""

#: src/glossary.md:109
msgid ""
"move:  \n"
"The transfer of ownership of a value from one variable to another in Rust."
msgstr ""

#: src/glossary.md:111
msgid ""
"mutable:  \n"
"A property in Rust that allows variables to be modified after they have been "
"declared."
msgstr ""

#: src/glossary.md:114
msgid ""
"ownership:  \n"
"The concept in Rust that defines which part of the code is responsible for "
"managing the memory associated with a value."
msgstr ""

#: src/glossary.md:117
msgid ""
"panic:  \n"
"An unrecoverable error condition in Rust that results in the termination of "
"the program."
msgstr ""

#: src/glossary.md:120
msgid ""
"parameter:  \n"
"A value that is passed into a function or method when it is called."
msgstr ""

#: src/glossary.md:122
msgid ""
"pattern:  \n"
"A combination of values, literals, or structures that can be matched against "
"an expression in Rust."
msgstr ""

#: src/glossary.md:125
msgid ""
"payload:  \n"
"The data or information carried by a message, event, or data structure."
msgstr ""

#: src/glossary.md:127
msgid ""
"program:  \n"
"A set of instructions that a computer can execute to perform a specific task "
"or solve a particular problem."
msgstr ""

#: src/glossary.md:130
msgid ""
"programming language:  \n"
"A formal system used to communicate instructions to a computer, such as Rust."
msgstr ""

#: src/glossary.md:132
msgid ""
"receiver:  \n"
"The first parameter in a Rust method that represents the instance on which "
"the method is called."
msgstr ""

#: src/glossary.md:135
msgid ""
"reference counting:  \n"
"A memory management technique in which the number of references to an object "
"is tracked, and the object is deallocated when the count reaches zero."
msgstr ""

#: src/glossary.md:138
msgid ""
"return:  \n"
"A keyword in Rust used to indicate the value to be returned from a function."
msgstr ""

#: src/glossary.md:140
msgid ""
"Rust:  \n"
"A systems programming language that focuses on safety, performance, and "
"concurrency."
msgstr ""

#: src/glossary.md:143
msgid ""
"Rust Fundamentals:  \n"
"Days 1 to 3 of this course."
msgstr ""

#: src/glossary.md:145
msgid ""
"Rust in Android:  \n"
"See [Rust in Android](android.md)."
msgstr ""

#: src/glossary.md:147
msgid ""
"Rust in Chromium:  \n"
"See [Rust in Chromium](chromium.md)."
msgstr ""

#: src/glossary.md:149
msgid ""
"safe:  \n"
"Refers to code that adheres to Rust's ownership and borrowing rules, "
"preventing memory-related errors."
msgstr ""

#: src/glossary.md:152
msgid ""
"scope:  \n"
"The region of a program where a variable is valid and can be used."
msgstr ""

#: src/glossary.md:154
msgid ""
"standard library:  \n"
"A collection of modules providing essential functionality in Rust."
msgstr ""

#: src/glossary.md:156
msgid ""
"static:  \n"
"A keyword in Rust used to define static variables or items with a `'static` "
"lifetime."
msgstr ""

#: src/glossary.md:159
msgid ""
"string:  \n"
"A data type storing textual data. See [`String` vs `str`](basic-syntax/"
"string-slices.html) for more."
msgstr ""

#: src/glossary.md:162
msgid ""
"struct:  \n"
"A composite data type in Rust that groups together variables of different "
"types under a single name."
msgstr ""

#: src/glossary.md:165
msgid ""
"test:  \n"
"A Rust module containing functions that test the correctness of other "
"functions."
msgstr ""

#: src/glossary.md:168
msgid ""
"thread:  \n"
"A separate sequence of execution in a program, allowing concurrent execution."
msgstr ""

#: src/glossary.md:170
msgid ""
"thread safety:  \n"
"The property of a program that ensures correct behavior in a multithreaded "
"environment."
msgstr ""

#: src/glossary.md:173
msgid ""
"trait:  \n"
"A collection of methods defined for an unknown type, providing a way to "
"achieve polymorphism in Rust."
msgstr ""

#: src/glossary.md:176
msgid ""
"trait bound:  \n"
"An abstraction where you can require types to implement some traits of your "
"interest."
msgstr ""

#: src/glossary.md:179
msgid ""
"type:  \n"
"A classification that specifies which operations can be performed on values "
"of a particular kind in Rust."
msgstr ""

#: src/glossary.md:182
msgid ""
"type inference:  \n"
"The ability of the Rust compiler to deduce the type of a variable or "
"expression."
msgstr ""

#: src/glossary.md:185
msgid ""
"undefined behavior:  \n"
"Actions or conditions in Rust that have no specified result, often leading "
"to unpredictable program behavior."
msgstr ""

#: src/glossary.md:188
msgid ""
"union:  \n"
"A data type that can hold values of different types but only one at a time."
msgstr ""

#: src/glossary.md:190
msgid ""
"unit test:  \n"
"Rust comes with built-in support for running small unit tests and larger "
"integration tests. See [Unit Tests](testing/unit-tests.html)."
msgstr ""

#: src/glossary.md:193
msgid ""
"unsafe:  \n"
"The subset of Rust which allows you to trigger _undefined behavior_. See "
"[Unsafe Rust](unsafe.html)."
msgstr ""

#: src/glossary.md:196
msgid ""
"variable:  \n"
"A memory location storing data. Variables are valid in a _scope_."
msgstr ""

#: src/other-resources.md:1
msgid "Other Rust Resources"
msgstr "Outros recursos de Rust"

#: src/other-resources.md:3
msgid ""
"The Rust community has created a wealth of high-quality and free resources "
"online."
msgstr ""
"A comunidade Rust tem abund√¢ncia de recursos gratuitos e de alta qualidade "
"on-line."

#: src/other-resources.md:6
msgid "Official Documentation"
msgstr "Documenta√ß√£o Oficial"

#: src/other-resources.md:8
msgid "The Rust project hosts many resources. These cover Rust in general:"
msgstr "O projeto Rust hospeda muitos recursos. Estes cobrem Rust em geral:"

#: src/other-resources.md:10
msgid ""
"[The Rust Programming Language](https://doc.rust-lang.org/book/): the "
"canonical free book about Rust. Covers the language in detail and includes a "
"few projects for people to build."
msgstr ""
"[A Linguagem de Programa√ß√£o Rust](https://doc.rust-lang.org/book/): o livro "
"gratuito can√¥nico sobre Rust. Abrange o idioma em detalhes e inclui alguns "
"projetos para as pessoas constru√≠rem."

#: src/other-resources.md:13
msgid ""
"[Rust By Example](https://doc.rust-lang.org/rust-by-example/): covers the "
"Rust syntax via a series of examples which showcase different constructs. "
"Sometimes includes small exercises where you are asked to expand on the code "
"in the examples."
msgstr ""
"[Rust By Example](https://doc.rust-lang.org/rust-by-example/): abrange a "
"sintaxe de Rust por meio de uma s√©rie de exemplos que mostram diferentes "
"constru√ß√µes. As vezes inclui pequenos exerc√≠cios onde voc√™ √© solicitado a "
"expandir o c√≥digo dos exemplos."

#: src/other-resources.md:17
msgid ""
"[Rust Standard Library](https://doc.rust-lang.org/std/): full documentation "
"of the standard library for Rust."
msgstr ""
"[Rust Standard Library](https://doc.rust-lang.org/std/): documenta√ß√£o "
"completa da biblioteca padr√£o para Rust."

#: src/other-resources.md:19
msgid ""
"[The Rust Reference](https://doc.rust-lang.org/reference/): an incomplete "
"book which describes the Rust grammar and memory model."
msgstr ""
"[The Rust Reference](https://doc.rust-lang.org/reference/): um livro "
"incompleto que descreve a gram√°tica Rust e o modelo de mem√≥ria."

#: src/other-resources.md:22
msgid "More specialized guides hosted on the official Rust site:"
msgstr "Mais guias especializados hospedados no site oficial do Rust:"

#: src/other-resources.md:24
msgid ""
"[The Rustonomicon](https://doc.rust-lang.org/nomicon/): covers unsafe Rust, "
"including working with raw pointers and interfacing with other languages "
"(FFI)."
msgstr ""
"[O Rustonomicon](https://doc.rust-lang.org/nomicon/): cobre Rust inseguro, "
"incluindo trabalhar com ponteiros brutos e fazer interface com outras "
"linguagens (FFI)."

#: src/other-resources.md:27
msgid ""
"[Asynchronous Programming in Rust](https://rust-lang.github.io/async-book/): "
"covers the new asynchronous programming model which was introduced after the "
"Rust Book was written."
msgstr ""
"[Programa√ß√£o ass√≠ncrona em Rust](https://rust-lang.github.io/async-book/): "
"abrange o novo modelo de programa√ß√£o ass√≠ncrona que foi introduzido ap√≥s o "
"Rust Book ser escrito."

#: src/other-resources.md:30
msgid ""
"[The Embedded Rust Book](https://doc.rust-lang.org/stable/embedded-book/): "
"an introduction to using Rust on embedded devices without an operating "
"system."
msgstr ""
"[The Embedded Rust Book](https://doc.rust-lang.org/stable/embedded-book/): "
"uma introdu√ß√£o ao uso do Rust em dispositivos embarcados sem um sistema "
"operacional."

#: src/other-resources.md:33
msgid "Unofficial Learning Material"
msgstr "Material de aprendizagem n√£o oficial"

#: src/other-resources.md:35
msgid "A small selection of other guides and tutorial for Rust:"
msgstr "Uma pequena sele√ß√£o de outros guias e tutoriais para Rust:"

#: src/other-resources.md:37
#, fuzzy
msgid ""
"[Learn Rust the Dangerous Way](http://cliffle.com/p/dangerust/): covers Rust "
"from the perspective of low-level C programmers."
msgstr ""
"[Aprenda Rust da maneira perigosa](http://cliffle.com/p/dangerust/): cobre "
"Rust da perspectiva de programadores C de baixo n√≠vel."

#: src/other-resources.md:39
#, fuzzy
msgid ""
"[Rust for Embedded C Programmers](https://docs.opentitan.org/doc/ug/"
"rust_for_c/): covers Rust from the perspective of developers who write "
"firmware in C."
msgstr ""
"[Rust para Programadores Embedded C](https://docs.opentitan.org/doc/ug/"
"rust_for_c/): cobre Rust da perspectiva dos desenvolvedores que escrevem "
"firmware em C."

#: src/other-resources.md:41
#, fuzzy
msgid ""
"[Rust for professionals](https://overexact.com/rust-for-professionals/): "
"covers the syntax of Rust using side-by-side comparisons with other "
"languages such as C, C++, Java, JavaScript, and Python."
msgstr ""
"[Rust para profissionais](https://overexact.com/rust-for-professionals/): "
"cobre a sintaxe do Rust usando compara√ß√µes lado a lado com outras linguagens "
"como C, C++, Java, JavaScript e Python."

#: src/other-resources.md:44
#, fuzzy
msgid ""
"[Rust on Exercism](https://exercism.org/tracks/rust): 100+ exercises to help "
"you learn Rust."
msgstr ""
"[Rust on Exercism](https://exercism.org/tracks/rust): mais de 100 exerc√≠cios "
"para ajudar voc√™ aprende Rust."

#: src/other-resources.md:46
#, fuzzy
msgid ""
"[Ferrous Teaching Material](https://ferrous-systems.github.io/teaching-"
"material/index.html): a series of small presentations covering both basic "
"and advanced part of the Rust language. Other topics such as WebAssembly, "
"and async/await are also covered."
msgstr ""
"[Ensino Ferroso Material](https://ferrous-systems.github.io/teaching-"
"material/index.html): uma s√©rie de pequenas apresenta√ß√µes abrangendo tanto a "
"parte b√°sica quanto a avan√ßada da Linguagem Rust. Outros t√≥picos como "
"WebAssembly e async/await tamb√©m s√£o abordados."

#: src/other-resources.md:50
#, fuzzy
msgid ""
"[Beginner's Series to Rust](https://docs.microsoft.com/en-us/shows/beginners-"
"series-to-rust/) and [Take your first steps with Rust](https://docs."
"microsoft.com/en-us/learn/paths/rust-first-steps/): two Rust guides aimed at "
"new developers. The first is a set of 35 videos and the second is a set of "
"11 modules which covers Rust syntax and basic constructs."
msgstr ""
"[S√©rie Iniciante a Rust](https://docs.microsoft.com/en-us/shows/beginners-"
"series-to-rust/) e [D√™ seus primeiros passos com Rust](https://docs."
"microsoft.com/en-us/learn/paths/rust-first-steps/): dois guias Rust voltados "
"para novos desenvolvedores. O primeiro √© um conjunto de 35 v√≠deos e o o "
"segundo √© um conjunto de 11 m√≥dulos que cobrem a sintaxe Rust e as "
"constru√ß√µes b√°sicas."

#: src/other-resources.md:56
msgid ""
"[Learn Rust With Entirely Too Many Linked Lists](https://rust-unofficial."
"github.io/too-many-lists/): in-depth exploration of Rust's memory management "
"rules, through implementing a few different types of list structures."
msgstr ""

#: src/other-resources.md:61
msgid ""
"Please see the [Little Book of Rust Books](https://lborb.github.io/book/) "
"for even more Rust books."
msgstr ""
"Consulte o [Little Book of Rust Books](https://lborb.github.io/book/) para "
"ainda mais livros Rust."

#: src/credits.md:3
msgid ""
"The material here builds on top of the many great sources of Rust "
"documentation. See the page on [other resources](other-resources.md) for a "
"full list of useful resources."
msgstr ""
"O material aqui se baseia em muitas fontes excelentes de documenta√ß√£o do "
"Rust. Consulte a p√°gina em [outros recursos](other-resources.md) para obter "
"uma lista completa de recursos √∫teis ."

#: src/credits.md:7
#, fuzzy
msgid ""
"The material of Comprehensive Rust is licensed under the terms of the Apache "
"2.0 license, please see [`LICENSE`](https://github.com/google/comprehensive-"
"rust/blob/main/LICENSE) for details."
msgstr ""
"O material do Comprehensive Rust √© licenciado sob os termos da licen√ßa "
"Apache 2.0 , consulte [`LICENSE`](../LICENSE) para obter detalhes."

#: src/credits.md:12
msgid "Rust by Example"
msgstr "Rust by Example"

#: src/credits.md:14
msgid ""
"Some examples and exercises have been copied and adapted from [Rust by "
"Example](https://doc.rust-lang.org/rust-by-example/). Please see the "
"`third_party/rust-by-example/` directory for details, including the license "
"terms."
msgstr ""
"Alguns exemplos e exerc√≠cios foram copiados e adaptados de [Rust by Exemplo]"
"(https://doc.rust-lang.org/rust-by-example/). por favor veja o diret√≥rio "
"`third_party/rust-by-example/` para detalhes, incluindo os termos de licen√ßa."

#: src/credits.md:19
msgid "Rust on Exercism"
msgstr "Rust on Exercism"

#: src/credits.md:21
msgid ""
"Some exercises have been copied and adapted from [Rust on Exercism](https://"
"exercism.org/tracks/rust). Please see the `third_party/rust-on-exercism/` "
"directory for details, including the license terms."
msgstr ""
"Alguns exerc√≠cios foram copiados e adaptados de [Rust on Exercism](https://"
"exercism.org/tracks/rust). por favor veja o diret√≥rio `third_party/rust-on-"
"exercism/` para obter detalhes, incluindo os termos licen√ßa."

#: src/credits.md:26
msgid "CXX"
msgstr "CXX"

#: src/credits.md:28
msgid ""
"The [Interoperability with C++](android/interoperability/cpp.md) section "
"uses an image from [CXX](https://cxx.rs/). Please see the `third_party/cxx/` "
"directory for details, including the license terms."
msgstr ""
"A se√ß√£o [Interoperability with C++](android/interoperability/cpp.md) usa uma "
"imagem de [CXX](https://cxx.rs/). Consulte o diret√≥rio `third_party/cxx/` "
"para obter detalhes, incluindo os termos da licen√ßa."

#~ msgid "Small Example"
#~ msgstr "Um Pequeno Exemplo"

#~ msgid "Why Rust?"
#~ msgstr "Por que Rust?"

#~ msgid "Compile Time Guarantees"
#~ msgstr "Garantias em Tempo de Compila√ß√£o"

#~ msgid "Runtime Guarantees"
#~ msgstr "Garantias em Tempo de Execu√ß√£o"

#~ msgid "Modern Features"
#~ msgstr "Recursos Modernos"

#~ msgid "Basic Syntax"
#~ msgstr "Sintaxe B√°sica"

#~ msgid "String vs str"
#~ msgstr "String vs str"

#~ msgid "Rustdoc"
#~ msgstr "Rustdoc"

#~ msgid "Overloading"
#~ msgstr "Sobrecarga"

#~ msgid "Arrays and for Loops"
#~ msgstr "Matrizes e Loops for"

#~ msgid "Stack vs Heap"
#~ msgstr "Stack vs Heap"

#~ msgid "Stack Memory"
#~ msgstr "Mem√≥ria de Pilha"

#~ msgid "Manual Memory Management"
#~ msgstr "Gerenciamento Manual de Mem√≥ria"

#~ msgid "Scope-Based Memory Management"
#~ msgstr "Gerenciamento de Mem√≥ria Baseado em Escopo"

#~ msgid "Garbage Collection"
#~ msgstr "Gerenciamento Autom√°tico de Mem√≥ria"

#~ msgid "Rust Memory Management"
#~ msgstr "Gerenciamento de Mem√≥ria no Rust"

#~ msgid "Comparison"
#~ msgstr "Compara√ß√£o"

#~ msgid "Moved Strings in Rust"
#~ msgstr "Strings Movidas em Rust"

#~ msgid "Moves in Function Calls"
#~ msgstr "Move em Chamadas de Fun√ß√£o"

#~ msgid "Copying and Cloning"
#~ msgstr "Copia e Clonagem"

#~ msgid "Shared and Unique Borrows"
#~ msgstr "Empr√©stimos Compartilhados e √önicos"

#~ msgid "Storing Books"
#~ msgstr "Armazenando Livros"

#~ msgid "Iterators and Ownership"
#~ msgstr "Iteradores e Ownership (Posse)"

#~ msgid "Field Shorthand Syntax"
#~ msgstr "Sintaxe Abreviada de Campos"

#~ msgid "Variant Payloads"
#~ msgstr "Conte√∫dos Variantes"

#~ msgid "Enum Sizes"
#~ msgstr "Tamanhos de Enum"

#~ msgid "Method Receiver"
#~ msgstr "Receptor de M√©todo"

#~ msgid "Destructuring Structs"
#~ msgstr "Desestruturando Structs"

#~ msgid "Destructuring Arrays"
#~ msgstr "Desestruturando Matrizes"

#~ msgid "Match Guards"
#~ msgstr "Guardas de Correspond√™ncia (Match Guards)"

#~ msgid "Points and Polygons"
#~ msgstr "Pontos e Pol√≠gonos"

#~ msgid "if expressions"
#~ msgstr "Express√µes if"

#~ msgid "if let expressions"
#~ msgstr "Express√µes if let"

#~ msgid "while expressions"
#~ msgstr "Loops while"

#~ msgid "for expressions"
#~ msgstr "Loops for"

#~ msgid "loop expressions"
#~ msgstr "Express√µes loop"

#~ msgid "match expressions"
#~ msgstr "Express√µes match (Correspond√™ncia)"

#~ msgid "break & continue"
#~ msgstr "break e continue"

#~ msgid "Option and Result"
#~ msgstr "Option e Result"

#~ msgid "Vec"
#~ msgstr "Vec"

#~ msgid "HashMap"
#~ msgstr "HashMap"

#~ msgid "Box"
#~ msgstr "Box"

#~ msgid "Recursive Data Types"
#~ msgstr "Box com Estruturas de Dados Recursivas"

#~ msgid "Rc"
#~ msgstr "Rc"

#~ msgid "Cell/RefCell"
#~ msgstr "Cell/RefCell"

#~ msgid "Strings and Iterators"
#~ msgstr "Strings e Iteradores"

#~ msgid "Generic Methods"
#~ msgstr "M√©todos Gen√©ricos"

#~ msgid "Monomorphization"
#~ msgstr "Monomorfiza√ß√£o"

#~ msgid "Default Methods"
#~ msgstr "M√©todos Padr√£o"

#~ msgid "impl Trait"
#~ msgstr "Trait impl"

#~ msgid "Important Traits"
#~ msgstr "Traits Importantes"

#~ msgid "From and Into"
#~ msgstr "From e Into"

#~ msgid "Default"
#~ msgstr "Default"

#~ msgid "Operators: Add, Mul, ..."
#~ msgstr "Operadores: Add, Mul, ..."

#~ msgid "Catching Stack Unwinding"
#~ msgstr "Capturando o Desenrolar da Pilha"

#~ msgid "Structured Error Handling"
#~ msgstr "Tratamento Estruturado de Erros"

#~ msgid "Propagating Errors with ?"
#~ msgstr "Propagando Erros com ?"

#~ msgid "Converting Error Types"
#~ msgstr "Convertendo Tipos de Erro"

#~ msgid "Deriving Error Enums"
#~ msgstr "Derivando Enums de Erro"

#~ msgid "Adding Context to Errors"
#~ msgstr "Adicionando Contexto aos Erros"

#~ msgid "Send and Sync"
#~ msgstr "Send e Sync"

#~ msgid "Send"
#~ msgstr "Send"

#~ msgid "Sync"
#~ msgstr "Sync"

#~ msgid "Arc"
#~ msgstr "Arc"

#~ msgid "Mutex"
#~ msgstr "Mutex"

#~ msgid "Day 1 Morning"
#~ msgstr "Dia 1 Manh√£"

#~ msgid "Day 1 Afternoon"
#~ msgstr "Dia 1 Tarde"

#~ msgid "Day 2 Morning"
#~ msgstr "Dia 2 Manh√£"

#~ msgid "Day 2 Afternoon"
#~ msgstr "Dia 2 Tarde"

#~ msgid "Day 3 Morning"
#~ msgstr "Dia 3 Manh√£"

#~ msgid "Day 3 Afternoon"
#~ msgstr "Dia 3 Tarde"

#~ msgid "Concurrency Morning"
#~ msgstr "Concorr√™ncia Manh√£"

#~ msgid "Concurrency Afternoon"
#~ msgstr "Concorr√™ncia Tarde"

#~ msgid "The course is fast paced and covers a lot of ground:"
#~ msgstr "O curso √© r√°pido e muito abrangente:"

#~ msgid "Day 1: Basic Rust, ownership and the borrow checker."
#~ msgstr ""
#~ "Dia 1: Rust b√°sico, _ownership_ (\"posse\") e o _borrow checker_ "
#~ "(\"verificador de empr√©stimo\")."

#~ msgid "Day 2: Compound data types,  pattern matching, the standard library."
#~ msgstr ""
#~ "Dia 2: Tipos de dados compostos, correspond√™ncia de padr√µes e a "
#~ "biblioteca padr√£o."

#~ msgid "Day 3: Traits and generics, error handling, testing, unsafe Rust."
#~ msgstr ""
#~ "Dia 3: _Traits_ (\"caracter√≠sticas\") e gen√©ricos, tratamento de erros, "
#~ "testes e _unsafe_ (\"inseguro\") Rust."

#~ msgid "Concurrency"
#~ msgstr "Concorr√™ncia"

#~ msgid ""
#~ "We suggest using [VS Code](https://code.visualstudio.com/) to edit the "
#~ "code (but any LSP compatible editor works with rust-analyzer[3](https://"
#~ "rust-analyzer.github.io/))."
#~ msgstr ""
#~ "N√≥s sugerimos a utiliza√ß√£o do [VS Code](https://code.visualstudio.com/) "
#~ "para editar o c√≥digo (mas qualquer editor LSP - _Language Server "
#~ "Protocol_ - funciona com o rust-analyzer[3](https://rust-analyzer.github."
#~ "io/))."

#~ msgid ""
#~ "Some folks also like to use the [JetBrains](https://www.jetbrains.com/"
#~ "clion/) family of IDEs, which do their own analysis but have their own "
#~ "tradeoffs. If you prefer them, you can install the [Rust Plugin](https://"
#~ "www.jetbrains.com/rust/). Please take note that as of January 2023 "
#~ "debugging only works on the CLion version of the JetBrains IDEA suite."
#~ msgstr ""
#~ "Algumas pessoas tamb√©m gostam de usar a fam√≠lia de IDEs [JetBrains]"
#~ "(https://www.jetbrains.com/clion/), que fazem suas pr√≥prias an√°lises, mas "
#~ "t√™m suas pr√≥prias vantagens e desvantagens. Se voc√™ preferi-las, pode "
#~ "instalar o [Plugin Rust](https://www.jetbrains.com/rust/). Observe que, a "
#~ "partir de Janeiro de 2023, a depura√ß√£o funciona apenas na vers√£o CLion do "
#~ "pacote JetBrains IDEA."

#~ msgid ""
#~ "Memory management: stack vs heap, manual memory management, scope-based "
#~ "memory management, and garbage collection."
#~ msgstr ""
#~ "Gerenciamento de mem√≥ria: pilha versus heap, gerenciamento de mem√≥ria "
#~ "manual, gerenciamento de mem√≥ria baseado em escopo e _garbage collection_ "
#~ "(coleta de lixo)."

#~ msgid ""
#~ "Ownership: move semantics, copying and cloning, borrowing, and lifetimes."
#~ msgstr ""
#~ "_Ownership_ (posse): sem√¢ntica de _move_, c√≥pia e clonagem, _borrow_ "
#~ "(empr√©stimo) e _lifetime_ (tempo de vida)."

#~ msgid ""
#~ "The idea for the first day is to show _just enough_ of Rust to be able to "
#~ "speak about the famous borrow checker. The way Rust handles memory is a "
#~ "major feature and we should show students this right away."
#~ msgstr ""
#~ "A ideia para o primeiro dia √© mostrar _apenas o suficiente_ de Rust para "
#~ "poder falar sobre o famoso _borrow checker_ (verificador de empr√©stimos). "
#~ "A maneira como o Rust lida com a mem√≥ria √© uma caracter√≠stica importante "
#~ "e devemos mostrar isso aos alunos imediatamente."

#~ msgid ""
#~ "If you're teaching this in a classroom, this is a good place to go over "
#~ "the schedule. We suggest splitting the day into two parts (following the "
#~ "slides):"
#~ msgstr ""
#~ "Se voc√™ estiver ensinando isso em uma sala de aula, este √© um bom lugar "
#~ "para repassar o cronograma. Sugerimos dividir o dia em duas partes "
#~ "(seguindo os slides):"

#~ msgid "Morning: 9:00 to 12:00,"
#~ msgstr "Manh√£: 9h √†s 12h,"

#~ msgid "Afternoon: 13:00 to 16:00."
#~ msgstr "Tarde: 13h √†s 16h."

#~ msgid ""
#~ "You can of course adjust this as necessary. Please make sure to include "
#~ "breaks, we recommend a break every hour!"
#~ msgstr ""
#~ "√â claro que voc√™ pode ajustar isso conforme necess√°rio. Certifique-se de "
#~ "incluir pausas, recomendamos uma a cada hora!"

#~ msgid "Here is a small example program in Rust:"
#~ msgstr "Aqui est√° um pequeno programa de exemplo em Rust:"

#~ msgid "// Program entry point\n"
#~ msgstr "// Ponto de entrada do programa\n"

#~ msgid "// Mutable variable binding\n"
#~ msgstr "// Atribui√ß√£o de uma vari√°vel mut√°vel\n"

#~ msgid "\"{x}\""
#~ msgstr "\"{x}\""

#~ msgid "// Macro for printing, like printf\n"
#~ msgstr "// Macro para escrever na tela, como printf\n"

#~ msgid "\" -> {x}\""
#~ msgstr "\" -> {x}\""

#~ msgid ""
#~ "The code implements the Collatz conjecture: it is believed that the loop "
#~ "will always end, but this is not yet proved. Edit the code and play with "
#~ "different inputs."
#~ msgstr ""
#~ "O c√≥digo implementa a conjectura de Collatz: acredita-se que o loop "
#~ "sempre termina, mas isso ainda n√£o est√° provado. Edite o c√≥digo e tente "
#~ "diferentes entradas."

#~ msgid ""
#~ "Explain that all variables are statically typed. Try removing `i32` to "
#~ "trigger type inference. Try with `i8` instead and trigger a runtime "
#~ "integer overflow."
#~ msgstr ""
#~ "Explique que todas as vari√°veis tipadas estaticamente. Tente remover "
#~ "`i32` para acionar a infer√™ncia de tipo. Em vez disso, tente com `i8` e "
#~ "cause um estouro de n√∫mero inteiro (_integer overflow_) em tempo de "
#~ "execu√ß√£o."

#~ msgid "Change `let mut x` to `let x`, discuss the compiler error."
#~ msgstr "Altere `let mut x` para `let x`, discuta o erro do compilador."

#~ msgid ""
#~ "Show how `print!` gives a compilation error if the arguments don't match "
#~ "the format string."
#~ msgstr ""
#~ "Mostre como `print!` cause um erro de compila√ß√£o se os argumentos n√£o "
#~ "corresponderem √† string de formato."

#~ msgid ""
#~ "Show how you need to use `{}` as a placeholder if you want to print an "
#~ "expression which is more complex than just a single variable."
#~ msgstr ""
#~ "Mostre como voc√™ precisa usar `{}` como um espa√ßo reservado se quiser "
#~ "imprimir uma express√£o que seja mais complexa do que apenas uma √∫nica "
#~ "vari√°vel."

#~ msgid ""
#~ "Show the students the standard library, show them how to search for `std::"
#~ "fmt` which has the rules of the formatting mini-language. It's important "
#~ "that the students become familiar with searching in the standard library."
#~ msgstr ""
#~ "Mostre aos alunos a biblioteca padr√£o (_standard library_), mostre como "
#~ "pesquisar `std::fmt`, o qual possui as regras da mini-linguagem de "
#~ "formata√ß√£o. √â importante que os alunos se familiarizem com pesquisas na "
#~ "biblioteca padr√£o."

#~ msgid ""
#~ "In a shell `rustup doc std::fmt` will open a browser on the local std::"
#~ "fmt documentation"
#~ msgstr ""
#~ "Em um shell `rustup doc std::fmt` abrir√° um navegador na documenta√ß√£o "
#~ "std::fmt local."

#~ msgid "Compile time memory safety."
#~ msgstr "Seguran√ßa de mem√≥ria em tempo de compila√ß√£o."

#~ msgid "Lack of undefined runtime behavior."
#~ msgstr "Sem comportamento indefinido em tempo de execu√ß√£o."

#~ msgid "Modern language features."
#~ msgstr "Recursos de linguagem de programa√ß√£o modernas."

#~ msgid "Static memory management at compile time:"
#~ msgstr "Gerenciamento de mem√≥ria est√°tica em tempo de compila√ß√£o:"

#~ msgid "No memory leaks (_mostly_, see notes)."
#~ msgstr "Sem vazamentos de mem√≥ria (_quase_, veja as notas)."

#~ msgid ""
#~ "It is possible to produce memory leaks in (safe) Rust. Some examples are:"
#~ msgstr ""
#~ "√â poss√≠vel produzir vazamentos de mem√≥ria no Rust (seguro). Alguns "
#~ "exemplos s√£o:"

#~ msgid ""
#~ "You can use [`Box::leak`](https://doc.rust-lang.org/std/boxed/struct.Box."
#~ "html#method.leak) to leak a pointer. A use of this could be to get "
#~ "runtime-initialized and runtime-sized static variables"
#~ msgstr ""
#~ "Voc√™ pode usar [`Box::leak`](https://doc.rust-lang.org/std/boxed/struct."
#~ "Box.html#method.leak) para vazar um ponteiro. Um uso para isso poderia "
#~ "ser para obter vari√°veis est√°ticas inicializadas e dimensionadas em tempo "
#~ "de execu√ß√£o"

#~ msgid ""
#~ "You can use [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn."
#~ "forget.html) to make the compiler \"forget\" about a value (meaning the "
#~ "destructor is never run)."
#~ msgstr ""
#~ "Voc√™ pode usar [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn."
#~ "forget.html) para fazer o compilador \"esquecer\" sobre um valor (o que "
#~ "significa que o destrutor nunca √© executado)."

#~ msgid ""
#~ "You can also accidentally create a [reference cycle](https://doc.rust-"
#~ "lang.org/book/ch15-06-reference-cycles.html) with `Rc` or `Arc`."
#~ msgstr ""
#~ "Voc√™ tamb√©m pode criar acidentalmente uma [refer√™ncia c√≠clica](https://"
#~ "doc.rust-lang.org/book/ch15-06-reference-cycles.html) com `Rc` ou `Arc`."

#~ msgid ""
#~ "In fact, some will consider infinitely populating a collection a memory "
#~ "leak and Rust does not protect from those."
#~ msgstr ""
#~ "Na verdade, alguns considerar√£o que preencher infinitamente uma cole√ß√£o "
#~ "(estruturas de dados) seja um vazamento de mem√≥ria e o Rust n√£o protege "
#~ "disso."

#~ msgid ""
#~ "For the purpose of this course, \"No memory leaks\" should be understood "
#~ "as \"Pretty much no _accidental_ memory leaks\"."
#~ msgstr ""
#~ "Para o prop√≥sito deste curso, \"Sem vazamentos de mem√≥ria\" deve ser "
#~ "entendido como \"Praticamente sem vazamentos de mem√≥ria _acidentais_\"."

#~ msgid "No undefined behavior at runtime:"
#~ msgstr "Nenhum comportamento indefinido em tempo de execu√ß√£o:"

#~ msgid ""
#~ "Integer overflow is defined via the [`overflow-checks`](https://doc.rust-"
#~ "lang.org/rustc/codegen-options/index.html#overflow-checks) compile-time "
#~ "flag. If enabled, the program will panic (a controlled crash of the "
#~ "program), otherwise you get wrap-around semantics. By default, you get "
#~ "panics in debug mode (`cargo build`) and wrap-around in release mode "
#~ "(`cargo build --release`)."
#~ msgstr ""
#~ "O estouro de n√∫meros inteiros √© definido por meio da _flag_ [`overflow-"
#~ "checks`](https://doc.rust-lang.org/rustc/codegen-options/index."
#~ "html#overflow-checks) em tempo de compila√ß√£o. Se habilitada, o programa "
#~ "causar√° um p√¢nico (uma falha controlada do programa). Caso contr√°rio, "
#~ "ser√° usada a sem√¢ntica _wrap-around_. Por padr√£o, voc√™ obt√©m p√¢nicos em "
#~ "modo de depura√ß√£o (`cargo build`) e _wrap-around_ em modo de produ√ß√£o "
#~ "(`cargo build --release`)."

#~ msgid ""
#~ "Bounds checking cannot be disabled with a compiler flag. It can also not "
#~ "be disabled directly with the `unsafe` keyword. However, `unsafe` allows "
#~ "you to call functions such as `slice::get_unchecked` which does not do "
#~ "bounds checking."
#~ msgstr ""
#~ "A verifica√ß√£o de limites (\"_bounds checking_\") n√£o pode ser desativada "
#~ "com uma _flag_ do compilador. Ela tamb√©m n√£o pode ser desativada "
#~ "diretamente com a palavra-chave `unsafe`. No entanto, `unsafe` permite "
#~ "que voc√™ chame fun√ß√µes como `slice::get_unchecked` que n√£o faz "
#~ "verifica√ß√£o de limites."

#~ msgid "Rust is built with all the experience gained in the last decades."
#~ msgstr ""
#~ "O Rust √© constru√≠do com toda a experi√™ncia adquirida nas √∫ltimas d√©cadas."

#~ msgid "Language Features"
#~ msgstr "Caracter√≠sticas da Linguagem"

#~ msgid "Tooling"
#~ msgstr "Ferramentas"

#~ msgid ""
#~ "Zero-cost abstractions, similar to C++, means that you don't have to "
#~ "'pay' for higher-level programming constructs with memory or CPU. For "
#~ "example, writing a loop using `for` should result in roughly the same low "
#~ "level instructions as using the `.iter().fold()` construct."
#~ msgstr ""
#~ "Abstra√ß√µes de custo zero, semelhantes ao C++, significa que voc√™ n√£o "
#~ "precisa 'pagar' por constru√ß√µes de programa√ß√£o de alto n√≠vel com mem√≥ria "
#~ "ou CPU. Por exemplo, escrever um loop usando `for` deve resultar "
#~ "aproximadamente no mesmo n√≠vel de instru√ß√µes de baixo n√≠vel quanto usar a "
#~ "constru√ß√£o `.iter().fold()`."

#~ msgid ""
#~ "It may be worth mentioning that Rust enums are 'Algebraic Data Types', "
#~ "also known as 'sum types', which allow the type system to express things "
#~ "like `Option<T>` and `Result<T, E>`."
#~ msgstr ""
#~ "Pode valer a pena mencionar que Rust enums s√£o 'Tipos de Dados "
#~ "Alg√©bricos' ('_Algebraic Data Types_'), tamb√©m conhecidos como 'tipos de "
#~ "soma', que permitem que o sistema de tipos expresse coisas como "
#~ "`Option<T>` e `Result<T, E>`."

#~ msgid ""
#~ "Remind people to read the errors --- many developers have gotten used to "
#~ "ignore lengthy compiler output. The Rust compiler is significantly more "
#~ "talkative than other compilers. It will often provide you with "
#~ "_actionable_ feedback, ready to copy-paste into your code."
#~ msgstr ""
#~ "Lembre as pessoas de lerem os erros --- muitos desenvolvedores se "
#~ "acostumaram ignore as longas mensagens do compilador. O compilador Rust √© "
#~ "significativamente mais \"verbal\" do que outros compiladores. Muitas "
#~ "vezes, ele lhe fornecer√° sugest√µes _pr√°ticas_, prontas para copiar e "
#~ "colar em seu c√≥digo."

#~ msgid ""
#~ "The Rust standard library is small compared to languages like Java, "
#~ "Python, and Go. Rust does not come with several things you might consider "
#~ "standard and essential:"
#~ msgstr ""
#~ "A biblioteca padr√£o do Rust (_Rust standard library_) √© pequena comparada "
#~ "a linguagens como Java, Python e Go. Rust n√£o vem com v√°rias coisas que "
#~ "voc√™ pode considerar padr√£o e essencial:"

#~ msgid "a random number generator, but see [rand](https://docs.rs/rand/)."
#~ msgstr ""
#~ "um gerador de n√∫meros aleat√≥rios, mas veja [rand](https://docs.rs/rand/)."

#~ msgid "support for SSL or TLS, but see [rusttls](https://docs.rs/rustls/)."
#~ msgstr ""
#~ "suporte para SSL ou TLS, mas consulte [rusttls](https://docs.rs/rustls/)."

#~ msgid "support for JSON, but see [serde_json](https://docs.rs/serde_json/)."
#~ msgstr ""
#~ "suporte para JSON, mas consulte [serde_json](https://docs.rs/serde_json/)."

#~ msgid ""
#~ "The reasoning behind this is that functionality in the standard library "
#~ "cannot go away, so it has to be very stable. For the examples above, the "
#~ "Rust community is still working on finding the best solution --- and "
#~ "perhaps there isn't a single \"best solution\" for some of these things."
#~ msgstr ""
#~ "O racioc√≠nio por tr√°s disso √© que funcionalidade na biblioteca padr√£o n√£o "
#~ "pode ser descartada, portanto ela tem que ser muito est√°vel. Para os "
#~ "exemplos acima, a comunidade do Rust ainda est√° trabalhando para "
#~ "encontrar a melhor solu√ß√£o --- e talvez n√£o exista uma √∫nica \"melhor "
#~ "solu√ß√£o\" para algumas dessas coisas."

#~ msgid ""
#~ "Rust comes with a built-in package manager in the form of Cargo and this "
#~ "makes it trivial to download and compile third-party crates. A "
#~ "consequence of this is that the standard library can be smaller."
#~ msgstr ""
#~ "Rust vem com um gerenciador de pacotes embutido na forma de Cargo e isso "
#~ "torna trivial baixar e compilar _crates_ de terceiros. Uma consequ√™ncia "
#~ "disso √© que a biblioteca padr√£o pode ser menor."

#~ msgid ""
#~ "Discovering good third-party crates can be a problem. Sites like <https://"
#~ "lib.rs/> help with this by letting you compare health metrics for crates "
#~ "to find a good and trusted one."
#~ msgstr ""
#~ "Descobrir bons _crates_ de terceiros pode ser um problema. Sites como "
#~ "<https://lib.rs/> ajudam com isso, permitindo que voc√™ compare m√©tricas "
#~ "de _crates_ para encontrar um bom e confi√°vel."

#~ msgid ""
#~ "[rust-analyzer](https://rust-analyzer.github.io/) is a well supported LSP "
#~ "implementation used in major IDEs and text editors."
#~ msgstr ""
#~ "[rust-analyzer](https://rust-analyzer.github.io/) √© uma implementa√ß√£o LSP "
#~ "bem suportada usada pelas principais IDEs e editores de texto."

#~ msgid "`\"foo\"`, `\"two\\nlines\"`"
#~ msgstr "`\"foo\"`, `\"two\\nlines\"`"

#~ msgid "r#\"<a href=\"link.html\">link</a>\"#"
#~ msgstr "r#\"<a href=\"link.html\">link</a>\"#"

#~ msgid "\"<a href=\\\"link.html\\\">link</a>\""
#~ msgstr "\"<a href=\\\"link.html\\\">link</a>\""

#~ msgid "b\"abc\""
#~ msgstr "b\"abc\""

#~ msgid "\"1st index: {}\""
#~ msgstr "\"1¬∫ √≠ndice: {}\""

#~ msgid "\"2nd index: {}\""
#~ msgstr "\"2¬∫ √≠ndice: {}\""

#~ msgid "Like C++, Rust has references:"
#~ msgstr "Como C++, o Rust tem refer√™ncias:"

#~ msgid "Some notes:"
#~ msgstr "Algumas notas:"

#~ msgid ""
#~ "We must dereference `ref_x` when assigning to it, similar to C and C++ "
#~ "pointers."
#~ msgstr ""
#~ "Devemos desreferenciar `ref_x` ao atribu√≠-lo um valor, semelhante √† "
#~ "ponteiros em C e C++."

#~ msgid ""
#~ "References that are declared as `mut` can be bound to different values "
#~ "over their lifetime."
#~ msgstr ""
#~ "As refer√™ncias que s√£o declaradas como `mut` podem ser vinculadas a "
#~ "diferentes valores ao longo de seu tempo de vida."

#~ msgid "A reference is said to \"borrow\" the value it refers to."
#~ msgstr ""
#~ "Diz-se que uma refer√™ncia \"pega emprestado\" o valor a que se refere."

#~ msgid ""
#~ "Rust is tracking the lifetimes of all references to ensure they live long "
#~ "enough."
#~ msgstr ""
#~ "Rust est√° rastreando os tempos de vida de todas as refer√™ncias para "
#~ "garantir que elas durem o suficiente."

#~ msgid "`String` vs `str`"
#~ msgstr "`String` vs `str`"

#~ msgid "We can now understand the two string types in Rust:"
#~ msgstr "Agora podemos entender os dois tipos de strings em Rust:"

#~ msgid ""
#~ "You can borrow `&str` slices from `String` via `&` and optionally range "
#~ "selection."
#~ msgstr ""
#~ "Voc√™ pode emprestar _slices_ `&str` de `String` atrav√©s do operador `&` "
#~ "e, opcionalmente, selecionar um _range_ (\"intervalo\")."

#~ msgid ""
#~ "A Rust version of the famous [FizzBuzz](https://en.wikipedia.org/wiki/"
#~ "Fizz_buzz) interview question:"
#~ msgstr ""
#~ "Uma vers√£o em Rust da famosa pergunta de entrevistas [FizzBuzz](https://"
#~ "en.wikipedia.org/wiki/Fizz_buzz):"

#~ msgid "\"fizz\""
#~ msgstr "\"fizz\""

#~ msgid "\"buzz\""
#~ msgstr "\"buzz\""

#~ msgid "\"{n}\""
#~ msgstr "\"{n}\""

#~ msgid "\"{fizz}{buzz}\""
#~ msgstr "\"{fizz}{buzz}\""

#~ msgid ""
#~ "We refer in `main` to a function written below. Neither forward "
#~ "declarations nor headers are necessary. "
#~ msgstr ""
#~ "Nos referimos em `main` a uma fun√ß√£o escrita abaixo. Nem declara√ß√µes "
#~ "pr√©vias e nem cabe√ßalhos s√£o necess√°rios."

#~ msgid ""
#~ "The range expression in the `for` loop in `print_fizzbuzz_to()` contains "
#~ "`=n`, which causes it to include the upper bound."
#~ msgstr ""
#~ "A express√£o de intervalo no loop `for` em `imprimir_fizzbuzz_para()` "
#~ "cont√©m `=n`, o que faz com que inclua o limite superior."

#~ msgid ""
#~ "All language items in Rust can be documented using special `///` syntax."
#~ msgstr ""
#~ "Todos os itens da linguagem podem ser documentados com a sintaxe especial "
#~ "`///`."

#~ msgid "// Corner case, early return\n"
#~ msgstr "// Caso excepcional, retorne antes\n"

#~ msgid ""
#~ "This course does not include rustdoc on slides, just to save space, but "
#~ "in real code they should be present."
#~ msgstr ""
#~ "Este curso n√£o inclui o rustdoc nos slides, apenas para economizar "
#~ "espa√ßo, mas em c√≥digo real eles devem estar presentes."

#~ msgid ""
#~ "Inner doc comments are discussed later (in the page on modules) and need "
#~ "not be addressed here."
#~ msgstr ""
#~ "Os coment√°rios internos do documento s√£o discutidos posteriormente (na "
#~ "p√°gina sobre m√≥dulos) e n√£o precisam ser ser abordados aqui."

#~ msgid ""
#~ "Rustdoc comments can contain code snippets that we can run and test using "
#~ "`cargo test`. We will discuss these tests in the [Testing section](../"
#~ "testing/doc-tests.html)."
#~ msgstr ""
#~ "Os coment√°rios do Rustdoc podem conter trechos de c√≥digo-fonte, que podem "
#~ "ser executados e testados por meio de `cargo test`. N√≥s discutiremos "
#~ "estes testes na [se√ß√£o de Testes](../testing/doc-tests.html)."

#~ msgid ""
#~ "Methods are functions associated with a type. The `self` argument of a "
#~ "method is an instance of the type it is associated with:"
#~ msgstr ""
#~ "M√©todos s√£o fun√ß√µes associadas a um tipo espec√≠fico. O primeiro argumento "
#~ "(`self`) de um m√©todo √© uma inst√¢ncia do tipo ao qual est√° associado:"

#~ msgid "\"old area: {}\""
#~ msgstr "\"area antiga: {}\""

#~ msgid "\"new area: {}\""
#~ msgstr "\"nova area: {}\""

#~ msgid ""
#~ "We will look much more at methods in today's exercise and in tomorrow's "
#~ "class."
#~ msgstr ""
#~ "Veremos muito mais sobre m√©todos no exerc√≠cio de hoje e na aula de amanh√£."

#, fuzzy
#~ msgid ""
#~ "Add a static method called `Rectangle::new` and call this from `main`:"
#~ msgstr ""
#~ "Adicione um m√©todo est√°tico chamado `Retangulo::new` e o chame a partir "
#~ "de `main`:"

#, fuzzy
#~ msgid ""
#~ "While _technically_, Rust does not have custom constructors, static "
#~ "methods are commonly used to initialize structs (but don't have to). The "
#~ "actual constructor, `Rectangle { width, height }`, could be called "
#~ "directly. See the [Rustnomicon](https://doc.rust-lang.org/nomicon/"
#~ "constructors.html)."
#~ msgstr ""
#~ "Enquanto _tecnicamente_, o Rust n√£o possui construtores customizados, "
#~ "m√©todos est√°ticos s√£o normalmente usados para inicializar _structs_ "
#~ "(embora n√£o sejam necess√°rios). The construtor propriamente dito, "
#~ "`Retangulo { largura, altura }`, poderia ser chamado diretamente. Veja o "
#~ "[Rustnomicon](https://doc.rust-lang.org/nomicon/constructors.html)."

#, fuzzy
#~ msgid ""
#~ "Add a `Rectangle::square(width: u32)` constructor to illustrate that such "
#~ "static methods can take arbitrary parameters."
#~ msgstr ""
#~ "Adicione um construtor `Retangulo::novo_quadrado(largura: u32)` para "
#~ "demonstrar que tais m√©todos est√°ticos podem ter par√¢metros arbitr√°rios."

#~ msgid "Function Overloading"
#~ msgstr "Sobrecarga de Fun√ß√µes"

#~ msgid "Overloading is not supported:"
#~ msgstr "Sobrecarga n√£o √© suportada:"

#~ msgid "Always takes a fixed number of parameters."
#~ msgstr "Sempre tem um n√∫mero fixo de par√¢metros."

#~ msgid "Default values are not supported:"
#~ msgstr "Valores padr√£o n√£o s√£o suportados:"

#~ msgid "All call sites have the same number of arguments."
#~ msgstr "Todos as chamadas t√™m o mesmo n√∫mero de argumentos."

#~ msgid "Macros are sometimes used as an alternative."
#~ msgstr "√Äs vezes macros s√£o utilizadas como alternativa."

#~ msgid "However, function parameters can be generic:"
#~ msgstr "No entanto, os par√¢metros da fun√ß√£o podem ser tipos gen√©ricos:"

#~ msgid "\"coin toss: {}\""
#~ msgstr "\"lance da moeda: {}\""

#~ msgid "\"heads\""
#~ msgstr "\"cara\""

#~ msgid "\"tails\""
#~ msgstr "\"coroa\""

#~ msgid ""
#~ "When using generics, the standard library's `Into<T>` can provide a kind "
#~ "of limited polymorphism on argument types. We will see more details in a "
#~ "later section."
#~ msgstr ""
#~ "Ao usar tipos gen√©ricos, o `Into<T>` da biblioteca padr√£o pode fornecer "
#~ "um tipo de polimorfismo limitado nos tipos de argumento. Veremos mais "
#~ "detalhes em uma se√ß√£o posterior."

#~ msgid "Day 1: Morning Exercises"
#~ msgstr "Dia 1: Exerc√≠cios Matinais"

#~ msgid "In these exercises, we will explore two parts of Rust:"
#~ msgstr "Nestes exerc√≠cios, vamos explorar duas partes do Rust:"

#~ msgid "Implicit conversions between types."
#~ msgstr "Convers√µes impl√≠citas entre tipos."

#~ msgid "Arrays and `for` loops."
#~ msgstr "Matrizes (_Arrays_) e _loops_ (la√ßos) `for`."

#~ msgid "A few things to consider while solving the exercises:"
#~ msgstr "Algumas coisas a considerar ao resolver os exerc√≠cios:"

#~ msgid ""
#~ "Use a local Rust installation, if possible. This way you can get auto-"
#~ "completion in your editor. See the page about [Using Cargo](../../cargo."
#~ "md) for details on installing Rust."
#~ msgstr ""
#~ "Se poss√≠vel, use uma instala√ß√£o local do Rust. Desta forma, voc√™ pode "
#~ "obter preenchimento autom√°tico em seu editor. Veja a p√°gina sobre "
#~ "[Utiliza√ß√£o do Cargo](../../cargo.md) para detalhes sobre instala√ß√£o do "
#~ "Rust."

#~ msgid "Alternatively, use the Rust Playground."
#~ msgstr "Alternativamente, utilize o Rust Playground."

#~ msgid ""
#~ "The code snippets are not editable on purpose: the inline code snippets "
#~ "lose their state if you navigate away from the page."
#~ msgstr ""
#~ "Os trechos de c√≥digo n√£o s√£o edit√°veis de prop√≥sito: os trechos de c√≥digo "
#~ "embutidos perdem seu estado se voc√™ sair da p√°gina."

#~ msgid ""
#~ "Rust will not automatically apply _implicit conversions_ between types "
#~ "([unlike C++](https://en.cppreference.com/w/cpp/language/"
#~ "implicit_conversion)). You can see this in a program like this:"
#~ msgstr ""
#~ "Rust n√£o aplicar√° automaticamente _convers√µes impl√≠citas_ entre os tipos "
#~ "([ao contr√°rio de C++](https://en.cppreference.com/w/cpp/language/"
#~ "implicit_conversion)). Voc√™ pode ver isso em um programa como este:"

#~ msgid "\"{x} * {y} = {}\""
#~ msgstr "\"{x} * {y} = {}\""

#~ msgid ""
#~ "The Rust integer types all implement the [`From<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.From.html) and [`Into<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.Into.html) traits to let us convert between "
#~ "them. The `From<T>` trait has a single `from()` method and similarly, the "
#~ "`Into<T>` trait has a single `into()` method. Implementing these traits "
#~ "is how a type expresses that it can be converted into another type."
#~ msgstr ""
#~ "Todos os tipos inteiros do Rust implementam os _traits_ [`From<T>`]"
#~ "(https://doc.rust-lang.org/std/convert/trait.From.html) e [`Into<T>`]"
#~ "(https://doc.rust-lang.org/std/convert/trait.Into.html) para nos deixar "
#~ "converter entre eles. O trait `From<T>` tem um √∫nico m√©todo `from()` e da "
#~ "mesma forma, o trait `Into<T>` tem um √∫nico m√©todo `into()`. A "
#~ "implementa√ß√£o desses traits √© como um tipo expressa que pode ser "
#~ "convertido em outro tipo."

#~ msgid ""
#~ "The standard library has an implementation of `From<i8> for i16`, which "
#~ "means that we can convert a variable `x` of type `i8` to an `i16` by "
#~ "calling  `i16::from(x)`. Or, simpler, with `x.into()`, because `From<i8> "
#~ "for i16` implementation automatically create an implementation of "
#~ "`Into<i16> for i8`."
#~ msgstr ""
#~ "A biblioteca padr√£o tem uma implementa√ß√£o de `From<i8> for i16`, o que "
#~ "significa que podemos converter uma vari√°vel `x` do tipo `i8` para um "
#~ "`i16` chamando `i16::from(x)`. Ou, mais simples, com `x.into()`, porque a "
#~ "implementa√ß√£o `From<i8> for i16` cria automaticamente uma implementa√ß√£o "
#~ "de `Into<i16> for i8`."

#~ msgid ""
#~ "The same applies for your own `From` implementations for your own types, "
#~ "so it is sufficient to only implement `From` to get a respective `Into` "
#~ "implementation automatically."
#~ msgstr ""
#~ "O mesmo se aplica √†s suas pr√≥prias implementa√ß√µes de `From` para seus "
#~ "pr√≥prios tipos, logo √© suficiente implementar apenas `From` para obter "
#~ "uma respectiva implementa√ß√£o `Into` automaticamente."

#~ msgid "Execute the above program and look at the compiler error."
#~ msgstr "Execute o programa acima e observe o erro de compila√ß√£o."

#~ msgid "Update the code above to use `into()` to do the conversion."
#~ msgstr ""
#~ "Atualize o c√≥digo acima para utilizar `into()` para fazer a convers√£o."

#~ msgid ""
#~ "Change the types of `x` and `y` to other things (such as `f32`, `bool`, "
#~ "`i128`) to see which types you can convert to which other types. Try "
#~ "converting small types to big types and the other way around. Check the "
#~ "[standard library documentation](https://doc.rust-lang.org/std/convert/"
#~ "trait.From.html) to see if `From<T>` is implemented for the pairs you "
#~ "check."
#~ msgstr ""
#~ "Mude os tipos de `x` e `y` para outros tipos (como `f32`, `bool`, `i128`) "
#~ "para ver quais tipos voc√™ pode converter para quais outros tipos. "
#~ "Experimente converter tipos pequenos em tipos grandes e vice-versa. "
#~ "Verifique a [documenta√ß√£o da biblioteca padr√£o](https://doc.rust-lang.org/"
#~ "std/convert/trait.From.html) para ver se `From<T>` est√° implementado para "
#~ "os pares que voc√™ verificar."

#~ msgid "Arrays and `for` Loops"
#~ msgstr "Matrizes (_Arrays_) e _Loops_ (La√ßos) `for`"

#~ msgid "We saw that an array can be declared like this:"
#~ msgstr "Vimos que uma matriz pode ser declarada assim:"

#~ msgid ""
#~ "You can print such an array by asking for its debug representation with "
#~ "`{:?}`:"
#~ msgstr ""
#~ "Voc√™ pode imprimir tal matriz solicitando sua representa√ß√£o de depura√ß√£o "
#~ "com `{:?}`:"

#~ msgid "\"array: {array:?}\""
#~ msgstr "\"matriz: {array:?}\""

#~ msgid ""
#~ "Rust lets you iterate over things like arrays and ranges using the `for` "
#~ "keyword:"
#~ msgstr ""
#~ "Rust permite iterar em coisas como matrizes e _ranges_ (faixas ou "
#~ "intervalos) usando a palavra-chave `for`:"

#~ msgid "\"Iterating over array:\""
#~ msgstr "\"Iterando sobre a matriz:\""

#~ msgid "\" {n}\""
#~ msgstr "\" {n}\""

#~ msgid "\"Iterating over range:\""
#~ msgstr "\"Iterando sobre um range:\""

#~ msgid "\" {}\""
#~ msgstr "\" {}\""

#~ msgid "Bonus Question"
#~ msgstr "Pergunta B√¥nus"

#~ msgid ""
#~ "Could you use `&[i32]` slices instead of hard-coded 3 √ó 3 matrices for "
#~ "your argument and return types? Something like `&[&[i32]]` for a two-"
#~ "dimensional slice-of-slices. Why or why not?"
#~ msgstr ""
#~ "Voc√™ poderia usar slices `&[i32]` em vez de matrizes 3 √ó 3 fixas no "
#~ "c√≥digo para o seu argumento e tipos de retorno? Algo como `&[&[i32]]` "
#~ "para um slice-de-slices bidimensional. Por que sim ou por que n√£o?"

#~ msgid ""
#~ "See the [`ndarray` crate](https://docs.rs/ndarray/) for a production "
#~ "quality implementation."
#~ msgstr ""
#~ "Veja o crate [`ndarray`](https://docs.rs/ndarray/) para uma implementa√ß√£o "
#~ "de  produ√ß√£o."

#~ msgid ""
#~ "The solution and the answer to the bonus section are available in the  "
#~ "[Solution](solutions-morning.md#arrays-and-for-loops) section."
#~ msgstr ""
#~ "A solu√ß√£o e a resposta para a se√ß√£o de b√¥nus est√£o dispon√≠veis na Se√ß√£o "
#~ "[Solu√ß√µes](solutions-morning.md#arrays-and-for-loops)."

#~ msgid ""
#~ "The use of the reference `&array` within `for n in &array` is a subtle "
#~ "preview of issues of ownership that will come later in the afternoon."
#~ msgstr ""
#~ "O uso da refer√™ncia `&matriz` em `for n in &matriz` √© uma pr√©via sutil "
#~ "das quest√µes de propriedade que surgir√£o √† tarde."

#~ msgid "Without the `&`..."
#~ msgstr "Sem o `&`..."

#~ msgid ""
#~ "The loop would have been one that consumes the array.  This is a change "
#~ "[introduced in the 2021 Edition](https://doc.rust-lang.org/edition-guide/"
#~ "rust-2021/IntoIterator-for-arrays.html)."
#~ msgstr ""
#~ "O loop teria sido o que consome a matriz. Esta √© uma mudan√ßa [introduzida "
#~ "na Edi√ß√£o de 2021](https://doc.rust-lang.org/edition-guide/rust-2021/"
#~ "IntoIterator-for-arrays.html)."

#~ msgid ""
#~ "An implicit array copy would have occured.  Since `i32` is a copy type, "
#~ "then `[i32; 3]` is also a copy type."
#~ msgstr ""
#~ "Uma c√≥pia impl√≠cita da matriz teria ocorrido. Como `i32` √© um tipo de "
#~ "c√≥pia (_copy type_), ent√£o `[i32; 3]` tamb√©m √© um tipo de c√≥pia."

#~ msgid ""
#~ "Due to type inference the `i32` is optional. We will gradually show the "
#~ "types less and less as the course progresses."
#~ msgstr ""
#~ "Devido √† infer√™ncia de tipos, o `i32` √© opcional. Gradualmente "
#~ "mostraremos os tipos cada vez menos √† medida que o curso progride."

#~ msgid "\"u32: {x}\""
#~ msgstr "\"u32: {x}\""

#~ msgid "// takes_u32(y);\n"
#~ msgstr "// recebe_u32(y);\n"

#~ msgid ""
#~ "The following code tells the compiler to copy into a certain generic "
#~ "container without the code ever explicitly specifying the contained type, "
#~ "using `_` as a placeholder:"
#~ msgstr ""
#~ "O c√≥digo a seguir informa ao compilador para copiar para um determinado "
#~ "cont√™iner gen√©rico sem que o c√≥digo especifique explicitamente o tipo "
#~ "contido, usando `_` como _placeholder_:"

#~ msgid "\"vv: {vv:?}\""
#~ msgstr "\"vv: {vv:?}\""

#~ msgid ""
#~ "[`collect`](https://doc.rust-lang.org/stable/std/iter/trait.Iterator."
#~ "html#method.collect) relies on [`FromIterator`](https://doc.rust-lang.org/"
#~ "std/iter/trait.FromIterator.html), which [`HashSet`](https://doc.rust-"
#~ "lang.org/std/collections/struct.HashSet.html#impl-FromIterator%3CT%3E-for-"
#~ "HashSet%3CT,+S%3E) implements."
#~ msgstr ""
#~ "[`collect`](https://doc.rust-lang.org/stable/std/iter/trait.Iterator."
#~ "html#method.collect) depende de [`FromIterator`](https://doc.rust-lang."
#~ "org/std/iter/trait.FromIterator.html), que [`HashSet`](https://doc.rust-"
#~ "lang.org/std/collections/struct.HashSet.html#impl-FromIterator%3CT%3E-for-"
#~ "HashSet%3CT,+S%3E) implementa."

#~ msgid "Static and Constant Variables"
#~ msgstr "Vari√°veis Est√°ticas e Constantes"

#~ msgid "\"Digest: {digest:?}\""
#~ msgstr "\"Resumo: {digest:?}\""

#~ msgid ""
#~ "The following code demonstrates why the compiler can't simply reuse "
#~ "memory locations when shadowing an immutable variable in a scope, even if "
#~ "the type does not change."
#~ msgstr ""
#~ "O c√≥digo a seguir demonstra por que o compilador n√£o pode simplesmente "
#~ "reutilizar locais de mem√≥ria ao sobrepor uma vari√°vel imut√°vel em um "
#~ "escopo, mesmo que o tipo n√£o seja alterado."

#~ msgid "\"{a} {b}\""
#~ msgstr "\"{a} {b}\""

#~ msgid "First, let's refresh how memory management works."
#~ msgstr "Primeiro, vamos rever como funciona o gerenciamento de mem√≥ria."

#~ msgid "The Stack vs The Heap"
#~ msgstr "A Pilha (_Stack_) vs O _Heap_"

#~ msgid "Stack and Heap Example"
#~ msgstr "Exemplo de Pilha e _Heap_"

#~ msgid "You allocate and deallocate heap memory yourself."
#~ msgstr "Voc√™ mesmo aloca e desaloca mem√≥ria no heap."

#~ msgid ""
#~ "If not done with care, this can lead to crashes, bugs, security "
#~ "vulnerabilities, and memory leaks."
#~ msgstr ""
#~ "Se isto n√£o for feito com cuidado, travamentos, bugs, vulnerabilidades de "
#~ "seguran√ßa e vazamentos de mem√≥ria podem ocorrer."

#~ msgid "C Example"
#~ msgstr "Exemplo em C"

#~ msgid "You must call `free` on every pointer you allocate with `malloc`:"
#~ msgstr "Voc√™ deve chamar `free` em cada ponteiro que alocar com `malloc`:"

#~ msgid ""
#~ "//\n"
#~ "    // ... lots of code\n"
#~ "    //\n"
#~ msgstr ""
#~ "//\n"
#~ "    // ... v√°rias linhas de c√≥digo\n"
#~ "    //\n"

#~ msgid ""
#~ "Memory is leaked if the function returns early between `malloc` and "
#~ "`free`: the pointer is lost and we cannot deallocate the memory. Worse, "
#~ "freeing the pointer twice, or accessing a freed pointer can lead to "
#~ "exploitable security vulnerabilities."
#~ msgstr ""
#~ "Mem√≥ria √© vazada se a fun√ß√£o retornar mais cedo entre `malloc` e `free`: "
#~ "o ponteiro √© perdido e n√£o podemos liberar a mem√≥ria. Pior ainda, "
#~ "liberando o ponteiro duas vezes, ou acessando um ponteiro j√° liberado "
#~ "pode levar a vulnerabilidades de seguran√ßa."

#~ msgid ""
#~ "Constructors and destructors let you hook into the lifetime of an object."
#~ msgstr ""
#~ "Construtores e destrutores permitem que o tempo de vida de um objeto seja "
#~ "rastreado."

#~ msgid ""
#~ "By wrapping a pointer in an object, you can free memory when the object "
#~ "is destroyed. The compiler guarantees that this happens, even if an "
#~ "exception is raised."
#~ msgstr ""
#~ "Ao envolver um ponteiro em um objeto, voc√™ pode liberar mem√≥ria quando o "
#~ "objeto √© destru√≠do. O compilador garante que isso aconte√ßa, mesmo que uma "
#~ "exce√ß√£o seja lan√ßada."

#~ msgid ""
#~ "This is often called _resource acquisition is initialization_ (RAII) and "
#~ "gives you smart pointers."
#~ msgstr ""
#~ "Isso geralmente √© chamado de _aquisi√ß√£o de recursos √© inicializa√ß√£o_ "
#~ "(_Resource Acquisition Is Initialization_, RAII) e fornece ponteiros "
#~ "inteligentes (_smart pointers_)."

#~ msgid ""
#~ "The `std::unique_ptr` object is allocated on the stack, and points to "
#~ "memory allocated on the heap."
#~ msgstr ""
#~ "O objeto `std::unique_ptr` √© alocado na pilha e aponta para mem√≥ria "
#~ "alocada no heap."

#~ msgid ""
#~ "At the end of `say_hello`, the `std::unique_ptr` destructor will run."
#~ msgstr ""
#~ "No final de `diga_ola`, o destrutor `std::unique_ptr` ser√° executado."

#~ msgid "The destructor frees the `Person` object it points to."
#~ msgstr "O destrutor libera o objeto `Pessoa` para o qual ele aponta."

#~ msgid ""
#~ "Special move constructors are used when passing ownership to a function:"
#~ msgstr ""
#~ "Construtores especiais de movimento (_move_) s√£o usados ao passar o "
#~ "_\"ownership\"_ para uma fun√ß√£o:"

#~ msgid "\"Carla\""
#~ msgstr "\"Carla\""

#~ msgid ""
#~ "An alternative to manual and scope-based memory management is automatic "
#~ "memory management:"
#~ msgstr ""
#~ "Uma alternativa ao gerenciamento de mem√≥ria manual e baseado em escopo √© "
#~ "o gerenciamento autom√°tico de mem√≥ria:"

#~ msgid "The programmer never allocates or deallocates memory explicitly."
#~ msgstr "O programador nunca aloca ou desaloca mem√≥ria explicitamente."

#~ msgid ""
#~ "A garbage collector finds unused memory and deallocates it for the "
#~ "programmer."
#~ msgstr ""
#~ "Um \"coletor de lixo\" (_garbage collector_) encontra mem√≥ria n√£o "
#~ "utilizada e a desaloca para o programador."

#~ msgid "Java Example"
#~ msgstr "Exemplo em Java"

#~ msgid "The `person` object is not deallocated after `sayHello` returns:"
#~ msgstr "O objeto `pessoa` n√£o √© desalocado depois que `digaOla` retorna:"

#~ msgid "Memory Management in Rust"
#~ msgstr "Gerenciamento de Mem√≥ria no Rust"

#~ msgid "Memory management in Rust is a mix:"
#~ msgstr "O gerenciamento de mem√≥ria no Rust √© uma combina√ß√£o:"

#~ msgid "Safe and correct like Java, but without a garbage collector."
#~ msgstr "Seguro e correto como Java, mas sem um coletor de lixo."

#~ msgid ""
#~ "Depending on which abstraction (or combination of abstractions) you "
#~ "choose, can be a single unique pointer, reference counted, or atomically "
#~ "reference counted."
#~ msgstr ""
#~ "Dependendo de qual abstra√ß√£o (ou combina√ß√£o de abstra√ß√µes) voc√™ escolher, "
#~ "pode ser um simples ponteiro √∫nico, refer√™ncia contada ou refer√™ncia "
#~ "atomicamente contada."

#~ msgid "Scope-based like C++, but the compiler enforces full adherence."
#~ msgstr "Baseado em escopo como C++, mas o compilador imp√µe ades√£o total."

#~ msgid ""
#~ "A Rust user can choose the right abstraction for the situation, some even "
#~ "have no cost at runtime like C."
#~ msgstr ""
#~ "Um usu√°rio do Rust pode escolher a abstra√ß√£o certa para a situa√ß√£o, "
#~ "algumas at√© sem custo em tempo de execu√ß√£o como C."

#~ msgid "Rust achieves this by modeling _ownership_ explicitly."
#~ msgstr ""
#~ "O Rust consegue isso modelando o _ownership_ (posse) explicitamente."

#~ msgid ""
#~ "If asked how at this point, you can mention that in Rust this is usually "
#~ "handled by RAII wrapper types such as [Box](https://doc.rust-lang.org/std/"
#~ "boxed/struct.Box.html), [Vec](https://doc.rust-lang.org/std/vec/struct."
#~ "Vec.html), [Rc](https://doc.rust-lang.org/std/rc/struct.Rc.html), or [Arc]"
#~ "(https://doc.rust-lang.org/std/sync/struct.Arc.html). These encapsulate "
#~ "ownership and memory allocation via various means, and prevent the "
#~ "potential errors in C."
#~ msgstr ""
#~ "Neste ponto, se perguntado como, voc√™ pode mencionar que em Rust isso "
#~ "geralmente √© tratado por _wrappers_ (inv√≥lucros) RAII tais como [Box]"
#~ "(https://doc.rust-lang.org/std/boxed/struct.Box.html), [Vec](https://doc."
#~ "rust-lang.org/std/vec/struct.Vec.html), [Rc](https://doc.rust-lang.org/"
#~ "std/rc/struct.Rc.html) ou [Arc](https://doc.rust-lang.org/std/sync/struct."
#~ "Arc.html). Eles encapsulam a propriedade (ownership) e a aloca√ß√£o de "
#~ "mem√≥ria por v√°rios meios e previnem os erros poss√≠veis em C."

#~ msgid ""
#~ "You may be asked about destructors here, the [Drop](https://doc.rust-lang."
#~ "org/std/ops/trait.Drop.html) trait is the Rust equivalent."
#~ msgstr ""
#~ "Aqui voc√™ pode ser perguntado sobre destrutores, o _trait_ [Drop](https://"
#~ "doc.rust-lang.org/std/ops/trait.Drop.html) √© o equivalente em Rust."

#~ msgid "Here is a rough comparison of the memory management techniques."
#~ msgstr ""
#~ "Aqui est√° uma compara√ß√£o aproximada das t√©cnicas de gerenciamento de "
#~ "mem√≥ria."

#~ msgid "Pros of Different Memory Management Techniques"
#~ msgstr "Vantagens de Diferentes T√©cnicas de Gerenciamento de Mem√≥ria"

#~ msgid "Manual like C:"
#~ msgstr "Manual como C:"

#~ msgid "No runtime overhead."
#~ msgstr "Nenhuma sobrecarga em tempo de execu√ß√£o."

#~ msgid "Automatic like Java:"
#~ msgstr "Autom√°tico como Java:"

#~ msgid "Fully automatic."
#~ msgstr "Totalmente automatizado."

#~ msgid "Safe and correct."
#~ msgstr "Seguro e correto."

#~ msgid "Scope-based like C++:"
#~ msgstr "Baseado em escopo como C++:"

#~ msgid "Partially automatic."
#~ msgstr "Parcialmente autom√°tico."

#~ msgid "Compiler-enforced scope-based like Rust:"
#~ msgstr "Baseado em escopo imposto pelo compilador como Rust:"

#~ msgid "Enforced by compiler."
#~ msgstr "Imposto pelo compilador."

#~ msgid "Cons of Different Memory Management Techniques"
#~ msgstr "Desvantagens de Diferentes T√©cnicas de Gerenciamento de Mem√≥ria"

#~ msgid "Use-after-free."
#~ msgstr "Uso ap√≥s a libera√ß√£o (_use-after-free_)."

#~ msgid "Double-frees."
#~ msgstr "Libera√ß√µes duplas (_double-frees_)."

#~ msgid "Memory leaks."
#~ msgstr "Vazamentos de mem√≥ria."

#~ msgid "Garbage collection pauses."
#~ msgstr "Pausas para coleta de lixo."

#~ msgid "Destructor delays."
#~ msgstr "Atrasos na execu√ß√£o de destrutores."

#~ msgid "Complex, opt-in by programmer (on C++)."
#~ msgstr "Complexo, o programador deve optar em utiliz√°-las."

#~ msgid "Circular references can lead to memory leaks"
#~ msgstr "Refer√™ncias circulares podem causar vazamentos de mem√≥ria"

#~ msgid "Potential runtime overhead"
#~ msgstr "Potencial impacto negativo em desempenho em tempo de execu√ß√£o"

#~ msgid "Compiler-enforced and scope-based like Rust:"
#~ msgstr "Imposto pelo compilador e baseado em escopo como Rust:"

#~ msgid "Some upfront complexity."
#~ msgstr "Alguma complexidade inicial."

#~ msgid "Can reject valid programs."
#~ msgstr "Pode rejeitar programas v√°lidos."

#~ msgid "\"x: {}\""
#~ msgstr "\"x: {}\""

#~ msgid "\"y: {}\""
#~ msgstr "\"y: {}\""

#~ msgid "A destructor can run here to free up resources."
#~ msgstr "Um destrutor pode ser executado aqui para liberar recursos."

#~ msgid "There is always _exactly_ one variable binding which owns a value."
#~ msgstr ""
#~ "H√° sempre _exatamente_ uma associa√ß√£o de vari√°vel que possui (\"_owns_\") "
#~ "um valor."

#~ msgid "The heap data from `s1` is reused for `s2`."
#~ msgstr "Os dados no heap de `s1` s√£o reutilizados para `s2`."

#~ msgid ""
#~ "When `s1` goes out of scope, nothing happens (it has been moved from)."
#~ msgstr "Quando `s1` sai do escopo, nada acontece (foi movido dele)."

#~ msgid "Extra Work in Modern C++"
#~ msgstr "Trabalho Extra em C++ Moderno"

#~ msgid "\"p2: {p2:?}\""
#~ msgstr "\"p2: {p2:?}\""

#~ msgid ""
#~ "If students ask about `derive`, it is sufficient to say that this is a "
#~ "way to generate code in Rust at compile time. In this case the default "
#~ "implementations of `Copy` and `Clone` traits are generated."
#~ msgstr ""
#~ "Se os alunos perguntarem sobre `derive`, basta dizer que isto √© uma forma "
#~ "de gerar c√≥digo em Rust em tempo de compila√ß√£o. Nesse caso, as "
#~ "implementa√ß√µes padr√£o dos traits `Copy` e `Clone` s√£o geradas."

#~ msgid "\"{p1:?} + {p2:?} = {p3:?}\""
#~ msgstr "\"{p1:?} + {p2:?} = {p3:?}\""

#, fuzzy
#~ msgid "\"&p.0: {:p}\""
#~ msgstr "\"&p3.0: {:p}\""

#, fuzzy
#~ msgid "\"&p3.0: {:p}\""
#~ msgstr "\"{p1:?} + {p2:?} = {p3:?}\""

#~ msgid "A borrowed value has a _lifetime_:"
#~ msgstr "Um valor emprestado tem um _tempo de vida_ (_lifetime_):"

#~ msgid ""
#~ "The lifetime can be implicit: `add(p1: &Point, p2: &Point) -> Point`."
#~ msgstr ""
#~ "O tempo de vida pode ser impl√≠cito: `add(p1: &Point, p2: &Point) -> "
#~ "Point`."

#~ msgid "Lifetimes can also be explicit: `&'a Point`, `&'document str`."
#~ msgstr ""
#~ "Tempos de vida tamb√©m podem ser expl√≠citos: `&'a Point`, `&'documento "
#~ "str`."

#~ msgid ""
#~ "Read `&'a Point` as \"a borrowed `Point` which is valid for at least the "
#~ "lifetime `a`\"."
#~ msgstr ""
#~ "Leia `&'a Point` como \"um `Point` emprestado que √© v√°lido por pelo menos "
#~ "o tempo de vida `a`\"."

#~ msgid ""
#~ "Lifetimes are always inferred by the compiler: you cannot assign a "
#~ "lifetime yourself."
#~ msgstr ""
#~ "Tempos de vida s√£o sempre inferidos pelo compilador: voc√™ n√£o pode "
#~ "atribuir um tempo de vida voc√™ mesmo."

#~ msgid ""
#~ "In addition to borrowing its arguments, a function can return a borrowed "
#~ "value:"
#~ msgstr ""
#~ "Al√©m de emprestar seus argumentos, uma fun√ß√£o pode retornar um valor "
#~ "emprestado:"

#~ msgid "`'a` is a generic parameter, it is inferred by the compiler."
#~ msgstr "`'a` √© um par√¢metro gen√©rico, ele √© inferido pelo compilador."

#~ msgid "Lifetimes start with `'` and `'a` is a typical default name."
#~ msgstr "Os tempos de vida come√ßam com `'` e `'a` √© um name padr√£o t√≠pico."

#~ msgid ""
#~ "The _at least_ part is important when parameters are in different scopes."
#~ msgstr ""
#~ "A parte _pelo menos_ √© importante quando os par√¢metros est√£o em escopos "
#~ "diferentes."

#~ msgid ""
#~ "Move the declaration of `p2` and `p3` into a new scope (`{ ... }`), "
#~ "resulting in the following code:"
#~ msgstr ""
#~ "Mova a declara√ß√£o de `p2` e `p3` para um novo escopo (`{ ... }`), "
#~ "resultando no seguinte c√≥digo:"

#~ msgid "Note how this does not compile since `p3` outlives `p2`."
#~ msgstr "Note como isto n√£o compila uma vez que `p3` vive mais que `p2`."

#~ msgid ""
#~ "Reset the workspace and change the function signature to `fn "
#~ "left_most<'a, 'b>(p1: &'a Point, p2: &'a Point) -> &'b Point`. This will "
#~ "not compile because the relationship between the lifetimes `'a` and `'b` "
#~ "is unclear."
#~ msgstr ""
#~ "Reinicie o espa√ßo de trabalho e altere a assinatura da fun√ß√£o para `fn "
#~ "left_most<'a, 'b>(p1: &'a Point, p2: &'a Point) -> &'b Point`. Isso n√£o "
#~ "ser√° compilado porque a rela√ß√£o entre os tempos de vida `'a` e `'b` n√£o √© "
#~ "clara."

#~ msgid "Another way to explain it:"
#~ msgstr "Outra forma de explicar:"

#~ msgid ""
#~ "Two references to two values are borrowed by a function and the function "
#~ "returns another reference."
#~ msgstr ""
#~ "Duas refer√™ncias a dois valores s√£o emprestadas por uma fun√ß√£o e a fun√ß√£o "
#~ "retorna outra refer√™ncia."

#~ msgid ""
#~ "It must have come from one of those two inputs (or from a global "
#~ "variable)."
#~ msgstr ""
#~ "Ela deve ter vindo de uma dessas duas entradas (ou de uma vari√°vel "
#~ "global)."

#~ msgid ""
#~ "Which one is it? The compiler needs to know, so at the call site the "
#~ "returned reference is not used for longer than a variable from where the "
#~ "reference came from."
#~ msgstr ""
#~ "De qual? O compilador precisa saber, de forma que no local da chamada a "
#~ "refer√™ncia retornada n√£o seja usada por mais tempo do que uma vari√°vel de "
#~ "onde veio a refer√™ncia."

#~ msgid "Day 1: Afternoon Exercises"
#~ msgstr "Dia 1: Exerc√≠cios da Tarde"

#~ msgid "We will look at two things:"
#~ msgstr "N√≥s iremos ver duas coisas:"

#~ msgid "A small book library,"
#~ msgstr "Uma pequena biblioteca liter√°ria,"

#~ msgid "Iterators and ownership (hard)."
#~ msgstr "Iteradores e _ownership_ (dif√≠cil)."

#~ msgid ""
#~ "We will learn much more about structs and the `Vec<T>` type tomorrow. For "
#~ "now, you just need to know part of its API:"
#~ msgstr ""
#~ "N√≥s iremos aprender muito mais sobre _structs_ e o tipo `Vec<T>` amanh√£. "
#~ "Por hora, voc√™ s√≥ precisa conhecer parte de sua API:"

#~ msgid "\"middle value: {}\""
#~ msgstr "\"valor do meio: {}\""

#~ msgid "\"item: {item}\""
#~ msgstr "\"item: {item}\""

#~ msgid ""
#~ "Use this to model a library's book collection. Copy the code below to "
#~ "<https://play.rust-lang.org/> and update the types to make it compile:"
#~ msgstr ""
#~ "Use isto para modelar uma cole√ß√£o de livros de uma biblioteca. Copie o "
#~ "c√≥digo abaixo para <https://play.rust-lang.org/> e atualize os tipos para "
#~ "compilar:"

#~ msgid "// This is a constructor, used below.\n"
#~ msgstr "// Este √© um construtor, utilizado abaixo.\n"

#~ msgid ""
#~ "// Implement the methods below. Update the `self` parameter to\n"
#~ "// indicate the method's required level of ownership over the object:\n"
#~ "//\n"
#~ "// - `&self` for shared read-only access,\n"
#~ "// - `&mut self` for unique and mutable access,\n"
#~ "// - `self` for unique access by value.\n"
#~ msgstr ""
#~ "// Implemente os m√©todos abaixo. Atualize o par√¢metro `self` para\n"
#~ "// indicar o n√≠vel requerido de ownership sobre o objeto:\n"
#~ "//\n"
#~ "// - `&self` para acesso compartilhado de apenas leitura,\n"
#~ "// - `&mut self` para acesso mut√°vel exclusivo,\n"
#~ "// - `self` para acesso exclusivo por valor.\n"

#~ msgid "\"Initialize and return a `Library` value\""
#~ msgstr "\"Inicialize e retorne um valor `Biblioteca`\""

#~ msgid ""
#~ "//fn len(self) -> usize {\n"
#~ "    //    todo!(\"Return the length of `self.books`\")\n"
#~ "    //}\n"
#~ msgstr ""
#~ "//fn tamanho(self) -> usize {\n"
#~ "    //    todo!(\"Retorne o tamanho de `self.livros`\")\n"
#~ "    //}\n"

#~ msgid ""
#~ "//fn is_empty(self) -> bool {\n"
#~ "    //    todo!(\"Return `true` if `self.books` is empty\")\n"
#~ "    //}\n"
#~ msgstr ""
#~ "//fn esta_vazia(self) -> bool {\n"
#~ "    //    todo!(\"Retorne `true` se `self.livros` for vazio\")\n"
#~ "    //}\n"

#~ msgid ""
#~ "//fn add_book(self, book: Book) {\n"
#~ "    //    todo!(\"Add a new book to `self.books`\")\n"
#~ "    //}\n"
#~ msgstr ""
#~ "//fn adicionar_livro(self, book: Livro) {\n"
#~ "    //    todo!(\"Adicione um novo livro em `self.livros`\")\n"
#~ "    //}\n"

#~ msgid ""
#~ "//fn print_books(self) {\n"
#~ "    //    todo!(\"Iterate over `self.books` and each book's title and "
#~ "year\")\n"
#~ "    //}\n"
#~ msgstr ""
#~ "//fn imprimir_livros(self) {\n"
#~ "    //    todo!(\"Itere sobre `self.livros` e sobre o t√≠tulo e ano de "
#~ "cada livro\")\n"
#~ "    //}\n"

#~ msgid ""
#~ "//fn oldest_book(self) -> Option<&Book> {\n"
#~ "    //    todo!(\"Return a reference to the oldest book (if any)\")\n"
#~ "    //}\n"
#~ msgstr ""
#~ "//fn livro_mais_antigo(self) -> Option<&Livro> {\n"
#~ "    //    todo!(\"Retorne uma refer√™ncia para o livro mais antigo (se "
#~ "houver)\")\n"
#~ "    //}\n"

#~ msgid ""
#~ "// This shows the desired behavior. Uncomment the code below and\n"
#~ "// implement the missing methods. You will need to update the\n"
#~ "// method signatures, including the \"self\" parameter! You may\n"
#~ "// also need to update the variable bindings within main.\n"
#~ msgstr ""
#~ "// Isto demonstra o comportamento esperado. Descomente o c√≥digo abaixo e\n"
#~ "// implemente os m√©todos que faltam. Voc√™ precisar√° atualizar as\n"
#~ "// assinaturas dos m√©todos, incluindo o par√¢metro \"self\"! Voc√™ talvez\n"
#~ "// precise atualizar as atribui√ß√µes de vari√°vel dentro de `main()`.\n"

#~ msgid ""
#~ "//println!(\"The library is empty: library.is_empty() -> {}\", library."
#~ "is_empty());\n"
#~ "    //\n"
#~ "    //library.add_book(Book::new(\"Lord of the Rings\", 1954));\n"
#~ "    //library.add_book(Book::new(\"Alice's Adventures in Wonderland\", "
#~ "1865));\n"
#~ "    //\n"
#~ "    //println!(\"The library is no longer empty: library.is_empty() -> "
#~ "{}\", library.is_empty());\n"
#~ "    //\n"
#~ "    //\n"
#~ "    //library.print_books();\n"
#~ "    //\n"
#~ "    //match library.oldest_book() {\n"
#~ "    //    Some(book) => println!(\"The oldest book is {}\", book.title),\n"
#~ "    //    None => println!(\"The library is empty!\"),\n"
#~ "    //}\n"
#~ "    //\n"
#~ "    //println!(\"The library has {} books\", library.len());\n"
#~ "    //library.print_books();\n"
#~ msgstr ""
#~ "//println!(\"A biblioteca est√° vazia: biblioteca.esta_vazia() -> {}\", "
#~ "biblioteca.esta_vazia());\n"
#~ "    //\n"
#~ "    //biblioteca.adicionar_livro(Livro::new(\"Lord of the Rings\", "
#~ "1954));\n"
#~ "    //biblioteca.adicionar_livro(Livro::new(\"Alice's Adventures in "
#~ "Wonderland\", 1865));\n"
#~ "    //\n"
#~ "    //println!(\"The biblioteca n√£o est√° mais vazia: biblioteca."
#~ "esta_vazia() -> {}\", biblioteca.esta_vazia());\n"
#~ "    //\n"
#~ "    //\n"
#~ "    //biblioteca.imprimir_livros();\n"
#~ "    //\n"
#~ "    //match biblioteca.livro_mais_antigo() {\n"
#~ "    //    Some(livro) => println!(\"O livro mais antigo √© {}\", livro."
#~ "titulo),\n"
#~ "    //    None => println!(\"A biblioteca est√° vazia!\"),\n"
#~ "    //}\n"
#~ "    //\n"
#~ "    //println!(\"The biblioteca tem {} livros\", biblioteca.tamanho());\n"
#~ "    //biblioteca.imprimir_livros();\n"

#~ msgid "[Solution](solutions-afternoon.md#designing-a-library)"
#~ msgstr "[Solu√ß√µes](solutions-afternoon.md#designing-a-library)"

#~ msgid ""
#~ "The ownership model of Rust affects many APIs. An example of this is the "
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) and "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) traits."
#~ msgstr ""
#~ "O modelo de _ownership_ do Rust afeta muitas APIs. Um exemplo disso s√£o "
#~ "os _traits_ [`Iterator`](https://doc.rust-lang.org/std/iter/trait."
#~ "Iterator.html) e [`IntoIterator`](https://doc.rust-lang.org/std/iter/"
#~ "trait.IntoIterator.html)."

#~ msgid ""
#~ "Traits are like interfaces: they describe behavior (methods) for a type. "
#~ "The `Iterator` trait simply says that you can call `next` until you get "
#~ "`None` back:"
#~ msgstr ""
#~ "Os _traits_ s√£o como interfaces: eles descrevem o comportamento (m√©todos) "
#~ "para um tipo. O _trait_ `Iterator` simplesmente diz que voc√™ pode chamar "
#~ "`next` at√© obter `None` como retorno:"

#~ msgid "You use this trait like this:"
#~ msgstr "Voc√™ usa esse _trait_ da seguinte forma:"

#~ msgid "\"v[0]: {:?}\""
#~ msgstr "\"v[0]: {:?}\""

#~ msgid "\"v[1]: {:?}\""
#~ msgstr "\"v[1]: {:?}\""

#~ msgid "\"v[2]: {:?}\""
#~ msgstr "\"v[2]: {:?}\""

#~ msgid "\"No more items: {:?}\""
#~ msgstr "\"Sem mais itens: {:?}\""

#~ msgid "What is the type returned by the iterator? Test your answer here:"
#~ msgstr "Qual √© o tipo retornado pelo iterador? Teste sua resposta aqui:"

#~ msgid "\"v0: {v0:?}\""
#~ msgstr "\"v0: {v0:?}\""

#~ msgid "Why is this type used?"
#~ msgstr "Por que esse tipo?"

#~ msgid "Like before, what  is the type returned by the iterator?"
#~ msgstr "Como antes, qual √© o tipo retornado pelo iterador?"

#~ msgid ""
#~ "Now that we know both `Iterator` and `IntoIterator`, we can build `for` "
#~ "loops. They call `into_iter()` on an expression and iterates over the "
#~ "resulting iterator:"
#~ msgstr ""
#~ "Agora que conhecemos `Iterator` e `IntoIterator`, podemos construir loops "
#~ "`for`. Eles chamam `into_iter()` em uma express√£o e itera sobre o "
#~ "iterador resultante:"

#~ msgid "\"word: {word}\""
#~ msgstr "\"palavra: {word}\""

#~ msgid ""
#~ "Experiment with the code above and then consult the documentation for "
#~ "[`impl IntoIterator for &Vec<T>`](https://doc.rust-lang.org/std/vec/"
#~ "struct.Vec.html#impl-IntoIterator-for-%26'a+Vec%3CT,+A%3E) and [`impl "
#~ "IntoIterator for Vec<T>`](https://doc.rust-lang.org/std/vec/struct.Vec."
#~ "html#impl-IntoIterator-for-Vec%3CT,+A%3E) to check your answers."
#~ msgstr ""
#~ "Experimente com o c√≥digo acima e depois consulte a documenta√ß√£o para "
#~ "[`impl IntoIterator para &Vec<T>`](https://doc.rust-lang.org/std/vec/"
#~ "struct.Vec.html#impl-IntoIterator-for-%26%27a%20Vec%3CT%2C%20A%3E) e "
#~ "[`impl IntoIterator para Vec<T>`](https://doc.rust-lang.org/std/vec/"
#~ "struct.Vec.html#impl-IntoIterator-for-Vec%3CT%2C%20A%3E) para verificar "
#~ "suas respostas."

#~ msgid "Structs, enums, methods."
#~ msgstr "Estruturas (structs), enumera√ß√µes (enums), m√©todos (methods)."

#~ msgid ""
#~ "Control flow constructs: `if`, `if let`, `while`, `while let`, `break`, "
#~ "and `continue`."
#~ msgstr ""
#~ "Construtos de fluxo de controle: `if`, `if let`, `while`, `while let`, "
#~ "`break`, e `continue`."

#~ msgid ""
#~ "The Standard Library: `String`, `Option` and `Result`, `Vec`, `HashMap`, "
#~ "`Rc` and `Arc`."
#~ msgstr ""
#~ "A Biblioteca Padr√£o: `String`, `Option` e `Result`, `Vec`, `HashMap`, "
#~ "`Rc` e `Arc`."

#~ msgid "Modules: visibility, paths, and filesystem hierarchy."
#~ msgstr ""
#~ "M√≥dulos: visibilidade, caminhos (paths), e hierarquia do sistema de "
#~ "arquivos."

#~ msgid ""
#~ "Methods are defined in an `impl` block, which we will see in following "
#~ "slides."
#~ msgstr ""
#~ "Os m√©todos s√£o definidos em um bloco _`impl`_, que veremos nos pr√≥ximos "
#~ "slides."

#~ msgid ""
#~ "The `new` function could be written using `Self` as a type, as it is "
#~ "interchangeable with the struct type name"
#~ msgstr ""
#~ "A fun√ß√£o `new` poderia ser escrita utilizando `Self` como tipo, j√° que "
#~ "ele √© intercambi√°vel com o nome da _struct_"

#~ msgid ""
#~ "Implement the `Default` trait for the struct. Define some fields and use "
#~ "the default values for the other fields."
#~ msgstr ""
#~ "Implemente a _trait_ `Default` (Padr√£o) para a _struct_. Defina alguns "
#~ "campos e utilize valores padr√£o para os demais."

#~ msgid "\"Bot\""
#~ msgstr "\"Rob√¥\""

#~ msgid "\"Sam\""
#~ msgstr "\"Sam\""

#~ msgid "Methods are defined in the `impl` block."
#~ msgstr "M√©todos s√£o definidos no bloco `impl`."

#~ msgid ""
#~ "Use struct update syntax to define a new structure using `peter`. Note "
#~ "that the variable `peter` will no longer be accessible afterwards."
#~ msgstr ""
#~ "Use a sintaxe de atualiza√ß√£o de estruturas para definir uma nova `struct` "
#~ "usando `peter`. Note que a vari√°vel `peter` n√£o ser√° mais acess√≠vel ap√≥s."

#~ msgid ""
#~ "Use `{:#?}` when printing structs to request the `Debug` representation."
#~ msgstr ""
#~ "Utilize `{:#?}` para imprimir _structs_ utilizando a representa√ß√£o de "
#~ "depura√ß√£o (`Debug`)."

#~ msgid "// Implementation based on https://xkcd.com/221/\n"
#~ msgstr "// Implementa√ß√£o baseada em https://xkcd.com/221/\n"

#~ msgid "// Chosen by fair dice roll. Guaranteed to be random.\n"
#~ msgstr ""
#~ "// Escolhido por uma rolagem de dados justa. Garantido ser aleat√≥rio.\n"

#~ msgid "\"You got: {:?}\""
#~ msgstr "\"Voc√™ tirou: {:?}\""

#~ msgid ""
#~ "This page offers an enum type `CoinFlip` with two variants `Heads` and "
#~ "`Tails`. You might note the namespace when using variants."
#~ msgstr ""
#~ "Esta p√°gina oferece um tipo de _enum_ `MoedaJogada` com duas variantes "
#~ "`Cara` e `Coroa`. Voc√™ pode observar o _namespace_ ao usar variantes."

#~ msgid "In both, associated functions are defined within an `impl` block."
#~ msgstr ""
#~ "Em ambos, as fun√ß√µes associadas s√£o definidas dentro de um bloco `impl`."

#~ msgid ""
#~ "You can define richer enums where the variants carry data. You can then "
#~ "use the `match` statement to extract the data from each variant:"
#~ msgstr ""
#~ "Voc√™ pode definir enums mais ricos onde as variantes carregam dados. Voc√™ "
#~ "pode ent√£o usar a instru√ß√£o `match` (corresponder) para extrair os dados "
#~ "de cada variante:"

#~ msgid "// Variant without payload\n"
#~ msgstr "// Variante sem conte√∫do\n"

#~ msgid "\"page loaded\""
#~ msgstr "\"p√°gina carregada\""

#~ msgid "\"pressed '{c}'\""
#~ msgstr "\"pressionou '{c}'\""

#~ msgid ""
#~ "The expression is matched against the patterns from top to bottom. There "
#~ "is no fall-through like in C or C++."
#~ msgstr ""
#~ "A express√£o √© comparada com os padr√µes de cima a baixo. N√£o existe _fall-"
#~ "through_ como em C ou C++."

#~ msgid ""
#~ "The match expression has a value. The value is the last expression in the "
#~ "match arm which was executed."
#~ msgstr ""
#~ "A express√£o _match_ possui um valor. O valor √© o da √∫ltima express√£o "
#~ "executada em um \"bra√ßo\" do _match_."

#~ msgid ""
#~ "Starting from the top we look for what pattern matches the value then run "
#~ "the code following the arrow. Once we find a match, we stop. "
#~ msgstr ""
#~ "Come√ßando do topo, n√≥s procuramos qual padr√£o corresponde ao valor, e "
#~ "ent√£o executamos o c√≥digo ap√≥s a flecha. Quando uma correspond√™ncia √© "
#~ "encontrada, n√≥s paramos. "

#~ msgid "`match` inspects a hidden discriminant field in the `enum`."
#~ msgstr "`match` inspeciona um campo discriminant escondido na `enum`."

#~ msgid ""
#~ "It is possible to retrieve the discriminant by calling `std::mem::"
#~ "discriminant()`"
#~ msgstr ""
#~ "√â poss√≠vel recuperar o discriminante chamando `std::mem::discriminant()`"

#~ msgid ""
#~ "This is useful, for example, if implementing `PartialEq` for structs "
#~ "where comparing field values doesn't affect equality."
#~ msgstr ""
#~ "Isso √© √∫til, por exemplo, ao implementar `PartialEq` para _structs_ nas "
#~ "quais comparar valores de campos n√£o afeta a igualdade."

#~ msgid ""
#~ "`WebEvent::Click { ... }` is not exactly the same as `WebEvent::"
#~ "Click(Click)` with a top level `struct Click { ... }`. The inlined "
#~ "version cannot implement traits, for example."
#~ msgstr ""
#~ "`WebEvent::Click { ... }` n√£o √© exatamente o mesmo que `WebEvent::"
#~ "Click(Click)` com uma `struct Click { ... }` _top-level_. A vers√£o no "
#~ "pr√≥prio local (_inline_) n√£o permite implementar _traits_, por exemplo."

#~ msgid ""
#~ "Rust enums are packed tightly, taking constraints due to alignment into "
#~ "account:"
#~ msgstr ""
#~ "Enums, em Rust, s√£o agrupados de maneira compacta, levando em "
#~ "considera√ß√£o restri√ß√µes devido ao alinhamento:"

#~ msgid "\"{}: size {} bytes, align: {} bytes\""
#~ msgstr "\"{}: tamanho {} bytes, alinhamento: {} bytes\""

#~ msgid ""
#~ "Internally Rust is using a field (discriminant) to keep track of the enum "
#~ "variant."
#~ msgstr ""
#~ "Internamente Rust utiliza um campo (discriminante) para saber qual a "
#~ "variante da _enum_."

#~ msgid "// 0\n"
#~ msgstr "// 0\n"

#~ msgid "// 10001\n"
#~ msgstr "// 10001\n"

#~ msgid "\"A: {}\""
#~ msgstr "\"A: {}\""

#~ msgid "\"B: {}\""
#~ msgstr "\"B: {}\""

#~ msgid "\"C: {}\""
#~ msgstr "\"C: {}\""

#~ msgid "Try out other types such as"
#~ msgstr "Tente outros tipos como"

#~ msgid "`dbg_size!(bool)`: size 1 bytes, align: 1 bytes,"
#~ msgstr "`dbg_size!(bool)`: tamanho 1 bytes, alinhamento: 1 bytes,"

#~ msgid ""
#~ "`dbg_size!(Option<bool>)`: size 1 bytes, align: 1 bytes (niche "
#~ "optimization, see below),"
#~ msgstr ""
#~ "`dbg_size!(Option<bool>)`: tamanho 1 bytes, alinhamento: 1 bytes "
#~ "(otimiza√ß√£o de nicho, seja abaixo),"

#~ msgid ""
#~ "`dbg_size!(&i32)`: size 8 bytes, align: 8 bytes (on a 64-bit machine),"
#~ msgstr ""
#~ "`dbg_size!(&i32)`: tamanho 8 bytes, alinhamento: 8 bytes (em uma m√°quina "
#~ "de 64-bits),"

#~ msgid ""
#~ "`dbg_size!(Option<&i32>)`: size 8 bytes, align: 8 bytes (null pointer "
#~ "optimization, see below)."
#~ msgstr ""
#~ "`dbg_size!(Option<&i32>)`: tamanho 8 bytes, alinhamento: 8 bytes "
#~ "(otimiza√ß√£o de ponteiro nulo, veja abaixo)."

#~ msgid ""
#~ "Niche optimization: Rust will merge unused bit patterns for the enum "
#~ "discriminant."
#~ msgstr ""
#~ "Otimiza√ß√£o de nicho: Rust vai mesclar padr√µes de bits n√£o utilizados na "
#~ "discriminante da _enum_."

#~ msgid "\"- {}: {:#x}\""
#~ msgstr "\"- {}: {:#x}\""

#~ msgid ""
#~ "// TOTALLY UNSAFE. Rust provides no guarantees about the bitwise\n"
#~ "    // representation of types.\n"
#~ msgstr ""
#~ "// TOTALMENTE INSEGURO. Rust n√£o oferece nenhuma garantia sobre a\n"
#~ "    // representa√ß√£o dos tipos em bits.\n"

#~ msgid "\"Bitwise representation of bool\""
#~ msgstr "\"Representa√ß√£o em bits de booleano\""

#~ msgid "\"Bitwise representation of Option<bool>\""
#~ msgstr "\"Representa√ß√£o em bits de Option<bool>\""

#~ msgid "\"Bitwise representation of Option<Option<bool>>\""
#~ msgstr "\"Representa√ß√£o em bits de Option<Option<bool>>\""

#~ msgid "\"Bitwise representation of Option<&i32>\""
#~ msgstr "\"Representa√ß√£o em bits de Option<&i32>\""

#~ msgid ""
#~ "More complex example if you want to discuss what happens when we chain "
#~ "more than 256 `Option`s together."
#~ msgstr ""
#~ "Exemplo mais complexo caso queira demonstrar o que acontece ao encadear "
#~ "mais de 256 `Option`s de uma vez."

#~ msgid "\"1000\""
#~ msgstr "\"1000\""

#~ msgid ""
#~ "// Macro to wrap a value in 2^n Some() where n is the number of \"@\" "
#~ "signs.\n"
#~ "// Increasing the recursion limit is required to evaluate this macro.\n"
#~ msgstr ""
#~ "// Macro que envolve um valor em 2^n Some() no qual n √© o n√∫mero de "
#~ "\"@\".\n"
#~ "// √â preciso aumentar o limite de recurs√£o para aplicar essa macro.\n"

#~ msgid "\"Bitwise representation of a chain of 128 Option's.\""
#~ msgstr "\"Representa√ß√£o em bits de uma sequ√™ncia de 128 Option's.\""

#~ msgid "\"Bitwise representation of a chain of 256 Option's.\""
#~ msgstr "\"Representa√ß√£o em bits de uma sequ√™ncia de 256 Option's.\""

#~ msgid "\"Bitwise representation of a chain of 257 Option's.\""
#~ msgstr "\"Representa√ß√£o em bits de uma sequ√™ncia de 257 Option's.\""

#~ msgid "We describe the distinction between method receivers next."
#~ msgstr "Descreveremos a distin√ß√£o entre os receptores de m√©todo a seguir."

#~ msgid ""
#~ "Consider emphasizing \"shared and immutable\" and \"unique and mutable\". "
#~ "These constraints always come together in Rust due to borrow checker "
#~ "rules, and `self` is no exception. It isn't possible to reference a "
#~ "struct from multiple locations and call a mutating (`&mut self`) method "
#~ "on it."
#~ msgstr ""
#~ "Considere enfatizar \"compartilhado e imut√°vel\" e \"√∫nico e mut√°vel\". "
#~ "Essas restri√ß√µes sempre v√™m juntos no Rust devido √†s regras do _Borrow "
#~ "Checker_ (verificador de empr√©stimo), e `self` n√£o √© uma exce√ß√£o. N√£o "
#~ "ser√° poss√≠vel referenciar uma _struct_ de v√°rios locais e chamar um "
#~ "m√©todo mut√°vel (`&mut self`) nela."

#~ msgid "All four methods here use a different method receiver."
#~ msgstr "Todos os quatro m√©todos aqui usam um receptor de m√©todo diferente."

#~ msgid ""
#~ "You can point out how that changes what the function can do with the "
#~ "variable values and if/how it can be used again in `main`."
#~ msgstr ""
#~ "Voc√™ pode apontar como isso muda o que a fun√ß√£o pode fazer com os valores "
#~ "das vari√°veis e se/como ela pode ser usada novamente na `main`."

#~ msgid ""
#~ "You can showcase the error that appears when trying to call `finish` "
#~ "twice."
#~ msgstr ""
#~ "Voc√™ pode mostrar o erro que aparece ao tentar chamar `encerrar` duas "
#~ "vezes."

#~ msgid ""
#~ "Note that although the method receivers are different, the non-static "
#~ "functions are called the same way in the main body. Rust enables "
#~ "automatic referencing and dereferencing when calling methods. Rust "
#~ "automatically adds in the `&`, `*`, `muts` so that that object matches "
#~ "the method signature."
#~ msgstr ""
#~ "Observe que, embora os receptores do m√©todo sejam diferentes, as fun√ß√µes "
#~ "n√£o est√°ticas s√£o chamadas da mesma maneira no corpo principal. Rust "
#~ "permite referenciar e desreferenciar automaticamente ao chamar m√©todos. "
#~ "Rust adiciona automaticamente `&`, `*`, `muts` para que esse objeto "
#~ "corresponda √† assinatura do m√©todo."

#~ msgid ""
#~ "You might point out that `print_laps` is using a vector that is iterated "
#~ "over. We describe vectors in more detail in the afternoon. "
#~ msgstr ""
#~ "Voc√™ pode apontar que `imprimir_voltas` est√° usando um vetor e iterando "
#~ "sobre ele. Descreveremos os vetores com mais detalhes √† tarde. "

#~ msgid "The `_` pattern is a wildcard pattern which matches any value."
#~ msgstr "O padr√£o `_` √© um padr√£o curinga que corresponde a qualquer valor."

#~ msgid ""
#~ "It can be useful to show how binding works, by for instance replacing a "
#~ "wildcard character with a variable, or removing the quotes around `q`."
#~ msgstr ""
#~ "Pode ser √∫til mostrar como funciona a vincula√ß√£o, por exemplo, "
#~ "substituindo um caractere curinga por uma vari√°vel ou removendo as aspas "
#~ "ao redor de `q`."

#~ msgid "You can demonstrate matching on a reference."
#~ msgstr "Voc√™ pode demonstrar correspond√™ncia em uma refer√™ncia."

#~ msgid ""
#~ "This might be a good time to bring up the concept of irrefutable "
#~ "patterns, as the term can show up in error messages."
#~ msgstr ""
#~ "Este pode ser um bom momento para trazer √† tona o conceito de padr√µes "
#~ "irrefut√°veis, j√° que o termo pode aparecer em mensagens de erro."

#~ msgid "You can also destructure `structs`:"
#~ msgstr "Voc√™ tamb√©m pode desestruturar `structs`:"

#~ msgid ""
#~ "Destructuring of slices of unknown length also works with patterns of "
#~ "fixed length."
#~ msgstr ""
#~ "Desestruturar _slices_ de tamanho desconhecido √© poss√≠vel utilizando "
#~ "padr√µes de tamanho fixo."

#~ msgid "\"Tell me about {slice:?}\""
#~ msgstr "\"Fale-me sobre {slice:?}\""

#~ msgid ""
#~ "When matching, you can add a _guard_ to a pattern. This is an arbitrary "
#~ "Boolean expression which will be executed if the pattern matches:"
#~ msgstr ""
#~ "Ao verificar uma correspond√™ncia, voc√™ pode adicionar uma guarda "
#~ "(_guard_) para um padr√£o. √â uma express√£o Booleana arbitr√°ria que ser√° "
#~ "executada se o padr√£o corresponder:"

#~ msgid "\"Tell me about {pair:?}\""
#~ msgstr "\"Fale-me sobre {pair:?}\""

#~ msgid "\"These are twins\""
#~ msgstr "\"Estes s√£o g√™meos\""

#~ msgid "\"Antimatter, kaboom!\""
#~ msgstr "\"Antimatter, kaboom!\""

#~ msgid "\"The first one is odd\""
#~ msgstr "\"O primeiro √© √≠mpar\""

#~ msgid "\"No correlation...\""
#~ msgstr "\"Sem correla√ß√£o...\""

#~ msgid ""
#~ "You can use the variables defined in the pattern in your if expression."
#~ msgstr ""
#~ "Voc√™ pode usar as vari√°veis definidas no padr√£o em sua express√£o `if`."

#~ msgid "Day 2: Morning Exercises"
#~ msgstr "Dia 2: Exerc√≠cios Matinais"

#~ msgid "We will look at implementing methods in two contexts:"
#~ msgstr "Veremos a implementa√ß√£o de m√©todos em dois contextos:"

#~ msgid "Simple struct which tracks health statistics."
#~ msgstr "Uma _struct_ simples que guarda estat√≠sticas de sa√∫de."

#~ msgid "Multiple structs and enums for a drawing library."
#~ msgstr "V√°rias _structs_ e _enums_ para uma biblioteca de desenho."

#~ msgid "Polygon Struct"
#~ msgstr "_Struct_ para Pol√≠gono"

#~ msgid ""
#~ "We will create a `Polygon` struct which contain some points. Copy the "
#~ "code below to <https://play.rust-lang.org/> and fill in the missing "
#~ "methods to make the tests pass:"
#~ msgstr ""
#~ "Vamos criar um _struct_ `Polygon` que cont√©m alguns `Points`. Copie o "
#~ "c√≥digo abaixo em <https://play.rust-lang.org/> e preencha os m√©todos que "
#~ "faltam para fazer os testes passarem:"

#~ msgid "// add fields\n"
#~ msgstr "// adicione atributos\n"

#~ msgid "// add methods\n"
#~ msgstr "// adicione m√©todos\n"

#~ msgid ""
#~ "Since the method signatures are missing from the problem statements, the "
#~ "key part of the exercise is to specify those correctly. You don't have to "
#~ "modify the tests."
#~ msgstr ""
#~ "Como as assinaturas dos m√©todos est√£o faltando nas declara√ß√µes do "
#~ "problema, a parte principal do exerc√≠cio √© especific√°-las corretamente. "
#~ "N√£o √© preciso modificar os testes."

#~ msgid "Other interesting parts of the exercise:"
#~ msgstr "Outras partes interessante do exerc√≠cio:"

#~ msgid ""
#~ "Derive a `Copy` trait for some structs, as in tests the methods sometimes "
#~ "don't borrow their arguments."
#~ msgstr ""
#~ "Derive um _trait_ `Copy` para algumas _structs_, j√° que em testes os "
#~ "m√©todos √†s vezes n√£o emprestam seus argumentos."

#~ msgid ""
#~ "Discover that `Add` trait must be implemented for two objects to be "
#~ "addable via \"+\". Note that we do not discuss generics until Day 3."
#~ msgstr ""
#~ "Descubra que o trait `Add` deve ser implementado para que dois objetos "
#~ "sejam adicionados via \"+\". Note que n√≥s n√£o discutimos _generics_ at√© o "
#~ "Dia 3."

#~ msgid ""
#~ "As we have seen, `if` is an expression in Rust. It is used to "
#~ "conditionally evaluate one of two blocks, but the blocks can have a value "
#~ "which then becomes the value of the `if` expression. Other control flow "
#~ "expressions work similarly in Rust."
#~ msgstr ""
#~ "Como vimos, `if` √© uma express√£o em Rust. √â usado para avaliar "
#~ "condicionalmente um de dois blocos, mas os blocos podem ter um valor que "
#~ "ent√£o se torna o valor da express√£o `if`. Outras express√µes de controle "
#~ "de fluxo funcionam de forma semelhante em Rust."

#~ msgid "\"w: {w}\""
#~ msgstr "\"w: {w}\""

#~ msgid "\"z: {z}\""
#~ msgstr "\"z: {z}\""

#~ msgid ""
#~ "The same rule is used for functions: the value of the function body is "
#~ "the return value:"
#~ msgstr ""
#~ "A mesma regra √© usada para fun√ß√µes: o valor do corpo da fun√ß√£o √© o valor "
#~ "de retorno:"

#~ msgid "\"doubled: {}\""
#~ msgstr "\"dobrado: {}\""

#~ msgid ""
#~ "The point of this slide is to show that blocks have a type and value in "
#~ "Rust. "
#~ msgstr ""
#~ "O objetivo deste slide √© mostrar que os blocos t√™m um tipo e um valor em "
#~ "Rust."

#~ msgid "\"Program name: {value}\""
#~ msgstr "\"Nome do programa: {value}\""

#~ msgid "\"Missing name?\""
#~ msgstr "\"Falta o nome?\""

#~ msgid ""
#~ "See [pattern matching](../pattern-matching.md) for more details on "
#~ "patterns in Rust."
#~ msgstr ""
#~ "Consulte [correspond√™ncia de padr√µes (_pattern matching_)](../pattern-"
#~ "matching.md) para obter mais detalhes sobre padr√µes em Rust."

#~ msgid ""
#~ "Since 1.65, a similar [let-else](https://doc.rust-lang.org/rust-by-"
#~ "example/flow_control/let_else.html) construct allows to do a "
#~ "destructuring assignment, or if it fails, execute a block which is "
#~ "required to abort normal control flow (with `panic`/`return`/`break`/"
#~ "`continue`):"
#~ msgstr ""
#~ "Desde 1.65, uma constru√ß√£o [let-else](https://doc.rust-lang.org/rust-by-"
#~ "example/flow_control/let_else) semelhante permite fazer uma atribui√ß√£o de "
#~ "desestrutura√ß√£o, ou se falhar, ter um bloco de ramifica√ß√£o sem retorno "
#~ "(`panic`/`return`/`break`/`continue`):"

#~ msgid "\"foo bar\""
#~ msgstr "\"foo bar\""

#~ msgid "`for` loops"
#~ msgstr "Loops (La√ßos) `for`"

#~ msgid ""
#~ "The [`for` loop](https://doc.rust-lang.org/std/keyword.for.html) is "
#~ "closely related to the [`while let` loop](while-let-expressions.md). It "
#~ "will automatically call `into_iter()` on the expression and then iterate "
#~ "over it:"
#~ msgstr ""
#~ "O loop `for` est√° intimamente relacionado com o [loop `while let`](while-"
#~ "let-expressions.md). Ele chamar√° automaticamente `into_iter()` na "
#~ "express√£o e, em seguida, iterar√° sobre ela:"

#~ msgid "You can use `break` and `continue` here as usual."
#~ msgstr "Aqui voc√™ pode usar `break` e `continue` como de costume."

#~ msgid "Index iteration is not a special syntax in Rust for just that case."
#~ msgstr ""
#~ "A itera√ß√£o de √≠ndice n√£o √© uma sintaxe especial no Rust apenas para esse "
#~ "caso."

#~ msgid "`(0..10)` is a range that implements an `Iterator` trait. "
#~ msgstr ""
#~ "`(0..10)` √© um _range_ (intervalo) que implementa um trait `Iterator`."

#~ msgid ""
#~ "`step_by` is a method that returns another `Iterator` that skips every "
#~ "other element. "
#~ msgstr ""
#~ "`step_by` √© um m√©todo que retorna outro `Iterator` que pula outros "
#~ "elementos alternadamente."

#~ msgid ""
#~ "Modify the elements in the vector and explain the compiler errors. Change "
#~ "vector `v` to be mutable and the for loop to `for x in v.iter_mut()`."
#~ msgstr ""
#~ "Modifique os elementos no vetor e explique os erros de compila√ß√£o. Altere "
#~ "o vetor `v` para ser mut√°vel e o loop `for` para `for x in v.iter_mut()`."

#~ msgid "`loop` expressions"
#~ msgstr "Express√µes `loop`"

#~ msgid ""
#~ "Finally, there is a [`loop` keyword](https://doc.rust-lang.org/reference/"
#~ "expressions/loop-expr.html#infinite-loops) which creates an endless loop."
#~ msgstr ""
#~ "Finalmente, h√° uma [palavra-chave `loop`](https://doc.rust-lang.org/"
#~ "reference/expressions/loop-expr.html#infinite-loops) que cria um loop "
#~ "infinito."

#~ msgid "Here you must either `break` or `return` to stop the loop:"
#~ msgstr "Aqui voc√™ deve usar `break` ou `return` para parar o loop:"

#~ msgid "Break the `loop` with a value (e.g. `break 8`) and print it out."
#~ msgstr ""
#~ "Interrompa o `loop` com um valor (por exemplo, `break 8`) e imprima-o."

#~ msgid ""
#~ "The [`match` keyword](https://doc.rust-lang.org/reference/expressions/"
#~ "match-expr.html) is used to match a value against one or more patterns. "
#~ "In that sense, it works like a series of `if let` expressions:"
#~ msgstr ""
#~ "A [palavra-chave `match`](https://doc.rust-lang.org/reference/expressions/"
#~ "match-expr.html) √© usada para corresponder um valor a um ou mais padr√µes. "
#~ "Nesse sentido, funciona como uma s√©rie de express√µes `if let`:"

#~ msgid "\"Will do cat things\""
#~ msgstr "\"Vai fazer coisas de gato\""

#~ msgid "\"ls\""
#~ msgstr "\"ls\""

#~ msgid "\"Will ls some files\""
#~ msgstr "\"Vou ls alguns arquivos\""

#~ msgid "\"mv\""
#~ msgstr "\"mv\""

#~ msgid "\"Let's move some files\""
#~ msgstr "\"Vamos mover alguns arquivos\""

#~ msgid "\"rm\""
#~ msgstr "\"rm\""

#~ msgid "\"Uh, dangerous!\""
#~ msgstr "\"Uh, perigoso!\""

#~ msgid "\"Hmm, no program name?\""
#~ msgstr "\"Hmm, nenhum nome de programa?\""

#~ msgid "\"Unknown program name!\""
#~ msgstr "\"Nome de programa desconhecido!\""

#~ msgid "Save the match expression to a variable and print it out."
#~ msgstr ""
#~ "Salve o resultado de uma express√£o de correspond√™ncia `match` em uma "
#~ "vari√°vel e imprima-a."

#~ msgid "Remove `.as_deref()` and explain the error."
#~ msgstr "Remova `.as_deref()` e explique o erro gerado."

#~ msgid ""
#~ "`std::env::args().next()` returns an `Option<String>`, but we cannot "
#~ "match against `String`."
#~ msgstr ""
#~ "`std::env::Args().next()` retorna um `Option<&String>`, por√©m `match` n√£o "
#~ "funciona com o tipo `String`."

#~ msgid ""
#~ "`as_deref()` transforms an `Option<T>` to `Option<&T::Target>`. In our "
#~ "case, this turns `Option<String>` into `Option<&str>`."
#~ msgstr ""
#~ "`as_deref()` transforma um `Option<T>` em `Option<&T::Target>`. Em nosso "
#~ "caso, isso transforma um `Option<String>` em `Option<&str>`."

#~ msgid ""
#~ "We can now use pattern matching to match against the `&str` inside "
#~ "`Option`."
#~ msgstr ""
#~ "Agora podemos usar a correspond√™ncia de padr√µes em um `&str` dentro de "
#~ "`Option`."

#~ msgid "The common vocabulary types include:"
#~ msgstr "Os tipos de vocabul√°rio comuns incluem:"

#~ msgid ""
#~ "[`Option` and `Result`](std/option-result.md) types: used for optional "
#~ "values and [error handling](error-handling.md)."
#~ msgstr ""
#~ "[`Option` e `Result`](std/option-result.md): tipos usados para valores "
#~ "opcionais e [tratamento de erro](error-handling.md)."

#~ msgid ""
#~ "[`String`](std/string.md): the default string type used for owned data."
#~ msgstr ""
#~ "[`String`](std/string.md): o tipo de string padr√£o usado para dados "
#~ "_owned_."

#~ msgid "[`Vec`](std/vec.md): a standard extensible vector."
#~ msgstr "[`Vec`](std/vec.md): um vetor extens√≠vel padr√£o."

#~ msgid ""
#~ "[`HashMap`](std/hashmap.md): a hash map type with a configurable hashing "
#~ "algorithm."
#~ msgstr ""
#~ "[`HashMap`](std/hashmap.md): um tipo de mapa de hash com um algoritmo de "
#~ "hash configur√°vel."

#~ msgid "[`Box`](std/box.md): an owned pointer for heap-allocated data."
#~ msgstr ""
#~ "[`Box`](std/box.md): um ponteiro _owned_ para dados alocados em heap."

#~ msgid ""
#~ "[`Rc`](std/rc.md): a shared reference-counted pointer for heap-allocated "
#~ "data."
#~ msgstr ""
#~ "[`Rc`](std/rc.md): um ponteiro de contagem de refer√™ncia compartilhado "
#~ "para dados alocados em heap."

#~ msgid "`Option` and `Result`"
#~ msgstr "`Option` e `Result`"

#~ msgid "The types represent optional data:"
#~ msgstr "Os tipos representam dados opcionais:"

#~ msgid "\"first: {first:?}\""
#~ msgstr "\"primeiro: {first:?}\""

#~ msgid "\"idx: {idx:?}\""
#~ msgstr "\"ind: {idx:?}\""

#~ msgid "`Option<&T>` has zero space overhead compared to `&T`."
#~ msgstr ""
#~ "`Option<&T>` n√£o tem nenhum custo adicional de espa√ßo em compara√ß√£o com "
#~ "`&T`."

#~ msgid "`binary_search` returns `Result<usize, usize>`."
#~ msgstr "`binary_search` retorna `Result<usize, usize>`."

#~ msgid "If found, `Result::Ok` holds the index where the element is found."
#~ msgstr ""
#~ "Se encontrado, `Result::Ok` cont√©m o √≠ndice onde o elemento foi "
#~ "encontrado."

#~ msgid ""
#~ "Otherwise, `Result::Err` contains the index where such an element should "
#~ "be inserted."
#~ msgstr ""
#~ "Caso contr√°rio, `Result::Err` cont√©m o √≠ndice onde tal elemento deve ser "
#~ "inserido."

#~ msgid ""
#~ "Show iterating over a vector and mutating the value: `for e in &mut v "
#~ "{ *e += 50; }`"
#~ msgstr ""
#~ "Mostre uma itera√ß√£o sobre um vetor e alterando o valor: `for e in &mut v "
#~ "{ *e += 50; }`"

#~ msgid "\"Harry Potter and the Sorcerer's Stone \""
#~ msgstr "\"Harry Potter and the Sorcerer's Stone \""

#~ msgid ""
#~ "In the above example, you can even leave out the `*` in the `println!` "
#~ "statement thanks to `Deref`. "
#~ msgstr ""
#~ "No exemplo acima, voc√™ pode at√© remover o `*` na instru√ß√£o `println!` "
#~ "gra√ßas ao `Deref`. "

#~ msgid "Box with Recursive Data Structures"
#~ msgstr "`Box` com Estruturas de Dados Recursivas"

#~ msgid "Day 2: Afternoon Exercises"
#~ msgstr "Dia 2: Exerc√≠cios da Tarde"

#~ msgid ""
#~ "The exercises for this afternoon will focus on strings and iterators."
#~ msgstr "Os exerc√≠cios desta tarde se concentrar√£o em strings e iteradores."

#, fuzzy
#~ msgid ""
#~ "Copy the code below to <https://play.rust-lang.org/> and implement the "
#~ "function."
#~ msgstr ""
#~ "Copie o c√≥digo abaixo para <https://play.rust-lang.org/> e implemente as "
#~ "fun√ß√µes:"

#~ msgid ""
#~ "In this exercise, you are implementing a routing component of a web "
#~ "server. The server is configured with a number of _path prefixes_ which "
#~ "are matched against _request paths_. The path prefixes can contain a "
#~ "wildcard character which matches a full segment. See the unit tests below."
#~ msgstr ""
#~ "Neste exerc√≠cio, voc√™ ir√° implementar um componente de roteamento de um "
#~ "servidor web. O servidor est√° configurado com um n√∫mero de _prefixos de "
#~ "caminhos_ que s√£o comparados com os _caminhos requisitados_. Os prefixos "
#~ "de caminho podem conter um caractere curinga que corresponde a um "
#~ "segmento completo. Veja os testes unit√°rios abaixo."

#~ msgid "\"/v1/publishers\""
#~ msgstr "\"/v1/editores\""

#~ msgid "\"/v1/publishers/abc-123\""
#~ msgstr "\"/v1/editores/abc-123\""

#~ msgid "\"/v1/publishers/abc/books\""
#~ msgstr "\"/v1/editores/abc/livros\""

#~ msgid "\"/v1\""
#~ msgstr "\"/v1\""

#~ msgid "\"/v1/publishersBooks\""
#~ msgstr "\"/v1/editoresLivros\""

#~ msgid "\"/v1/parent/publishers\""
#~ msgstr "\"/v1/pai/editores\""

#~ msgid "\"/v1/publishers/*/books\""
#~ msgstr "\"/v1/editores/*/livros\""

#~ msgid "\"/v1/publishers/foo/books\""
#~ msgstr "\"/v1/editores/foo/livros\""

#~ msgid "\"/v1/publishers/bar/books\""
#~ msgstr "\"/v1/editores/bar/livros\""

#~ msgid "\"/v1/publishers/foo/books/book1\""
#~ msgstr "\"/v1/editores/foo/livros/livro1\""

#~ msgid "\"/v1/publishers/foo/booksByAuthor\""
#~ msgstr "\"/v1/editores/foo/livrosPorAutor\""

#~ msgid "Try declaring a new variable `let p = Point { x: 5, y: 10.0 };`."
#~ msgstr ""
#~ "Tente declarar uma nova vari√°vel `let p = Point { x: 5, y: 10.0 };`."

#~ msgid "Fix the code to allow points that have elements of different types."
#~ msgstr ""
#~ "Arrume o c√≥digo para permitir pontos que tenham elementos de tipos "
#~ "diferentes."

#~ msgid "You can declare a generic type on your `impl` block:"
#~ msgstr "Voc√™ pode declarar um tipo gen√©rico em seu bloco `impl`:"

#~ msgid "// + 10\n"
#~ msgstr "// + 10\n"

#~ msgid "\"p.x = {}\""
#~ msgstr "\"p.x = {}\""

#~ msgid ""
#~ "Generic code is turned into non-generic code based on the call sites:"
#~ msgstr ""
#~ "O c√≥digo _gen√©rico_ √© transformado em c√≥digo _n√£o gen√©rico_ de acordo com "
#~ "os tipos usados:"

#~ msgid "behaves as if you wrote"
#~ msgstr "se comporta como se voc√™ tivesse escrito"

#~ msgid "\"The cat\""
#~ msgstr "\"Gato\""

#~ msgid "// No name, cats won't respond to it anyway.\n"
#~ msgstr "// Sem nomes, gatos n√£o respondem mesmo.\n"

#~ msgid "\"Who's a cutie? {} is!\""
#~ msgstr "\"Quem √©? √â o {}!\""

#~ msgid "\"Hello {}!\""
#~ msgstr "\"Ol√° {}!\""

#~ msgid ""
#~ "Rust derive macros work by automatically generating code that implements "
#~ "the specified traits for a data structure."
#~ msgstr ""
#~ "As macros `derive` do Rust funcionam gerando automaticamente o c√≥digo que "
#~ "implementa os _traits_ especificados para uma estrutura de dados."

#~ msgid "You can let the compiler derive a number of traits as follows:"
#~ msgstr ""
#~ "Voc√™ pode deixar o compilador derivar uma s√©rie de _traits_ tais como:"

#~ msgid "\"Is {:?}\\nequal to {:?}?\\nThe answer is {}!\""
#~ msgstr "\"{:?} √©\\nigual a {:?}?\\nA resposta √© {}!\""

#~ msgid "Traits can implement behavior in terms of other trait methods:"
#~ msgstr ""
#~ "Traits podem implementar o comportamento em termos de outros m√©todos de "
#~ "`trait`:"

#~ msgid "\"{a:?} equals {b:?}: {}\""
#~ msgstr "\"{a:?} igual a {b:?}: {}\""

#~ msgid "\"{a:?} not_equals {b:?}: {}\""
#~ msgstr "\"{a:?} diferente de {b:?}: {}\""

#~ msgid "Move method `not_equals` to a new trait `NotEquals`."
#~ msgstr "Mova o m√©todo `not_equals` para um novo _trait_ `NotEquals`."

#~ msgid "Make `Equals` a super trait for `NotEquals`."
#~ msgstr "Fa√ßa `Equals` um _super trait_ para `NotEquals`."

#~ msgid "Provide a blanket implementation of `NotEquals` for `Equals`."
#~ msgstr "Forne√ßa uma implementa√ß√£o geral de `NotEquals` para `Equals`."

#~ msgid ""
#~ "With the blanket implementation, you no longer need `Equals` as a super "
#~ "trait for `NotEqual`."
#~ msgstr ""
#~ "Com a implementa√ß√£o geral, voc√™ n√£o precisa mais de `Equals` como um "
#~ "_super trait_ para `NotEqual`."

#~ msgid "`impl Trait` allows you to work with types which you cannot name."
#~ msgstr ""
#~ "`impl Trait` permite que voc√™ trabalhe com tipos que voc√™ n√£o pode nomear."

#~ msgid ""
#~ "This example is great, because it uses `impl Display` twice. It helps to "
#~ "explain that nothing here enforces that it is _the same_ `impl Display` "
#~ "type. If we used a single  `T: Display`, it would enforce the constraint "
#~ "that input `T` and return `T` type are the same type. It would not work "
#~ "for this particular function, as the type we expect as input is likely "
#~ "not what `format!` returns. If we wanted to do the same via `: Display` "
#~ "syntax, we'd need two independent generic parameters."
#~ msgstr ""
#~ "Este exemplo √© √≥timo, porque usa `impl Display` duas vezes. Isso ajuda a "
#~ "explicar que nada imp√µe que, nos dois usos, `impl Display` seja _do "
#~ "mesmo_ tipo. Se us√°ssemos um √∫nico `T: Display`, imporia a restri√ß√£o de "
#~ "que o tipo `T` de entrada e o tipo `T` de retorno s√£o do mesmo tipo. Isso "
#~ "n√£o funcionaria para esta fun√ß√£o espec√≠fica, pois o tipo que esperamos "
#~ "como entrada provavelmente n√£o √© o que `format!` retorna. Se quis√©ssemos "
#~ "fazer o mesmo atrav√©s da sintaxe `: Display`, precisar√≠amos de dois "
#~ "par√¢metros gen√©ricos independentes."

#~ msgid ""
#~ "We will now look at some of the most common traits of the Rust standard "
#~ "library:"
#~ msgstr "Veremos agora os _Traits_ mais comuns da biblioteca padr√£o do Rust:"

#~ msgid ""
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) and "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) used in `for` loops,"
#~ msgstr ""
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) e "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) usados em la√ßos `for`,"

#~ msgid ""
#~ "[`From`](https://doc.rust-lang.org/std/convert/trait.From.html) and "
#~ "[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) used to "
#~ "convert values,"
#~ msgstr ""
#~ "[`From`](https://doc.rust-lang.org/std/convert/trait.From.html) e [`Into`]"
#~ "(https://doc.rust-lang.org/std/convert/trait.Into.html) usados na "
#~ "conver√ß√£o de valores,"

#~ msgid ""
#~ "[`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) and [`Write`]"
#~ "(https://doc.rust-lang.org/std/io/trait.Write.html) used for IO,"
#~ msgstr ""
#~ "[`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) e [`Write`]"
#~ "(https://doc.rust-lang.org/std/io/trait.Write.html) usados em opera√ß√µes "
#~ "de IO,"

#~ msgid ""
#~ "[`Add`](https://doc.rust-lang.org/std/ops/trait.Add.html), [`Mul`]"
#~ "(https://doc.rust-lang.org/std/ops/trait.Mul.html), ... used for operator "
#~ "overloading, and"
#~ msgstr ""
#~ "[`Add`](https://doc.rust-lang.org/std/ops/trait.Add.html), [`Mul`]"
#~ "(https://doc.rust-lang.org/std/ops/trait.Mul.html), ... usado na "
#~ "sobrecarga de operadores,"

#~ msgid ""
#~ "[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) "
#~ "used to construct a default instance of a type."
#~ msgstr ""
#~ "[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) "
#~ "usado para construir uma inst√¢ncia padr√£o para um tipo."

#~ msgid ""
#~ "`Iterator` implements `fn collect<B>(self) -> B where B: "
#~ "FromIterator<Self::Item>, Self: Sized`"
#~ msgstr ""
#~ "`Iterator` implementa `fn collect<B>(self) -> B where B: "
#~ "FromIterator<Self::Item>, Self: Sized`"

#~ msgid "`Add`, `Mul`, ..."
#~ msgstr "`Add`, `Mul`, ..."

#~ msgid "Day 3: Morning Exercises"
#~ msgstr "Dia 3: Exerc√≠cios matinais"

#~ msgid "We will design a classical GUI library traits and trait objects."
#~ msgstr ""
#~ "Vamos projetar uma biblioteca cl√°ssica de _traits_ de GUI e objetos de "
#~ "`trait`."

#~ msgid ""
#~ "`Button`: has a `label` and a callback function which is invoked when the "
#~ "button is pressed."
#~ msgstr ""
#~ "`Button`: tem um `r√≥tulo` e uma fun√ß√£o de _callback_ que √© invocada "
#~ "quando o bot√£o √© pressionado."

#~ msgid "Error handling in Rust is done using explicit control flow:"
#~ msgstr ""
#~ "O tratamento de erros em Rust √© feito usando fluxo de controle expl√≠cito:"

#~ msgid "Functions that can have errors list this in their return type,"
#~ msgstr "Fun√ß√µes que podem ter erros mostram isso em seu tipo de retorno."

#~ msgid "There are no exceptions."
#~ msgstr "N√£o h√° exce√ß√µes (_exceptions_)."

#~ msgid "Catching the Stack Unwinding"
#~ msgstr "Capturando a _Resolu√ß√£o_ da Pilha (_Stack Unwinding_)"

#~ msgid "\"hello!\""
#~ msgstr "\"ol√°!\""

#~ msgid ""
#~ "We have already seen the `Result` enum. This is used pervasively when "
#~ "errors are expected as part of normal operation:"
#~ msgstr ""
#~ "J√° vimos o _enum_ `Result`. Ele √© usado amplamente quando os erros s√£o "
#~ "esperados como parte da opera√ß√£o normal:"

#~ msgid "Propagating Errors with `?`"
#~ msgstr "Propagando Erros com `?`"

#~ msgid ""
#~ "The try-operator `?` is used to return errors to the caller. It lets you "
#~ "turn the common"
#~ msgstr ""
#~ "O operador _try_ `?` √© usado para retornar erros ao chamador da fun√ß√£o. "
#~ "Se ocorrer um erro, este √© retornado imediatamente ao chamador como "
#~ "retorno da fun√ß√£o."

#~ msgid "\"Found no username in {filename}\""
#~ msgstr "\"Nome de usu√°rio n√£o encontrado em {filename}\""

#~ msgid ""
#~ "It is good practice for all error types that don't need to be `no_std` to "
#~ "implement `std::error::Error`, which requires `Debug` and `Display`. The "
#~ "`Error` crate for `core` is only available in [nightly](https://github."
#~ "com/rust-lang/rust/issues/103765), so not fully `no_std` compatible yet."
#~ msgstr ""
#~ "√â uma boa pr√°tica para todos os tipos de erro que n√£o precisam ser "
#~ "`no_std` implementar `std::error::Error`, que requer `Debug` e `Display`. "
#~ "O _crate_ `Error` para `core` s√≥ est√° dispon√≠vel em [nightly](https://"
#~ "github.com/rust-lang/rust/issues/103765), ent√£o ainda n√£o √© totalmente "
#~ "compat√≠vel com `no_std`."

#~ msgid ""
#~ "It's generally helpful for them to implement `Clone` and `Eq` too where "
#~ "possible, to make life easier for tests and consumers of your library. In "
#~ "this case we can't easily do so, because `io::Error` doesn't implement "
#~ "them."
#~ msgstr ""
#~ "Geralmente √© √∫til para eles implementar `Clone` e `Eq` tamb√©m quando "
#~ "poss√≠vel, para tornar mais f√°cil a vida para testes e consumidores da sua "
#~ "biblioteca. Neste caso, n√£o podemos faz√™-lo facilmente, porque `io::"
#~ "Error` n√£o os implementa."

#~ msgid ""
#~ "The [thiserror](https://docs.rs/thiserror/) crate is a popular way to "
#~ "create an error enum like we did on the previous page:"
#~ msgstr ""
#~ "O _crate_ [thiserror](https://docs.rs/thiserror/) √© uma maneira popular "
#~ "de criar um tipo enumerado (_enum_) de erro, como fizemos na p√°gina "
#~ "anterior:"

#~ msgid ""
#~ "`thiserror`'s derive macro automatically implements `std::error::Error`, "
#~ "and optionally `Display` (if the `#[error(...)]` attributes are provided) "
#~ "and `From` (if the `#[from]` attribute is added). It also works for "
#~ "structs."
#~ msgstr ""
#~ "A _derive macro_ `thiserror` implementa automaticamente `std::error::"
#~ "Error`, e opcionalmente, `Display` (se os atributos `#[error(...)]` forem "
#~ "fornecidos) e `From` (se o atributo `#[from]` for adicionado). Tamb√©m "
#~ "funciona para _structs_."

#~ msgid ""
#~ "It doesn't affect your public API, which makes it good for libraries."
#~ msgstr "N√£o afeta sua API p√∫blica, o que a torna boa para bibliotecas."

#~ msgid ""
#~ "The widely used [anyhow](https://docs.rs/anyhow/) crate can help you add "
#~ "contextual information to your errors and allows you to have fewer custom "
#~ "error types:"
#~ msgstr ""
#~ "O `crate` [anyhow](https://docs.rs/anyhow/) √© amplamente usado e pode lhe "
#~ "ajudar a adicionar informa√ß√µes contextuais aos seus erros, permitindo que "
#~ "voc√™ tenha menos tipos de erros personalizados:"

#~ msgid "Mark unit tests with `#[test]`:"
#~ msgstr "Marque os testes unit√°rios com `#[test]`:"

#~ msgid "Use `cargo test` to find and run the unit tests."
#~ msgstr "Use `cargo test` para encontrar e executar os testes unit√°rios."

#~ msgid ""
#~ "Unit tests are often put in a nested module (run tests on the [Playground]"
#~ "(https://play.rust-lang.org/)):"
#~ msgstr ""
#~ "Testes unit√°rios geralmente s√£o colocados em um m√≥dulo aninhado (execute "
#~ "testes no [Playground](https://play.rust-lang.org/)):"

#~ msgid "Useful crates for writing tests"
#~ msgstr "_Crates_ √öteis para Escrever Testes"

#~ msgid "// Potential data race!\n"
#~ msgstr "// Corrida de dados potencial!\n"

#~ msgid "Calling External Code"
#~ msgstr "Chamando C√≥digo Externo"

#~ msgid ""
#~ "Functions from other languages might violate the guarantees of Rust. "
#~ "Calling them is thus unsafe:"
#~ msgstr ""
#~ "Fun√ß√µes de outras linguagens podem violar as garantias do Rust. Logo, "
#~ "cham√°-las √© inseguro:"

#~ msgid "Day 3: Afternoon Exercises"
#~ msgstr "Dia 3: Exerc√≠cios da Tarde"

#~ msgid "Let us build a safe wrapper for reading directory content!"
#~ msgstr "Vamos construir um wrapper seguro para ler o conte√∫do do diret√≥rio!"

#~ msgid ""
#~ "For this exercise, we suggest using a local dev environment instead of "
#~ "the Playground. This will allow you to run your binary on your own "
#~ "machine."
#~ msgstr ""
#~ "Para este exerc√≠cio, n√≥s sugerimos a utiliza√ßao de um ambiente de "
#~ "desenvolvimento local ao inv√©s do _Playground_. Isto lhe permitir√° "
#~ "executar o bin√°rio na sua pr√≥pria m√°quina."

#~ msgid ""
#~ "To get started, follow the [running locally](../../cargo/running-locally."
#~ "md) instructions."
#~ msgstr ""
#~ "Para come√ßar, siga as instru√ßoes para [rodar localmente](../../cargo/"
#~ "running-locally.md)."

#~ msgid ""
#~ "After looking at the exercise, you can look at the [solution](solutions-"
#~ "afternoon.md) provided."
#~ msgstr ""
#~ "Depois de ver o exerc√≠cio, voc√™ pode ver a [solu√ß√£o](solutions-afternoon."
#~ "md) fornecida."

#~ msgid "You will find solutions to the exercises on the following pages."
#~ msgstr "Voc√™ encontrar√° solu√ß√µes para os exerc√≠cios nas p√°ginas seguintes."

#~ msgid ""
#~ "Feel free to ask questions about the solutions [on GitHub](https://github."
#~ "com/google/comprehensive-rust/discussions). Let us know if you have a "
#~ "different or better solution than what is presented here."
#~ msgstr ""
#~ "Sinta-se √† vontade para fazer perguntas sobre as solu√ß√µes [no GitHub]"
#~ "(https://github.com/google/comprehensive-rust/discussions). Nos informe "
#~ "se voc√™ tiver uma solu√ß√£o diferente ou melhor do que a apresentada aqui."

#~ msgid ""
#~ "**Note:** Please ignore the `// ANCHOR: label` and `// ANCHOR_END: label` "
#~ "comments you see in the solutions. They are there to make it possible to "
#~ "re-use parts of the solutions as the exercises."
#~ msgstr ""
#~ "**Nota:** Ignore os coment√°rios `// ANCHOR: label` e `// ANCHOR_END: "
#~ "label` que voc√™ v√™ nas solu√ß√µes. Eles est√£o l√° para tornar poss√≠vel "
#~ "reutilizar partes das solu√ß√µes como exerc√≠cios."

#~ msgid "Day 1 Morning Exercises"
#~ msgstr "Dia 1 Exerc√≠cios matinais"

#~ msgid "([back to exercise](for-loops.md))"
#~ msgstr "([voltar ao exerc√≠cio](for-loops.md))"

#, fuzzy
#~ msgid "Bonus question"
#~ msgstr "Pergunta B√¥nus"

#~ msgid ""
#~ "It requires more advanced concepts. It might seem that we could use a "
#~ "slice-of-slices (`&[&[i32]]`) as the input type to transpose and thus "
#~ "make our function handle any size of matrix. However, this quickly breaks "
#~ "down: the return type cannot be `&[&[i32]]` since it needs to own the "
#~ "data you return."
#~ msgstr ""
#~ "Isso necessita a utiliza√ß√£o de conceitos mais avan√ßados. Pode parecer que "
#~ "poder√≠amos usar uma slice de slices (`&[&[i32]]`) como o tipo de entrada "
#~ "para `transposta` e, assim, fazer nossa fun√ß√£o lidar com qualquer tamanho "
#~ "de matriz. No entanto, isso falha rapidamente: o tipo de retorno n√£o pode "
#~ "ser `&[&[i32]]`, pois ele precisa possuir os dados que voc√™ retorna."

#~ msgid ""
#~ "You can attempt to use something like `Vec<Vec<i32>>`, but this doesn't "
#~ "work out-of-the-box either: it's hard to convert from `Vec<Vec<i32>>` to "
#~ "`&[&[i32]]` so now you cannot easily use `pretty_print` either."
#~ msgstr ""
#~ "Voc√™ pode tentar usar algo como `Vec<Vec<i32>>`, mas isso tamb√©m n√£o "
#~ "funciona muito bem: √© dif√≠cil converter de `Vec<Vec<i32>>` para "
#~ "`&[&[i32]] ` ent√£o agora voc√™ tamb√©m n√£o pode usar `impressao_formatada` "
#~ "facilmente."

#~ msgid ""
#~ "Once we get to traits and generics, we'll be able to use the [`std::"
#~ "convert::AsRef`](https://doc.rust-lang.org/std/convert/trait.AsRef.html) "
#~ "trait to abstract over anything that can be referenced as a slice."
#~ msgstr ""
#~ "Assim que chegarmos aos _traits_ and _generics_, podemos usar o _trait_ "
#~ "[`std::convert::AsRef`](https://doc.rust-lang.org/std/convert/trait.AsRef."
#~ "html) para abstrair qualquer coisa que pode ser referenciada como um "
#~ "_slice_."

#, fuzzy
#~ msgid "// A line references a slice of items\n"
#~ msgstr ""
#~ "fn impressao_formatada\\<T, Linha, Matriz>(matriz: Matriz) where T: "
#~ "Debug, // Linha referencia uma slice de itens Linha: "
#~ "AsRef\\<\\[T\\]\\>, // Matriz referencia uma slice de linhas Matriz: "
#~ "AsRef\\<\\[Linha\\]\\> { for linha in matriz.as_ref() { println!"
#~ "(\"{:?}\", linha.as_ref()); } }"

#~ msgid ""
#~ "In addition, the type itself would not enforce that the child slices are "
#~ "of the same length, so such variable could contain an invalid matrix."
#~ msgstr ""
#~ "Al√©m disso, o pr√≥prio tipo n√£o imporia que as slices filhas tenham o "
#~ "mesmo comprimento, portanto, tal vari√°vel poderia conter uma matriz "
#~ "inv√°lida."

#~ msgid "Day 1 Afternoon Exercises"
#~ msgstr "Dia 1 Exerc√≠cios da Tarde"

#~ msgid "Designing a Library"
#~ msgstr "Projetando uma biblioteca"

#~ msgid "([back to exercise](book-library.md))"
#~ msgstr "([voltar ao exerc√≠cio](book-library.md))"

#~ msgid "Day 2 Morning Exercises"
#~ msgstr "Dia 2 Exerc√≠cios matinais"

#~ msgid "([back to exercise](points-polygons.md))"
#~ msgstr "([voltar ao exerc√≠cio](points-polygons.md))"

#~ msgid "Day 2 Afternoon Exercises"
#~ msgstr "Dia 2 Exerc√≠cios da Tarde"

#~ msgid "([back to exercise](luhn.md))"
#~ msgstr "([voltar ao exerc√≠cio](luhn.md))"

#~ msgid "([back to exercise](strings-iterators.md))"
#~ msgstr "([voltar ao exerc√≠cio](strings-iterators.md))"

#~ msgid "Day 3 Morning Exercise"
#~ msgstr "Dia 3 Exerc√≠cio matinal"

#~ msgid "([back to exercise](simple-gui.md))"
#~ msgstr "([voltar ao exerc√≠cio](simple-gui.md))"

#~ msgid "Day 3 Afternoon Exercises"
#~ msgstr "Dia 3 Exerc√≠cios da Tarde"

#~ msgid "([back to exercise](safe-ffi-wrapper.md))"
#~ msgstr "([voltar ao exerc√≠cio](safe-ffi-wrapper.md))"
