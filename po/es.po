msgid ""
msgstr ""
"Project-Id-Version: Comprehensive Rust ü¶Ä\n"
"POT-Creation-Date: 2024-01-24T15:37:30-08:00\n"
"PO-Revision-Date: \n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Poedit 3.4\n"

#: src/SUMMARY.md src/index.md
msgid "Welcome to Comprehensive Rust ü¶Ä"
msgstr "Te damos la bienvenida a Comprehensive Rust ü¶Ä"

#: src/SUMMARY.md src/running-the-course.md
msgid "Running the Course"
msgstr "Desarrollo del curso"

#: src/SUMMARY.md src/running-the-course/course-structure.md
msgid "Course Structure"
msgstr "Estructura del curso"

#: src/SUMMARY.md src/running-the-course/keyboard-shortcuts.md
msgid "Keyboard Shortcuts"
msgstr "Combinaciones de teclas"

#: src/SUMMARY.md src/running-the-course/translations.md
msgid "Translations"
msgstr "Traducciones"

#: src/SUMMARY.md src/cargo.md
msgid "Using Cargo"
msgstr "Usando Cargo"

#: src/SUMMARY.md
msgid "Rust Ecosystem"
msgstr "Ecosistema Rust"

#: src/SUMMARY.md
msgid "Code Samples"
msgstr "Ejemplos de C√≥digo"

#: src/SUMMARY.md
msgid "Running Cargo Locally"
msgstr "Ejecutar Cargo a nivel local"

#: src/SUMMARY.md
msgid "Day 1: Morning"
msgstr "D√≠a 1: ma√±ana"

#: src/SUMMARY.md
msgid "Welcome"
msgstr "Te damos la bienvenida"

#: src/SUMMARY.md src/hello-world.md src/hello-world/hello-world.md
#, fuzzy
msgid "Hello, World"
msgstr "¬°Hola, mundo!"

#: src/SUMMARY.md src/hello-world/what-is-rust.md
msgid "What is Rust?"
msgstr "¬øQu√© es Rust?"

#: src/SUMMARY.md src/hello-world/benefits.md
msgid "Benefits of Rust"
msgstr ""

#: src/SUMMARY.md src/hello-world/playground.md
msgid "Playground"
msgstr ""

#: src/SUMMARY.md src/types-and-values.md
msgid "Types and Values"
msgstr ""

#: src/SUMMARY.md src/types-and-values/variables.md
msgid "Variables"
msgstr "Variables"

#: src/SUMMARY.md src/types-and-values/values.md
msgid "Values"
msgstr ""

#: src/SUMMARY.md src/types-and-values/arithmetic.md
msgid "Arithmetic"
msgstr ""

#: src/SUMMARY.md src/types-and-values/strings.md
msgid "Strings"
msgstr "Cadenas de texto (_Strings_)"

#: src/SUMMARY.md src/types-and-values/inference.md
msgid "Type Inference"
msgstr "Inferencia de tipos"

#: src/SUMMARY.md src/types-and-values/exercise.md
msgid "Exercise: Fibonacci"
msgstr ""

#: src/SUMMARY.md src/types-and-values/solution.md
#: src/control-flow-basics/solution.md src/tuples-and-arrays/solution.md
#: src/references/solution.md src/user-defined-types/solution.md
#: src/pattern-matching/solution.md src/methods-and-traits/solution.md
#: src/generics/solution.md src/std-types/solution.md
#: src/std-traits/solution.md src/memory-management/solution.md
#: src/smart-pointers/solution.md src/borrowing/solution.md
#: src/slices-and-lifetimes/solution.md src/iterators/solution.md
#: src/modules/solution.md src/testing/solution.md
#: src/error-handling/solution.md src/unsafe-rust/solution.md
#, fuzzy
msgid "Solution"
msgstr "Soluciones"

#: src/SUMMARY.md src/control-flow-basics.md
#, fuzzy
msgid "Control Flow Basics"
msgstr "Control de Flujo"

#: src/SUMMARY.md src/control-flow-basics/conditionals.md
msgid "Conditionals"
msgstr ""

#: src/SUMMARY.md src/control-flow-basics/loops.md
#, fuzzy
msgid "Loops"
msgstr "Bucles `for`"

#: src/SUMMARY.md src/control-flow-basics/break-continue.md
msgid "`break` and `continue`"
msgstr "`break` y `continue`"

#: src/SUMMARY.md src/control-flow-basics/blocks-and-scopes.md
msgid "Blocks and Scopes"
msgstr ""

#: src/SUMMARY.md src/control-flow-basics/functions.md
msgid "Functions"
msgstr "Funciones"

#: src/SUMMARY.md src/control-flow-basics/macros.md
msgid "Macros"
msgstr ""

#: src/SUMMARY.md src/control-flow-basics/exercise.md
msgid "Exercise: Collatz Sequence"
msgstr ""

#: src/SUMMARY.md
msgid "Day 1: Afternoon"
msgstr "D√≠a 1: Tarde"

#: src/SUMMARY.md src/tuples-and-arrays.md
#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Tuples and Arrays"
msgstr ""

#: src/SUMMARY.md src/tuples-and-arrays/iteration.md
#, fuzzy
msgid "Array Iteration"
msgstr "Integraci√≥n de Cargo"

#: src/SUMMARY.md src/tuples-and-arrays/match.md src/pattern-matching.md
msgid "Pattern Matching"
msgstr "Correspondencia de Patrones"

#: src/SUMMARY.md src/tuples-and-arrays/destructuring.md
#: src/pattern-matching/destructuring.md
#, fuzzy
msgid "Destructuring"
msgstr "Desestructurando Enums"

#: src/SUMMARY.md src/tuples-and-arrays/exercise.md
msgid "Exercise: Nested Arrays"
msgstr ""

#: src/SUMMARY.md src/references.md
msgid "References"
msgstr "Referencias"

#: src/SUMMARY.md src/references/shared.md
#, fuzzy
msgid "Shared References"
msgstr "Referencias"

#: src/SUMMARY.md src/references/exclusive.md
#, fuzzy
msgid "Exclusive References"
msgstr "Referencias colgantes"

#: src/SUMMARY.md src/references/exercise.md
msgid "Exercise: Geometry"
msgstr ""

#: src/SUMMARY.md src/user-defined-types.md
msgid "User-Defined Types"
msgstr ""

#: src/SUMMARY.md src/user-defined-types/named-structs.md
#, fuzzy
msgid "Named Structs"
msgstr "Structs"

#: src/SUMMARY.md src/user-defined-types/tuple-structs.md
msgid "Tuple Structs"
msgstr "Estructuras de tuplas"

#: src/SUMMARY.md src/user-defined-types/enums.md
#: src/pattern-matching/destructuring.md
msgid "Enums"
msgstr ""

#: src/SUMMARY.md src/user-defined-types/static-and-const.md
#, fuzzy
msgid "Static and Const"
msgstr "static y const"

#: src/SUMMARY.md src/user-defined-types/aliases.md
msgid "Type Aliases"
msgstr ""

#: src/SUMMARY.md src/user-defined-types/exercise.md
msgid "Exercise: Elevator Events"
msgstr ""

#: src/SUMMARY.md
msgid "Day 2: Morning"
msgstr "D√≠a 2: Ma√±ana"

#: src/SUMMARY.md src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "Let Control Flow"
msgstr "Control de Flujo"

#: src/SUMMARY.md src/pattern-matching/exercise.md
msgid "Exercise: Expression Evaluation"
msgstr ""

#: src/SUMMARY.md src/methods-and-traits.md
#, fuzzy
msgid "Methods and Traits"
msgstr "Read y Write"

#: src/SUMMARY.md src/methods-and-traits/methods.md
msgid "Methods"
msgstr "M√©todos"

#: src/SUMMARY.md src/methods-and-traits/traits.md
msgid "Traits"
msgstr "Traits"

#: src/SUMMARY.md src/methods-and-traits/deriving.md
#, fuzzy
msgid "Deriving"
msgstr "Derivaci√≥n de Traits"

#: src/SUMMARY.md src/methods-and-traits/trait-objects.md
msgid "Trait Objects"
msgstr "Objetos Trait"

#: src/SUMMARY.md src/methods-and-traits/exercise.md
msgid "Exercise: Generic Logger"
msgstr ""

#: src/SUMMARY.md src/generics.md
msgid "Generics"
msgstr "Gen√©ricos"

#: src/SUMMARY.md src/generics/generic-functions.md
#, fuzzy
msgid "Generic Functions"
msgstr "Funciones Externas"

#: src/SUMMARY.md src/generics/generic-data.md
msgid "Generic Data Types"
msgstr "Tipos de Datos Gen√©ricos"

#: src/SUMMARY.md src/generics/trait-bounds.md
msgid "Trait Bounds"
msgstr "Trait Bounds"

#: src/SUMMARY.md src/generics/impl-trait.md
msgid "`impl Trait`"
msgstr "`impl Trait`"

#: src/SUMMARY.md src/generics/exercise.md
msgid "Exercise: Generic `min`"
msgstr ""

#: src/SUMMARY.md
msgid "Day 2: Afternoon"
msgstr "D√≠a 2: tarde"

#: src/SUMMARY.md src/std-types.md
#, fuzzy
msgid "Standard Library Types"
msgstr "Biblioteca est√°ndar"

#: src/SUMMARY.md src/std-types/std.md
msgid "Standard Library"
msgstr "Biblioteca est√°ndar"

#: src/SUMMARY.md src/std-types/docs.md
#, fuzzy
msgid "Documentation"
msgstr "Pruebas de Documentaci√≥n"

#: src/SUMMARY.md
#, fuzzy
msgid "`Option`"
msgstr "`Duration`"

#: src/SUMMARY.md
#, fuzzy
msgid "`Result`"
msgstr "`Option`, `Result`"

#: src/SUMMARY.md src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`String`"
msgstr "String"

#: src/SUMMARY.md src/std-types/vec.md
msgid "`Vec`"
msgstr "`Vec`"

#: src/SUMMARY.md src/std-types/hashmap.md src/bare-metal/no_std.md
msgid "`HashMap`"
msgstr "`HashMap`"

#: src/SUMMARY.md src/std-types/exercise.md
#, fuzzy
msgid "Exercise: Counter"
msgstr "Ejercicios"

#: src/SUMMARY.md src/std-traits.md
#, fuzzy
msgid "Standard Library Traits"
msgstr "Biblioteca est√°ndar"

#: src/SUMMARY.md src/std-traits/comparisons.md src/async.md
msgid "Comparisons"
msgstr "Comparaciones"

#: src/SUMMARY.md src/std-traits/operators.md
#, fuzzy
msgid "Operators"
msgstr "Iteradores"

#: src/SUMMARY.md src/std-traits/from-and-into.md
msgid "`From` and `Into`"
msgstr "`From` e `Into`"

#: src/SUMMARY.md src/std-traits/casting.md
#, fuzzy
msgid "Casting"
msgstr "Probando"

#: src/SUMMARY.md src/std-traits/read-and-write.md
msgid "`Read` and `Write`"
msgstr "`Read` y `Write`"

#: src/SUMMARY.md
msgid "`Default`, struct update syntax"
msgstr ""

#: src/SUMMARY.md src/std-traits/closures.md
msgid "Closures"
msgstr "Cierres"

#: src/SUMMARY.md src/std-traits/exercise.md
#, fuzzy
msgid "Exercise: ROT13"
msgstr "Ejercicios"

#: src/SUMMARY.md
msgid "Day 3: Morning"
msgstr "D√≠a 3: Ma√±ana"

#: src/SUMMARY.md src/memory-management.md
msgid "Memory Management"
msgstr "Manejo de Memoria"

#: src/SUMMARY.md src/memory-management/review.md
msgid "Review of Program Memory"
msgstr ""

#: src/SUMMARY.md src/memory-management/approaches.md
#, fuzzy
msgid "Approaches to Memory Management"
msgstr "Gesti√≥n Autom√°tica de la Memoria"

#: src/SUMMARY.md src/memory-management/ownership.md
msgid "Ownership"
msgstr "Ownership"

#: src/SUMMARY.md src/memory-management/move.md
msgid "Move Semantics"
msgstr "Sem√°ntica de movimiento"

#: src/SUMMARY.md
msgid "`Clone`"
msgstr ""

#: src/SUMMARY.md src/memory-management/copy-types.md
#, fuzzy
msgid "Copy Types"
msgstr "Tipos compuestos"

#: src/SUMMARY.md
msgid "`Drop`"
msgstr ""

#: src/SUMMARY.md src/memory-management/exercise.md
msgid "Exercise: Builder Type"
msgstr ""

#: src/SUMMARY.md src/smart-pointers.md
msgid "Smart Pointers"
msgstr ""

#: src/SUMMARY.md src/smart-pointers/box.md
#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`Box<T>`"
msgstr "`Box`"

#: src/SUMMARY.md src/smart-pointers/rc.md
msgid "`Rc`"
msgstr "`Rc`"

#: src/SUMMARY.md src/smart-pointers/exercise.md
msgid "Exercise: Binary Tree"
msgstr ""

#: src/SUMMARY.md
msgid "Day 3: Afternoon"
msgstr "D√≠a 3: Tarde"

#: src/SUMMARY.md src/borrowing.md
msgid "Borrowing"
msgstr "Pr√©stamos (_Borrowing_)"

#: src/SUMMARY.md src/borrowing/shared.md
#, fuzzy
msgid "Borrowing a Value"
msgstr "Pr√©stamos (_Borrowing_)"

#: src/SUMMARY.md src/borrowing/borrowck.md
#, fuzzy
msgid "Borrow Checking"
msgstr "Pr√©stamos (_Borrowing_)"

#: src/SUMMARY.md src/borrowing/interior-mutability.md
#, fuzzy
msgid "Interior Mutability"
msgstr "Interoperabilidad"

#: src/SUMMARY.md src/borrowing/exercise.md
#, fuzzy
msgid "Exercise: Health Statistics"
msgstr "Estad√≠sticas de salud"

#: src/SUMMARY.md src/slices-and-lifetimes.md
#, fuzzy
msgid "Slices and Lifetimes"
msgstr "Tiempos de vida"

#: src/SUMMARY.md
#, fuzzy
msgid "Slices: `&[T]`"
msgstr "Slices"

#: src/SUMMARY.md src/slices-and-lifetimes/str.md
#, fuzzy
msgid "String References"
msgstr "Referencias colgantes"

#: src/SUMMARY.md src/slices-and-lifetimes/lifetime-annotations.md
#, fuzzy
msgid "Lifetime Annotations"
msgstr "Tiempos de Vida en Llamadas a Funci√≥n"

#: src/SUMMARY.md
#, fuzzy
msgid "Lifetime Elision"
msgstr "Tiempos de vida"

#: src/SUMMARY.md
#, fuzzy
msgid "Struct Lifetimes"
msgstr "Tiempos de vida"

#: src/SUMMARY.md src/slices-and-lifetimes/exercise.md
msgid "Exercise: Protobuf Parsing"
msgstr ""

#: src/SUMMARY.md
msgid "Day 4: Morning"
msgstr "D√≠a 4: Ma√±ana"

#: src/SUMMARY.md src/iterators.md
msgid "Iterators"
msgstr "Iteradores"

#: src/SUMMARY.md src/iterators/iterator.md src/bare-metal/no_std.md
msgid "`Iterator`"
msgstr "`Iterator`"

#: src/SUMMARY.md src/iterators/intoiterator.md
msgid "`IntoIterator`"
msgstr "`IntoIterator`"

#: src/SUMMARY.md
#, fuzzy
msgid "`FromIterator`"
msgstr "FromIterator"

#: src/SUMMARY.md src/iterators/exercise.md
msgid "Exercise: Iterator Method Chaining"
msgstr ""

#: src/SUMMARY.md src/modules.md src/modules/modules.md
msgid "Modules"
msgstr "M√≥dulos"

#: src/SUMMARY.md src/modules/filesystem.md
msgid "Filesystem Hierarchy"
msgstr "Jerarqu√≠a del sistema de archivos"

#: src/SUMMARY.md src/modules/visibility.md
msgid "Visibility"
msgstr "Visibilidad"

#: src/SUMMARY.md
msgid "`use`, `super`, `self`"
msgstr ""

#: src/SUMMARY.md src/modules/exercise.md
msgid "Exercise: Modules for a GUI Library"
msgstr ""

#: src/SUMMARY.md src/testing.md src/chromium/testing.md
msgid "Testing"
msgstr "Probando"

#: src/SUMMARY.md
msgid "Test Modules"
msgstr "M√≥dulos de Pruebas"

#: src/SUMMARY.md src/testing/other.md
#, fuzzy
msgid "Other Types of Tests"
msgstr "Otros proyectos"

#: src/SUMMARY.md src/testing/useful-crates.md
msgid "Useful Crates"
msgstr "Crates √∫tiles"

#: src/SUMMARY.md src/testing/googletest.md
msgid "GoogleTest"
msgstr ""

#: src/SUMMARY.md src/testing/mocking.md
msgid "Mocking"
msgstr ""

#: src/SUMMARY.md src/testing/lints.md
msgid "Compiler Lints and Clippy"
msgstr ""

#: src/SUMMARY.md src/testing/exercise.md
#, fuzzy
msgid "Exercise: Luhn Algorithm"
msgstr "Algoritmo de Luhn"

#: src/SUMMARY.md
msgid "Day 4: Afternoon"
msgstr "D√≠a 4: Tarde"

#: src/SUMMARY.md src/error-handling.md
msgid "Error Handling"
msgstr "Manejo de Errores"

#: src/SUMMARY.md src/error-handling/panics.md
msgid "Panics"
msgstr ""

#: src/SUMMARY.md src/error-handling/try.md
#, fuzzy
msgid "Try Operator"
msgstr "Iteradores"

#: src/SUMMARY.md src/error-handling/try-conversions.md
#, fuzzy
msgid "Try Conversions"
msgstr "Conversiones Impl√≠citas"

#: src/SUMMARY.md
#, fuzzy
msgid "`Error` Trait"
msgstr "`Error`"

#: src/SUMMARY.md src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid "`thiserror` and `anyhow`"
msgstr "`From` e `Into`"

#: src/SUMMARY.md
#, fuzzy
msgid "Exercise: Rewriting with `Result`"
msgstr "Gesti√≥n Estructurada de Errores con `Result`"

#: src/SUMMARY.md src/unsafe-rust.md src/unsafe-rust/unsafe.md
msgid "Unsafe Rust"
msgstr "Unsafe Rust"

#: src/SUMMARY.md
#, fuzzy
msgid "Unsafe"
msgstr "Unsafe Rust"

#: src/SUMMARY.md src/unsafe-rust/dereferencing.md
msgid "Dereferencing Raw Pointers"
msgstr "Dereferenciaci√≥n de Punteros Sin Formato"

#: src/SUMMARY.md src/unsafe-rust/mutable-static.md
msgid "Mutable Static Variables"
msgstr "Variables Est√°ticas Mutables"

#: src/SUMMARY.md src/unsafe-rust/unions.md
msgid "Unions"
msgstr "Uniones"

#: src/SUMMARY.md src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid "Unsafe Functions"
msgstr "Llamar Funciones Unsafe (Inseguras)"

#: src/SUMMARY.md
#, fuzzy
msgid "Unsafe Traits"
msgstr "Implementaci√≥n de Traits Unsafe (Inseguras) "

#: src/SUMMARY.md
#, fuzzy
msgid "Exercise: FFI Wrapper"
msgstr "Envoltorio de FFI Seguro"

#: src/SUMMARY.md src/bare-metal/android.md
msgid "Android"
msgstr ""

#: src/SUMMARY.md src/android/setup.md src/chromium/setup.md
msgid "Setup"
msgstr "Configurar"

#: src/SUMMARY.md src/android/build-rules.md
msgid "Build Rules"
msgstr "Reglas de Compilaci√≥n (Build)"

#: src/SUMMARY.md
msgid "Binary"
msgstr "Binarios"

#: src/SUMMARY.md
msgid "Library"
msgstr "Biblioteca"

#: src/SUMMARY.md src/android/aidl.md
msgid "AIDL"
msgstr ""

#: src/SUMMARY.md
msgid "Interface"
msgstr "Interfaz"

#: src/SUMMARY.md
msgid "Implementation"
msgstr "Implementaci√≥n"

#: src/SUMMARY.md
msgid "Server"
msgstr "Servidor"

#: src/SUMMARY.md src/android/aidl/deploy.md
msgid "Deploy"
msgstr "Despliegue"

#: src/SUMMARY.md
msgid "Client"
msgstr "Cliente"

#: src/SUMMARY.md src/android/aidl/changing.md
msgid "Changing API"
msgstr "Cambio de API"

#: src/SUMMARY.md src/android/logging.md src/bare-metal/aps/logging.md
msgid "Logging"
msgstr "Almacenamiento de registros"

#: src/SUMMARY.md src/android/interoperability.md
msgid "Interoperability"
msgstr "Interoperabilidad"

#: src/SUMMARY.md
msgid "With C"
msgstr "Con C"

#: src/SUMMARY.md
msgid "Calling C with Bindgen"
msgstr "Llamar a C con Bindgen"

#: src/SUMMARY.md
msgid "Calling Rust from C"
msgstr "Llamar a Rust desde C"

#: src/SUMMARY.md src/android/interoperability/cpp.md
msgid "With C++"
msgstr "Con C++"

#: src/SUMMARY.md src/android/interoperability/cpp/bridge.md
#, fuzzy
msgid "The Bridge Module"
msgstr "M√≥dulos de Pruebas"

#: src/SUMMARY.md
#, fuzzy
msgid "Rust Bridge"
msgstr "Binarios de Rust"

#: src/SUMMARY.md src/android/interoperability/cpp/generated-cpp.md
msgid "Generated C++"
msgstr ""

#: src/SUMMARY.md
msgid "C++ Bridge"
msgstr ""

#: src/SUMMARY.md src/android/interoperability/cpp/shared-types.md
#, fuzzy
msgid "Shared Types"
msgstr "Tipos escalares"

#: src/SUMMARY.md src/android/interoperability/cpp/shared-enums.md
msgid "Shared Enums"
msgstr ""

#: src/SUMMARY.md src/android/interoperability/cpp/rust-result.md
#, fuzzy
msgid "Rust Error Handling"
msgstr "Manejo de Errores"

#: src/SUMMARY.md src/android/interoperability/cpp/cpp-exception.md
#, fuzzy
msgid "C++ Error Handling"
msgstr "Manejo de Errores"

#: src/SUMMARY.md src/android/interoperability/cpp/type-mapping.md
msgid "Additional Types"
msgstr ""

#: src/SUMMARY.md
msgid "Building for Android: C++"
msgstr ""

#: src/SUMMARY.md
#, fuzzy
msgid "Building for Android: Genrules"
msgstr "Construir componentes en Rust."

#: src/SUMMARY.md
#, fuzzy
msgid "Building for Android: Rust"
msgstr "Construir componentes en Rust."

#: src/SUMMARY.md
msgid "With Java"
msgstr "Con Java"

#: src/SUMMARY.md src/exercises/android/morning.md
#: src/exercises/bare-metal/morning.md src/exercises/bare-metal/afternoon.md
#: src/exercises/concurrency/morning.md src/exercises/concurrency/afternoon.md
msgid "Exercises"
msgstr "Ejercicios"

#: src/SUMMARY.md
msgid "Chromium"
msgstr ""

#: src/SUMMARY.md src/chromium/cargo.md
msgid "Comparing Chromium and Cargo Ecosystems"
msgstr ""

#: src/SUMMARY.md
msgid "Policy"
msgstr ""

#: src/SUMMARY.md
#, fuzzy
msgid "Unsafe Code"
msgstr "Unsafe Rust"

#: src/SUMMARY.md src/chromium/build-rules/depending.md
msgid "Depending on Rust Code from Chromium C++"
msgstr ""

#: src/SUMMARY.md src/chromium/build-rules/vscode.md
msgid "Visual Studio Code"
msgstr ""

#: src/SUMMARY.md src/exercises/chromium/third-party.md
#, fuzzy
msgid "Exercise"
msgstr "Ejercicios"

#: src/SUMMARY.md src/chromium/testing/rust-gtest-interop.md
msgid "`rust_gtest_interop` Library"
msgstr ""

#: src/SUMMARY.md src/chromium/testing/build-gn.md
msgid "GN Rules for Rust Tests"
msgstr ""

#: src/SUMMARY.md src/chromium/testing/chromium-import-macro.md
msgid "`chromium::import!` Macro"
msgstr ""

#: src/SUMMARY.md src/chromium/interoperability-with-cpp.md
#, fuzzy
msgid "Interoperability with C++"
msgstr "Interoperabilidad con C"

#: src/SUMMARY.md src/chromium/interoperability-with-cpp/example-bindings.md
#, fuzzy
msgid "Example Bindings"
msgstr "Ejemplos"

#: src/SUMMARY.md src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid "Limitations of CXX"
msgstr ""

#: src/SUMMARY.md src/chromium/interoperability-with-cpp/error-handling.md
#, fuzzy
msgid "CXX Error Handling"
msgstr "Manejo de Errores"

#: src/SUMMARY.md
#, fuzzy
msgid "Error Handling: QR Example"
msgstr "Manejo de Errores"

#: src/SUMMARY.md
#, fuzzy
msgid "Error Handling: PNG Example"
msgstr "Manejo de Errores"

#: src/SUMMARY.md
msgid "Using CXX in Chromium"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates.md
msgid "Adding Third Party Crates"
msgstr ""

#: src/SUMMARY.md
msgid "Configuring Cargo.toml"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid "Configuring `gnrt_config.toml`"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates/downloading-crates.md
msgid "Downloading Crates"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid "Generating `gn` Build Rules"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Resolving Problems"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid "Build Scripts Which Generate Code"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "Build Scripts Which Build C++ or Take Arbitrary Actions"
msgstr ""

#: src/SUMMARY.md
#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid "Depending on a Crate"
msgstr ""

#: src/SUMMARY.md
msgid "Reviews and Audits"
msgstr ""

#: src/SUMMARY.md
msgid "Checking into Chromium Source Code"
msgstr ""

#: src/SUMMARY.md src/chromium/adding-third-party-crates/keeping-up-to-date.md
msgid "Keeping Crates Up to Date"
msgstr ""

#: src/SUMMARY.md
msgid "Bringing It Together - Exercise"
msgstr ""

#: src/SUMMARY.md src/exercises/chromium/solutions.md
#, fuzzy
msgid "Exercise Solutions"
msgstr "Soluciones"

#: src/SUMMARY.md
msgid "Bare Metal: Morning"
msgstr "Bare Metal: ma√±ana"

#: src/SUMMARY.md src/bare-metal/no_std.md
msgid "`no_std`"
msgstr "`no_std`"

#: src/SUMMARY.md
msgid "A Minimal Example"
msgstr "Un Peque√±o Ejemplo"

#: src/SUMMARY.md src/bare-metal/no_std.md src/bare-metal/alloc.md
msgid "`alloc`"
msgstr "`alloc`"

#: src/SUMMARY.md src/bare-metal/microcontrollers.md
msgid "Microcontrollers"
msgstr "Microcontroladores"

#: src/SUMMARY.md src/bare-metal/microcontrollers/mmio.md
msgid "Raw MMIO"
msgstr "MMIO sin procesar"

#: src/SUMMARY.md
msgid "PACs"
msgstr "PAC"

#: src/SUMMARY.md
msgid "HAL Crates"
msgstr "Crates HAL"

#: src/SUMMARY.md
msgid "Board Support Crates"
msgstr "Crates de Soporte de Placa"

#: src/SUMMARY.md
msgid "The Type State Pattern"
msgstr "El Patr√≥n de Tipo de Estado"

#: src/SUMMARY.md src/bare-metal/microcontrollers/embedded-hal.md
msgid "`embedded-hal`"
msgstr "`embedded-hal`"

#: src/SUMMARY.md src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid "`probe-rs` and `cargo-embed`"
msgstr "`probe-rs`, `cargo-embed`"

#: src/SUMMARY.md src/bare-metal/microcontrollers/debugging.md
msgid "Debugging"
msgstr "Depuraci√≥n"

#: src/SUMMARY.md
msgid "Other Projects"
msgstr "Otros proyectos"

#: src/SUMMARY.md src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "Compass"
msgstr "Br√∫jula"

#: src/SUMMARY.md
msgid "Solutions"
msgstr "Soluciones"

#: src/SUMMARY.md
msgid "Bare Metal: Afternoon"
msgstr "Bare Metal: tarde"

#: src/SUMMARY.md
msgid "Application Processors"
msgstr "Procesadores de aplicaciones"

#: src/SUMMARY.md src/bare-metal/aps/entry-point.md
msgid "Getting Ready to Rust"
msgstr "Iniciaci√≥n a Rust"

#: src/SUMMARY.md
msgid "Inline Assembly"
msgstr "Ensamblador en l√≠nea"

#: src/SUMMARY.md
msgid "MMIO"
msgstr "MMIO"

#: src/SUMMARY.md
msgid "Let's Write a UART Driver"
msgstr "Escribir un controlador UART"

#: src/SUMMARY.md
msgid "More Traits"
msgstr "M√°s traits"

#: src/SUMMARY.md
msgid "A Better UART Driver"
msgstr "Un controlador UART mejor"

#: src/SUMMARY.md src/bare-metal/aps/better-uart/bitflags.md
msgid "Bitflags"
msgstr "Bitflags"

#: src/SUMMARY.md
msgid "Multiple Registers"
msgstr "Varios registros"

#: src/SUMMARY.md src/bare-metal/aps/better-uart/driver.md
msgid "Driver"
msgstr "Conductor"

#: src/SUMMARY.md
msgid "Using It"
msgstr "C√≥mo usarlo"

#: src/SUMMARY.md src/bare-metal/aps/exceptions.md
msgid "Exceptions"
msgstr "Excepciones"

#: src/SUMMARY.md src/bare-metal/useful-crates/zerocopy.md
msgid "`zerocopy`"
msgstr "`zerocopy`"

#: src/SUMMARY.md src/bare-metal/useful-crates/aarch64-paging.md
msgid "`aarch64-paging`"
msgstr "`aarch64-paging`"

#: src/SUMMARY.md src/bare-metal/useful-crates/buddy_system_allocator.md
msgid "`buddy_system_allocator`"
msgstr "`buddy_system_allocator`"

#: src/SUMMARY.md src/bare-metal/useful-crates/tinyvec.md
msgid "`tinyvec`"
msgstr "`tinyvec`"

#: src/SUMMARY.md src/bare-metal/useful-crates/spin.md
msgid "`spin`"
msgstr "`spin`"

#: src/SUMMARY.md
#, fuzzy
msgid "`vmbase`"
msgstr "vmbase"

#: src/SUMMARY.md
msgid "RTC Driver"
msgstr "Controlador RTC"

#: src/SUMMARY.md
msgid "Concurrency: Morning"
msgstr "Concurrencia: ma√±ana"

#: src/SUMMARY.md src/concurrency/threads.md
msgid "Threads"
msgstr "Hilos"

#: src/SUMMARY.md src/concurrency/scoped-threads.md
msgid "Scoped Threads"
msgstr "Hilos con √°mbito"

#: src/SUMMARY.md src/concurrency/channels.md
msgid "Channels"
msgstr "Canales"

#: src/SUMMARY.md src/concurrency/channels/unbounded.md
msgid "Unbounded Channels"
msgstr "Canales sin l√≠mites"

#: src/SUMMARY.md src/concurrency/channels/bounded.md
msgid "Bounded Channels"
msgstr "Canales delimitados"

#: src/SUMMARY.md src/concurrency/send-sync.md
msgid "`Send` and `Sync`"
msgstr "`Send` y `Sync`"

#: src/SUMMARY.md src/concurrency/send-sync/send.md
msgid "`Send`"
msgstr "`Send`"

#: src/SUMMARY.md src/concurrency/send-sync/sync.md
msgid "`Sync`"
msgstr "`Sync`"

#: src/SUMMARY.md src/concurrency/send-sync/examples.md
msgid "Examples"
msgstr "Ejemplos"

#: src/SUMMARY.md src/concurrency/shared_state.md
msgid "Shared State"
msgstr "Estado compartido"

#: src/SUMMARY.md src/concurrency/shared_state/arc.md
msgid "`Arc`"
msgstr "`Arc`"

#: src/SUMMARY.md src/concurrency/shared_state/mutex.md
msgid "`Mutex`"
msgstr "`Mutex`"

#: src/SUMMARY.md src/memory-management/review.md
#: src/error-handling/try-conversions.md
#: src/concurrency/shared_state/example.md
msgid "Example"
msgstr "Ejemplo"

#: src/SUMMARY.md src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
msgid "Dining Philosophers"
msgstr "La cena de los fil√≥sofos"

#: src/SUMMARY.md src/exercises/concurrency/link-checker.md
msgid "Multi-threaded Link Checker"
msgstr "Comprobador de enlaces multihilo"

#: src/SUMMARY.md
msgid "Concurrency: Afternoon"
msgstr "Concurrencia: tarde"

#: src/SUMMARY.md
msgid "Async Basics"
msgstr "Conceptos b√°sicos de Async"

#: src/SUMMARY.md src/async/async-await.md
msgid "`async`/`await`"
msgstr "`async`/`await`"

#: src/SUMMARY.md src/async/futures.md
msgid "Futures"
msgstr "Future"

#: src/SUMMARY.md src/async/runtimes.md
msgid "Runtimes"
msgstr "Runtimes (Tiempos de Ejecuci√≥n)"

#: src/SUMMARY.md src/async/runtimes/tokio.md
msgid "Tokio"
msgstr "Tokio"

#: src/SUMMARY.md src/exercises/concurrency/link-checker.md src/async/tasks.md
#: src/exercises/concurrency/chat-app.md
msgid "Tasks"
msgstr "Tasks"

#: src/SUMMARY.md src/async/channels.md
msgid "Async Channels"
msgstr "Canales as√≠ncronos"

#: src/SUMMARY.md
msgid "Control Flow"
msgstr "Control de Flujo"

#: src/SUMMARY.md src/async/control-flow/join.md
msgid "Join"
msgstr "Unir"

#: src/SUMMARY.md src/async/control-flow/select.md
msgid "Select"
msgstr "Seleccionar"

#: src/SUMMARY.md
msgid "Pitfalls"
msgstr "Inconvenientes"

#: src/SUMMARY.md
msgid "Blocking the Executor"
msgstr "Bloqueo del ejecutor"

#: src/SUMMARY.md src/async/pitfalls/pin.md
msgid "`Pin`"
msgstr ""

#: src/SUMMARY.md src/async/pitfalls/async-traits.md
msgid "Async Traits"
msgstr "Traits as√≠ncronos"

#: src/SUMMARY.md src/async/pitfalls/cancellation.md
msgid "Cancellation"
msgstr "Cancelaci√≥n"

#: src/SUMMARY.md src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "Broadcast Chat Application"
msgstr "Aplicaci√≥n de chat de difusi√≥n"

#: src/SUMMARY.md
msgid "Final Words"
msgstr "Conclusiones"

#: src/SUMMARY.md src/thanks.md
msgid "Thanks!"
msgstr "Gracias."

#: src/SUMMARY.md src/glossary.md
msgid "Glossary"
msgstr ""

#: src/SUMMARY.md
msgid "Other Resources"
msgstr "Otros recursos"

#: src/SUMMARY.md src/credits.md
msgid "Credits"
msgstr "Cr√©ditos"

#: src/index.md
msgid ""
"[![Build workflow](https://img.shields.io/github/actions/workflow/status/"
"google/comprehensive-rust/build.yml?style=flat-square)](https://github.com/"
"google/comprehensive-rust/actions/workflows/build.yml?query=branch%3Amain) [!"
"[GitHub contributors](https://img.shields.io/github/contributors/google/"
"comprehensive-rust?style=flat-square)](https://github.com/google/"
"comprehensive-rust/graphs/contributors) [![GitHub stars](https://img.shields."
"io/github/stars/google/comprehensive-rust?style=flat-square)](https://github."
"com/google/comprehensive-rust/stargazers)"
msgstr ""

#: src/index.md
msgid ""
"This is a free Rust course developed by the Android team at Google. The "
"course covers the full spectrum of Rust, from basic syntax to advanced "
"topics like generics and error handling."
msgstr ""
"Este es un curso de Rust de tres d√≠as que ha desarrollado el equipo de "
"Android de Google. El curso abarca todo lo relacionado con Rust, desde la "
"sintaxis b√°sica hasta temas avanzados como los gen√©ricos y la gesti√≥n de "
"errores. Tambi√©n incluye contenidos espec√≠ficos de Android el √∫ltimo d√≠a."

#: src/index.md
msgid ""
"The latest version of the course can be found at <https://google.github.io/"
"comprehensive-rust/>. If you are reading somewhere else, please check there "
"for updates."
msgstr ""
"La √∫ltima versi√≥n del curso se puede encontrar en <https://google.github.io/"
"comprehensive-rust/>. Si lo est√°s leyendo en otro lugar, consulta all√≠ para "
"obtener actualizaciones."

#: src/index.md
msgid ""
"The goal of the course is to teach you Rust. We assume you don't know "
"anything about Rust and hope to:"
msgstr ""
"El objetivo del curso es ense√±arte Rust. Suponemos que no sabes nada sobre "
"Rust y esperamos lograr lo siguiente:"

#: src/index.md
msgid "Give you a comprehensive understanding of the Rust syntax and language."
msgstr "Darte un entendimiento comprensivo de la sintaxis y lenguaje Rust."

#: src/index.md
msgid "Enable you to modify existing programs and write new programs in Rust."
msgstr "Permitirte modificar programas de Rust y escribir otros nuevos."

#: src/index.md
msgid "Show you common Rust idioms."
msgstr "Brindarte idiom√°tica propia de Rust."

#: src/index.md
#, fuzzy
msgid "We call the first four course days Rust Fundamentals."
msgstr "Llamamos a los tres primeros d√≠as del curso Fundamentos de Rust."

#: src/index.md
msgid ""
"Building on this, you're invited to dive into one or more specialized topics:"
msgstr ""
"Bas√°ndonos en esto, te invitamos a profundizar en uno o m√°s temas "
"especializados:"

#: src/index.md
msgid ""
"[Android](android.md): a half-day course on using Rust for Android platform "
"development (AOSP). This includes interoperability with C, C++, and Java."
msgstr ""
"[Android](android.md): un curso de medio d√≠a sobre el uso de Rust en el "
"desarrollo de la plataforma Android (AOSP). En √©l se incluye la "
"interoperabilidad con C, C++ y Java."

#: src/index.md
#, fuzzy
msgid ""
"[Chromium](chromium.md): a half-day course on using Rust within Chromium "
"based browsers. This includes interoperability with C++ and how to include "
"third-party crates in Chromium."
msgstr ""
"[Android](android.md): un curso de medio d√≠a sobre el uso de Rust en el "
"desarrollo de la plataforma Android (AOSP). En √©l se incluye la "
"interoperabilidad con C, C++ y Java."

#: src/index.md
msgid ""
"[Bare-metal](bare-metal.md): a whole-day class on using Rust for bare-metal "
"(embedded) development. Both microcontrollers and application processors are "
"covered."
msgstr ""
"[Bare Metal](bare-metal.md): una clase de un d√≠a sobre el uso de Rust para "
"el desarrollo bare-metal (insertado). Se tratar√°n tanto los "
"microcontroladores como los procesadores de aplicaciones."

#: src/index.md
msgid ""
"[Concurrency](concurrency.md): a whole-day class on concurrency in Rust. We "
"cover both classical concurrency (preemptively scheduling using threads and "
"mutexes) and async/await concurrency (cooperative multitasking using "
"futures)."
msgstr ""
"[Concurrencia](concurrency.md): una clase de un d√≠a sobre concurrencia en "
"Rust. Abordaremos tanto la concurrencia cl√°sica (programaci√≥n interrumpible "
"mediante hilos y exclusiones mutuas), como la concurrencia async / await "
"(multitarea cooperativa mediante traits future)."

#: src/index.md
msgid "Non-Goals"
msgstr "Objetivos que no trataremos"

#: src/index.md
msgid ""
"Rust is a large language and we won't be able to cover all of it in a few "
"days. Some non-goals of this course are:"
msgstr ""
"Rust es un lenguaje muy amplio y no podremos abarcarlo todo en unos pocos "
"d√≠as. Algunos de los objetivos que no se plantean en este curso son los "
"siguientes:"

#: src/index.md
msgid ""
"Learning how to develop macros: please see [Chapter 19.5 in the Rust Book]"
"(https://doc.rust-lang.org/book/ch19-06-macros.html) and [Rust by Example]"
"(https://doc.rust-lang.org/rust-by-example/macros.html) instead."
msgstr ""
"Aprender a desarrollar macros: consulta el [cap√≠tulo 19.5 del Libro de Rust ]"
"(https://doc.rust-lang.org/book/ch19-06-macros.html) y [Rust by Example]"
"(https://doc.rust-lang.org/rust-by-example/macros.html)."

#: src/index.md
msgid "Assumptions"
msgstr "Suposiciones"

#: src/index.md
msgid ""
"The course assumes that you already know how to program. Rust is a "
"statically-typed language and we will sometimes make comparisons with C and "
"C++ to better explain or contrast the Rust approach."
msgstr ""
"El curso presupone que ya sabes programar. Rust es un lenguaje est√°ticamente "
"tipado y, a veces, haremos comparaciones con C y C++ para explicarlo mejor o "
"contrastar nuestro enfoque."

#: src/index.md
msgid ""
"If you know how to program in a dynamically-typed language such as Python or "
"JavaScript, then you will be able to follow along just fine too."
msgstr ""
"Si sabes programar en un lenguaje din√°micamente tipado, como Python o "
"JavaScript, podr√°s seguir el ritmo sin problema."

#: src/index.md
msgid ""
"This is an example of a _speaker note_. We will use these to add additional "
"information to the slides. This could be key points which the instructor "
"should cover as well as answers to typical questions which come up in class."
msgstr ""
"Este es un ejemplo de una _nota del orador_. Las utilizaremos para a√±adir "
"informaci√≥n adicional a las diapositivas. Puede tratarse de puntos clave que "
"el instructor deber√≠a tratar, as√≠ como de respuestas a preguntas frecuentes "
"que surgen en clase."

#: src/running-the-course.md src/running-the-course/course-structure.md
msgid "This page is for the course instructor."
msgstr "Esta p√°gina est√° dirigida al instructor del curso."

#: src/running-the-course.md
msgid ""
"Here is a bit of background information about how we've been running the "
"course internally at Google."
msgstr ""
"A continuaci√≥n, te ofrecemos informaci√≥n general sobre c√≥mo se ha "
"desarrollado el curso en Google."

#: src/running-the-course.md
#, fuzzy
msgid ""
"We typically run classes from 9:00 am to 4:00 pm, with a 1 hour lunch break "
"in the middle. This leaves 3 hours for the morning class and 3 hours for the "
"afternoon class. Both sessions contain multiple breaks and time for students "
"to work on exercises."
msgstr ""
"Normalmente, impartimos las clases de 10:00 a 16:00, con una pausa para "
"comer de una hora. Esto deja 2,5 horas para la clase de la ma√±ana y 2,5 "
"horas para la clase de la tarde. Ten en cuenta que esta es solo una "
"recomendaci√≥n: tambi√©n puedes dedicar 3 horas a la sesi√≥n de la ma√±ana para "
"dar a la gente m√°s tiempo para los ejercicios. El inconveniente de las "
"sesiones m√°s largas es que la gente puede cansarse mucho despu√©s de 6 horas "
"completas de clase por la tarde."

#: src/running-the-course.md
msgid "Before you run the course, you will want to:"
msgstr "Antes de impartir el curso, te recomdamos hacer lo siguiente:"

#: src/running-the-course.md
msgid ""
"Make yourself familiar with the course material. We've included speaker "
"notes to help highlight the key points (please help us by contributing more "
"speaker notes!). When presenting, you should make sure to open the speaker "
"notes in a popup (click the link with a little arrow next to \"Speaker "
"Notes\"). This way you have a clean screen to present to the class."
msgstr ""
"Familiar√≠zate con el material del curso. Hemos incluido notas del orador "
"para destacar los puntos clave (ay√∫danos a a√±adir m√°s notas de este tipo). "
"Cuando hagas una presentaci√≥n, aseg√∫rate de abrir las notas del orador en "
"una ventana emergente (haz clic en el enlace que tiene una peque√±a flecha "
"junto a \"Notas del orador\"). De esta manera, tendr√°s una pantalla "
"despejada para mostrar a la clase."

#: src/running-the-course.md
#, fuzzy
msgid ""
"Decide on the dates. Since the course takes four days, we recommend that you "
"schedule the days over two weeks. Course participants have said that they "
"find it helpful to have a gap in the course since it helps them process all "
"the information we give them."
msgstr ""
"Decide bien las fechas. Dado que el curso dura al menos tres d√≠as completos, "
"te recomendamos que repartas los d√≠as a lo largo de dos semanas. Los "
"participantes del curso han dicho que les resulta √∫til hacer pausas durante "
"el curso, ya que les ayuda a procesar toda la informaci√≥n que les "
"proporcionamos."

#: src/running-the-course.md
msgid ""
"Find a room large enough for your in-person participants. We recommend a "
"class size of 15-25 people. That's small enough that people are comfortable "
"asking questions --- it's also small enough that one instructor will have "
"time to answer the questions. Make sure the room has _desks_ for yourself "
"and for the students: you will all need to be able to sit and work with your "
"laptops. In particular, you will be doing a lot of live-coding as an "
"instructor, so a lectern won't be very helpful for you."
msgstr ""
"Busca una sala con capacidad suficiente para los participantes presenciales. "
"Recomendamos una sala para entre 15 y 25 personas. Es el tama√±o ideal para "
"que los alumnos se sientan c√≥modos haciendo preguntas y para que el profesor "
"tenga tiempo de responderlas. Aseg√∫rate de que en la sala haya _mesas_ para "
"ti y para los alumnos: todos necesitar√©is sentaros y trabajar con vuestros "
"port√°tiles. Adem√°s, como instructor, programar√°s mucho en directo, por lo "
"que un atril no te resultar√° muy √∫til."

#: src/running-the-course.md
msgid ""
"On the day of your course, show up to the room a little early to set things "
"up. We recommend presenting directly using `mdbook serve` running on your "
"laptop (see the [installation instructions](https://github.com/google/"
"comprehensive-rust#building)). This ensures optimal performance with no lag "
"as you change pages. Using your laptop will also allow you to fix typos as "
"you or the course participants spot them."
msgstr ""
"El mismo d√≠a del curso, llega con antelaci√≥n a la clase para preparar todo "
"lo necesario. Te recomendamos que realices la presentaci√≥n directamente "
"desde `mdbook serve` en tu port√°til (consulta las \\[instrucciones de "
"instalaci√≥n\\]\\[3\\]). As√≠ conseguir√°s un rendimiento √≥ptimo y que no haya "
"demoras al pasar de una p√°gina a otra. Tambi√©n podr√°s corregir las erratas a "
"medida que t√∫ o los participantes del curso las detect√©is."

#: src/running-the-course.md
msgid ""
"Let people solve the exercises by themselves or in small groups. We "
"typically spend 30-45 minutes on exercises in the morning and in the "
"afternoon (including time to review the solutions). Make sure to ask people "
"if they're stuck or if there is anything you can help with. When you see "
"that several people have the same problem, call it out to the class and "
"offer a solution, e.g., by showing people where to find the relevant "
"information in the standard library."
msgstr ""
"Deja que los alumnos resuelvan los ejercicios por s√≠ mismos o en peque√±os "
"grupos. Solemos dedicar entre 30 y 45 minutos a los ejercicios por la ma√±ana "
"y por la tarde (incluido el tiempo para revisar las soluciones). Aseg√∫rate "
"de preguntar a los asistentes si les est√° costando hacerlo o si hay algo en "
"lo que puedas ayudarles. Cuando veas que varias personas tienen el mismo "
"problema, com√©ntalo delante de la clase y ofrece una soluci√≥n. Por ejemplo, "
"ens√©√±ales d√≥nde encontrar la informaci√≥n importante en la biblioteca "
"est√°ndar."

#: src/running-the-course.md
msgid ""
"That is all, good luck running the course! We hope it will be as much fun "
"for you as it has been for us!"
msgstr ""
"Eso es todo. ¬°Buena suerte con el curso! Esperamos que te diviertas tanto "
"como nosotros."

#: src/running-the-course.md
msgid ""
"Please [provide feedback](https://github.com/google/comprehensive-rust/"
"discussions/86) afterwards so that we can keep improving the course. We "
"would love to hear what worked well for you and what can be made better. "
"Your students are also very welcome to [send us feedback](https://github.com/"
"google/comprehensive-rust/discussions/100)!"
msgstr ""
"Despu√©s, [env√≠anos un comentario](https://github.com/google/comprehensive-"
"rust/discussions/86) para que podamos seguir mejorando  el curso. Estaremos "
"encantados de que nos cuentes qu√© aspectos destacar√≠as y qu√© se puede "
"mejorar. Tus alumnos tambi√©n pueden [enviarnos sus sugerencias](https://"
"github.com/google/comprehensive-rust/discussions/100)!"

#: src/running-the-course/course-structure.md
msgid "Rust Fundamentals"
msgstr "Fundamentos de Rust"

#: src/running-the-course/course-structure.md
#, fuzzy
msgid ""
"The first four days make up [Rust Fundamentals](../welcome-day-1.md). The "
"days are fast paced and we cover a lot of ground!"
msgstr ""
"Los primeros tres d√≠as forman los [Fundamentos de Rust](../welcome-day-1."
"md). Los d√≠as son muy intensos y cubrimos mucho terreno:"

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "Course schedule:"
msgstr "Estructura del curso"

#: src/running-the-course/course-structure.md
msgid "Day 1 Morning (3 hours, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-1.md) (5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Hello, World](../hello-world.md) (20 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Types and Values](../types-and-values.md) (1 hour and 5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Control Flow Basics](../control-flow-basics.md) (1 hour)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 1 Afternoon (2 hours and 55 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Tuples and Arrays](../tuples-and-arrays.md) (1 hour)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[References](../references.md) (50 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[User-Defined Types](../user-defined-types.md) (50 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 2 Morning (3 hours and 5 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-2.md) (3 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "[Pattern Matching](../pattern-matching.md) (50 minutes)"
msgstr ""
"Consulta de nuevo la secci√≥n de [coincidencia de patrones](../pattern-"
"matching.md) para obtener m√°s informaci√≥n sobre los patrones de Rust."

#: src/running-the-course/course-structure.md
msgid "[Methods and Traits](../methods-and-traits.md) (55 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Generics](../generics.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "Day 2 Afternoon (3 hours, including breaks)"
msgstr "D√≠a 2: Ejercicios de la tarde"

#: src/running-the-course/course-structure.md
msgid "[Standard Library Types](../std-types.md) (1 hour and 10 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Standard Library Traits](../std-traits.md) (1 hour and 40 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 3 Morning (2 hours and 15 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-3.md) (3 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Memory Management](../memory-management.md) (1 hour and 10 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Smart Pointers](../smart-pointers.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 3 Afternoon (2 hours and 20 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Borrowing](../borrowing.md) (1 hour)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid ""
"[Slices and Lifetimes](../slices-and-lifetimes.md) (1 hour and 10 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 4 Morning (3 hours and 5 minutes, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Welcome](../welcome-day-4.md) (3 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Iterators](../iterators.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Modules](../modules.md) (40 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Testing](../testing.md) (1 hour and 5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Day 4 Afternoon (2 hours, including breaks)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Error Handling](../error-handling.md) (45 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "[Unsafe Rust](../unsafe-rust.md) (1 hour and 5 minutes)"
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Deep Dives"
msgstr "Informaci√≥n m√°s detallada"

#: src/running-the-course/course-structure.md
#, fuzzy
msgid ""
"In addition to the 4-day class on Rust Fundamentals, we cover some more "
"specialized topics:"
msgstr ""
"Adem√°s de la clase de 3 d√≠as sobre los fundamentos de Rust, abordamos "
"algunos temas m√°s especializados:"

#: src/running-the-course/course-structure.md
msgid "Rust in Android"
msgstr "Rust en Android"

#: src/running-the-course/course-structure.md
msgid ""
"The [Rust in Android](../android.md) deep dive is a half-day course on using "
"Rust for Android platform development. This includes interoperability with "
"C, C++, and Java."
msgstr ""
"[Rust en Android](../android.md) es un curso de medio d√≠a sobre el uso de "
"Rust para el desarrollo de la plataforma Android. En √©l se incluye la "
"interoperabilidad con C, C++ y Java."

#: src/running-the-course/course-structure.md
msgid ""
"You will need an [AOSP checkout](https://source.android.com/docs/setup/"
"download/downloading). Make a checkout of the [course repository](https://"
"github.com/google/comprehensive-rust) on the same machine and move the `src/"
"android/` directory into the root of your AOSP checkout. This will ensure "
"that the Android build system sees the `Android.bp` files in `src/android/`."
msgstr ""
"Necesitar√°s [conseguir el AOSP](https://source.android.com/docs/setup/"
"download/downloading). Descarga el [repositorio del curso](https://github."
"com/google/comprehensive-rust) en el mismo ordenador y mueve el directorio "
"`src/android/` a la ra√≠z del AOSP. De esta forma, el sistema de compilaci√≥n "
"de Android ver√° los archivos `Android.bp` en `src/android/`."

#: src/running-the-course/course-structure.md
msgid ""
"Ensure that `adb sync` works with your emulator or real device and pre-build "
"all Android examples using `src/android/build_all.sh`. Read the script to "
"see the commands it runs and make sure they work when you run them by hand."
msgstr ""
"Aseg√∫rate que `adb sync` funciona con tu emulador o en un dispositivo f√≠sico "
"y haz pre-build en todos los ejemplos de Android usando `src/android/"
"build_all.sh`. Lee el script para ver los comandos que corren y aseg√∫rate "
"que funcionan cuando lo corres a mano."

#: src/running-the-course/course-structure.md
#, fuzzy
msgid "Rust in Chromium"
msgstr "Rust en Android"

#: src/running-the-course/course-structure.md
msgid ""
"The [Rust in Chromium](../chromium.md) deep dive is a half-day course on "
"using Rust as part of the Chromium browser. It includes using Rust in "
"Chromium's `gn` build system, bringing in third-party libraries (\"crates\") "
"and C++ interoperability."
msgstr ""

#: src/running-the-course/course-structure.md
msgid ""
"You will need to be able to build Chromium --- a debug, component build is "
"[recommended](../chromium/setup.md) for speed but any build will work. "
"Ensure that you can run the Chromium browser that you've built."
msgstr ""

#: src/running-the-course/course-structure.md
msgid "Bare-Metal Rust"
msgstr ""

#: src/running-the-course/course-structure.md
msgid ""
"The [Bare-Metal Rust](../bare-metal.md) deep dive is a full day class on "
"using Rust for bare-metal (embedded) development. Both microcontrollers and "
"application processors are covered."
msgstr ""
"[Bare Metal Rust](../bare-metal.md) es una clase de un d√≠a sobre c√≥mo usar "
"Rust para el desarrollo bare-metal (insertado). Se tratar√°n tanto "
"microcontroladores como procesadores de aplicaciones."

#: src/running-the-course/course-structure.md
msgid ""
"For the microcontroller part, you will need to buy the [BBC micro:bit]"
"(https://microbit.org/) v2 development board ahead of time. Everybody will "
"need to install a number of packages as described on the [welcome page](../"
"bare-metal.md)."
msgstr ""
"Para la parte de los microcontroladores, necesitar√°s comprar con antelaci√≥n "
"la segunda versi√≥n de la placa programable [BBC micro:bit](https://microbit."
"org/). Todo el mundo deber√° instalar una serie de paquetes, tal como se "
"describe en la [p√°gina de bienvenida](../bare-metal.md)."

#: src/running-the-course/course-structure.md
msgid "Concurrency in Rust"
msgstr "Concurrencia en Rust"

#: src/running-the-course/course-structure.md
msgid ""
"The [Concurrency in Rust](../concurrency.md) deep dive is a full day class "
"on classical as well as `async`/`await` concurrency."
msgstr ""
"[Concurrencia en profundidad](../concurrency.md) es una clase de un d√≠a "
"sobre la concurrencia cl√°sica y la concurrencia `async`/`await`."

#: src/running-the-course/course-structure.md
msgid ""
"You will need a fresh crate set up and the dependencies downloaded and ready "
"to go. You can then copy/paste the examples into `src/main.rs` to experiment "
"with them:"
msgstr ""
"Necesitar√°s configurar un nuevo crate, y descargar y preparar las "
"dependencias. A continuaci√≥n, podr√°s copiar y pegar los ejemplos en `src/"
"main.rs` para experimentar con ellos:"

#: src/running-the-course/course-structure.md
msgid "Format"
msgstr "Formato"

#: src/running-the-course/course-structure.md
msgid ""
"The course is meant to be very interactive and we recommend letting the "
"questions drive the exploration of Rust!"
msgstr ""
"El curso est√° pensado para ser muy interactivo, por lo que te recomendamos "
"que dejes que las preguntas gu√≠en el aprendizaje de Rust."

#: src/running-the-course/keyboard-shortcuts.md
msgid "There are several useful keyboard shortcuts in mdBook:"
msgstr "Existen varias combinaciones de teclas √∫tiles en mdBook:"

#: src/running-the-course/keyboard-shortcuts.md
msgid "Arrow-Left"
msgstr "Flecha izquierda"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Navigate to the previous page."
msgstr ": ir a la p√°gina anterior."

#: src/running-the-course/keyboard-shortcuts.md
msgid "Arrow-Right"
msgstr "Flecha derecha"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Navigate to the next page."
msgstr ": ir a la p√°gina siguiente."

#: src/running-the-course/keyboard-shortcuts.md src/cargo/code-samples.md
msgid "Ctrl + Enter"
msgstr "Ctrl + Intro"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Execute the code sample that has focus."
msgstr ": ejecutar el c√≥digo de ejemplo seleccionado."

#: src/running-the-course/keyboard-shortcuts.md
msgid "s"
msgstr "s"

#: src/running-the-course/keyboard-shortcuts.md
msgid ": Activate the search bar."
msgstr ": activar la barra de b√∫squeda."

#: src/running-the-course/translations.md
msgid ""
"The course has been translated into other languages by a set of wonderful "
"volunteers:"
msgstr ""
"El curso se ha traducido a otros idiomas gracias a grupo de maravillosos "
"voluntarios:"

#: src/running-the-course/translations.md
msgid ""
"[Brazilian Portuguese](https://google.github.io/comprehensive-rust/pt-BR/) "
"by [@rastringer](https://github.com/rastringer), [@hugojacob](https://github."
"com/hugojacob), [@joaovicmendes](https://github.com/joaovicmendes), and "
"[@henrif75](https://github.com/henrif75)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Chinese (Simplified)](https://google.github.io/comprehensive-rust/zh-CN/) "
"by [@suetfei](https://github.com/suetfei), [@wnghl](https://github.com/"
"wnghl), [@anlunx](https://github.com/anlunx), [@kongy](https://github.com/"
"kongy), [@noahdragon](https://github.com/noahdragon), [@superwhd](https://"
"github.com/superwhd), [@SketchK](https://github.com/SketchK), and [@nodmp]"
"(https://github.com/nodmp)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Chinese (Traditional)](https://google.github.io/comprehensive-rust/zh-TW/) "
"by [@hueich](https://github.com/hueich), [@victorhsieh](https://github.com/"
"victorhsieh), [@mingyc](https://github.com/mingyc), [@kuanhungchen](https://"
"github.com/kuanhungchen), and [@johnathan79717](https://github.com/"
"johnathan79717)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Korean](https://google.github.io/comprehensive-rust/ko/) by [@keispace]"
"(https://github.com/keispace), [@jiyongp](https://github.com/jiyongp), and "
"[@jooyunghan](https://github.com/jooyunghan)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Spanish](https://google.github.io/comprehensive-rust/es/) by [@deavid]"
"(https://github.com/deavid)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"Use the language picker in the top-right corner to switch between languages."
msgstr ""
"Cambia el idioma con el selector situado en la esquina superior derecha."

#: src/running-the-course/translations.md
msgid "Incomplete Translations"
msgstr "Traducciones Incompletas"

#: src/running-the-course/translations.md
msgid ""
"There is a large number of in-progress translations. We link to the most "
"recently updated translations:"
msgstr ""
"Hay muchas traducciones todav√≠a en curso. A continuaci√≥n, incluimos enlaces "
"a las traducciones m√°s actualizadas:"

#: src/running-the-course/translations.md
msgid ""
"[Bengali](https://google.github.io/comprehensive-rust/bn/) by [@raselmandol]"
"(https://github.com/raselmandol)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[French](https://google.github.io/comprehensive-rust/fr/) by [@KookaS]"
"(https://github.com/KookaS) and [@vcaen](https://github.com/vcaen)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[German](https://google.github.io/comprehensive-rust/de/) by [@Throvn]"
"(https://github.com/Throvn) and [@ronaldfw](https://github.com/ronaldfw)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Japanese](https://google.github.io/comprehensive-rust/ja/) by [@CoinEZ-JPN]"
"(https://github.com/CoinEZ) and [@momotaro1105](https://github.com/"
"momotaro1105)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"[Italian](https://google.github.io/comprehensive-rust/it/) by "
"[@henrythebuilder](https://github.com/henrythebuilder) and [@detro](https://"
"github.com/detro)."
msgstr ""

#: src/running-the-course/translations.md
msgid ""
"If you want to help with this effort, please see [our instructions](https://"
"github.com/google/comprehensive-rust/blob/main/TRANSLATIONS.md) for how to "
"get going. Translations are coordinated on the [issue tracker](https://"
"github.com/google/comprehensive-rust/issues/282)."
msgstr ""
"Si quieres ayudar en esta iniciativa, consulta [nuestras instrucciones]"
"(https://github.com/google/comprehensive-rust/blob/main/TRANSLATIONS.md) "
"para empezar. Las traducciones se coordinan en la [herramienta de "
"seguimiento de incidencias](https://github.com/google/comprehensive-rust/"
"issues/282)."

#: src/cargo.md
msgid ""
"When you start reading about Rust, you will soon meet [Cargo](https://doc."
"rust-lang.org/cargo/), the standard tool used in the Rust ecosystem to build "
"and run Rust applications. Here we want to give a brief overview of what "
"Cargo is and how it fits into the wider ecosystem and how it fits into this "
"training."
msgstr ""
"Cuando empieces a informarte sobre Rust, conocer√°s [Cargo](https://doc.rust-"
"lang.org/cargo/), la herramienta est√°ndar que se utiliza en el ecosistema de "
"Rust para crear y ejecutar sus aplicaciones. En este art√≠culo, te ofrecemos "
"una breve descripci√≥n de lo que es Cargo, c√≥mo se integra en el ecosistema "
"m√°s amplio y c√≥mo encaja en esta formaci√≥n."

#: src/cargo.md
msgid "Installation"
msgstr "Instalaci√≥n"

#: src/cargo.md
msgid "**Please follow the instructions on <https://rustup.rs/>.**"
msgstr "**Sigue las instrucciones que se indican en <https://rustup.rs/>.**"

#: src/cargo.md
#, fuzzy
msgid ""
"This will give you the Cargo build tool (`cargo`) and the Rust compiler "
"(`rustc`). You will also get `rustup`, a command line utility that you can "
"use to install to different compiler versions."
msgstr ""
"De este modo, obtendr√°s la herramienta de compilaci√≥n de Cargo (`cargo`) y "
"el compilador de Rust (`rustc`). Tambi√©n obtendr√°s `rustup`, una utilidad de "
"l√≠nea de comandos que puedes utilizar para instalar o cambiar cadenas de "
"herramientas, configurar la compilaci√≥n cruzada, etc."

#: src/cargo.md
msgid ""
"After installing Rust, you should configure your editor or IDE to work with "
"Rust. Most editors do this by talking to [rust-analyzer](https://rust-"
"analyzer.github.io/), which provides auto-completion and jump-to-definition "
"functionality for [VS Code](https://code.visualstudio.com/), [Emacs](https://"
"rust-analyzer.github.io/manual.html#emacs), [Vim/Neovim](https://rust-"
"analyzer.github.io/manual.html#vimneovim), and many others. There is also a "
"different IDE available called [RustRover](https://www.jetbrains.com/rust/)."
msgstr ""

#: src/cargo.md
#, fuzzy
msgid ""
"On Debian/Ubuntu, you can also install Cargo, the Rust source and the [Rust "
"formatter](https://github.com/rust-lang/rustfmt) via `apt`. However, this "
"gets you an outdated rust version and may lead to unexpected behavior. The "
"command would be:"
msgstr ""
"En Debian o Ubuntu, tambi√©n puedes instalar Cargo, el c√≥digo fuente de Rust "
"y [el formateador de Rust](https://github.com/rust-lang/rustfmt) a trav√©s de "
"`apt`. Sin embargo, solo podr√°s conseguir una versi√≥n de Rust obsoleta que "
"podr√≠a dar lugar a comportamientos inesperados. El comando es el siguiente:"

#: src/cargo/rust-ecosystem.md
msgid "The Rust Ecosystem"
msgstr "El ecosistema de Rust"

#: src/cargo/rust-ecosystem.md
msgid ""
"The Rust ecosystem consists of a number of tools, of which the main ones are:"
msgstr ""
"El ecosistema de Rust se compone de varias herramientas, entre las que se "
"incluyen las siguientes:"

#: src/cargo/rust-ecosystem.md
msgid ""
"`rustc`: the Rust compiler which turns `.rs` files into binaries and other "
"intermediate formats."
msgstr ""
"`rustc`: el compilador de Rust que convierte archivos `.rs` en binarios y "
"otros formatos intermedios."

#: src/cargo/rust-ecosystem.md
#, fuzzy
msgid ""
"`cargo`: the Rust dependency manager and build tool. Cargo knows how to "
"download dependencies, usually hosted on <https://crates.io>, and it will "
"pass them to `rustc` when building your project. Cargo also comes with a "
"built-in test runner which is used to execute unit tests."
msgstr ""
"`cargo`: herramienta de compilaci√≥n y gesti√≥n de dependencias de Rust. Cargo "
"sabe c√≥mo descargar dependencias, que normalmente se alojan en <https://"
"crates.io>, y las transfiere a `rustc` al crear el proyecto. Cargo tambi√©n "
"incorpora un ejecutor de pruebas que se utiliza para realizar pruebas "
"unitarias."

#: src/cargo/rust-ecosystem.md
#, fuzzy
msgid ""
"`rustup`: the Rust toolchain installer and updater. This tool is used to "
"install and update `rustc` and `cargo` when new versions of Rust are "
"released. In addition, `rustup` can also download documentation for the "
"standard library. You can have multiple versions of Rust installed at once "
"and `rustup` will let you switch between them as needed."
msgstr ""
"`rustup`: el instalador y actualizador de cadenas de herramientas de Rust. "
"Esta herramienta se utiliza para instalar y actualizar `rustc` y `cargo` "
"cuando se lanzan nuevas versiones de Rust. Adem√°s, `rustup` tambi√©n puede "
"descargar documentaci√≥n de la biblioteca est√°ndar. Puedes tener varias "
"versiones de Rust instaladas a la vez y `rustup` te permitir√° cambiar de una "
"a otra seg√∫n lo necesites."

#: src/cargo/rust-ecosystem.md src/hello-world/hello-world.md
#: src/tuples-and-arrays/tuples-and-arrays.md src/references/exclusive.md
#: src/pattern-matching/destructuring.md src/memory-management/move.md
#: src/error-handling/try.md src/android/setup.md src/concurrency/threads.md
#: src/async/async-await.md
msgid "Key points:"
msgstr "Puntos clave:"

#: src/cargo/rust-ecosystem.md
msgid ""
"Rust has a rapid release schedule with a new release coming out every six "
"weeks. New releases maintain backwards compatibility with old releases --- "
"plus they enable new functionality."
msgstr ""
"Rust cuenta con un programa de lanzamiento r√°pido en el que se publica una "
"nueva versi√≥n cada seis semanas. Las nuevas versiones mantienen la "
"retrocompatibilidad con las versiones anteriores, adem√°s de habilitar nuevas "
"funciones."

#: src/cargo/rust-ecosystem.md
msgid ""
"There are three release channels: \"stable\", \"beta\", and \"nightly\"."
msgstr "Hay tres canales de lanzamiento: \"stable\", \"beta\" y \"nightly\"."

#: src/cargo/rust-ecosystem.md
msgid ""
"New features are being tested on \"nightly\", \"beta\" is what becomes "
"\"stable\" every six weeks."
msgstr ""
"Las funciones nuevas se prueban en \"nightly\", y \"beta\" es lo que se "
"convierte en \"estable\" cada seis semanas."

#: src/cargo/rust-ecosystem.md
msgid ""
"Dependencies can also be resolved from alternative [registries](https://doc."
"rust-lang.org/cargo/reference/registries.html), git, folders, and more."
msgstr ""
"Las dependencias tambi√©n pueden resolverse desde \\[registros\\] "
"alternativos, git, carpetas, etc."

#: src/cargo/rust-ecosystem.md
msgid ""
"Rust also has [editions](https://doc.rust-lang.org/edition-guide/): the "
"current edition is Rust 2021. Previous editions were Rust 2015 and Rust 2018."
msgstr ""
"Rust tambi√©n tiene varias \\[ediciones\\]: la m√°s actual es Rust 2021. Las "
"ediciones anteriores son Rust 2015 y Rust 2018."

#: src/cargo/rust-ecosystem.md
msgid ""
"The editions are allowed to make backwards incompatible changes to the "
"language."
msgstr ""
"Las ediciones pueden introducir cambios de incompatibilidad con versiones "
"anteriores en el lenguaje."

#: src/cargo/rust-ecosystem.md
msgid ""
"To prevent breaking code, editions are opt-in: you select the edition for "
"your crate via the `Cargo.toml` file."
msgstr ""
"Para evitar que se rompa el c√≥digo, las ediciones son opcionales: selecciona "
"la edici√≥n para tu crate a trav√©s del archivo `Cargo.toml`."

#: src/cargo/rust-ecosystem.md
msgid ""
"To avoid splitting the ecosystem, Rust compilers can mix code written for "
"different editions."
msgstr ""
"Para evitar la divisi√≥n del ecosistema, los compiladores de Rust pueden "
"mezclar el c√≥digo escrito para distintas ediciones."

#: src/cargo/rust-ecosystem.md
msgid ""
"Mention that it is quite rare to ever use the compiler directly not through "
"`cargo` (most users never do)."
msgstr ""
"Hay que mencionar que es bastante raro utilizar el compilador directamente y "
"no a trav√©s de `cargo` (la mayor√≠a de los usuarios nunca lo hacen)."

#: src/cargo/rust-ecosystem.md
#, fuzzy
msgid ""
"It might be worth alluding that Cargo itself is an extremely powerful and "
"comprehensive tool. It is capable of many advanced features including but "
"not limited to:"
msgstr ""
"Vale la pena mencionar que Cargo en s√≠ es una herramienta extremadamente "
"poderosa e integral.  Es capaz de hacer muchas cosas avanzadas y no "
"limitadas a: "

#: src/cargo/rust-ecosystem.md
msgid "Project/package structure"
msgstr "Estructura del proyecto/package "

#: src/cargo/rust-ecosystem.md
msgid "[workspaces](https://doc.rust-lang.org/cargo/reference/workspaces.html)"
msgstr ""
"[workspaces](https://doc.rust-lang.org/cargo/reference/workspaces.html) "

#: src/cargo/rust-ecosystem.md
msgid "Dev Dependencies and Runtime Dependency management/caching"
msgstr "Manejo/Cach√© de Dependencias de Desarrollo y de Runtime "

#: src/cargo/rust-ecosystem.md
msgid ""
"[build scripting](https://doc.rust-lang.org/cargo/reference/build-scripts."
"html)"
msgstr ""
"Consulta el libro [Rust Reference](https://doc.rust-lang.org/reference/type-"
"layout.html)."

#: src/cargo/rust-ecosystem.md
msgid ""
"[global installation](https://doc.rust-lang.org/cargo/commands/cargo-install."
"html)"
msgstr ""

#: src/cargo/rust-ecosystem.md
msgid ""
"It is also extensible with sub command plugins as well (such as [cargo "
"clippy](https://github.com/rust-lang/rust-clippy))."
msgstr "Consulta m√°s informaci√≥n en el \\[libro oficial de Cargo\\]."

#: src/cargo/rust-ecosystem.md
msgid ""
"Read more from the [official Cargo Book](https://doc.rust-lang.org/cargo/)"
msgstr ""

#: src/cargo/code-samples.md
msgid "Code Samples in This Training"
msgstr "C√≥digo de ejemplo en esta formaci√≥n"

#: src/cargo/code-samples.md
msgid ""
"For this training, we will mostly explore the Rust language through examples "
"which can be executed through your browser. This makes the setup much easier "
"and ensures a consistent experience for everyone."
msgstr ""
"En esta formaci√≥n, aprenderemos el lenguaje Rust principalmente con ejemplos "
"que podr√°s ejecutar con tu navegador. De este modo, la configuraci√≥n es "
"mucho m√°s sencilla y se asegura una experiencia homog√©nea para todos."

#: src/cargo/code-samples.md
msgid ""
"Installing Cargo is still encouraged: it will make it easier for you to do "
"the exercises. On the last day, we will do a larger exercise which shows you "
"how to work with dependencies and for that you need Cargo."
msgstr ""
"Se recomienda instalar Cargo, ya que facilitar√° la realizaci√≥n de los "
"ejercicios. El √∫ltimo d√≠a realizaremos un ejercicio m√°s largo en el que se "
"mostrar√° c√≥mo trabajar con dependencias, y para eso se necesita Cargo."

#: src/cargo/code-samples.md
msgid "The code blocks in this course are fully interactive:"
msgstr "Los bloques de c√≥digo de este curso son totalmente interactivos:"

#: src/cargo/code-samples.md src/cargo/running-locally.md
msgid "\"Edit me!\""
msgstr ""

#: src/cargo/code-samples.md
msgid "You can use "
msgstr "Puedes usar "

#: src/cargo/code-samples.md
msgid " to execute the code when focus is in the text box."
msgstr " para ejecutar el c√≥digo cuando el cursor est√© en el cuadro de texto."

#: src/cargo/code-samples.md
msgid ""
"Most code samples are editable like shown above. A few code samples are not "
"editable for various reasons:"
msgstr ""
"La mayor√≠a de los c√≥digos de ejemplo se pueden editar, como se muestra "
"arriba, pero hay algunos que no se pueden editar por varios motivos:"

#: src/cargo/code-samples.md
msgid ""
"The embedded playgrounds cannot execute unit tests. Copy-paste the code and "
"open it in the real Playground to demonstrate unit tests."
msgstr ""
"Los playgrounds insertados no pueden ejecutar pruebas unitarias. Copia y "
"pega el c√≥digo y √°brelo en la p√°gina del playground para mostrar pruebas "
"unitarias."

#: src/cargo/code-samples.md
msgid ""
"The embedded playgrounds lose their state the moment you navigate away from "
"the page! This is the reason that the students should solve the exercises "
"using a local Rust installation or via the Playground."
msgstr ""
"Los playgrounds insertados pierden su estado en cuanto sales e de la p√°gina. "
"Por este motivo, los alumnos deben resolver los ejercicios con una versi√≥n "
"local de Rust o a trav√©s del playground."

#: src/cargo/running-locally.md
msgid "Running Code Locally with Cargo"
msgstr "Ejecutar c√≥digo de forma local con Cargo"

#: src/cargo/running-locally.md
#, fuzzy
msgid ""
"If you want to experiment with the code on your own system, then you will "
"need to first install Rust. Do this by following the [instructions in the "
"Rust Book](https://doc.rust-lang.org/book/ch01-01-installation.html). This "
"should give you a working `rustc` and `cargo`. At the time of writing, the "
"latest stable Rust release has these version numbers:"
msgstr ""
"Si quieres experimentar con el c√≥digo en tu propio sistema, primero tendr√°s "
"que instalar Rust. Para ello, sigue las \\[instrucciones que aparecen en el "
"libro de Rust\\]\\[1\\]. De este modo, obtendr√°s un `rustc` y un `cargo` que "
"funcionen. En el momento en que se redact√≥ este documento, los n√∫meros de "
"las √∫ltimas versiones estables de Rust eran los siguientes:"

#: src/cargo/running-locally.md
msgid ""
"You can use any later version too since Rust maintains backwards "
"compatibility."
msgstr ""

#: src/cargo/running-locally.md
msgid ""
"With this in place, follow these steps to build a Rust binary from one of "
"the examples in this training:"
msgstr ""
"Una vez hecho lo anterior, sigue estos pasos para compilar un binario de "
"Rust a partir de uno de los ejemplos de la formaci√≥n:"

#: src/cargo/running-locally.md
msgid "Click the \"Copy to clipboard\" button on the example you want to copy."
msgstr ""
"Haz clic en el bot√≥n \"Copiar en el portapapeles\" del ejemplo que quieras "
"copiar."

#: src/cargo/running-locally.md
msgid ""
"Use `cargo new exercise` to create a new `exercise/` directory for your code:"
msgstr ""
"Usa `cargo new exercise` para crear un directorio `exercise/` para tu c√≥digo:"

#: src/cargo/running-locally.md
msgid ""
"Navigate into `exercise/` and use `cargo run` to build and run your binary:"
msgstr ""
"Ve a `exercise/` y usa `cargo run` para compilar y ejecutar tu binario:"

#: src/cargo/running-locally.md
msgid ""
"Replace the boiler-plate code in `src/main.rs` with your own code. For "
"example, using the example on the previous page, make `src/main.rs` look like"
msgstr ""
"Sustituye el c√≥digo de plantilla en `src/main.rs` con tu propio c√≥digo. Por "
"ejemplo, si usamos el ejemplo de la p√°gina anterior, podemos hacer que `src/"
"main.rs` tenga el siguiente aspecto:"

#: src/cargo/running-locally.md
msgid "Use `cargo run` to build and run your updated binary:"
msgstr "Usa `cargo run` para hacer build y ejecutar tu binario actualizado:"

#: src/cargo/running-locally.md
msgid ""
"Use `cargo check` to quickly check your project for errors, use `cargo "
"build` to compile it without running it. You will find the output in `target/"
"debug/` for a normal debug build. Use `cargo build --release` to produce an "
"optimized release build in `target/release/`."
msgstr ""
"Comprueba que no haya errores en el proyecto con `cargo check`. Comp√≠lalo "
"sin ejecutarlo con `cargo build`. Encontrar√°s la salida en `target/debug/` "
"para una versi√≥n de depuraci√≥n normal. Usa `cargo build --release` para "
"generar una compilaci√≥n de lanzamiento optimizada en `target/release/`."

#: src/cargo/running-locally.md
msgid ""
"You can add dependencies for your project by editing `Cargo.toml`. When you "
"run `cargo` commands, it will automatically download and compile missing "
"dependencies for you."
msgstr ""
"Edita `Cargo.toml` para a√±adir dependencias a tu proyecto. Cuando ejecutes "
"comandos `cargo`, se descargar√°n y compilar√°n autom√°ticamente las "
"dependencias que falten."

#: src/cargo/running-locally.md
msgid ""
"Try to encourage the class participants to install Cargo and use a local "
"editor. It will make their life easier since they will have a normal "
"development environment."
msgstr ""
"Anima a los participantes de la clase a instalar Cargo y utilizar un editor "
"local. Les facilitar√° mucho las cosas, ya que dispondr√°n de un entorno de "
"desarrollo normal."

#: src/welcome-day-1.md
msgid "Welcome to Day 1"
msgstr "Te damos la bienvenida al D√≠a 1"

#: src/welcome-day-1.md
msgid ""
"This is the first day of Rust Fundamentals. We will cover a lot of ground "
"today:"
msgstr ""
"Este es el primer d√≠a de Comprehensive Rust. Hoy trataremos muchos temas:"

#: src/welcome-day-1.md
msgid ""
"Basic Rust syntax: variables, scalar and compound types, enums, structs, "
"references, functions, and methods."
msgstr ""
"Sintaxis b√°sica Rust: variables, scalar y tipos compuestos, enums, structs,  "
"references, funciones, y m√©todos."

#: src/welcome-day-1.md
#, fuzzy
msgid "Types and type inference."
msgstr "Inferencia de tipos"

#: src/welcome-day-1.md
msgid "Control flow constructs: loops, conditionals, and so on."
msgstr ""

#: src/welcome-day-1.md
msgid "User-defined types: structs and enums."
msgstr ""

#: src/welcome-day-1.md
msgid "Pattern matching: destructuring enums, structs, and arrays."
msgstr ""
"Emparejamiento de Patrones: desestructuraci√≥n de enums, structs y arrays."

#: src/welcome-day-1.md src/welcome-day-2.md src/welcome-day-3.md
#: src/welcome-day-4.md
msgid "Schedule"
msgstr ""

#: src/welcome-day-1.md src/welcome-day-1-afternoon.md src/welcome-day-2.md
#: src/welcome-day-2-afternoon.md src/welcome-day-3.md
#: src/welcome-day-3-afternoon.md src/welcome-day-4.md
#: src/welcome-day-4-afternoon.md
msgid "In this session:"
msgstr ""

#: src/welcome-day-1.md
msgid "[Welcome](./welcome-day-1.md) (5 minutes)"
msgstr ""

#: src/welcome-day-1.md
msgid "[Hello, World](./hello-world.md) (20 minutes)"
msgstr ""

#: src/welcome-day-1.md
msgid "[Types and Values](./types-and-values.md) (1 hour and 5 minutes)"
msgstr ""

#: src/welcome-day-1.md
msgid "[Control Flow Basics](./control-flow-basics.md) (1 hour)"
msgstr ""

#: src/welcome-day-1.md src/welcome-day-2-afternoon.md
msgid "Including 10 minute breaks, this session should take about 3 hours"
msgstr ""

#: src/welcome-day-1.md
msgid "Please remind the students that:"
msgstr "Recuerda a los alumnos lo siguiente:"

#: src/welcome-day-1.md
msgid ""
"They should ask questions when they get them, don't save them to the end."
msgstr ""
"Deben hacer las preguntas cuando surgen, no las guarden hasta el final."

#: src/welcome-day-1.md
msgid ""
"The class is meant to be interactive and discussions are very much "
"encouraged!"
msgstr ""
"El curso est√° pensado para ser muy interactivo, por lo que te recomendamos "
"que dejes que las preguntas gu√≠en el aprendizaje de Rust."

#: src/welcome-day-1.md
#, fuzzy
msgid ""
"As an instructor, you should try to keep the discussions relevant, i.e., "
"keep the discussions related to how Rust does things vs some other language. "
"It can be hard to find the right balance, but err on the side of allowing "
"discussions since they engage people much more than one-way communication."
msgstr ""
"Como instructor, debes intentar llevar discusiones relevantes, por ejemplo, "
"mantener relaci√≥n de c√≥mo Rust hace las cosas vs otros lenguajes. Puede "
"costar encontrar un balance adecuado, pero permite llevar un debate que "
"atraiga la atenci√≥n de la gente por sobre un discurso unidireccional."

#: src/welcome-day-1.md
msgid ""
"The questions will likely mean that we talk about things ahead of the slides."
msgstr ""
"Las preguntas deber√≠an ser sobre cosas acerca del contenido de los slides."

#: src/welcome-day-1.md
msgid ""
"This is perfectly okay! Repetition is an important part of learning. "
"Remember that the slides are just a support and you are free to skip them as "
"you like."
msgstr ""
"Esto est√° perfecto! Repetir es una parte importante del aprendizaje. "
"Recuerda que los slides son solo un soporte y tienes libertad de saltearlos "
"cuando quieras."

#: src/welcome-day-1.md
msgid ""
"The idea for the first day is to show the \"basic\" things in Rust that "
"should have immediate parallels in other languages. The more advanced parts "
"of Rust come on the subsequent days."
msgstr ""

#: src/welcome-day-1.md
msgid ""
"If you're teaching this in a classroom, this is a good place to go over the "
"schedule. Note that there is an exercise at the end of each segment, "
"followed by a break. Plan to cover the exercise solution after the break. "
"The times listed here are a suggestion in order to keep the course on "
"schedule. Feel free to be flexible and adjust as necessary!"
msgstr ""

#: src/hello-world.md src/types-and-values.md src/control-flow-basics.md
#: src/tuples-and-arrays.md src/references.md src/user-defined-types.md
#: src/pattern-matching.md src/methods-and-traits.md src/generics.md
#: src/std-types.md src/std-traits.md src/memory-management.md
#: src/smart-pointers.md src/borrowing.md src/slices-and-lifetimes.md
#: src/iterators.md src/modules.md src/testing.md src/error-handling.md
#: src/unsafe-rust.md
msgid "In this segment:"
msgstr ""

#: src/hello-world.md
msgid "[What is Rust?](./hello-world/what-is-rust.md) (10 minutes)"
msgstr ""

#: src/hello-world.md
msgid "[Hello, World](./hello-world/hello-world.md) (5 minutes)"
msgstr ""

#: src/hello-world.md
msgid "[Benefits of Rust](./hello-world/benefits.md) (3 minutes)"
msgstr ""

#: src/hello-world.md
msgid "[Playground](./hello-world/playground.md) (2 minutes)"
msgstr ""

#: src/hello-world.md
msgid "This segment should take about 20 minutes"
msgstr ""

#: src/hello-world/what-is-rust.md
msgid ""
"Rust is a new programming language which had its [1.0 release in 2015]"
"(https://blog.rust-lang.org/2015/05/15/Rust-1.0.html):"
msgstr ""
"Rust es un nuevo lenguaje de programaci√≥n que lanz√≥ su versi√≥n [1.0 en el "
"2015](https://blog.rust-lang.org/2015/05/15/Rust-1.0.html):"

#: src/hello-world/what-is-rust.md
msgid "Rust is a statically compiled language in a similar role as C++"
msgstr "Rust es un lenguaje compilado est√°tico similar a C++"

#: src/hello-world/what-is-rust.md
msgid "`rustc` uses LLVM as its backend."
msgstr "`rustc` usa LLVM como backend."

#: src/hello-world/what-is-rust.md
msgid ""
"Rust supports many [platforms and architectures](https://doc.rust-lang.org/"
"nightly/rustc/platform-support.html):"
msgstr ""
"Rust es compatible con muchas [plataformas y arquitecturas](https://doc.rust-"
"lang.org/nightly/rustc/platform-support.html):"

#: src/hello-world/what-is-rust.md
msgid "x86, ARM, WebAssembly, ..."
msgstr "x86, ARM, WebAssembly, ..."

#: src/hello-world/what-is-rust.md
msgid "Linux, Mac, Windows, ..."
msgstr "Linux, Mac, Windows, ..."

#: src/hello-world/what-is-rust.md
msgid "Rust is used for a wide range of devices:"
msgstr "Rust se utiliza en una gran variedad de dispositivos:"

#: src/hello-world/what-is-rust.md
msgid "firmware and boot loaders,"
msgstr "firmware y cargadores de inicio,"

#: src/hello-world/what-is-rust.md
msgid "smart displays,"
msgstr "pantallas inteligentes,"

#: src/hello-world/what-is-rust.md
msgid "mobile phones,"
msgstr "tel√©fonos m√≥viles,"

#: src/hello-world/what-is-rust.md
msgid "desktops,"
msgstr "ordenadores,"

#: src/hello-world/what-is-rust.md
msgid "servers."
msgstr "servidores."

#: src/hello-world/what-is-rust.md
msgid "Rust fits in the same area as C++:"
msgstr "Rust satisface las mismas necesidades que C++:"

#: src/hello-world/what-is-rust.md
msgid "High flexibility."
msgstr "Gran flexibilidad."

#: src/hello-world/what-is-rust.md
msgid "High level of control."
msgstr "Nivel alto de control."

#: src/hello-world/what-is-rust.md
msgid ""
"Can be scaled down to very constrained devices such as microcontrollers."
msgstr ""
"Se puede reducir verticalmente a dispositivos muy limitados, como los "
"microcontroladores."

#: src/hello-world/what-is-rust.md
msgid "Has no runtime or garbage collection."
msgstr "No tiene _runtime_ ni _garbage collection_."

#: src/hello-world/what-is-rust.md
msgid "Focuses on reliability and safety without sacrificing performance."
msgstr ""
"Se centra en la fiabilidad y la seguridad sin sacrificar el rendimiento."

#: src/hello-world/hello-world.md
msgid ""
"Let us jump into the simplest possible Rust program, a classic Hello World "
"program:"
msgstr "Vamos a hablar del programa Rust m√°s simple, un cl√°sico Hola Mundo:"

#: src/hello-world/hello-world.md
msgid "\"Hello üåç!\""
msgstr ""

#: src/hello-world/hello-world.md
msgid "What you see:"
msgstr "Lo que ves:"

#: src/hello-world/hello-world.md
msgid "Functions are introduced with `fn`."
msgstr "Las funciones se introducen con `fn`."

#: src/hello-world/hello-world.md
msgid "Blocks are delimited by curly braces like in C and C++."
msgstr "Los bloques se delimitan con llaves, como en C y C++."

#: src/hello-world/hello-world.md
msgid "The `main` function is the entry point of the program."
msgstr "La funci√≥n `main` es el punto de entrada del programa."

#: src/hello-world/hello-world.md
msgid "Rust has hygienic macros, `println!` is an example of this."
msgstr "Rust tiene macros higi√©nicas, como por ejemplo `println!`."

#: src/hello-world/hello-world.md
msgid "Rust strings are UTF-8 encoded and can contain any Unicode character."
msgstr ""
"Las cadenas de Rust est√°n codificadas en UTF-8 y pueden contener caracteres "
"Unicode."

#: src/hello-world/hello-world.md
#, fuzzy
msgid ""
"This slide tries to make the students comfortable with Rust code. They will "
"see a ton of it over the next four days so we start small with something "
"familiar."
msgstr ""
"Con esta diapositiva se intenta que los alumnos se sientan c√≥modos con el "
"c√≥digo de Rust. En los pr√≥ximos tres d√≠as lo ver√°n mucho, as√≠ que "
"empezaremos con algo que ya conocemos."

#: src/hello-world/hello-world.md
msgid ""
"Rust is very much like other languages in the C/C++/Java tradition. It is "
"imperative and it doesn't try to reinvent things unless absolutely necessary."
msgstr ""
"Rust es muy similar a otros lenguajes, como C, C++ o Java. Es imperativo y "
"no intenta reinventar las cosas a menos que sea absolutamente necesario."

#: src/hello-world/hello-world.md
msgid "Rust is modern with full support for things like Unicode."
msgstr "Rust es moderno y totalmente compatible con sistemas como Unicode."

#: src/hello-world/hello-world.md
#, fuzzy
msgid ""
"Rust uses macros for situations where you want to have a variable number of "
"arguments (no function [overloading](../control-flow-basics/functions.md))."
msgstr ""
"Rust utiliza macros en situaciones en las que se desea tener un n√∫mero "
"variable de argumentos (sin [sobrecarga](basic-syntax/functions-interlude."
"md) de funciones)."

#: src/hello-world/hello-world.md
msgid ""
"Macros being 'hygienic' means they don't accidentally capture identifiers "
"from the scope they are used in. Rust macros are actually only [partially "
"hygienic](https://veykril.github.io/tlborm/decl-macros/minutiae/hygiene."
"html)."
msgstr ""
"Que las macros sean 'higi√©nicas' significa que no capturan "
"accidentalmenteidentificadores del √°mbito en el que se utilizan. En "
"realidad, las macros de Rust solo son [parcialmente higi√©nicas](https://"
"veykril.github.io/tlborm/decl-macros/minutiae/hygiene.html)."

#: src/hello-world/hello-world.md
msgid ""
"Rust is multi-paradigm. For example, it has powerful [object-oriented "
"programming features](https://doc.rust-lang.org/book/ch17-00-oop.html), and, "
"while it is not a functional language, it includes a range of [functional "
"concepts](https://doc.rust-lang.org/book/ch13-00-functional-features.html)."
msgstr ""
"Rust es un lenguaje multiparadigma. Por ejemplo, cuenta con [funciones de "
"programaci√≥n orientadas a objetos](https://doc.rust-lang.org/book/ch17-00-"
"oop.html) y, aunque no es un lenguaje funcional, incluye una serie de "
"[conceptos funcionales](https://doc.rust-lang.org/book/ch13-00-functional-"
"features.html)."

#: src/hello-world/benefits.md
msgid "Some unique selling points of Rust:"
msgstr "Estas son algunas de las ventajas competitivas de Rust:"

#: src/hello-world/benefits.md
msgid ""
"_Compile time memory safety_ - whole classes of memory bugs are prevented at "
"compile time"
msgstr ""

#: src/hello-world/benefits.md
msgid "No uninitialized variables."
msgstr "No hay variables no inicializadas."

#: src/hello-world/benefits.md
msgid "No double-frees."
msgstr "No hay errores double free."

#: src/hello-world/benefits.md
msgid "No use-after-free."
msgstr "No hay errores use-after-free."

#: src/hello-world/benefits.md
msgid "No `NULL` pointers."
msgstr "No hay punteros `NULL`."

#: src/hello-world/benefits.md
msgid "No forgotten locked mutexes."
msgstr "No se olvidan las exclusiones mutuas bloqueadas."

#: src/hello-world/benefits.md
msgid "No data races between threads."
msgstr "No hay condiciones de carrera de datos entre hilos."

#: src/hello-world/benefits.md
msgid "No iterator invalidation."
msgstr "No se invalidan los iteradores."

#: src/hello-world/benefits.md
msgid ""
"_No undefined runtime behavior_ - what a Rust statement does is never left "
"unspecified"
msgstr ""

#: src/hello-world/benefits.md
msgid "Array access is bounds checked."
msgstr "Se comprueban los l√≠mites de acceso a los arrays."

#: src/hello-world/benefits.md
msgid "Integer overflow is defined (panic or wrap-around)."
msgstr "Se define el desbordamiento de enteros (_panic_ o _wrap-around_)."

#: src/hello-world/benefits.md
msgid ""
"_Modern language features_ - as expressive and ergonomic as higher-level "
"languages"
msgstr ""

#: src/hello-world/benefits.md
msgid "Enums and pattern matching."
msgstr "Enumeraciones (_Enums_) y coincidencia de patrones."

#: src/hello-world/benefits.md
msgid "Generics."
msgstr "Gen√©ricos"

#: src/hello-world/benefits.md
msgid "No overhead FFI."
msgstr "Sin _overhead_ de FFI."

#: src/hello-world/benefits.md
msgid "Zero-cost abstractions."
msgstr "Abstracciones sin coste."

#: src/hello-world/benefits.md
msgid "Great compiler errors."
msgstr "Excelentes errores de compilaci√≥n."

#: src/hello-world/benefits.md
msgid "Built-in dependency manager."
msgstr "Gestor de dependencias integrado."

#: src/hello-world/benefits.md
msgid "Built-in support for testing."
msgstr "Asistencia integrada para pruebas."

#: src/hello-world/benefits.md
msgid "Excellent Language Server Protocol support."
msgstr "Compatibilidad excelente con el protocolo del servidor de lenguaje."

#: src/hello-world/benefits.md
msgid ""
"Do not spend much time here. All of these points will be covered in more "
"depth later."
msgstr ""

#: src/hello-world/benefits.md
msgid ""
"Make sure to ask the class which languages they have experience with. "
"Depending on the answer you can highlight different features of Rust:"
msgstr ""
"Aseg√∫rate de preguntar a la clase en qu√© lenguajes tienen experiencia. "
"Dependiendo de la respuesta puedes destacar diferentes caracter√≠sticas de "
"Rust:"

#: src/hello-world/benefits.md
msgid ""
"Experience with C or C++: Rust eliminates a whole class of _runtime errors_ "
"via the borrow checker. You get performance like in C and C++, but you don't "
"have the memory unsafety issues. In addition, you get a modern language with "
"constructs like pattern matching and built-in dependency management."
msgstr ""
"Experiencia con C o C++: Rust elimina una clase completa de _errores de "
"runtime_ mediante el _borrow checker_. Obtienes un rendimiento similar al de "
"C y C++, pero no tienes problemas de seguridad en la memoria. Adem√°s, "
"obtienes un lenguaje moderno con elementos como la coincidencia de patrones "
"y la gesti√≥n de dependencias integrado."

#: src/hello-world/benefits.md
msgid ""
"Experience with Java, Go, Python, JavaScript...: You get the same memory "
"safety as in those languages, plus a similar high-level language feeling. In "
"addition you get fast and predictable performance like C and C++ (no garbage "
"collector) as well as access to low-level hardware (should you need it)"
msgstr ""
"Experiencia con Java, Go, Python, JavaScript, etc.: Consigues la misma "
"seguridad en la memoria que en √©stos lenguajes, adem√°s de una sensaci√≥n "
"similar a la de un lenguaje de alto nivel. Tambi√©n consigues un rendimiento "
"r√°pido y predecible como en C y C++ (sin recolector de memoria residual), "
"as√≠ como acceso a hardware de bajo nivel (si lo necesitas)."

#: src/hello-world/playground.md
msgid ""
"The [Rust Playground](https://play.rust-lang.org/) provides an easy way to "
"run short Rust programs, and is the basis for the examples and exercises in "
"this course. Try running the \"hello-world\" program it starts with. It "
"comes with a few handy features:"
msgstr ""

#: src/hello-world/playground.md
msgid ""
"Under \"Tools\", use the `rustfmt` option to format your code in the "
"\"standard\" way."
msgstr ""

#: src/hello-world/playground.md
msgid ""
"Rust has two main \"profiles\" for generating code: Debug (extra runtime "
"checks, less optimization) and Release (fewer runtime checks, lots of "
"optimization). These are accessible under \"Debug\" at the top."
msgstr ""

#: src/hello-world/playground.md
msgid ""
"If you're interested, use \"ASM\" under \"...\" to see the generated "
"assembly code."
msgstr ""

#: src/hello-world/playground.md
msgid ""
"As students head into the break, encourage them to open up the playground "
"and experiment a little. Encourage them to keep the tab open and try things "
"out during the rest of the course. This is particularly helpful for advanced "
"students who want to know more about Rust's optimizations or generated "
"assembly."
msgstr ""

#: src/types-and-values.md
msgid "[Variables](./types-and-values/variables.md) (5 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Values](./types-and-values/values.md) (10 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Arithmetic](./types-and-values/arithmetic.md) (5 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Strings](./types-and-values/strings.md) (10 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Type Inference](./types-and-values/inference.md) (5 minutes)"
msgstr ""

#: src/types-and-values.md
msgid "[Exercise: Fibonacci](./types-and-values/exercise.md) (30 minutes)"
msgstr ""

#: src/types-and-values.md src/testing.md src/unsafe-rust.md
msgid "This segment should take about 1 hour and 5 minutes"
msgstr ""

#: src/types-and-values/variables.md
#, fuzzy
msgid ""
"Rust provides type safety via static typing. Variable bindings are made with "
"`let`:"
msgstr ""
"Rust ofrece seguridad de tipos mediante tipado est√°tico. De forma "
"predeterminada, los enlaces a variables son inmutables:"

#: src/types-and-values/variables.md src/control-flow-basics/loops.md
#: src/control-flow-basics/break-continue.md
#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"x: {x}\""
msgstr ""

#: src/types-and-values/variables.md
msgid ""
"// x = 20;\n"
"    // println!(\"x: {x}\");\n"
msgstr ""

#: src/types-and-values/variables.md
msgid ""
"Uncomment the `x = 20` to demonstrate that variables are immutable by "
"default. Add the `mut` keyword to allow changes."
msgstr ""

#: src/types-and-values/variables.md
msgid ""
"The `i32` here is the type of the variable. This must be known at compile "
"time, but type inference (covered later) allows the programmer to omit it in "
"many cases."
msgstr ""

#: src/types-and-values/values.md
msgid ""
"Here are some basic built-in types, and the syntax for literal values of "
"each type."
msgstr ""

#: src/types-and-values/values.md src/tuples-and-arrays/tuples-and-arrays.md
#: src/unsafe-rust/exercise.md
msgid "Types"
msgstr "Tipos"

#: src/types-and-values/values.md src/tuples-and-arrays/tuples-and-arrays.md
msgid "Literals"
msgstr "Literales"

#: src/types-and-values/values.md
msgid "Signed integers"
msgstr "Enteros con signo"

#: src/types-and-values/values.md
msgid "`i8`, `i16`, `i32`, `i64`, `i128`, `isize`"
msgstr ""

#: src/types-and-values/values.md
msgid "`-10`, `0`, `1_000`, `123_i64`"
msgstr ""

#: src/types-and-values/values.md
msgid "Unsigned integers"
msgstr "Enteros sin signo"

#: src/types-and-values/values.md
msgid "`u8`, `u16`, `u32`, `u64`, `u128`, `usize`"
msgstr ""

#: src/types-and-values/values.md
msgid "`0`, `123`, `10_u16`"
msgstr ""

#: src/types-and-values/values.md
msgid "Floating point numbers"
msgstr "N√∫meros de coma flotante"

#: src/types-and-values/values.md
msgid "`f32`, `f64`"
msgstr ""

#: src/types-and-values/values.md
msgid "`3.14`, `-10.0e20`, `2_f32`"
msgstr ""

#: src/types-and-values/values.md
msgid "Unicode scalar values"
msgstr "Valores escalares Unicode"

#: src/types-and-values/values.md
msgid "`char`"
msgstr ""

#: src/types-and-values/values.md
msgid "`'a'`, `'Œ±'`, `'‚àû'`"
msgstr ""

#: src/types-and-values/values.md
msgid "Booleans"
msgstr "Booleanos"

#: src/types-and-values/values.md
msgid "`bool`"
msgstr ""

#: src/types-and-values/values.md
msgid "`true`, `false`"
msgstr ""

#: src/types-and-values/values.md
msgid "The types have widths as follows:"
msgstr "Los tipos tienen la siguiente anchura:"

#: src/types-and-values/values.md
msgid "`iN`, `uN`, and `fN` are _N_ bits wide,"
msgstr "`iN`, `uN`, and `fN` son _N_ bits de capacidad,"

#: src/types-and-values/values.md
msgid "`isize` and `usize` are the width of a pointer,"
msgstr "`isize` y `usize` tienen el ancho de un puntero,"

#: src/types-and-values/values.md
msgid "`char` is 32 bits wide,"
msgstr "`char` tiene un tama√±o de 32 bits,"

#: src/types-and-values/values.md
msgid "`bool` is 8 bits wide."
msgstr "`bool` tiene 8 bits de ancho."

#: src/types-and-values/values.md
msgid "There are a few syntaxes which are not shown above:"
msgstr "Hay algunas sintaxis que no se han mostrado anteriormente:"

#: src/types-and-values/values.md
msgid ""
"All underscores in numbers can be left out, they are for legibility only. So "
"`1_000` can be written as `1000` (or `10_00`), and `123_i64` can be written "
"as `123i64`."
msgstr ""
"Todos guiones bajos en los n√∫meros pueden no utilizarse, ya que solo sirven "
"para facilitar la lectura. Por lo tanto, `1_000` se puede escribir como "
"`1000` (o `10_00`), y `123_i64` se puede escribir como `123i64`."

#: src/types-and-values/arithmetic.md
msgid "\"result: {}\""
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"This is the first time we've seen a function other than `main`, but the "
"meaning should be clear: it takes three integers, and returns an integer. "
"Functions will be covered in more detail later."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid "Arithmetic is very similar to other languages, with similar precedence."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"What about integer overflow? In C and C++ overflow of _signed_ integers is "
"actually undefined, and might do different things on different platforms or "
"compilers. In Rust, it's defined."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"Change the `i32`'s to `i16` to see an integer overflow, which panics "
"(checked) in a debug build and wraps in a release build. There are other "
"options, such as overflowing, saturating, and carrying. These are accessed "
"with method syntax, e.g., `(a * b).saturating_add(b * c).saturating_add(c * "
"a)`."
msgstr ""

#: src/types-and-values/arithmetic.md
msgid ""
"In fact, the compiler will detect overflow of constant expressions, which is "
"why the example requires a separate function."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"Rust has two types to represent strings, both of which will be covered in "
"more depth later. Both _always_ store UTF-8 encoded strings."
msgstr ""

#: src/types-and-values/strings.md
#, fuzzy
msgid "`String` - a modifiable, owned string."
msgstr "`String` es un b√∫fer de cadena mutable."

#: src/types-and-values/strings.md
msgid "`&str` - a read-only string. String literals have this type."
msgstr ""

#: src/types-and-values/strings.md
msgid "\"Greetings\""
msgstr ""

#: src/types-and-values/strings.md
msgid "\"ü™ê\""
msgstr ""

#: src/types-and-values/strings.md
msgid "\", \""
msgstr ""

#: src/types-and-values/strings.md
msgid "\"final sentence: {}\""
msgstr ""

#: src/types-and-values/strings.md src/async/control-flow/join.md
msgid "\"{:?}\""
msgstr ""

#: src/types-and-values/strings.md
msgid "//println!(\"{:?}\", &sentence[12..13]);\n"
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"This slide introduces strings. Everything here will be covered in more depth "
"later, but this is enough for subsequent slides and exercises to use strings."
msgstr ""

#: src/types-and-values/strings.md
msgid "Invalid UTF-8 in a string is UB, and this not allowed in safe Rust."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"`String` is a user-defined type with a constructor (`::new()`) and methods "
"like `s.push_str(..)`."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"The `&` in `&str` indicates that this is a reference. We will cover "
"references later, so for now just think of `&str` as a unit meaning \"a read-"
"only string\"."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"The commented-out line is indexing into the string by byte position. "
"`12..13` does not end on a character boundary, so the program panics. Adjust "
"it to a range that does, based on the error message."
msgstr ""

#: src/types-and-values/strings.md
msgid ""
"Raw strings allow you to create a `&str` value with escapes disabled: "
"`r\"\\n\" == \"\\\\n\"`. You can embed double-quotes by using an equal "
"amount of `#` on either side of the quotes:"
msgstr ""
"Las cadenas sin formato te permiten crear un valor `&str` con los escapes "
"inhabilitados: `r\"\\n\" == \"\\\\n\"`. Puedes insertar comillas dobles con "
"la misma cantidad de `#` a cada lado de ellas:"

#: src/types-and-values/inference.md
msgid "Rust will look at how the variable is _used_ to determine the type:"
msgstr "Rust consultar√° c√≥mo se _usa_ la variable para determinar el tipo:"

#: src/types-and-values/inference.md
msgid ""
"This slide demonstrates how the Rust compiler infers types based on "
"constraints given by variable declarations and usages."
msgstr ""
"Esta diapositiva muestra c√≥mo el compilador de Rust infiere tipos bas√°ndose "
"en restricciones proporcionadas por declaraciones y usos de variables."

#: src/types-and-values/inference.md
msgid ""
"It is very important to emphasize that variables declared like this are not "
"of some sort of dynamic \"any type\" that can hold any data. The machine "
"code generated by such declaration is identical to the explicit declaration "
"of a type. The compiler does the job for us and helps us write more concise "
"code."
msgstr ""
"Es muy importante subrayar que las variables que se declaran as√≠ no son de "
"un \"tipo cualquiera\" din√°mico que pueda contener cualquier dato. El c√≥digo "
"m√°quina generado por tal declaraci√≥n es id√©ntico a la declaraci√≥n expl√≠cita "
"de un tipo. El compilador hace el trabajo por nosotros y nos ayuda a "
"escribir c√≥digo m√°s conciso."

#: src/types-and-values/inference.md
msgid ""
"When nothing constrains the type of an integer literal, Rust defaults to "
"`i32`. This sometimes appears as `{integer}` in error messages. Similarly, "
"floating-point literals default to `f64`."
msgstr ""

#: src/types-and-values/inference.md
msgid "// ERROR: no implementation for `{float} == {integer}`\n"
msgstr ""

#: src/types-and-values/exercise.md
msgid ""
"The first and second Fibonacci numbers are both `1`. For n>2, the n'th "
"Fibonacci number is calculated recursively as the sum of the n-1'th and "
"n-2'th Fibonacci numbers."
msgstr ""

#: src/types-and-values/exercise.md
msgid ""
"Write a function `fib(n)` that calculates the n'th Fibonacci number. When "
"will this function panic?"
msgstr ""

#: src/types-and-values/exercise.md
msgid "// The base case.\n"
msgstr ""

#: src/types-and-values/exercise.md src/control-flow-basics/exercise.md
#, fuzzy
msgid "\"Implement this\""
msgstr "Implementaci√≥n"

#: src/types-and-values/exercise.md
msgid "// The recursive case.\n"
msgstr ""

#: src/types-and-values/exercise.md src/types-and-values/solution.md
msgid "\"fib(n) = {}\""
msgstr ""

#: src/control-flow-basics.md
msgid "[Conditionals](./control-flow-basics/conditionals.md) (5 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid "[Loops](./control-flow-basics/loops.md) (5 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid ""
"[break and continue](./control-flow-basics/break-continue.md) (5 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid ""
"[Blocks and Scopes](./control-flow-basics/blocks-and-scopes.md) (10 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid "[Functions](./control-flow-basics/functions.md) (3 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid "[Macros](./control-flow-basics/macros.md) (2 minutes)"
msgstr ""

#: src/control-flow-basics.md
msgid ""
"[Exercise: Collatz Sequence](./control-flow-basics/exercise.md) (30 minutes)"
msgstr ""

#: src/control-flow-basics.md src/tuples-and-arrays.md src/borrowing.md
msgid "This segment should take about 1 hour"
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "Much of the Rust syntax will be familiar to you from C, C++ or Java:"
msgstr ""
"Gran parte de la sintaxis de Rust te resultar√° familiar de C, C++ o Java:"

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid "Blocks are delimited by curly braces."
msgstr "Los bloques y √°mbitos est√°n delimitados por llaves."

#: src/control-flow-basics/conditionals.md
msgid ""
"Line comments are started with `//`, block comments are delimited by `/* ... "
"*/`."
msgstr ""
"Los comentarios de l√≠nea empiezan por `//`, mientras que los comentarios de "
"bloque est√°n delimitados por `/* ... */`."

#: src/control-flow-basics/conditionals.md
msgid "Keywords like `if` and `while` work the same."
msgstr "Palabras clave como `if` y `while` funcionan igual."

#: src/control-flow-basics/conditionals.md
msgid "Variable assignment is done with `=`, comparison is done with `==`."
msgstr ""
"La asignaci√≥n de variables se realiza con `=` y la comparaci√≥n con `==`."

#: src/control-flow-basics/conditionals.md
msgid "`if` expressions"
msgstr "Expresiones `if`"

#: src/control-flow-basics/conditionals.md
msgid ""
"You use [`if` expressions](https://doc.rust-lang.org/reference/expressions/"
"if-expr.html#if-expressions) exactly like `if` statements in other languages:"
msgstr ""
"Puedes usar [expresiones `if`](https://doc.rust-lang.org/reference/"
"expressions/if-expr.html#if-expressions) de la misma forma que en otros "
"lenguajes:"

#: src/control-flow-basics/conditionals.md
msgid "\"small\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "\"biggish\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "\"huge\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid ""
"In addition, you can use `if` as an expression. The last expression of each "
"block becomes the value of the `if` expression:"
msgstr ""
"Adem√°s, puedes utilizar `if` como expresi√≥n. La √∫ltima expresi√≥n de cada "
"bloque se convierte en el valor de la expresi√≥n `if`:"

#: src/control-flow-basics/conditionals.md
msgid "\"large\""
msgstr ""

#: src/control-flow-basics/conditionals.md
msgid "\"number size: {}\""
msgstr ""

#: src/control-flow-basics/conditionals.md
#, fuzzy
msgid ""
"Because `if` is an expression and must have a particular type, both of its "
"branch blocks must have the same type. Show what happens if you add `;` "
"after `\"small\"` in the second example."
msgstr ""
"Dado que `if` es una expresi√≥n y debe tener un tipo concreto, ambos bloques "
"de ramas deben tener el mismo tipo. En el segundo ejemplo, puedes mostrar lo "
"que sucede al a√±adir `;` despu√©s de `x / 2`."

#: src/control-flow-basics/conditionals.md
msgid ""
"When `if` is used in an expression, the expression must have a `;` to "
"separate it from the next statement. Remove the `;` before `println!` to see "
"the compiler error."
msgstr ""

#: src/control-flow-basics/loops.md
msgid "There are three looping keywords in Rust: `while`, `loop`, and `for`:"
msgstr ""

#: src/control-flow-basics/loops.md
#, fuzzy
msgid "`while`"
msgstr "Bucles `while`"

#: src/control-flow-basics/loops.md
#, fuzzy
msgid ""
"The [`while` keyword](https://doc.rust-lang.org/reference/expressions/loop-"
"expr.html#predicate-loops) works much like in other languages, executing the "
"loop body as long as the condition is true."
msgstr ""
"La [palabra clave `while`](https://doc.rust-lang.org/reference/expressions/"
"loop-expr.html#predicate-loops) es muy similar a otros lenguajes:"

#: src/control-flow-basics/loops.md
msgid "\"Final x: {x}\""
msgstr ""

#: src/control-flow-basics/loops.md
#, fuzzy
msgid "`for`"
msgstr "Bucles `for`"

#: src/control-flow-basics/loops.md
#, fuzzy
msgid ""
"The [`for` loop](https://doc.rust-lang.org/std/keyword.for.html) iterates "
"over ranges of values:"
msgstr ""
"[`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html) se usa para "
"definir destructores."

#: src/control-flow-basics/loops.md
msgid "`loop`"
msgstr ""

#: src/control-flow-basics/loops.md
#, fuzzy
msgid ""
"The [`loop` statement](https://doc.rust-lang.org/std/keyword.loop.html) just "
"loops forever, until a `break`."
msgstr ""
"[`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop.html) se usa para "
"definir destructores."

#: src/control-flow-basics/loops.md
msgid "\"{i}\""
msgstr ""

#: src/control-flow-basics/loops.md
msgid ""
"We will discuss iteration later; for now, just stick to range expressions."
msgstr ""

#: src/control-flow-basics/loops.md
msgid ""
"Note that the `for` loop only iterates to `4`. Show the `1..=5` syntax for "
"an inclusive range."
msgstr ""

#: src/control-flow-basics/break-continue.md
#, fuzzy
msgid ""
"If you want to exit any kind of loop early, use [`break`](https://doc.rust-"
"lang.org/reference/expressions/loop-expr.html#break-expressions). For "
"`loop`, this can take an optional expression that becomes the value of the "
"`loop` expression."
msgstr ""
"Si quieres salir de un bucle antes, usa [`break`](https://doc.rust-lang.org/"
"reference/expressions/loop-expr.html#break-expressions)."

#: src/control-flow-basics/break-continue.md
msgid ""
"If you want to immediately start the next iteration use [`continue`](https://"
"doc.rust-lang.org/reference/expressions/loop-expr.html#continue-expressions)."
msgstr ""
"Si quieres iniciar inmediatamente la siguiente iteraci√≥n, usa [`continue`]"
"(https://doc.rust-lang.org/reference/expressions/loop-expr.html#continue-"
"expressions)."

#: src/control-flow-basics/break-continue.md
msgid "\"{result}\""
msgstr ""

#: src/control-flow-basics/break-continue.md
msgid ""
"Both `continue` and `break` can optionally take a label argument which is "
"used to break out of nested loops:"
msgstr ""
"De forma opcional, tanto `continue` como `break` pueden utilizar un "
"argumento de etiqueta para interrumpir los bucles anidados:"

#: src/control-flow-basics/break-continue.md
msgid "\"x: {x}, i: {i}\""
msgstr ""

#: src/control-flow-basics/break-continue.md
msgid ""
"In this case we break the outer loop after 3 iterations of the inner loop."
msgstr ""
"En este caso, detenemos el bucle exterior tras tres iteraciones del bucle "
"interno."

#: src/control-flow-basics/break-continue.md
msgid ""
"Note that `loop` is the only looping construct which returns a non-trivial "
"value. This is because it's guaranteed to be entered at least once (unlike "
"`while` and `for` loops)."
msgstr ""
"Ten en cuenta que `loop` es la √∫nica construcci√≥n de bucle que devuelve un "
"valor no trivial. Esto se debe a que es inevitable que se introduzca al "
"menos una vez (a diferencia de los bucles `while` y `for`)."

#: src/control-flow-basics/blocks-and-scopes.md
msgid "Blocks"
msgstr "Bloques"

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid ""
"A block in Rust contains a sequence of expressions, enclosed by braces `{}`. "
"Each block has a value and a type, which are those of the last expression of "
"the block:"
msgstr ""
"En Rust, un bloque contiene una secuencia de expresiones.  Cada bloque tiene "
"un tipo y un valor,  que son los de la √∫ltima expresi√≥n del bloque:"

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"y: {y}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid ""
"If the last expression ends with `;`, then the resulting value and type is "
"`()`."
msgstr ""
"Si la √∫ltima expresi√≥n termina con `;`, el tipo y el valor resultante ser√° "
"`()`."

#: src/control-flow-basics/blocks-and-scopes.md
msgid "Scopes and Shadowing"
msgstr "√Åmbitos y _Shadowing_"

#: src/control-flow-basics/blocks-and-scopes.md
msgid "A variable's scope is limited to the enclosing block."
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid ""
"You can shadow variables, both those from outer scopes and variables from "
"the same scope:"
msgstr ""
"Puedes sombrear variables, tanto las de √°mbitos externos como las del propio "
"√°mbito:"

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"before: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md src/std-traits/from-and-into.md
#: src/slices-and-lifetimes/solution.md
msgid "\"hello\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"inner scope: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"shadowed in inner scope: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid "\"after: {a}\""
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
msgid ""
"You can show how the value of the block changes by changing the last line in "
"the block. For instance, adding/removing a semicolon or using a `return`."
msgstr ""
"Puedes mostrar c√≥mo cambia el valor del bloque cambiando su √∫ltima l√≠nea. "
"Por ejemplo, a√±ade o quita un punto y coma, o utiliza la expresi√≥n `return`."

#: src/control-flow-basics/blocks-and-scopes.md
msgid ""
"Show that a variable's scope is limited by adding a `b` in the inner block "
"in the last example, and then trying to access it outside that block."
msgstr ""

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid ""
"Shadowing is different from mutation, because after shadowing both "
"variable's memory locations exist at the same time. Both are available under "
"the same name, depending where you use it in the code."
msgstr ""
"Definici√≥n: _Shadowing_ (sombreado) es distinto de la mutaci√≥n, ya que, "
"despu√©s de sombrear la memoria de las dos variables, las ubicaciones existen "
"al mismo tiempo. Ambas est√°n disponibles bajo el mismo nombre, en funci√≥n de "
"d√≥nde se utiliza en el c√≥digo. "

#: src/control-flow-basics/blocks-and-scopes.md
#, fuzzy
msgid "A shadowing variable can have a different type."
msgstr "Una variable sombreada puede tener un tipo diferente. "

#: src/control-flow-basics/blocks-and-scopes.md
msgid ""
"Shadowing looks obscure at first, but is convenient for holding on to values "
"after `.unwrap()`."
msgstr ""
"Al principio, el sombreado no es f√°cil, pero resulta √∫til para conservar "
"valores despu√©s de `.unwrap()`."

#: src/control-flow-basics/functions.md
msgid ""
"Declaration parameters are followed by a type (the reverse of some "
"programming languages), then a return type."
msgstr ""
"Los par√°metros de declaraci√≥n van seguidos de un tipo (al contrario que en "
"algunos lenguajes de programaci√≥n) y, a continuaci√≥n, de un tipo de "
"resultado devuelto."

#: src/control-flow-basics/functions.md
#, fuzzy
msgid ""
"The last expression in a function body (or any block) becomes the return "
"value. Simply omit the `;` at the end of the expression. The `return` "
"keyword can be used for early return, but the \"bare value\" form is "
"idiomatic at the end of a function (refactor `gcd` to use a `return`)."
msgstr ""
"La √∫ltima expresi√≥n del cuerpo de una funci√≥n (o de cualquier bloque) se "
"convierte en el valor devuelto. Basta con omitir el car√°cter `;` al final de "
"la expresi√≥n."

#: src/control-flow-basics/functions.md
msgid ""
"Some functions have no return value, and return the 'unit type', `()`. The "
"compiler will infer this if the `-> ()` return type is omitted."
msgstr ""
"Algunas funciones no devuelven ning√∫n valor, devuelven el \"tipo unitario\", "
"`()`. El compilador deducir√° esto si se omite el tipo de retorno `-> ()`."

#: src/control-flow-basics/functions.md
#, fuzzy
msgid ""
"Overloading is not supported -- each function has a single implementation."
msgstr "Cada funci√≥n tiene una √∫nica implementaci√≥n:"

#: src/control-flow-basics/functions.md
msgid ""
"Always takes a fixed number of parameters. Default arguments are not "
"supported. Macros can be used to support variadic functions."
msgstr ""

#: src/control-flow-basics/functions.md
#, fuzzy
msgid ""
"Always takes a single set of parameter types. These types can be generic, "
"which will be covered later."
msgstr "Siempre se utiliza un √∫nico conjunto de tipos de par√°metros."

#: src/control-flow-basics/macros.md
msgid ""
"Macros are expanded into Rust code during compilation, and can take a "
"variable number of arguments. They are distinguished by a `!` at the end. "
"The Rust standard library includes an assortment of useful macros."
msgstr ""

#: src/control-flow-basics/macros.md
#, fuzzy
msgid ""
"`println!(format, ..)` prints a line to standard output, applying formatting "
"described in [`std::fmt`](https://doc.rust-lang.org/std/fmt/index.html)."
msgstr ""
"La sobrecarga de operadores se implementa mediante _traits_ en [`std::ops`]"
"(https://doc.rust-lang.org/std/ops/index.html):"

#: src/control-flow-basics/macros.md
msgid ""
"`format!(format, ..)` works just like `println!` but returns the result as a "
"string."
msgstr ""

#: src/control-flow-basics/macros.md
msgid "`dbg!(expression)` logs the value of the expression and returns it."
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"`todo!()` marks a bit of code as not-yet-implemented. If executed, it will "
"panic."
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"`unreachable!()` marks a bit of code as unreachable. If executed, it will "
"panic."
msgstr ""

#: src/control-flow-basics/macros.md
msgid "\"{n}! = {}\""
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"The takeaway from this section is that these common conveniences exist, and "
"how to use them. Why they are defined as macros, and what they expand to, is "
"not especially critical."
msgstr ""

#: src/control-flow-basics/macros.md
msgid ""
"The course does not cover defining macros, but a later section will describe "
"use of derive macros."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid ""
"The [Collatz Sequence](https://en.wikipedia.org/wiki/Collatz_conjecture) is "
"defined as follows, for an arbitrary n"
msgstr ""

#: src/control-flow-basics/exercise.md
#, fuzzy
msgid "1"
msgstr "12"

#: src/control-flow-basics/exercise.md
msgid " greater than zero:"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "If _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "i"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ is 1, then the sequence terminates at _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ is even, then _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "i+1"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " = n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " / 2_."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ is odd, then _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " = 3 * n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid " + 1_."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "For example, beginning with _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ = 3:"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "3 is odd, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md
#, fuzzy
msgid "2"
msgstr "12"

#: src/control-flow-basics/exercise.md
msgid "_ = 3 * 3 + 1 = 10;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "10 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
msgid "3"
msgstr "3"

#: src/control-flow-basics/exercise.md
msgid "_ = 10 / 2 = 5;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "5 is odd, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
msgid "4"
msgstr "4"

#: src/control-flow-basics/exercise.md
msgid "_ = 3 * 5 + 1 = 16;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "16 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "5"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ = 16 / 2 = 8;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "8 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
msgid "6"
msgstr "6"

#: src/control-flow-basics/exercise.md
msgid "_ = 8 / 2 = 4;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "4 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "7"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "_ = 4 / 2 = 2;"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "2 is even, so _n"
msgstr ""

#: src/control-flow-basics/exercise.md src/bare-metal/aps/better-uart.md
msgid "8"
msgstr "8"

#: src/control-flow-basics/exercise.md
msgid "_ = 1; and"
msgstr ""

#: src/control-flow-basics/exercise.md
msgid "the sequence terminates."
msgstr ""

#: src/control-flow-basics/exercise.md
msgid ""
"Write a function to calculate the length of the collatz sequence for a given "
"initial `n`."
msgstr ""

#: src/control-flow-basics/exercise.md src/control-flow-basics/solution.md
msgid "/// Determine the length of the collatz sequence beginning at `n`.\n"
msgstr ""

#: src/control-flow-basics/solution.md src/concurrency/scoped-threads.md
msgid "\"Length: {}\""
msgstr ""

#: src/welcome-day-1-afternoon.md src/welcome-day-2-afternoon.md
#: src/welcome-day-3-afternoon.md src/welcome-day-4-afternoon.md
#, fuzzy
msgid "Welcome Back"
msgstr "Te damos la bienvenida"

#: src/welcome-day-1-afternoon.md
msgid "[Tuples and Arrays](./tuples-and-arrays.md) (1 hour)"
msgstr ""

#: src/welcome-day-1-afternoon.md
msgid "[References](./references.md) (50 minutes)"
msgstr ""

#: src/welcome-day-1-afternoon.md
msgid "[User-Defined Types](./user-defined-types.md) (50 minutes)"
msgstr ""

#: src/welcome-day-1-afternoon.md
msgid ""
"Including 10 minute breaks, this session should take about 2 hours and 55 "
"minutes"
msgstr ""

#: src/tuples-and-arrays.md
msgid ""
"[Tuples and Arrays](./tuples-and-arrays/tuples-and-arrays.md) (10 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Array Iteration](./tuples-and-arrays/iteration.md) (3 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Pattern Matching](./tuples-and-arrays/match.md) (10 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Destructuring](./tuples-and-arrays/destructuring.md) (5 minutes)"
msgstr ""

#: src/tuples-and-arrays.md
msgid "[Exercise: Nested Arrays](./tuples-and-arrays/exercise.md) (30 minutes)"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"Tuples and arrays are the first \"compound\" types we have seen. All "
"elements of an array have the same type, while tuples can accommodate "
"different types. Both types have a size fixed at compile time."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
#: src/tuples-and-arrays/destructuring.md
msgid "Arrays"
msgstr "Arrays"

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`[T; N]`"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`[20, 30, 40]`, `[0; 3]`"
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
#: src/tuples-and-arrays/destructuring.md
msgid "Tuples"
msgstr "Tuplas"

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`()`, `(T,)`, `(T1, T2)`, ..."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "`()`, `('x',)`, `('x', 1.2)`, ..."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Array assignment and access:"
msgstr "Asignaci√≥n y acceso a arrays:"

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Tuple assignment and access:"
msgstr "Asignaci√≥n y acceso a tuplas:"

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Arrays:"
msgstr "Arrays:"

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid ""
"A value of the array type `[T; N]` holds `N` (a compile-time constant) "
"elements of the same type `T`. Note that the length of the array is _part of "
"its type_, which means that `[u8; 3]` and `[u8; 4]` are considered two "
"different types. Slices, which have a size determined at runtime, are "
"covered later."
msgstr ""
"Un valor del tipo array `[T; N]` contiene `N` (una constante en tiempo de "
"compilaci√≥n) elementos del mismo tipo `T`. Ten en cuenta que la longitud del "
"array es *parte de su tipo*, lo que significa que `[u8; 3]` y `[u8; 4]` se "
"consideran dos tipos diferentes."

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"Try accessing an out-of-bounds array element. Array accesses are checked at "
"runtime. Rust can usually optimize these checks away, and they can be "
"avoided using unsafe Rust."
msgstr ""

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "We can use literals to assign values to arrays."
msgstr "Podemos usar literales para asignar valores a arrays."

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid ""
"The `println!` macro asks for the debug implementation with the `?` format "
"parameter: `{}` gives the default output, `{:?}` gives the debug output. "
"Types such as integers and strings implement the default output, but arrays "
"only implement the debug output. This means that we must use debug output "
"here."
msgstr ""
"En la funci√≥n _main_, la instrucci√≥n de impresi√≥n solicita la implementaci√≥n "
"de depuraci√≥n con el par√°metro de formato `?`: `{}` ofrece la salida "
"predeterminada y `{:?}` ofrece la salida de depuraci√≥n. Tambi√©n se podr√≠a "
"haber usado `{a}` y `{a:?}` sin especificar el valor despu√©s de la cadena de "
"formato."

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"Adding `#`, eg `{a:#?}`, invokes a \"pretty printing\" format, which can be "
"easier to read."
msgstr ""
"Si se a√±ade `#`, por ejemplo `{a:#?}`, se da formato al texto para facilitar "
"la lectura."

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Tuples:"
msgstr "Tuplas:"

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Like arrays, tuples have a fixed length."
msgstr "Al igual que los arrays, las tuplas tienen una longitud fija."

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid "Tuples group together values of different types into a compound type."
msgstr "Las tuplas agrupan valores de diferentes tipos en un tipo compuesto."

#: src/tuples-and-arrays/tuples-and-arrays.md
msgid ""
"Fields of a tuple can be accessed by the period and the index of the value, "
"e.g. `t.0`, `t.1`."
msgstr ""
"Se puede acceder a los campos de una tupla por el punto y el √≠ndice del "
"valor, por ejemplo, `t.0`, `t.1`."

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid ""
"The empty tuple `()` is also known as the \"unit type\". It is both a type, "
"and the only valid value of that type --- that is to say both the type and "
"its value are expressed as `()`. It is used to indicate, for example, that a "
"function or expression has no return value, as we'll see in a future slide."
msgstr ""
"La tupla vac√≠a `()` tambi√©n se conoce como \"tipo unitario\". Es a la vez un "
"tipo y el √∫nico valor v√°lido de ese tipo, es decir, tanto el tipo como su "
"valor se expresan como `()`. Se usa para indicar, por ejemplo, que una "
"funci√≥n o expresi√≥n no tiene valor de retorno, como veremos en una "
"diapositiva posterior."

#: src/tuples-and-arrays/tuples-and-arrays.md
#, fuzzy
msgid ""
"You can think of it as `void` that can be familiar to you from other "
"programming languages."
msgstr ""
"Podr√≠amos pensar en ello como `void`, que quiz√° resulte familiar de otros "
"lenguajes de programaci√≥n."

#: src/tuples-and-arrays/iteration.md
msgid "The `for` statement supports iterating over arrays (but not tuples)."
msgstr ""

#: src/tuples-and-arrays/iteration.md
msgid ""
"This functionality uses the `IntoIterator` trait, but we haven't covered "
"that yet."
msgstr ""

#: src/tuples-and-arrays/iteration.md
msgid ""
"The `assert_ne!` macro is new here. There are also `assert_eq!` and `assert!"
"` macros. These are always checked while, debug-only variants like "
"`debug_assert!` compile to nothing in release builds."
msgstr ""

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"The `match` keyword lets you match a value against one or more _patterns_. "
"The comparisons are done from top to bottom and the first match wins."
msgstr ""
"La palabra clave `match` te permite comparar un valor con uno o varios "
"_patrones_. Las comparaciones se hacen de arriba abajo y el primero que "
"coincida gana."

#: src/tuples-and-arrays/match.md
msgid "The patterns can be simple values, similarly to `switch` in C and C++:"
msgstr ""
"Los patrones pueden ser valores simples, del mismo modo que `switch` en C y "
"C++:"

#: src/tuples-and-arrays/match.md
msgid "'x'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'q'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Quitting\""
msgstr ""

#: src/tuples-and-arrays/match.md src/std-traits/solution.md
#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'a'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'s'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'w'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "'d'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Moving around\""
msgstr ""

#: src/tuples-and-arrays/match.md src/error-handling/exercise.md
#: src/error-handling/solution.md
msgid "'0'"
msgstr ""

#: src/tuples-and-arrays/match.md src/error-handling/exercise.md
#: src/error-handling/solution.md
msgid "'9'"
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Number input\""
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Lowercase: {key}\""
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "\"Something else\""
msgstr ""

#: src/tuples-and-arrays/match.md
msgid ""
"The `_` pattern is a wildcard pattern which matches any value. The "
"expressions _must_ be irrefutable, meaning that it covers every possibility, "
"so `_` is often used as the final catch-all case."
msgstr ""

#: src/tuples-and-arrays/match.md
#, fuzzy
msgid ""
"Match can be used as an expression. Just like `if`, each match arm must have "
"the same type. The type is the last expression of the block, if any. In the "
"example above, the type is `()`."
msgstr ""
"Al igual que con `if let`, cada brazo de coincidencia debe ser del mismo "
"tipo. El tipo es la √∫ltima expresi√≥n del bloque, si la hay. En el ejemplo "
"anterior, el tipo es `()`."

#: src/tuples-and-arrays/match.md
msgid ""
"A variable in the pattern (`key` in this example) will create a binding that "
"can be used within the match arm."
msgstr ""

#: src/tuples-and-arrays/match.md
msgid "A match guard causes the arm to match only if the condition is true."
msgstr ""

#: src/tuples-and-arrays/match.md src/user-defined-types/named-structs.md
#: src/user-defined-types/enums.md src/methods-and-traits/methods.md
msgid "Key Points:"
msgstr "Puntos Clave:"

#: src/tuples-and-arrays/match.md
msgid ""
"You might point out how some specific characters are being used when in a "
"pattern"
msgstr "Puedes se√±alar c√≥mo se usan algunos caracteres concretos en un patr√≥n"

#: src/tuples-and-arrays/match.md
msgid "`|` as an `or`"
msgstr "`|` como `or`,"

#: src/tuples-and-arrays/match.md
msgid "`..` can expand as much as it needs to be"
msgstr "`..` se puede ampliar tanto como sea necesario."

#: src/tuples-and-arrays/match.md
msgid "`1..=5` represents an inclusive range"
msgstr "`1..=5` representa un rango inclusivo."

#: src/tuples-and-arrays/match.md
msgid "`_` is a wild card"
msgstr "`_` es un comod√≠n."

#: src/tuples-and-arrays/match.md
msgid ""
"Match guards as a separate syntax feature are important and necessary when "
"we wish to concisely express more complex ideas than patterns alone would "
"allow."
msgstr ""
"Las guardas de coincidencia, como caracter√≠stica sint√°ctica independiente, "
"son importantes y necesarios cuando queremos expresar de forma concisa ideas "
"m√°s complejas de lo que permitir√≠an los patrones por s√≠ solos."

#: src/tuples-and-arrays/match.md
msgid ""
"They are not the same as separate `if` expression inside of the match arm. "
"An `if` expression inside of the branch block (after `=>`) happens after the "
"match arm is selected. Failing the `if` condition inside of that block won't "
"result in other arms of the original `match` expression being considered."
msgstr ""
"No son lo mismo que una expresi√≥n `if` independiente dentro del brazo de "
"coincidencias. Una expresi√≥n `if` dentro del bloque de ramas (despu√©s de "
"`=>`) se produce tras seleccionar el brazo de coincidencias. Si no se cumple "
"la condici√≥n `if` dentro de ese bloque, no se tienen en cuenta otros brazos "
"de la expresi√≥n `match` original."

#: src/tuples-and-arrays/match.md
msgid ""
"The condition defined in the guard applies to every expression in a pattern "
"with an `|`."
msgstr ""
"La condici√≥n definida en el guarda se aplica a todas las expresiones de un "
"patr√≥n con un `|`."

#: src/tuples-and-arrays/destructuring.md
msgid ""
"Destructuring is a way of extracting data from a data structure by writing a "
"pattern that is matched up to the data structure, binding variables to "
"subcomponents of the data structure."
msgstr ""

#: src/tuples-and-arrays/destructuring.md
#, fuzzy
msgid "You can destructure tuples and arrays by matching on their elements:"
msgstr ""
"Puedes desestructurar arrays, tuplas y slices haciendo coincidir sus "
"elementos:"

#: src/tuples-and-arrays/destructuring.md
msgid "\"on Y axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"on X axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"left of Y axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"below X axis\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"first quadrant\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"Tell me about {triple:?}\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"First is 0, y = {y}, and z = {z}\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"First is 1 and the rest were ignored\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
msgid "\"All elements were ignored\""
msgstr ""

#: src/tuples-and-arrays/destructuring.md
#, fuzzy
msgid "Create a new array pattern using `_` to represent an element."
msgstr "Crea un patr√≥n con `_` para representar un elemento. "

#: src/tuples-and-arrays/destructuring.md
msgid "Add more values to the array."
msgstr "A√±ade m√°s valores al array."

#: src/tuples-and-arrays/destructuring.md
msgid ""
"Point out that how `..` will expand to account for different number of "
"elements."
msgstr ""
"Se√±ala c√≥mo `..` se expandir√° para representar un n√∫mero distinto de "
"elementos."

#: src/tuples-and-arrays/destructuring.md
msgid "Show matching against the tail with patterns `[.., b]` and `[a@..,b]`"
msgstr ""
"Muestra las coincidencias de tail con los patrones `[.., b]` y `[a@..,b]`."

#: src/tuples-and-arrays/exercise.md
msgid "Arrays can contain other arrays:"
msgstr ""

#: src/tuples-and-arrays/exercise.md
#, fuzzy
msgid "What is the type of this variable?"
msgstr "¬øCu√°l es el tipo de `word` en cada bucle?"

#: src/tuples-and-arrays/exercise.md
#, fuzzy
msgid ""
"Use an array such as the above to write a function `transpose` which will "
"transpose a matrix (turn rows into columns):"
msgstr ""
"Usa el m√©todo anterior para escribir una funci√≥n `pretty_print` que sirva "
"para dar formato al texto de la matriz y una funci√≥n `transpose` que "
"transponga una matriz (convertir filas en columnas):"

#: src/tuples-and-arrays/exercise.md
msgid "Hard-code both functions to operate on 3 √ó 3 matrices."
msgstr "Codifica ambas funciones para que operen con matrices de 3 √ó 3."

#: src/tuples-and-arrays/exercise.md
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and implement the "
"functions:"
msgstr ""
"Copia el siguiente fragmento de c√≥digo en <https://play.rust-lang.org/> e "
"implementa las funciones:"

#: src/tuples-and-arrays/exercise.md src/borrowing/exercise.md
#: src/unsafe-rust/exercise.md
#, fuzzy
msgid "// TODO: remove this when you're done with your implementation.\n"
msgstr ""
"```rust,should_panic\n"
"// TODO: borra esto cuando termines de implementarlo.\n"
"#![allow(unused_variables, dead_code)]\n"
"```"

#: src/tuples-and-arrays/exercise.md src/tuples-and-arrays/solution.md
msgid "// <-- the comment makes rustfmt add a newline\n"
msgstr ""

#: src/tuples-and-arrays/exercise.md src/tuples-and-arrays/solution.md
msgid "\"matrix: {:#?}\""
msgstr ""

#: src/tuples-and-arrays/exercise.md src/tuples-and-arrays/solution.md
msgid "\"transposed: {:#?}\""
msgstr ""

#: src/tuples-and-arrays/solution.md
msgid "//\n"
msgstr ""

#: src/references.md
msgid "[Shared References](./references/shared.md) (10 minutes)"
msgstr ""

#: src/references.md
msgid "[Exclusive References](./references/exclusive.md) (10 minutes)"
msgstr ""

#: src/references.md
msgid "[Exercise: Geometry](./references/exercise.md) (30 minutes)"
msgstr ""

#: src/references.md src/user-defined-types.md src/pattern-matching.md
msgid "This segment should take about 50 minutes"
msgstr ""

#: src/references/shared.md
msgid ""
"A reference provides a way to access another value without taking "
"responsibility for the value, and is also called \"borrowing\". Shared "
"references are read-only, and the referenced data cannot change."
msgstr ""

#: src/references/shared.md
msgid ""
"A shared reference to a type `T` has type `&T`. A reference value is made "
"with the `&` operator. The `*` operator \"dereferences\" a reference, "
"yielding its value."
msgstr ""

#: src/references/shared.md
msgid "Rust will statically forbid dangling references:"
msgstr "Rust prohibir√° est√°ticamente las referencias colgantes:"

#: src/references/shared.md
msgid ""
"A reference is said to \"borrow\" the value it refers to, and this is a good "
"model for students not familiar with pointers: code can use the reference to "
"access the value, but is still \"owned\" by the original variable. The "
"course will get into more detail on ownership in day 3."
msgstr ""

#: src/references/shared.md
msgid ""
"References are implemented as pointers, and a key advantage is that they can "
"be much smaller than the thing they point to. Students familiar with C or C+"
"+ will recognize references as pointers. Later parts of the course will "
"cover how Rust prevents the memory-safety bugs that come from using raw "
"pointers."
msgstr ""

#: src/references/shared.md
msgid ""
"Rust does not automatically create references for you - the `&` is always "
"required."
msgstr ""

#: src/references/shared.md
#, fuzzy
msgid ""
"Rust will auto-dereference in some cases, in particular when invoking "
"methods (try `r.count_ones()`). There is no need for an `->` operator like "
"in C++."
msgstr ""
"Rust realizar√° una desreferencia autom√°tica en algunos casos, en especial al "
"invocar m√©todos (prueba `ref_x.count_ones()`)."

#: src/references/shared.md
msgid ""
"In this example, `r` is mutable so that it can be reassigned (`r = &b`). "
"Note that this re-binds `r`, so that it refers to something else. This is "
"different from C++, where assignment to a reference changes the referenced "
"value."
msgstr ""

#: src/references/shared.md
msgid ""
"A shared reference does not allow modifying the value it refers to, even if "
"that value was mutable. Try `*r = 'X'`."
msgstr ""

#: src/references/shared.md
msgid ""
"Rust is tracking the lifetimes of all references to ensure they live long "
"enough. Dangling references cannot occur in safe Rust. `x_axis` would return "
"a reference to `point`, but `point` will be deallocated when the function "
"returns, so this will not compile."
msgstr ""

#: src/references/shared.md
msgid "We will talk more about borrowing when we get to ownership."
msgstr ""
"M√°s adelante hablaremos de los pr√©stamos cuando lleguemos a la parte de "
"propiedad."

#: src/references/exclusive.md
msgid ""
"Exclusive references, also known as mutable references, allow changing the "
"value they refer to. They have type `&mut T`."
msgstr ""

#: src/references/exclusive.md
msgid ""
"\"Exclusive\" means that only this reference can be used to access the "
"value. No other references (shared or exclusive) can exist at the same time, "
"and the referenced value cannot be accessed while the exclusive reference "
"exists. Try making an `&point.0` or changing `point.0` while `x_coord` is "
"alive."
msgstr ""

#: src/references/exclusive.md
#, fuzzy
msgid ""
"Be sure to note the difference between `let mut x_coord: &i32` and `let "
"x_coord: &mut i32`. The first one represents a shared reference which can be "
"bound to different values, while the second represents an exclusive "
"reference to a mutable value."
msgstr ""
"Ten en cuenta la diferencia entre `let mut ref_x: &i32` y `let ref_x: &mut "
"i32`. La primera representa una referencia mutable que se puede vincular a "
"distintos valores, mientras que la segunda representa una referencia a un "
"valor mutable."

#: src/references/exercise.md
msgid ""
"We will create a few utility functions for 3-dimensional geometry, "
"representing a point as `[f64;3]`. It is up to you to determine the function "
"signatures."
msgstr ""

#: src/references/exercise.md
msgid ""
"// Calculate the magnitude of a vector by summing the squares of its "
"coordinates\n"
"// and taking the square root. Use the `sqrt()` method to calculate the "
"square\n"
"// root, like `v.sqrt()`.\n"
msgstr ""

#: src/references/exercise.md
msgid ""
"// Normalize a vector by calculating its magnitude and dividing all of its\n"
"// coordinates by that magnitude.\n"
msgstr ""

#: src/references/exercise.md
msgid "// Use the following `main` to test your work.\n"
msgstr ""

#: src/references/exercise.md src/references/solution.md
msgid "\"Magnitude of a unit vector: {}\""
msgstr ""

#: src/references/exercise.md src/references/solution.md
msgid "\"Magnitude of {v:?}: {}\""
msgstr ""

#: src/references/exercise.md src/references/solution.md
msgid "\"Magnitude of {v:?} after normalization: {}\""
msgstr ""

#: src/references/solution.md
msgid "/// Calculate the magnitude of the given vector.\n"
msgstr ""

#: src/references/solution.md
msgid ""
"/// Change the magnitude of the vector to 1.0 without changing its "
"direction.\n"
msgstr ""

#: src/user-defined-types.md
msgid "[Named Structs](./user-defined-types/named-structs.md) (10 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid "[Tuple Structs](./user-defined-types/tuple-structs.md) (10 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid "[Enums](./user-defined-types/enums.md) (5 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid ""
"[Static and Const](./user-defined-types/static-and-const.md) (5 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid "[Type Aliases](./user-defined-types/aliases.md) (2 minutes)"
msgstr ""

#: src/user-defined-types.md
msgid ""
"[Exercise: Elevator Events](./user-defined-types/exercise.md) (15 minutes)"
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "Like C and C++, Rust has support for custom structs:"
msgstr "Al igual que C y C++, Rust admite estructuras (struct) personalizadas:"

#: src/user-defined-types/named-structs.md
msgid "\"{} is {} years old\""
msgstr ""

#: src/user-defined-types/named-structs.md
#: src/android/interoperability/with-c/bindgen.md
msgid "\"Peter\""
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "\"Avery\""
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "\"Jackie\""
msgstr ""

#: src/user-defined-types/named-structs.md
msgid "Structs work like in C or C++."
msgstr "Las estructuras funcionan como en C o en C++."

#: src/user-defined-types/named-structs.md
msgid "Like in C++, and unlike in C, no typedef is needed to define a type."
msgstr ""
"Al igual que en C++, y a diferencia de C, no se necesita typedef para "
"definir un tipo."

#: src/user-defined-types/named-structs.md
msgid "Unlike in C++, there is no inheritance between structs."
msgstr "A diferencia de C++, no existe ninguna herencia entre las estructuras."

#: src/user-defined-types/named-structs.md
#, fuzzy
msgid ""
"This may be a good time to let people know there are different types of "
"structs."
msgstr ""
"Puede que sea un buen momento para indicar a los alumnos que existen "
"diferentes tipos de estructuras. "

#: src/user-defined-types/named-structs.md
#, fuzzy
msgid ""
"Zero-sized structs (e.g. `struct Foo;`) might be used when implementing a "
"trait on some type but don‚Äôt have any data that you want to store in the "
"value itself."
msgstr ""
"Las estructuras de tama√±o cero, como `struct Foo;`, se pueden utilizar al "
"implementar un trait en alg√∫n tipo, pero no tienen ning√∫n dato que te "
"interese almacenar en el propio valor. "

#: src/user-defined-types/named-structs.md
msgid ""
"The next slide will introduce Tuple structs, used when the field names are "
"not important."
msgstr ""
"La siguiente diapositiva presentar√° las estructuras de tuplas, que se "
"utilizan cuando los nombres de los campos no son importantes."

#: src/user-defined-types/named-structs.md
#, fuzzy
msgid ""
"If you already have variables with the right names, then you can create the "
"struct using a shorthand."
msgstr ""
"Si ya dispones de variables con los nombres adecuados, puedes crear la "
"estructura con un m√©todo abreviado:"

#: src/user-defined-types/named-structs.md
#, fuzzy
msgid ""
"The syntax `..avery` allows us to copy the majority of the fields from the "
"old struct without having to explicitly type it all out. It must always be "
"the last element."
msgstr ""
"La sintaxis `..peter` nos permite copiar la mayor√≠a de los campos de la "
"estructura anterior sin tener que escribirlos expl√≠citamente. Siempre debe "
"ser el √∫ltimo elemento."

#: src/user-defined-types/tuple-structs.md
msgid "If the field names are unimportant, you can use a tuple struct:"
msgstr ""
"Si los nombres de los campos no son importantes, puedes utilizar una "
"estructura de tuplas:"

#: src/user-defined-types/tuple-structs.md
msgid "\"({}, {})\""
msgstr ""

#: src/user-defined-types/tuple-structs.md
msgid "This is often used for single-field wrappers (called newtypes):"
msgstr ""
"Esto se suele utilizar para envoltorios de campo √∫nico (denominados "
"newtypes):"

#: src/user-defined-types/tuple-structs.md
msgid "\"Ask a rocket scientist at NASA\""
msgstr ""

#: src/user-defined-types/tuple-structs.md
#: src/android/interoperability/cpp/cpp-bridge.md
#: src/bare-metal/microcontrollers/type-state.md
#: src/async/pitfalls/cancellation.md
msgid "// ...\n"
msgstr ""

#: src/user-defined-types/tuple-structs.md
msgid ""
"Newtypes are a great way to encode additional information about the value in "
"a primitive type, for example:"
msgstr ""
"Los newtypes son una buena forma de codificar informaci√≥n adicional sobre el "
"valor de un tipo primitivo, por ejemplo:"

#: src/user-defined-types/tuple-structs.md
msgid "The number is measured in some units: `Newtons` in the example above."
msgstr ""
"El n√∫mero se mide en algunas unidades: `Newtons` en el ejemplo anterior."

#: src/user-defined-types/tuple-structs.md
#, fuzzy
msgid ""
"The value passed some validation when it was created, so you no longer have "
"to validate it again at every use: `PhoneNumber(String)` or `OddNumber(u32)`."
msgstr ""
"El valor ha pasado alguna validaci√≥n cuando se ha creado, por lo que ya no "
"tendr√°s que volver a validarlo cada vez que lo uses: `PhoneNumber(String)` u "
"`OddNumber(u32)`."

#: src/user-defined-types/tuple-structs.md
msgid ""
"Demonstrate how to add a `f64` value to a `Newtons` type by accessing the "
"single field in the newtype."
msgstr ""
"Demuestra c√≥mo se a√±ade un valor `f64` a un tipo `Newtons` accediendo al "
"campo √∫nico del newtype."

#: src/user-defined-types/tuple-structs.md
msgid ""
"Rust generally doesn‚Äôt like inexplicit things, like automatic unwrapping or "
"for instance using booleans as integers."
msgstr ""
"Por lo general, a Rust no le gustan los elementos no expl√≠citos, como el "
"desenvolvimiento autom√°tico o, por ejemplo, el uso de booleanos como enteros."

#: src/user-defined-types/tuple-structs.md
msgid "Operator overloading is discussed on Day 3 (generics)."
msgstr "El d√≠a 3 (gen√©ricos), se explicar√° la sobrecarga del operador."

#: src/user-defined-types/tuple-structs.md
msgid ""
"The example is a subtle reference to the [Mars Climate Orbiter](https://en."
"wikipedia.org/wiki/Mars_Climate_Orbiter) failure."
msgstr ""
"El ejemplo es una sutil referencia al fracaso de la sonda [Mars Climate "
"Orbiter](https://es.wikipedia.org/wiki/Mars_Climate_Orbiter)."

#: src/user-defined-types/enums.md
msgid ""
"The `enum` keyword allows the creation of a type which has a few different "
"variants:"
msgstr ""
"La palabra clave `enum` permite crear un tipo que tiene diferentes variantes:"

#: src/user-defined-types/enums.md
msgid "// Simple variant\n"
msgstr ""

#: src/user-defined-types/enums.md
msgid "// Tuple variant\n"
msgstr ""

#: src/user-defined-types/enums.md
msgid "// Struct variant\n"
msgstr ""

#: src/user-defined-types/enums.md
msgid "\"On this turn: {:?}\""
msgstr ""

#: src/user-defined-types/enums.md
#, fuzzy
msgid "Enumerations allow you to collect a set of values under one type."
msgstr ""
"Las enumeraciones te permiten recoger un conjunto de valores en un solo tipo."

#: src/user-defined-types/enums.md
msgid ""
"`Direction` is a type with variants. There are two values of `Direction`: "
"`Direction::Left` and `Direction::Right`."
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"`PlayerMove` is a type with three variants. In addition to the payloads, "
"Rust will store a discriminant so that it knows at runtime which variant is "
"in a `PlayerMove` value."
msgstr ""

#: src/user-defined-types/enums.md
#, fuzzy
msgid "This might be a good time to compare structs and enums:"
msgstr ""
"Este es un buen momento para comparar las estructuras y las enumeraciones:"

#: src/user-defined-types/enums.md
#, fuzzy
msgid ""
"In both, you can have a simple version without fields (unit struct) or one "
"with different types of fields (variant payloads)."
msgstr ""
"En ambas puedes tener una versi√≥n sencilla sin campos (estructura unitaria) "
"o una versi√≥n con distintos tipos de campos (variantes con carga √∫til). "

#: src/user-defined-types/enums.md
#, fuzzy
msgid ""
"You could even implement the different variants of an enum with separate "
"structs but then they wouldn‚Äôt be the same type as they would if they were "
"all defined in an enum."
msgstr ""
"Incluso podr√≠as implementar las distintas variantes de una enumeraci√≥n con "
"estructuras diferentes, pero entonces no ser√≠an del mismo tipo como lo "
"ser√≠an si estuvieran todas definidas en una enumeraci√≥n. "

#: src/user-defined-types/enums.md
msgid "Rust uses minimal space to store the discriminant."
msgstr ""

#: src/user-defined-types/enums.md
msgid "If necessary, it stores an integer of the smallest required size"
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"If the allowed variant values do not cover all bit patterns, it will use "
"invalid bit patterns to encode the discriminant (the \"niche "
"optimization\"). For example, `Option<&u8>` stores either a pointer to an "
"integer or `NULL` for the `None` variant."
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"You can control the discriminant if needed (e.g., for compatibility with C):"
msgstr ""
"Puedes controlar el discriminante si es necesario (por ejemplo, para "
"asegurar la compatibilidad con C):"

#: src/user-defined-types/enums.md
msgid ""
"Without `repr`, the discriminant type takes 2 bytes, because 10001 fits 2 "
"bytes."
msgstr ""
"Sin `repr`, el tipo discriminante ocupa 2 bytes, debido a que 10001 se cabe "
"en 2 bytes."

#: src/user-defined-types/enums.md src/user-defined-types/static-and-const.md
#: src/memory-management/review.md src/memory-management/move.md
#: src/smart-pointers/box.md src/borrowing/shared.md
msgid "More to Explore"
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"Rust has several optimizations it can employ to make enums take up less "
"space."
msgstr ""

#: src/user-defined-types/enums.md
msgid ""
"Null pointer optimization: For [some types](https://doc.rust-lang.org/std/"
"option/#representation), Rust guarantees that `size_of::<T>()` equals "
"`size_of::<Option<T>>()`."
msgstr ""
"Optimizaci√≥n de puntero nulo: para [algunos tipos](https://doc.rust-lang.org/"
"std/option/#representation), Rust asegura que `size_of::<T>()` es igual a "
"`size_of::<Option<T> >()`."

#: src/user-defined-types/enums.md
msgid ""
"Example code if you want to show how the bitwise representation _may_ look "
"like in practice. It's important to note that the compiler provides no "
"guarantees regarding this representation, therefore this is totally unsafe."
msgstr ""
"Fragmento de c√≥digo de ejemplo si quieres mostrar c√≥mo puede ser la "
"representaci√≥n bit a bit en la pr√°ctica. Es importante tener en cuenta que "
"el compilador no ofrece garant√≠as con respecto a esta representaci√≥n, por lo "
"tanto es totalmente inseguro. "

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"Static and constant variables are two different ways to create globally-"
"scoped values that cannot be moved or reallocated during the execution of "
"the program."
msgstr ""
"Las variables est√°ticas y constantes son dos formas diferentes de crear "
"valores de √°mbito global que no se pueden mover ni reasignar durante la "
"ejecuci√≥n del programa. "

#: src/user-defined-types/static-and-const.md
msgid "`const`"
msgstr "`const`"

#: src/user-defined-types/static-and-const.md
msgid ""
"Constant variables are evaluated at compile time and their values are "
"inlined wherever they are used:"
msgstr ""
"Las variables constantes se eval√∫an en tiempo de compilaci√≥n y sus valores "
"se insertan dondequiera que se utilicen:"

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"According to the [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html) these are inlined upon use."
msgstr ""
"Seg√∫n el libro [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html), se insertan cuando se utilizan."

#: src/user-defined-types/static-and-const.md
msgid ""
"Only functions marked `const` can be called at compile time to generate "
"`const` values. `const` functions can however be called at runtime."
msgstr ""
"S√≥lo se pueden llamar a las funciones marcadas como `const` en tiempo de "
"compilaci√≥n para generar valores `const`. Sin embargo, las funciones `const` "
"se pueden llamar en _runtime_."

#: src/user-defined-types/static-and-const.md
msgid "`static`"
msgstr "`static`"

#: src/user-defined-types/static-and-const.md
msgid ""
"Static variables will live during the whole execution of the program, and "
"therefore will not move:"
msgstr ""
"Las variables est√°ticas vivir√°n durante toda la ejecuci√≥n del programa y, "
"por lo tanto, no se mover√°n:"

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "\"Welcome to RustOS 3.14\""
msgstr "Te damos la bienvenida al D√≠a 1"

#: src/user-defined-types/static-and-const.md
msgid "\"{BANNER}\""
msgstr ""

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"As noted in the [Rust RFC Book](https://rust-lang.github.io/rfcs/0246-const-"
"vs-static.html), these are not inlined upon use and have an actual "
"associated memory location. This is useful for unsafe and embedded code, and "
"the variable lives through the entirety of the program execution. When a "
"globally-scoped value does not have a reason to need object identity, "
"`const` is generally preferred."
msgstr ""
"Tal y como se indica en el libro [Rust RFC Book](https://rust-lang.github.io/"
"rfcs/0246-const-vs-static.html), no est√°n insertadas y tienen una ubicaci√≥n "
"de memoria real asociada.  Esto resulta √∫til para c√≥digo insertado y no "
"seguro. Adem√°s, la variable contin√∫a durante toda la ejecuci√≥n del programa. "
"Cuando un valor de √°mbito global no tiene ning√∫n motivo para necesitar "
"identidad de objeto, se suele preferir `const`."

#: src/user-defined-types/static-and-const.md
msgid "Mention that `const` behaves semantically similar to C++'s `constexpr`."
msgstr ""
"Menciona que `const` se comporta sem√°nticamente de forma similar a "
"`constexpr` de C++."

#: src/user-defined-types/static-and-const.md
msgid ""
"`static`, on the other hand, is much more similar to a `const` or mutable "
"global variable in C++."
msgstr ""
"Por su parte, `static` se parece mucho m√°s a `const` o a una variable global "
"mutable de C++."

#: src/user-defined-types/static-and-const.md
msgid ""
"`static` provides object identity: an address in memory and state as "
"required by types with interior mutability such as `Mutex<T>`."
msgstr ""
"`static` proporciona la identidad del objeto: una direcci√≥n en la memoria y "
"en el estado que requieren los tipos con mutabilidad interior, como "
"`Mutex<T>`."

#: src/user-defined-types/static-and-const.md
msgid ""
"It isn't super common that one would need a runtime evaluated constant, but "
"it is helpful and safer than using a static."
msgstr ""
"No es muy habitual que se necesite una constante evaluada en _runtime_, pero "
"es √∫til y m√°s seguro que usar una est√°tica."

#: src/user-defined-types/static-and-const.md
msgid "Properties table:"
msgstr "Tabla de Propiedades:"

#: src/user-defined-types/static-and-const.md
#: src/chromium/adding-third-party-crates.md
msgid "Property"
msgstr "Propiedad"

#: src/user-defined-types/static-and-const.md
msgid "Static"
msgstr "Est√°tico"

#: src/user-defined-types/static-and-const.md
msgid "Constant"
msgstr "Constante"

#: src/user-defined-types/static-and-const.md
msgid "Has an address in memory"
msgstr "Tiene una direcci√≥n en la memoria"

#: src/user-defined-types/static-and-const.md
#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Yes"
msgstr "S√≠"

#: src/user-defined-types/static-and-const.md
msgid "No (inlined)"
msgstr "No (insertado)"

#: src/user-defined-types/static-and-const.md
msgid "Lives for the entire duration of the program"
msgstr "Vive durante toda la ejecuci√≥n del programa"

#: src/user-defined-types/static-and-const.md
#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "No"
msgstr "No"

#: src/user-defined-types/static-and-const.md
msgid "Can be mutable"
msgstr "Puede ser mutable"

#: src/user-defined-types/static-and-const.md
msgid "Yes (unsafe)"
msgstr "S√≠ (inseguro)"

#: src/user-defined-types/static-and-const.md
msgid "Evaluated at compile time"
msgstr "Evaluado en tiempo de compilaci√≥n"

#: src/user-defined-types/static-and-const.md
msgid "Yes (initialised at compile time)"
msgstr "S√≠ (inicializado en tiempo de compilaci√≥n)"

#: src/user-defined-types/static-and-const.md
msgid "Inlined wherever it is used"
msgstr "Insertado dondequiera que se utilice"

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid ""
"Because `static` variables are accessible from any thread, they must be "
"`Sync`. Interior mutability is possible through a [`Mutex`](https://doc.rust-"
"lang.org/std/sync/struct.Mutex.html), atomic or similar."
msgstr ""
"Dado que se puede acceder a las variables `static` desde cualquier hilo, es "
"necesario protegerlas, por ejemplo, mediante un comando [`Mutex`](https://"
"doc.rust-lang.org/std/sync/struct.Mutex.html), o que sean accesibles usando "
"c√≥digo `unsafe`. Veremos la [mutaci√≥n de datos est√°ticos](../unsafe/mutable-"
"static-variables.md) en el cap√≠tulo sobre Rust inseguro."

#: src/user-defined-types/static-and-const.md
#, fuzzy
msgid "Thread-local data can be created with the macro `std::thread_local`."
msgstr ""
"Datos del `thread_local` se pueden crear con la macro `std::thread_local`."

#: src/user-defined-types/aliases.md
msgid ""
"A type alias creates a name for another type. The two types can be used "
"interchangeably."
msgstr ""

#: src/user-defined-types/aliases.md
msgid "// Aliases are more useful with long, complex types:\n"
msgstr ""

#: src/user-defined-types/aliases.md
msgid "C programmers will recognize this as similar to a `typedef`."
msgstr ""

#: src/user-defined-types/exercise.md
msgid ""
"We will create a data structure to represent an event in an elevator control "
"system. It is up to you to define the types and functions to construct "
"various events. Use `#[derive(Debug)]` to allow the types to be formatted "
"with `{:?}`."
msgstr ""

#: src/user-defined-types/exercise.md
msgid ""
"This exercise only requires creating and populating data structures so that "
"`main` runs without errors. The next part of the course will cover getting "
"data out of these structures."
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid ""
"/// An event in the elevator system that the controller must react to.\n"
msgstr ""

#: src/user-defined-types/exercise.md
msgid "// TODO: add required variants\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// A direction of travel.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// The car has arrived on the given floor.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// The car doors have opened.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// The car doors have closed.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid ""
"/// A directional button was pressed in an elevator lobby on the given "
"floor.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "/// A floor button was pressed in the elevator car.\n"
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"A ground floor passenger has pressed the up button: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car has arrived on the ground floor: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car door opened: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"A passenger has pressed the 3rd floor button: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car door closed: {:?}\""
msgstr ""

#: src/user-defined-types/exercise.md src/user-defined-types/solution.md
msgid "\"The car has arrived on the 3rd floor: {:?}\""
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A button was pressed.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// The car has arrived at the given floor.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// The car's doors have opened.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// The car's doors have closed.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A floor is represented as an integer.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A user-accessible button.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A button in the elevator lobby on the given floor.\n"
msgstr ""

#: src/user-defined-types/solution.md
msgid "/// A floor button within the car.\n"
msgstr ""

#: src/welcome-day-2.md
msgid "Welcome to Day 2"
msgstr "Te damos la bienvenida al d√≠a 2"

#: src/welcome-day-2.md
#, fuzzy
msgid ""
"Now that we have seen a fair amount of Rust, today will focus on Rust's type "
"system:"
msgstr ""
"Ahora que ya sabemos bastante sobre Rust, continuaremos con lo siguiente:"

#: src/welcome-day-2.md
#, fuzzy
msgid "Pattern matching: extracting data from structures."
msgstr ""
"Emparejamiento de Patrones: desestructuraci√≥n de enums, structs y arrays."

#: src/welcome-day-2.md
msgid "Methods: associating functions with types."
msgstr ""

#: src/welcome-day-2.md
msgid "Traits: behaviors shared by multiple types."
msgstr ""

#: src/welcome-day-2.md
msgid "Generics: parameterizing types on other types."
msgstr ""

#: src/welcome-day-2.md
msgid ""
"Standard library types and traits: a tour of Rust's rich standard library."
msgstr ""

#: src/welcome-day-2.md
msgid "[Welcome](./welcome-day-2.md) (3 minutes)"
msgstr ""

#: src/welcome-day-2.md
#, fuzzy
msgid "[Pattern Matching](./pattern-matching.md) (50 minutes)"
msgstr ""
"Consulta de nuevo la secci√≥n de [coincidencia de patrones](../pattern-"
"matching.md) para obtener m√°s informaci√≥n sobre los patrones de Rust."

#: src/welcome-day-2.md
msgid "[Methods and Traits](./methods-and-traits.md) (55 minutes)"
msgstr ""

#: src/welcome-day-2.md
msgid "[Generics](./generics.md) (45 minutes)"
msgstr ""

#: src/welcome-day-2.md src/welcome-day-4.md
msgid ""
"Including 10 minute breaks, this session should take about 3 hours and 5 "
"minutes"
msgstr ""

#: src/pattern-matching.md
msgid "[Destructuring](./pattern-matching/destructuring.md) (10 minutes)"
msgstr ""

#: src/pattern-matching.md
msgid "[Let Control Flow](./pattern-matching/let-control-flow.md) (10 minutes)"
msgstr ""

#: src/pattern-matching.md
msgid ""
"[Exercise: Expression Evaluation](./pattern-matching/exercise.md) (30 "
"minutes)"
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "Like tuples, structs and enums can also be destructured by matching:"
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "Structs"
msgstr "Structs"

#: src/pattern-matching/destructuring.md
msgid "\"x.0 = 1, b = {b}, y = {y}\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"y = 2, x = {i:?}\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"y = {y}, other fields were ignored\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid ""
"Patterns can also be used to bind variables to parts of your values. This is "
"how you inspect the structure of your types. Let us start with a simple "
"`enum` type:"
msgstr ""
"Los patrones tambi√©n se pueden usar para enlazar variables a partes de los "
"valores. As√≠ es como se inspecciona la estructura de tus tipos. Empecemos "
"con un tipo `enum` sencillo:"

#: src/pattern-matching/destructuring.md
msgid "\"cannot divide {n} into two equal parts\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"{n} divided in two is {half}\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid "\"sorry, an error happened: {msg}\""
msgstr ""

#: src/pattern-matching/destructuring.md
msgid ""
"Here we have used the arms to _destructure_ the `Result` value. In the first "
"arm, `half` is bound to the value inside the `Ok` variant. In the second "
"arm, `msg` is bound to the error message."
msgstr ""
"Aqu√≠ hemos utilizado los brazos para _desestructurar_ el valor de `Result`. "
"En el primer brazo, `half` est√° vinculado al valor que hay dentro de la "
"variante `Ok`. En el segundo, `msg` est√° vinculado al mensaje de error."

#: src/pattern-matching/destructuring.md
msgid "Change the literal values in `foo` to match with the other patterns."
msgstr ""
"Cambia los valores literales de `foo` para que coincidan con los dem√°s "
"patrones."

#: src/pattern-matching/destructuring.md
msgid "Add a new field to `Foo` and make changes to the pattern as needed."
msgstr ""
"A√±ade un campo nuevo a `Foo` y realiza los cambios necesarios en el patr√≥n."

#: src/pattern-matching/destructuring.md
msgid ""
"The distinction between a capture and a constant expression can be hard to "
"spot. Try changing the `2` in the second arm to a variable, and see that it "
"subtly doesn't work. Change it to a `const` and see it working again."
msgstr ""
"La diferencia entre una captura y una expresi√≥n constante puede ser dif√≠cil "
"de detectar. Prueba a cambiar el `2` del segundo brazo por una variable y "
"observa que no funciona. C√°mbialo a `const` y ver√°s que vuelve a funcionar."

#: src/pattern-matching/destructuring.md
msgid ""
"The `if`/`else` expression is returning an enum that is later unpacked with "
"a `match`."
msgstr ""
"La expresi√≥n `if`/`else` devuelve una enumeraci√≥n que m√°s tarde se "
"descomprime con `match`."

#: src/pattern-matching/destructuring.md
msgid ""
"You can try adding a third variant to the enum definition and displaying the "
"errors when running the code. Point out the places where your code is now "
"inexhaustive and how the compiler tries to give you hints."
msgstr ""
"Puedes probar a a√±adir una tercera variante a la definici√≥n de la "
"enumeraci√≥n y mostrar los errores al ejecutar el c√≥digo. Se√±ala los lugares "
"en los que tu c√≥digo est√° ahora incompleto y explica c√≥mo el compilador "
"intenta dar sugerencias."

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"The values in the enum variants can only be accessed after being pattern "
"matched."
msgstr ""
"Solo se puede acceder a los valores de las variantes de enumeraci√≥n una vez "
"que coincidan con el patr√≥n. El patr√≥n vincula referencias a los campos del "
"\"brazo de coincidencias\" despu√©s de `=>`."

#: src/pattern-matching/destructuring.md
#, fuzzy
msgid ""
"Demonstrate what happens when the search is inexhaustive. Note the advantage "
"the Rust compiler provides by confirming when all cases are handled."
msgstr ""
"Demuestra lo que pasa cuando la b√∫squeda no es exhaustiva. Ten en cuenta la "
"ventaja que ofrece el compilador de Rust al confirmar cu√°ndo se gestionan "
"todos los casos. "

#: src/pattern-matching/destructuring.md
msgid ""
"Save the result of `divide_in_two` in the `result` variable and `match` it "
"in a loop. That won't compile because `msg` is consumed when matched. To fix "
"it, match `&result` instead of `result`. That will make `msg` a reference so "
"it won't be consumed. This [\"match ergonomics\"](https://rust-lang.github."
"io/rfcs/2005-match-ergonomics.html) appeared in Rust 2018. If you want to "
"support older Rust, replace `msg` with `ref msg` in the pattern."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"Rust has a few control flow constructs which differ from other languages. "
"They are used for pattern matching:"
msgstr ""
"Rust tiene algunas construcciones de control de flujo que difieren de otros "
"lenguajes. Se utilizan para el patr√≥n de coincidencia:"

#: src/pattern-matching/let-control-flow.md
msgid "`if let` expressions"
msgstr "Expresiones `if let`"

#: src/pattern-matching/let-control-flow.md
msgid "`while let` expressions"
msgstr "Expresiones `while let`"

#: src/pattern-matching/let-control-flow.md
msgid "`match` expressions"
msgstr "Expresiones `match`"

#: src/pattern-matching/let-control-flow.md
msgid ""
"The [`if let` expression](https://doc.rust-lang.org/reference/expressions/if-"
"expr.html#if-let-expressions) lets you execute different code depending on "
"whether a value matches a pattern:"
msgstr ""
"La [expresi√≥n `if let`][(https://doc.rust-lang.org/reference/expressions/if-"
"expr.html#if-let-expressions) te permite ejecutar c√≥digo diferente en "
"funci√≥n de si un valor coincide con un patr√≥n:"

#: src/pattern-matching/let-control-flow.md
msgid "\"slept for {:?}\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "`let else` expressions"
msgstr "Expresiones `while let`"

#: src/pattern-matching/let-control-flow.md
msgid ""
"For the common case of matching a pattern and returning from the function, "
"use [`let else`](https://doc.rust-lang.org/rust-by-example/flow_control/"
"let_else.html). The \"else\" case must diverge (`return`, `break`, or panic "
"- anything but falling off the end of the block)."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "\"got None\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "\"got empty string\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "\"not a hex digit\""
msgstr ""

#: src/pattern-matching/let-control-flow.md src/pattern-matching/solution.md
msgid "\"result: {:?}\""
msgstr ""

#: src/pattern-matching/let-control-flow.md src/generics/trait-bounds.md
#: src/smart-pointers/solution.md src/testing/googletest.md
#: src/testing/solution.md
msgid "\"foo\""
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"Like with `if let`, there is a [`while let`](https://doc.rust-lang.org/"
"reference/expressions/loop-expr.html#predicate-pattern-loops) variant which "
"repeatedly tests a value against a pattern:"
msgstr ""
"Al igual que con `if let`, hay una variante [`while let`](https://doc.rust-"
"lang.org/reference/expressions/loop-expr.html#predicate-pattern-loops) que "
"prueba repetidamente un valor con respecto a un patr√≥n:"

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid ""
"Here [`String::pop`](https://doc.rust-lang.org/stable/std/string/struct."
"String.html#method.pop) returns `Some(c)` until the string is empty, after "
"which it will return `None`. The `while let` lets us keep iterating through "
"all items."
msgstr ""
"Aqu√≠, el iterador devuelto por `v.into_iter()` devolver√° `Option<i32>` en "
"cada llamada a `next()`. Devuelve `Some(x)` hasta que finaliza y, a "
"continuaci√≥n, devuelve `None`. `while let` nos permite seguir iterando a "
"trav√©s de todos los elementos."

#: src/pattern-matching/let-control-flow.md
msgid "if-let"
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"Unlike `match`, `if let` does not have to cover all branches. This can make "
"it more concise than `match`."
msgstr ""
"A diferencia de `match`, `if let` no tiene que cubrir todas las ramas, "
"pudiendo as√≠ conseguir que sea m√°s conciso que `match`."

#: src/pattern-matching/let-control-flow.md
msgid "A common usage is handling `Some` values when working with `Option`."
msgstr ""
"Un uso habitual consiste en gestionar valores `Some` al trabajar con "
"`Option`."

#: src/pattern-matching/let-control-flow.md
msgid ""
"Unlike `match`, `if let` does not support guard clauses for pattern matching."
msgstr ""
"A diferencia de `match`, `if let` no admite cl√°usulas guardia para la "
"coincidencia de patrones."

#: src/pattern-matching/let-control-flow.md
msgid "let-else"
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid ""
"`if-let`s can pile up, as shown. The `let-else` construct supports "
"flattening this nested code. Rewrite the awkward version for students, so "
"they can see the transformation."
msgstr ""

#: src/pattern-matching/let-control-flow.md
msgid "The rewritten version is:"
msgstr ""

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid "while-let"
msgstr "Bucles `while let`"

#: src/pattern-matching/let-control-flow.md
msgid ""
"Point out that the `while let` loop will keep going as long as the value "
"matches the pattern."
msgstr ""
"Se√±ala que el bucle `while let` seguir√° funcionando siempre que el valor "
"coincida con el patr√≥n."

#: src/pattern-matching/let-control-flow.md
#, fuzzy
msgid ""
"You could rewrite the `while let` loop as an infinite loop with an if "
"statement that breaks when there is no value to unwrap for `name.pop()`. The "
"`while let` provides syntactic sugar for the above scenario."
msgstr ""
"Puedes reescribir el bucle `while let` como un ciclo infinito con una "
"instrucci√≥n if que deje de funcionar si `iter.next()` no tienen ning√∫n valor "
"que desenvolver. `while let` proporciona az√∫car sint√°ctico en la situaci√≥n "
"anterior."

#: src/pattern-matching/exercise.md
msgid "Let's write a simple recursive evaluator for arithmetic expressions."
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"The `Box` type here is a smart pointer, and will be covered in detail later "
"in the course. An expression can be \"boxed\" with `Box::new` as seen in the "
"tests. To evaluate a boxed expression, use the deref operator (`*`) to "
"\"unbox\" it: `eval(*boxed_expr)`."
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"Some expressions cannot be evaluated and will return an error. The standard "
"[`Result<Value, String>`](https://doc.rust-lang.org/std/result/enum.Result."
"html) type is an enum that represents either a successful value "
"(`Ok(Value)`) or an error (`Err(String)`). We will cover this type in detail "
"later."
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"Copy and paste the code into the Rust playground, and begin implementing "
"`eval`. The final product should pass the tests. It may be helpful to use "
"`todo!()` and get the tests to pass one-by-one. You can also skip a test "
"temporarily with `#[ignore]`:"
msgstr ""

#: src/pattern-matching/exercise.md
msgid ""
"If you finish early, try writing a test that results in division by zero or "
"integer overflow. How could you handle this with `Result` instead of a panic?"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// An operation to perform on two subexpressions.\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// An expression, in tree form.\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// An operation on two subexpressions.\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "/// A literal value\n"
msgstr ""

#: src/pattern-matching/exercise.md src/pattern-matching/solution.md
msgid "\"division by zero\""
msgstr ""

#: src/pattern-matching/solution.md
msgid "\"expr: {:?}\""
msgstr ""

#: src/methods-and-traits.md
msgid "[Methods](./methods-and-traits/methods.md) (10 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "[Traits](./methods-and-traits/traits.md) (10 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "[Deriving](./methods-and-traits/deriving.md) (5 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "[Trait Objects](./methods-and-traits/trait-objects.md) (10 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid ""
"[Exercise: Generic Logger](./methods-and-traits/exercise.md) (20 minutes)"
msgstr ""

#: src/methods-and-traits.md
msgid "This segment should take about 55 minutes"
msgstr ""

#: src/methods-and-traits/methods.md
msgid ""
"Rust allows you to associate functions with your new types. You do this with "
"an `impl` block:"
msgstr ""
"Rust te permite asociar funciones a los nuevos tipos. Para ello, usa un "
"bloque `impl`:"

#: src/methods-and-traits/methods.md
msgid "// No receiver, a static method\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// Exclusive borrowed read-write access to self\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// Shared and read-only borrowed access to self\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Recorded {} laps for {}:\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Lap {idx}: {lap} sec\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// Exclusive ownership of self\n"
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Race {} is finished, total lap time: {}\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "\"Monaco Grand Prix\""
msgstr ""

#: src/methods-and-traits/methods.md
msgid "// race.add_lap(42);\n"
msgstr ""

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"The `self` arguments specify the \"receiver\" - the object the method acts "
"on. There are several common receivers for a method:"
msgstr ""
"`&self` indica que el m√©todo toma prestado el objeto de forma inmutable. Hay "
"otros posibles receptores para un m√©todo:"

#: src/methods-and-traits/methods.md
msgid ""
"`&self`: borrows the object from the caller using a shared and immutable "
"reference. The object can be used again afterwards."
msgstr ""
"`&self`: toma prestado el objeto del llamador utilizando una referencia "
"compartida e inmutable. El objeto se puede volver a utilizar despu√©s."

#: src/methods-and-traits/methods.md
msgid ""
"`&mut self`: borrows the object from the caller using a unique and mutable "
"reference. The object can be used again afterwards."
msgstr ""
"`&mut self`: toma prestado el objeto del llamador mediante una referencia "
"√∫nica y mutable. El objeto se puede volver a utilizar despu√©s."

#: src/methods-and-traits/methods.md
msgid ""
"`self`: takes ownership of the object and moves it away from the caller. The "
"method becomes the owner of the object. The object will be dropped "
"(deallocated) when the method returns, unless its ownership is explicitly "
"transmitted. Complete ownership does not automatically mean mutability."
msgstr ""
"`self`: asume el _ownership_ del objeto y lo aleja del llamador. El m√©todo "
"se convierte en el propietario del objeto. El objeto se eliminar√° (es decir, "
"se anular√° la asignaci√≥n) cuando el m√©todo devuelva un resultado, a menos "
"que se transmita su _ownership_ de forma expl√≠cita. El _ownership_ completa "
"no implica autom√°ticamente una mutabilidad."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid "`mut self`: same as above, but the method can mutate the object."
msgstr ""
"`mut self`: igual que lo anterior, pero el m√©todo puede mutar el objeto. "

#: src/methods-and-traits/methods.md
msgid ""
"No receiver: this becomes a static method on the struct. Typically used to "
"create constructors which are called `new` by convention."
msgstr ""
"Sin receptor: se convierte en un m√©todo est√°tico de la estructura. "
"Normalmente se utiliza para crear constructores que se suelen denominar "
"`new`."

#: src/methods-and-traits/methods.md
msgid "It can be helpful to introduce methods by comparing them to functions."
msgstr "Puede resultar √∫til presentar los m√©todos compar√°ndolos con funciones."

#: src/methods-and-traits/methods.md
msgid ""
"Methods are called on an instance of a type (such as a struct or enum), the "
"first parameter represents the instance as `self`."
msgstr ""
"Se llama a los m√©todos en una instancia de un tipo (como un estructura o una "
"enumeraci√≥n) y el primer par√°metro representa la instancia como `self`."

#: src/methods-and-traits/methods.md
msgid ""
"Developers may choose to use methods to take advantage of method receiver "
"syntax and to help keep them more organized. By using methods we can keep "
"all the implementation code in one predictable place."
msgstr ""
"Los desarrolladores pueden optar por utilizar m√©todos para aprovechar la "
"sintaxis de los receptores de m√©todos y para ayudar a mantenerlos m√°s "
"organizados. Mediante el uso de m√©todos podemos mantener todo el c√≥digo de "
"implementaci√≥n en un lugar predecible."

#: src/methods-and-traits/methods.md
msgid "Point out the use of the keyword `self`, a method receiver."
msgstr "Se√±ala el uso de la palabra clave `self`, receptor de un m√©todo. "

#: src/methods-and-traits/methods.md
msgid ""
"Show that it is an abbreviated term for `self: Self` and perhaps show how "
"the struct name could also be used."
msgstr ""
"Indica que se trata de un t√©rmino abreviado de `self:&Self` y muestra c√≥mo "
"se podr√≠a utilizar tambi√©n el nombre de la estructura. "

#: src/methods-and-traits/methods.md
msgid ""
"Explain that `Self` is a type alias for the type the `impl` block is in and "
"can be used elsewhere in the block."
msgstr ""
"Explica que `Self` es un tipo de alias para el tipo en el que est√° el bloque "
"`impl` y que se puede usar en cualquier parte del bloque."

#: src/methods-and-traits/methods.md
msgid ""
"Note how `self` is used like other structs and dot notation can be used to "
"refer to individual fields."
msgstr ""
"Ten en cuenta que se puede usar `self` como otras estructuras y que la "
"notaci√≥n de puntos puede utilizarse para referirse a campos concretos."

#: src/methods-and-traits/methods.md
#, fuzzy
msgid ""
"This might be a good time to demonstrate how the `&self` differs from `self` "
"by trying to run `finish` twice."
msgstr ""
"Puede ser un buen momento para mostrar la diferencia entre `&self` y `self` "
"modificando el c√≥digo e intentando ejecutar say_hello dos veces."

#: src/methods-and-traits/methods.md
msgid ""
"Beyond variants on `self`, there are also [special wrapper types](https://"
"doc.rust-lang.org/reference/special-types-and-traits.html) allowed to be "
"receiver types, such as `Box<Self>`."
msgstr ""
"Adem√°s de las variantes `self`, tambi√©n hay [tipos de envoltorios especiales]"
"(https://doc.rust-lang.org/reference/special-types-and-traits.html) que "
"pueden ser tipos de receptor, como `Box<Self>`."

#: src/methods-and-traits/traits.md
msgid ""
"Rust lets you abstract over types with traits. They're similar to interfaces:"
msgstr ""
"Rust te permite abstraer sobre tipos con _traits_. Son similares a las "
"interfaces:"

#: src/methods-and-traits/traits.md
msgid "\"Oh you're a cutie! What's your name? {}\""
msgstr ""

#: src/methods-and-traits/traits.md src/methods-and-traits/trait-objects.md
msgid "\"Woof, my name is {}!\""
msgstr ""

#: src/methods-and-traits/traits.md src/methods-and-traits/trait-objects.md
msgid "\"Miau!\""
msgstr ""

#: src/methods-and-traits/traits.md src/methods-and-traits/trait-objects.md
msgid "\"Fido\""
msgstr ""

#: src/methods-and-traits/traits.md
msgid ""
"A trait defines a number of methods that types must have in order to "
"implement the trait."
msgstr ""

#: src/methods-and-traits/traits.md
msgid "Traits are implemented in an `impl <trait> for <type> { .. }` block."
msgstr ""

#: src/methods-and-traits/traits.md
#, fuzzy
msgid ""
"Traits may specify pre-implemented (provided) methods and methods that users "
"are required to implement themselves. Provided methods can rely on required "
"methods. In this case, `greet` is provided, and relies on `talk`."
msgstr ""
"Los _traits_ pueden especificar los m√©todos implementados previamente "
"(predeterminados) y los m√©todos que los usuarios deben implementar ellos "
"mismos. Los m√©todos con implementaciones predeterminadas pueden basarse en "
"m√©todos obligatorios."

#: src/methods-and-traits/deriving.md
msgid ""
"Supported traits can be automatically implemented for your custom types, as "
"follows:"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "// Default trait adds `default` constructor.\n"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "// Clone trait adds `clone` method.\n"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "\"EldurScrollz\""
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "// Debug trait adds support for printing with `{:?}`.\n"
msgstr ""

#: src/methods-and-traits/deriving.md
msgid "\"{:?} vs. {:?}\""
msgstr ""

#: src/methods-and-traits/deriving.md
msgid ""
"Derivation is implemented with macros, and many crates provide useful derive "
"macros to add useful functionality. For example, `serde` can derive "
"serialization support for a struct using `#[derive(Serialize)]`."
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid ""
"Trait objects allow for values of different types, for instance in a "
"collection:"
msgstr ""
"Los objetos de _traits_ permiten valores de diferentes tipos, por ejemplo, "
"en una colecci√≥n:"

#: src/methods-and-traits/trait-objects.md
msgid "\"Hello, who are you? {}\""
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid "Memory layout after allocating `pets`:"
msgstr "Dise√±o de la memoria despu√©s de asignar `pets`:"

#: src/methods-and-traits/trait-objects.md
#, fuzzy
msgid ""
"```bob\n"
" Stack                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                           :     :                                             :\n"
":    pets                   :     :                     +----+----+----+----"
"+   :\n"
":   +-----------+-------+   :     :   +-----+-----+  .->| F  | i  | d  | o  "
"|   :\n"
":   | ptr       |   o---+---+-----+-->| o o | o o |  |  +----+----+----+----"
"+   :\n"
":   | len       |     2 |   :     :   +-|-|-+-|-|-+  "
"`---------.                :\n"
":   | capacity  |     2 |   :     :     | |   | |    data      "
"|                :\n"
":   +-----------+-------+   :     :     | |   | |   +-------+--|-------"
"+        :\n"
":                           :     :     | |   | '-->| name  |  o, 4, 4 "
"|        :\n"
":                           :     :     | |   |     | age   |        5 "
"|        :\n"
"`- - - - - - - - - - - - - -'     :     | |   |     +-------+----------"
"+        :\n"
"                                  :     | |   "
"|                                 :\n"
"                                  :     | |   |      "
"vtable                     :\n"
"                                  :     | |   |     +----------------------"
"+    :\n"
"                                  :     | |   '---->| \"<Dog as Pet>::talk\" "
"|    :\n"
"                                  :     | |         +----------------------"
"+    :\n"
"                                  :     | "
"|                                     :\n"
"                                  :     | |    "
"data                             :\n"
"                                  :     | |   +-------+-------"
"+                 :\n"
"                                  :     | '-->| lives |     9 "
"|                 :\n"
"                                  :     |     +-------+-------"
"+                 :\n"
"                                  :     "
"|                                       :\n"
"                                  :     |      "
"vtable                           :\n"
"                                  :     |     +----------------------"
"+          :\n"
"                                  :     '---->| \"<Cat as Pet>::talk\" "
"|          :\n"
"                                  :           +----------------------"
"+          :\n"
"                                  :                                             :\n"
"                                  '- - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"```"
msgstr ""
"```bob\n"
" _Stack_                          _Heap_\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                           :     :                                             :\n"
":    "
"pets                   :     :                                             :\n"
":   +-----------+-------+   :     :   +-----+-----"
"+                             :\n"
":   | ptr       |   o---+---+-----+-->| o o | o o "
"|                             :\n"
":   | len       |     2 |   :     :   +-|-|-+-|-|-"
"+                             :\n"
":   | capacity  |     2 |   :     :     | |   | |   +---------------"
"+           :\n"
":   +-----------+-------+   :     :     | |   | '-->| name: \"Fido\"  "
"|           :\n"
":                           :     :     | |   |     +---------------"
"+           :\n"
"`- - - - - - - - - - - - - -'     :     | |   "
"|                                 :\n"
"                                  :     | |   |     +----------------------"
"+    :   \n"
"                                  :     | |   '---->| \"<Dog as Pet>::name\" "
"|    :\n"
"                                  :     | |         +----------------------"
"+    : \n"
"                                  :     | "
"|                                     : \n"
"                                  :     | |   +-"
"+                               :   \n"
"                                  :     | '-->|"
"\\|                               :     \n"
"                                  :     |     +-"
"+                               :    \n"
"                                  :     "
"|                                       : \n"
"                                  :     |     +----------------------"
"+          : \n"
"                                  :     '---->| \"<Cat as Pet>::name\" "
"|          : \n"
"                                  :           +----------------------"
"+          :\n"
"                                  :                                             :\n"
"                                  '- - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"\n"
"```"

#: src/methods-and-traits/trait-objects.md
#, fuzzy
msgid ""
"Types that implement a given trait may be of different sizes. This makes it "
"impossible to have things like `Vec<dyn Pet>` in the example above."
msgstr ""
"Los tipos que implementan un trait determinado pueden tener diferentes "
"tama√±os. Esto hace imposible tener elementos como `Vec<Pet>` en el ejemplo "
"anterior."

#: src/methods-and-traits/trait-objects.md
msgid ""
"`dyn Pet` is a way to tell the compiler about a dynamically sized type that "
"implements `Pet`."
msgstr ""
"`dyn Pet` es una forma de indicar al compilador un tipo de tama√±o din√°mico "
"que implementa `Pet`."

#: src/methods-and-traits/trait-objects.md
msgid ""
"In the example, `pets` is allocated on the stack and the vector data is on "
"the heap. The two vector elements are _fat pointers_:"
msgstr ""

#: src/methods-and-traits/trait-objects.md
#, fuzzy
msgid ""
"A fat pointer is a double-width pointer. It has two components: a pointer to "
"the actual object and a pointer to the [virtual method table](https://en."
"wikipedia.org/wiki/Virtual_method_table) (vtable) for the `Pet` "
"implementation of that particular object."
msgstr ""
"En el ejemplo, `pets` contiene _punteros grandes_ en los objetos que "
"implementan `Pet`. El puntero grande consta de dos componentes: un puntero "
"al objeto real y un puntero a la tabla de m√©todos virtuales para la "
"implementaci√≥n de `Pet` en ese objeto concreto."

#: src/methods-and-traits/trait-objects.md
msgid ""
"The data for the `Dog` named Fido is the `name` and `age` fields. The `Cat` "
"has a `lives` field."
msgstr ""

#: src/methods-and-traits/trait-objects.md
msgid "Compare these outputs in the above example:"
msgstr "Compara estas salidas en el ejemplo anterior:"

#: src/methods-and-traits/trait-objects.md src/std-traits/closures.md
msgid "\"{} {}\""
msgstr ""

#: src/methods-and-traits/trait-objects.md src/std-traits/exercise.md
#: src/std-traits/solution.md src/modules/exercise.md src/modules/solution.md
#: src/android/build-rules/library.md
#: src/android/interoperability/cpp/rust-bridge.md
#: src/async/pitfalls/cancellation.md
msgid "\"{}\""
msgstr ""

#: src/methods-and-traits/exercise.md
msgid ""
"Let's design a simple logging utility, using a trait `Logger` with a `log` "
"method. Code which might log its progress can then take an `&impl Logger`. "
"In testing, this might put messages in the test logfile, while in a "
"production build it would send messages to a log server."
msgstr ""

#: src/methods-and-traits/exercise.md
msgid ""
"However, the `StderrLogger` given below logs all messages, regardless of "
"verbosity. Your task is to write a `VerbosityFilter` type that will ignore "
"messages above a maximum verbosity."
msgstr ""

#: src/methods-and-traits/exercise.md
msgid ""
"This is a common pattern: a struct wrapping a trait implementation and "
"implementing that same trait, adding behavior in the process. What other "
"kinds of wrappers might be useful in a logging utility?"
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "/// Log a message at the given verbosity level.\n"
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "\"verbosity={verbosity}: {message}\""
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "\"FYI\""
msgstr ""

#: src/methods-and-traits/exercise.md src/methods-and-traits/solution.md
msgid "\"Uhoh\""
msgstr ""

#: src/methods-and-traits/exercise.md
msgid "// TODO: Define and implement `VerbosityFilter`.\n"
msgstr ""

#: src/methods-and-traits/solution.md
msgid "/// Only log messages up to the given verbosity level.\n"
msgstr ""

#: src/generics.md
msgid "[Generic Functions](./generics/generic-functions.md) (5 minutes)"
msgstr ""

#: src/generics.md
msgid "[Generic Data Types](./generics/generic-data.md) (15 minutes)"
msgstr ""

#: src/generics.md
msgid "[Trait Bounds](./generics/trait-bounds.md) (10 minutes)"
msgstr ""

#: src/generics.md
msgid "[impl Trait](./generics/impl-trait.md) (5 minutes)"
msgstr ""

#: src/generics.md
msgid "[Exercise: Generic min](./generics/exercise.md) (10 minutes)"
msgstr ""

#: src/generics.md src/smart-pointers.md src/iterators.md src/error-handling.md
msgid "This segment should take about 45 minutes"
msgstr ""

#: src/generics/generic-functions.md
#, fuzzy
msgid ""
"Rust supports generics, which lets you abstract algorithms or data "
"structures (such as sorting or a binary tree) over the types used or stored."
msgstr ""
"Rust admite el uso de gen√©ricos, lo que permite abstraer los algoritmos o "
"las estructuras de datos (como el orden o un √°rbol binario) sobre los tipos "
"utilizados o almacenados."

#: src/generics/generic-functions.md
msgid "/// Pick `even` or `odd` depending on the value of `n`.\n"
msgstr ""

#: src/generics/generic-functions.md
msgid "\"picked a number: {:?}\""
msgstr ""

#: src/generics/generic-functions.md
msgid "\"picked a tuple: {:?}\""
msgstr ""

#: src/generics/generic-functions.md
msgid "\"dog\""
msgstr ""

#: src/generics/generic-functions.md
msgid "\"cat\""
msgstr ""

#: src/generics/generic-functions.md
msgid ""
"Rust infers a type for T based on the types of the arguments and return "
"value."
msgstr ""

#: src/generics/generic-functions.md
msgid ""
"This is similar to C++ templates, but Rust partially compiles the generic "
"function immediately, so that function must be valid for all types matching "
"the constraints. For example, try modifying `pick` to return `even + odd` if "
"`n == 0`. Even if only the `pick` instantiation with integers is used, Rust "
"still considers it invalid. C++ would let you do this."
msgstr ""

#: src/generics/generic-functions.md
#, fuzzy
msgid ""
"Generic code is turned into non-generic code based on the call sites. This "
"is a zero-cost abstraction: you get exactly the same result as if you had "
"hand-coded the data structures without the abstraction."
msgstr ""
"Se trata de una abstracci√≥n sin coste: se obtiene exactamente el mismo "
"resultado que si se hubiesen programado de forma manual las estructuras de "
"datos sin la abstracci√≥n."

#: src/generics/generic-data.md
msgid "You can use generics to abstract over the concrete field type:"
msgstr "Puedes usar gen√©ricos para abstraer el tipo de campo concreto:"

#: src/generics/generic-data.md
msgid "// fn set_x(&mut self, x: T)\n"
msgstr ""

#: src/generics/generic-data.md
msgid "\"{integer:?} and {float:?}\""
msgstr ""

#: src/generics/generic-data.md
msgid "\"coords: {:?}\""
msgstr ""

#: src/generics/generic-data.md
msgid ""
"_Q:_ Why `T` is specified twice in `impl<T> Point<T> {}`? Isn't that "
"redundant?"
msgstr ""
"_P:_ ¬øPor qu√© `T` se especifica dos veces en `impl<T> Point<T> {}`? ¬øNo es "
"redundante?"

#: src/generics/generic-data.md
msgid ""
"This is because it is a generic implementation section for generic type. "
"They are independently generic."
msgstr ""
"Esto se debe a que es una secci√≥n de implementaci√≥n gen√©rica para un tipo "
"gen√©rico. Son gen√©ricos de forma independiente."

#: src/generics/generic-data.md
msgid "It means these methods are defined for any `T`."
msgstr "Significa que estos m√©todos est√°n definidos para cualquier `T`."

#: src/generics/generic-data.md
#, fuzzy
msgid "It is possible to write `impl Point<u32> { .. }`."
msgstr "Es posible escribir `impl Point<u32> { .. }`. "

#: src/generics/generic-data.md
msgid ""
"`Point` is still generic and you can use `Point<f64>`, but methods in this "
"block will only be available for `Point<u32>`."
msgstr ""
"`Point` sigue siendo gen√©rico y puedes usar `Point<f64>`, pero los m√©todos "
"de este bloque solo estar√°n disponibles para `Point<u32>`."

#: src/generics/generic-data.md
msgid ""
"Try declaring a new variable `let p = Point { x: 5, y: 10.0 };`. Update the "
"code to allow points that have elements of different types, by using two "
"type variables, e.g., `T` and `U`."
msgstr ""

#: src/generics/trait-bounds.md
msgid ""
"When working with generics, you often want to require the types to implement "
"some trait, so that you can call this trait's methods."
msgstr ""
"Cuando se trabaja con gen√©ricos, a menudo se prefiere que los tipos "
"implementen alg√∫n trait, de forma que se pueda llamar a los m√©todos de este "
"trait."

#: src/generics/trait-bounds.md
msgid "You can do this with `T: Trait` or `impl Trait`:"
msgstr "Puedes hacerlo con `T: Trait` o `impl Trait`:"

#: src/generics/trait-bounds.md
msgid "// struct NotClonable;\n"
msgstr ""

#: src/generics/trait-bounds.md
msgid "\"{pair:?}\""
msgstr ""

#: src/generics/trait-bounds.md
msgid "Try making a `NonClonable` and passing it to `duplicate`."
msgstr ""

#: src/generics/trait-bounds.md
msgid "When multiple traits are necessary, use `+` to join them."
msgstr ""

#: src/generics/trait-bounds.md
msgid "Show a `where` clause, students will encounter it when reading code."
msgstr ""
"Muestra una cl√°usula `where` para que los alumnos la encuentren al leer el "
"c√≥digo."

#: src/generics/trait-bounds.md
msgid "It declutters the function signature if you have many parameters."
msgstr "Despeja la firma de la funci√≥n si tienes muchos par√°metros."

#: src/generics/trait-bounds.md
msgid "It has additional features making it more powerful."
msgstr "Tiene funciones adicionales para que sea m√°s potente."

#: src/generics/trait-bounds.md
msgid ""
"If someone asks, the extra feature is that the type on the left of \":\" can "
"be arbitrary, like `Option<T>`."
msgstr ""
"Si alguien pregunta, la funci√≥n adicional es que el tipo que est√° a la "
"izquierda de \":\" puede ser arbitrario, como `Option<T>`."

#: src/generics/trait-bounds.md
msgid ""
"Note that Rust does not (yet) support specialization. For example, given the "
"original `duplicate`, it is invalid to add a specialized `duplicate(a: u32)`."
msgstr ""

#: src/generics/impl-trait.md
msgid ""
"Similar to trait bounds, an `impl Trait` syntax can be used in function "
"arguments and return values:"
msgstr ""
"De forma similar a los l√≠mites de _traits_, se puede usar la sintaxis `impl "
"Trait` en argumentos de funciones y valores devueltos:"

#: src/generics/impl-trait.md
msgid ""
"// Syntactic sugar for:\n"
"//   fn add_42_millions<T: Into<i32>>(x: T) -> i32 {\n"
msgstr ""

#: src/generics/impl-trait.md
msgid "\"{many}\""
msgstr ""

#: src/generics/impl-trait.md
msgid "\"{many_more}\""
msgstr ""

#: src/generics/impl-trait.md
msgid "\"debuggable: {debuggable:?}\""
msgstr ""

#: src/generics/impl-trait.md
#, fuzzy
msgid ""
"`impl Trait` allows you to work with types which you cannot name. The "
"meaning of `impl Trait` is a bit different in the different positions."
msgstr "La naturaleza de `impl Trait` var√≠a ligeramente seg√∫n la posici√≥n."

#: src/generics/impl-trait.md
msgid ""
"For a parameter, `impl Trait` is like an anonymous generic parameter with a "
"trait bound."
msgstr ""
"En el caso de los par√°metros, `impl Trait` es como un par√°metro gen√©rico "
"an√≥nimo con un l√≠mite de trait."

#: src/generics/impl-trait.md
msgid ""
"For a return type, it means that the return type is some concrete type that "
"implements the trait, without naming the type. This can be useful when you "
"don't want to expose the concrete type in a public API."
msgstr ""
"En el caso de un tipo de resultado devuelto, significa que este es un tipo "
"concreto que implementa el trait, sin nombrar el tipo. Esto puede ser √∫til "
"cuando no quieres exponer el tipo concreto en una API p√∫blica."

#: src/generics/impl-trait.md
msgid ""
"Inference is hard in return position. A function returning `impl Foo` picks "
"the concrete type it returns, without writing it out in the source. A "
"function returning a generic type like `collect<B>() -> B` can return any "
"type satisfying `B`, and the caller may need to choose one, such as with "
"`let x: Vec<_> = foo.collect()` or with the turbofish, `foo.collect::"
"<Vec<_>>()`."
msgstr ""
"La inferencia es m√°s complicada en la posici√≥n de retorno. Una funci√≥n que "
"devuelve `impl Foo` elige el tipo concreto que devuelve, sin escribirlo en "
"el c√≥digo fuente. Una funci√≥n que devuelve un tipo gen√©rico como "
"`collect<B>() -> B` puede devolver cualquier tipo que cumpla `B`, y es "
"posible que el llamador tenga que elegir uno, como con `let x: Vec<_> = foo."
"collect()` o con la sintaxis turbofish, `foo.collect::<Vec<_>>()`."

#: src/generics/impl-trait.md
msgid ""
"What is the type of `debuggable`? Try `let debuggable: () = ..` to see what "
"the error message shows."
msgstr ""

#: src/generics/exercise.md
msgid ""
"In this short exercise, you will implement a generic `min` function that "
"determines the minimum of two values, using a `LessThan` trait."
msgstr ""

#: src/generics/exercise.md src/generics/solution.md
msgid "/// Return true if self is less than other.\n"
msgstr ""

#: src/generics/exercise.md
msgid "// TODO: implement the `min` function used in `main`.\n"
msgstr ""

#: src/generics/exercise.md src/generics/solution.md
msgid "\"Shapiro\""
msgstr ""

#: src/generics/exercise.md src/generics/solution.md
msgid "\"Baumann\""
msgstr ""

#: src/welcome-day-2-afternoon.md
msgid "[Standard Library Types](./std-types.md) (1 hour and 10 minutes)"
msgstr ""

#: src/welcome-day-2-afternoon.md
msgid "[Standard Library Traits](./std-traits.md) (1 hour and 40 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Standard Library](./std-types/std.md) (3 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Documentation](./std-types/docs.md) (5 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Option](./std-types/option.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Result](./std-types/result.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[String](./std-types/string.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Vec](./std-types/vec.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[HashMap](./std-types/hashmap.md) (10 minutes)"
msgstr ""

#: src/std-types.md
msgid "[Exercise: Counter](./std-types/exercise.md) (10 minutes)"
msgstr ""

#: src/std-types.md src/memory-management.md src/slices-and-lifetimes.md
msgid "This segment should take about 1 hour and 10 minutes"
msgstr ""

#: src/std-types.md
msgid ""
"For each of the slides in this section, spend some time reviewing the "
"documentation pages, highlighting some of the more common methods."
msgstr ""

#: src/std-types/std.md
#, fuzzy
msgid ""
"Rust comes with a standard library which helps establish a set of common "
"types used by Rust libraries and programs. This way, two libraries can work "
"together smoothly because they both use the same `String` type."
msgstr ""
"Rust viene con una biblioteca est√°ndar que ayuda a establecer un conjunto de "
"tipos comunes que se usan en la biblioteca y los programas de Rust. De esta "
"forma, dos bibliotecas pueden funcionar juntas sin problemas, puesto que "
"ambas utilizan el mismo tipo `String`."

#: src/std-types/std.md
#, fuzzy
msgid ""
"In fact, Rust contains several layers of the Standard Library: `core`, "
"`alloc` and `std`."
msgstr ""
"De hecho, Rust contiene varias capas de la biblioteca est√°ndar: `core`, "
"`alloc` y `std`. "

#: src/std-types/std.md
#, fuzzy
msgid ""
"`core` includes the most basic types and functions that don't depend on "
"`libc`, allocator or even the presence of an operating system."
msgstr ""
"`core` incluye los tipos y funciones m√°s b√°sicos que no dependen de `libc`, "
"de un _allocator_ (asignador de memoria) ni de la presencia de un sistema "
"operativo. "

#: src/std-types/std.md
msgid ""
"`alloc` includes types which require a global heap allocator, such as `Vec`, "
"`Box` and `Arc`."
msgstr ""
"`alloc` incluye tipos que requieren un _allocator_ de _heap_ global, como "
"`Vec`, `Box` y `Arc`."

#: src/std-types/std.md
msgid ""
"Embedded Rust applications often only use `core`, and sometimes `alloc`."
msgstr ""
"Las aplicaciones embebidas en Rust menudo solo usan `core` y a algunas veces "
"`alloc`."

#: src/std-types/docs.md
msgid "Rust comes with extensive documentation. For example:"
msgstr ""

#: src/std-types/docs.md
#, fuzzy
msgid ""
"All of the details about [loops](https://doc.rust-lang.org/stable/reference/"
"expressions/loop-expr.html)."
msgstr ""
"Si quieres salir de un bucle antes, usa [`break`](https://doc.rust-lang.org/"
"reference/expressions/loop-expr.html#break-expressions)."

#: src/std-types/docs.md
msgid ""
"Primitive types like [`u8`](https://doc.rust-lang.org/stable/std/primitive."
"u8.html)."
msgstr ""

#: src/std-types/docs.md
#, fuzzy
msgid ""
"Standard library types like [`Option`](https://doc.rust-lang.org/stable/std/"
"option/enum.Option.html) or [`BinaryHeap`](https://doc.rust-lang.org/stable/"
"std/collections/struct.BinaryHeap.html)."
msgstr ""
"[`str`](https://doc.rust-lang.org/std/primitive.str.html) y [`String`]"
"(https://doc.rust-lang.org/std/string/struct.String.html)"

#: src/std-types/docs.md
msgid "In fact, you can document your own code:"
msgstr ""

#: src/std-types/docs.md
msgid ""
"/// Determine whether the first argument is divisible by the second "
"argument.\n"
"///\n"
"/// If the second argument is zero, the result is false.\n"
msgstr ""

#: src/std-types/docs.md
msgid ""
"The contents are treated as Markdown. All published Rust library crates are "
"automatically documented at [`docs.rs`](https://docs.rs) using the [rustdoc]"
"(https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html) tool. It is "
"idiomatic to document all public items in an API using this pattern."
msgstr ""
"El contenido se trata como Markdown. Todos los crates de la biblioteca de "
"Rust publicados se documentan autom√°ticamente\n"
" en [`docs.rs`](https://docs.rs) mediante la herramienta \n"
"[rustdoc](https://doc.rust-lang.org/rustdoc/what-is-rustdoc.html). Es "
"propio\n"
"documentar todos los elementos p√∫blicos de una API usando este patr√≥n."

#: src/std-types/docs.md
msgid ""
"To document an item from inside the item (such as inside a module), use `//!"
"` or `/*! .. */`, called \"inner doc comments\":"
msgstr ""

#: src/std-types/docs.md
msgid ""
"//! This module contains functionality relating to divisibility of "
"integers.\n"
msgstr ""

#: src/std-types/docs.md
#, fuzzy
msgid ""
"Show students the generated docs for the `rand` crate at <https://docs.rs/"
"rand>."
msgstr ""
"Muestra a los alumnos los documentos generados para el crate `rand` en "
"[`docs.rs/rand`](https://docs.rs/rand)."

#: src/std-types/option.md
#, fuzzy
msgid "Option"
msgstr "Excepciones"

#: src/std-types/option.md
msgid ""
"We have already seen some use of `Option<T>`. It stores either a value of "
"type `T` or nothing. For example, [`String::find`](https://doc.rust-lang.org/"
"stable/std/string/struct.String.html#method.find) returns an `Option<usize>`."
msgstr ""

#: src/std-types/option.md
msgid "\"L√∂we ËÄÅËôé L√©opard Gepardi\""
msgstr ""

#: src/std-types/option.md
msgid "'√©'"
msgstr ""

#: src/std-types/option.md
msgid "\"find returned {position:?}\""
msgstr ""

#: src/std-types/option.md
msgid "'Z'"
msgstr ""

#: src/std-types/option.md
msgid "\"Character not found\""
msgstr ""

#: src/std-types/option.md
#, fuzzy
msgid "`Option` is widely used, not just in the standard library."
msgstr "`Option` y `Result` se usan mucho, no solo en la biblioteca est√°ndar."

#: src/std-types/option.md
msgid ""
"`unwrap` will return the value in an `Option`, or panic. `expect` is similar "
"but takes an error message."
msgstr ""

#: src/std-types/option.md
msgid ""
"You can panic on None, but you can't \"accidentally\" forget to check for "
"None."
msgstr ""

#: src/std-types/option.md
msgid ""
"It's common to `unwrap`/`expect` all over the place when hacking something "
"together, but production code typically handles `None` in a nicer fashion."
msgstr ""

#: src/std-types/option.md
msgid ""
"The niche optimization means that `Option<T>` often has the same size in "
"memory as `T`."
msgstr ""

#: src/std-types/result.md
msgid "Result"
msgstr ""

#: src/std-types/result.md
msgid ""
"`Result` is similar to `Option`, but indicates the success or failure of an "
"operation, each with a different type. This is similar to the `Res` defined "
"in the expression exercise, but generic: `Result<T, E>` where `T` is used in "
"the `Ok` variant and `E` appears in the `Err` variant."
msgstr ""

#: src/std-types/result.md
msgid "\"diary.txt\""
msgstr ""

#: src/std-types/result.md
msgid "\"Dear diary: {contents} ({bytes} bytes)\""
msgstr ""

#: src/std-types/result.md
msgid "\"Could not read file content\""
msgstr ""

#: src/std-types/result.md
msgid "\"The diary could not be opened: {err}\""
msgstr ""

#: src/std-types/result.md
msgid ""
"As with `Option`, the successful value sits inside of `Result`, forcing the "
"developer to explicitly extract it. This encourages error checking. In the "
"case where an error should never happen, `unwrap()` or `expect()` can be "
"called, and this is a signal of the developer intent too."
msgstr ""
"Al igual que con `Option`, el valor correcto se encuentra dentro de "
"`Result`, lo que obliga al desarrollador a extraerlo de forma expl√≠cita. "
"Esto fomenta la comprobaci√≥n de errores. En el caso de que nunca se produzca "
"un error, se puede llamar a `unwrap()` o a `expect()`, y esto tambi√©n es una "
"se√±al de la intenci√≥n del desarrollador."

#: src/std-types/result.md
#, fuzzy
msgid ""
"`Result` documentation is a recommended read. Not during the course, but it "
"is worth mentioning. It contains a lot of convenience methods and functions "
"that help functional-style programming."
msgstr ""
"La documentaci√≥n sobre `Result` es una lectura recomendada. Aunque no se vea "
"durante este curso, merece la pena mencinarlo.  Contiene muchos m√©todos y "
"funciones pr√°cticos que ayudan a seguir una programaci√≥n funcional. "

#: src/std-types/result.md
msgid ""
"`Result` is the standard type to implement error handling as we will see on "
"Day 3."
msgstr ""
"`Result` es el tipo est√°ndar para implementar la gesti√≥n de errores, tal y "
"como veremos el d√≠a 3."

#: src/std-types/string.md
msgid "String"
msgstr "String"

#: src/std-types/string.md
msgid ""
"[`String`](https://doc.rust-lang.org/std/string/struct.String.html) is the "
"standard heap-allocated growable UTF-8 string buffer:"
msgstr ""
"[`String`](https://doc.rust-lang.org/std/string/struct.String.html) es el "
"b√∫fer de cadena UTF-8 est√°ndar, ampliable y asignado a un _heap_:"

#: src/std-types/string.md src/std-traits/read-and-write.md
#: src/memory-management/review.md src/testing/unit-tests.md
#: src/concurrency/scoped-threads.md
msgid "\"Hello\""
msgstr ""

#: src/std-types/string.md
msgid "\"s1: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/string.md
msgid "'!'"
msgstr ""

#: src/std-types/string.md
msgid "\"s2: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/string.md
msgid "\"üá®üá≠\""
msgstr ""

#: src/std-types/string.md
msgid "\"s3: len = {}, number of chars = {}\""
msgstr ""

#: src/std-types/string.md
msgid ""
"`String` implements [`Deref<Target = str>`](https://doc.rust-lang.org/std/"
"string/struct.String.html#deref-methods-str), which means that you can call "
"all `str` methods on a `String`."
msgstr ""
"`String` implementa \\[`Deref<Target = str>`\\]\\[2\\], lo que significa que "
"puedes llamar a todos los m√©todos `str` en una `String`."

#: src/std-types/string.md
msgid ""
"`String::new` returns a new empty string, use `String::with_capacity` when "
"you know how much data you want to push to the string."
msgstr ""
"`String::new` devuelve una nueva cadena vac√≠a. Usa `String::with_capacity` "
"cuando sepas cu√°ntos datos quieres guardar."

#: src/std-types/string.md
msgid ""
"`String::len` returns the size of the `String` in bytes (which can be "
"different from its length in characters)."
msgstr ""
"`String::len` devuelve el tama√±o de `String` en bytes (que puede ser "
"diferente de su longitud en caracteres)."

#: src/std-types/string.md
msgid ""
"`String::chars` returns an iterator over the actual characters. Note that a "
"`char` can be different from what a human will consider a \"character\" due "
"to [grapheme clusters](https://docs.rs/unicode-segmentation/latest/"
"unicode_segmentation/struct.Graphemes.html)."
msgstr ""
"`String::chars` devuelve un iterador sobre los caracteres reales. Ten en "
"cuenta que un `char` puede ser diferente de lo que un humano considerar√≠a un "
"\"caracter\", debido a los [grupos de grafemas](https://docs.rs/unicode-"
"segmentation/latest/unicode_segmentation/struct.Graphemes.html)."

#: src/std-types/string.md
msgid ""
"When people refer to strings they could either be talking about `&str` or "
"`String`."
msgstr ""
"Cuando la gente se refiere a cadenas, pueden estar hablando de `&str` o de "
"`String`. "

#: src/std-types/string.md
msgid ""
"When a type implements `Deref<Target = T>`, the compiler will let you "
"transparently call methods from `T`."
msgstr ""
"Cuando un tipo implementa `Deref<Target = T>`, el compilador te permite "
"llamar a m√©todos de forma transparente desde `T`."

#: src/std-types/string.md
msgid ""
"We haven't discussed the `Deref` trait yet, so at this point this mostly "
"explains the structure of the sidebar in the documentation."
msgstr ""

#: src/std-types/string.md
msgid ""
"`String` implements `Deref<Target = str>` which transparently gives it "
"access to `str`'s methods."
msgstr ""
"`String` implementa `Deref<Target = str>`, que le proporciona acceso "
"transparente a los m√©todos de `str`."

#: src/std-types/string.md
#, fuzzy
msgid "Write and compare `let s3 = s1.deref();` and `let s3 = &*s1;`."
msgstr "Escribe y compara `let s3 = s1.deref();` y `let s3 = &*s1`;."

#: src/std-types/string.md
msgid ""
"`String` is implemented as a wrapper around a vector of bytes, many of the "
"operations you see supported on vectors are also supported on `String`, but "
"with some extra guarantees."
msgstr ""
"`String` se implementa como un envoltorio alrededor de un vector de bytes. "
"Muchas de las operaciones que ves como compatibles con vectores tambi√©n lo "
"son con `String`, pero con algunas garant√≠as adicionales."

#: src/std-types/string.md
msgid "Compare the different ways to index a `String`:"
msgstr "Compara las diferentes formas de indexar `String`:"

#: src/std-types/string.md
msgid ""
"To a character by using `s3.chars().nth(i).unwrap()` where `i` is in-bound, "
"out-of-bounds."
msgstr ""
"A un car√°cter mediante `s3. chars().nth(i).unwrap()`, donde `i` est√° dentro "
"o fuera de los l√≠mites"

#: src/std-types/string.md
msgid ""
"To a substring by using `s3[0..4]`, where that slice is on character "
"boundaries or not."
msgstr ""
"A una cadena secundaria mediante `s3[0..4]`, donde el slice est√° en los "
"l√≠mites de caracteres o no."

#: src/std-types/vec.md
msgid ""
"[`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html) is the standard "
"resizable heap-allocated buffer:"
msgstr ""
"[`Vec`](https://doc.rust-lang.org/std/vec/struct.Vec.html) es el b√∫fer "
"est√°ndar redimensionable asignado al _heap_:"

#: src/std-types/vec.md
msgid "\"v1: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/vec.md
msgid "\"v2: len = {}, capacity = {}\""
msgstr ""

#: src/std-types/vec.md
msgid "// Canonical macro to initialize a vector with elements.\n"
msgstr ""

#: src/std-types/vec.md
msgid "// Retain only the even elements.\n"
msgstr ""

#: src/std-types/vec.md
msgid "\"{v3:?}\""
msgstr ""

#: src/std-types/vec.md
msgid "// Remove consecutive duplicates.\n"
msgstr ""

#: src/std-types/vec.md
msgid ""
"`Vec` implements [`Deref<Target = [T]>`](https://doc.rust-lang.org/std/vec/"
"struct.Vec.html#deref-methods-%5BT%5D), which means that you can call slice "
"methods on a `Vec`."
msgstr ""
"`Vec` implementa [`Deref<Target = [T]>`](https://doc.rust-lang.org/std/vec/"
"struct.Vec.html#deref-methods-%5BT%5D), lo que significa que puedes llamar a "
"m√©todos slice en un `Vec`."

#: src/std-types/vec.md
#, fuzzy
msgid ""
"`Vec` is a type of collection, along with `String` and `HashMap`. The data "
"it contains is stored on the heap. This means the amount of data doesn't "
"need to be known at compile time. It can grow or shrink at runtime."
msgstr ""
"`Vec` es un tipo de colecci√≥n, junto con `String` y `HashMap`. Los datos que "
"contiene se almacenan en el _heap_. Esto significa que no es necesario "
"conocer la cantidad de datos durante la compilaci√≥n. Puede aumentar o "
"disminuir durante la ejecuci√≥n."

#: src/std-types/vec.md
msgid ""
"Notice how `Vec<T>` is a generic type too, but you don't have to specify `T` "
"explicitly. As always with Rust type inference, the `T` was established "
"during the first `push` call."
msgstr ""
"Ten en cuenta que `Vec<T>` tambi√©n es un tipo gen√©rico, pero no tienes que "
"especificar `T` de forma expl√≠cita. Como siempre sucede con la inferencia de "
"tipos de Rust, `T` se estableci√≥ durante la primera llamada a `push`."

#: src/std-types/vec.md
msgid ""
"`vec![...]` is a canonical macro to use instead of `Vec::new()` and it "
"supports adding initial elements to the vector."
msgstr ""
"`vec![...]` es una macro can√≥nica para usarla en lugar de `Vec::new()` y "
"admite que se a√±adan elementos iniciales al vector."

#: src/std-types/vec.md
msgid ""
"To index the vector you use `[` `]`, but they will panic if out of bounds. "
"Alternatively, using `get` will return an `Option`. The `pop` function will "
"remove the last element."
msgstr ""
"Para indexar el vector, se utiliza `[` `]`, pero entrar√° en p√°nico si se "
"sale de los l√≠mites. Tambi√©n se puede usar `get` para obtener una `Option`. "
"La funci√≥n `pop` eliminar√° el √∫ltimo elemento."

#: src/std-types/vec.md
msgid ""
"Slices are covered on day 3. For now, students only need to know that a "
"value of type `Vec` gives access to all of the documented slice methods, too."
msgstr ""

#: src/std-types/hashmap.md
msgid "Standard hash map with protection against HashDoS attacks:"
msgstr "Mapa hash est√°ndar con protecci√≥n frente a ataques HashDoS:"

#: src/std-types/hashmap.md
msgid "\"Adventures of Huckleberry Finn\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Grimms' Fairy Tales\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Pride and Prejudice\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Les Mis√©rables\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"We know about {} books, but not Les Mis√©rables.\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"Alice's Adventure in Wonderland\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"{book}: {count} pages\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"{book} is unknown.\""
msgstr ""

#: src/std-types/hashmap.md
msgid "// Use the .entry() method to insert a value if nothing is found.\n"
msgstr ""

#: src/std-types/hashmap.md
msgid "\"{page_counts:#?}\""
msgstr ""

#: src/std-types/hashmap.md
msgid ""
"`HashMap` is not defined in the prelude and needs to be brought into scope."
msgstr "`HashMap` no se ha explicado en el preludio y debe conocerse."

#: src/std-types/hashmap.md
msgid ""
"Try the following lines of code. The first line will see if a book is in the "
"hashmap and if not return an alternative value. The second line will insert "
"the alternative value in the hashmap if the book is not found."
msgstr ""
"Prueba las siguientes l√≠neas de c√≥digo. La primera l√≠nea comprobar√° si un "
"libro est√° incluido en el hashmap y, si no, devolver√° un valor alternativo. "
"La segunda l√≠nea insertar√° el valor alternativo en el hashmap si el libro no "
"se encuentra."

#: src/std-types/hashmap.md
msgid "\"Harry Potter and the Sorcerer's Stone\""
msgstr ""

#: src/std-types/hashmap.md
msgid "\"The Hunger Games\""
msgstr ""

#: src/std-types/hashmap.md
msgid "Unlike `vec!`, there is unfortunately no standard `hashmap!` macro."
msgstr ""
"A diferencia de `vec!`, por desgracia no hay ninguna macro est√°ndar de "
"`hashmap!`."

#: src/std-types/hashmap.md
msgid ""
"Although, since Rust 1.56, HashMap implements [`From<[(K, V); N]>`](https://"
"doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#impl-"
"From%3C%5B(K,+V);+N%5D%3E-for-HashMap%3CK,+V,+RandomState%3E), which allows "
"us to easily initialize a hash map from a literal array:"
msgstr ""
"Sin embargo, desde la versi√≥n 1.56 de Rust, HashMap implementa [`From<[(K, "
"V); N]>`](https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap."
"html#impl-From%3C%5B(K,+V);+N%5D%3E-for-HashMap%3CK,+V,+RandomState%, que "
"nos permite inicializar f√°cilmente un mapa hash a partir de un _array_ "
"literal:"

#: src/std-types/hashmap.md
msgid ""
"Alternatively HashMap can be built from any `Iterator` which yields key-"
"value tuples."
msgstr ""
"HashMap tambi√©n se puede crear a partir de cualquier `Iterator` que genere "
"tuplas de pares clave-valor."

#: src/std-types/hashmap.md
msgid ""
"We are showing `HashMap<String, i32>`, and avoid using `&str` as key to make "
"examples easier. Using references in collections can, of course, be done, "
"but it can lead into complications with the borrow checker."
msgstr ""
"Mostraremos `HashMap<String, i32>` y evitaremos utilizar `&str` para que los "
"ejemplos sean m√°s sencillos. Por supuesto, se pueden usar las referencias en "
"las colecciones, pero pueden dar problemas con el _borrow checker_."

#: src/std-types/hashmap.md
msgid ""
"Try removing `to_string()` from the example above and see if it still "
"compiles. Where do you think we might run into issues?"
msgstr ""
"Prueba a eliminar `to_string()` del ejemplo anterior para ver si a√∫n sigue "
"compilando. ¬øD√≥nde crees que podr√≠amos encontrar problemas?"

#: src/std-types/hashmap.md
msgid ""
"This type has several \"method-specific\" return types, such as `std::"
"collections::hash_map::Keys`. These types often appear in searches of the "
"Rust docs. Show students the docs for this type, and the helpful link back "
"to the `keys` method."
msgstr ""
"Este tipo tiene varios tipos de devoluci√≥n \"espec√≠ficos del m√©todo\", como "
"`std::collections::hash_map::Keys`. Estos tipos a menudo aparecen en las "
"b√∫squedas de la documentaci√≥n de Rust. Muestra a los estudiantes la "
"documentaci√≥n de este tipo y el enlace √∫til de vuelta al m√©todo `keys`."

#: src/std-types/exercise.md
msgid ""
"In this exercise you will take a very simple data structure and make it "
"generic. It uses a [`std::collections::HashMap`](https://doc.rust-lang.org/"
"stable/std/collections/struct.HashMap.html) to keep track of which values "
"have been seen and how many times each one has appeared."
msgstr ""

#: src/std-types/exercise.md
msgid ""
"The initial version of `Counter` is hard coded to only work for `u32` "
"values. Make the struct and its methods generic over the type of value being "
"tracked, that way `Counter` can track any type of value."
msgstr ""

#: src/std-types/exercise.md
msgid ""
"If you finish early, try using the [`entry`](https://doc.rust-lang.org/"
"stable/std/collections/struct.HashMap.html#method.entry) method to halve the "
"number of hash lookups required to implement the `count` method."
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid ""
"/// Counter counts the number of times each value of type T has been seen.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "/// Create a new Counter.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "/// Count an occurrence of the given value.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "/// Return the number of times the given value has been seen.\n"
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"saw {} values equal to {}\""
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"apple\""
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"orange\""
msgstr ""

#: src/std-types/exercise.md src/std-types/solution.md
msgid "\"got {} apples\""
msgstr ""

#: src/std-traits.md
msgid "[Comparisons](./std-traits/comparisons.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Operators](./std-traits/operators.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[From and Into](./std-traits/from-and-into.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Casting](./std-traits/casting.md) (5 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Read and Write](./std-traits/read-and-write.md) (10 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Default, struct update syntax](./std-traits/default.md) (5 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Closures](./std-traits/closures.md) (20 minutes)"
msgstr ""

#: src/std-traits.md
msgid "[Exercise: ROT13](./std-traits/exercise.md) (30 minutes)"
msgstr ""

#: src/std-traits.md
msgid "This segment should take about 1 hour and 40 minutes"
msgstr ""

#: src/std-traits.md
msgid ""
"As with the standard-library types, spend time reviewing the documentation "
"for each trait."
msgstr ""

#: src/std-traits.md
msgid "This section is long. Take a break midway through."
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"These traits support comparisons between values. All traits can be derived "
"for types containing fields that implement these traits."
msgstr ""

#: src/std-traits/comparisons.md
msgid "`PartialEq` and `Eq`"
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"`PartialEq` is a partial equivalence relation, with required method `eq` and "
"provided method `ne`. The `==` and `!=` operators will call these methods."
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"`Eq` is a full equivalence relation (reflexive, symmetric, and transitive) "
"and implies `PartialEq`. Functions that require full equivalence will use "
"`Eq` as a trait bound."
msgstr ""

#: src/std-traits/comparisons.md
#, fuzzy
msgid "`PartialOrd` and `Ord`"
msgstr "`Read` y `Write`"

#: src/std-traits/comparisons.md
msgid ""
"`PartialOrd` defines a partial ordering, with a `partial_cmp` method. It is "
"used to implement the `<`, `<=`, `>=`, and `>` operators."
msgstr ""

#: src/std-traits/comparisons.md
msgid "`Ord` is a total ordering, with `cmp` returning `Ordering`."
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"`PartialEq` can be implemented between different types, but `Eq` cannot, "
"because it is reflexive:"
msgstr ""

#: src/std-traits/comparisons.md
msgid ""
"In practice, it's common to derive these traits, but uncommon to implement "
"them."
msgstr ""

#: src/std-traits/operators.md
msgid ""
"Operator overloading is implemented via traits in [`std::ops`](https://doc."
"rust-lang.org/std/ops/index.html):"
msgstr ""
"La sobrecarga de operadores se implementa mediante _traits_ en [`std::ops`]"
"(https://doc.rust-lang.org/std/ops/index.html):"

#: src/std-traits/operators.md
msgid "\"{:?} + {:?} = {:?}\""
msgstr ""

#: src/std-traits/operators.md src/memory-management/drop.md
msgid "Discussion points:"
msgstr "Cuestiones de debate:"

#: src/std-traits/operators.md
#, fuzzy
msgid ""
"You could implement `Add` for `&Point`. In which situations is that useful?"
msgstr "¬øEn qu√© situaciones ser√≠a √∫til implementar `Add` para `&Point`? "

#: src/std-traits/operators.md
msgid ""
"Answer: `Add:add` consumes `self`. If type `T` for which you are overloading "
"the operator is not `Copy`, you should consider overloading the operator for "
"`&T` as well. This avoids unnecessary cloning on the call site."
msgstr ""
"Respuesta: `Add:add` consume a `self`. Si el tipo `T` para el que se "
"sobrecarga el operador no es `Copy`, deber√≠as plantearte tambi√©n sobrecargar "
"el operador para `&T`. As√≠ se evita la clonaci√≥n innecesaria en el sitio de "
"la llamada."

#: src/std-traits/operators.md
msgid ""
"Why is `Output` an associated type? Could it be made a type parameter of the "
"method?"
msgstr ""
"¬øPor qu√© `Output` es un tipo asociado? ¬øSe podr√≠a convertir en un par√°metro "
"tipo del m√©todo?"

#: src/std-traits/operators.md
#, fuzzy
msgid ""
"Short answer: Function type parameters are controlled by the caller, but "
"associated types (like `Output`) are controlled by the implementer of a "
"trait."
msgstr ""
"Respuesta corta: el llamador controla los par√°metros tipo de la funci√≥n, "
"pero los tipos asociados (como `Output`) los controla el implementador de un "
"trait ."

#: src/std-traits/operators.md
msgid ""
"You could implement `Add` for two different types, e.g. `impl Add<(i32, "
"i32)> for Point` would add a tuple to a `Point`."
msgstr ""
"Se podr√≠a implementar `Add` para dos tipos distintos; por ejemplo, `impl "
"Add<(i32, i32)> for Point` a√±adir√≠a una tupla a un `Point`."

#: src/std-traits/from-and-into.md
msgid ""
"Types implement [`From`](https://doc.rust-lang.org/std/convert/trait.From."
"html) and [`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) to "
"facilitate type conversions:"
msgstr ""
"Los tipos implementan [`From`](https://doc.rust-lang.org/std/convert/trait."
"From.html) y [`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) "
"para facilitar las conversiones de tipos:"

#: src/std-traits/from-and-into.md
msgid "\"{s}, {addr}, {one}, {bigger}\""
msgstr ""

#: src/std-traits/from-and-into.md
msgid ""
"[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) is "
"automatically implemented when [`From`](https://doc.rust-lang.org/std/"
"convert/trait.From.html) is implemented:"
msgstr ""
"[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) se "
"implementa autom√°ticamente cuando se implementa [`From`](https://doc.rust-"
"lang.org/std/convert/trait.From.html):"

#: src/std-traits/from-and-into.md
msgid ""
"That's why it is common to only implement `From`, as your type will get "
"`Into` implementation too."
msgstr ""
"Por eso se suele implementar solo `From`, ya que el tipo ya habr√° "
"implementado tambi√©n `Into`."

#: src/std-traits/from-and-into.md
msgid ""
"When declaring a function argument input type like \"anything that can be "
"converted into a `String`\", the rule is opposite, you should use `Into`. "
"Your function will accept types that implement `From` and those that _only_ "
"implement `Into`."
msgstr ""
"Cuando se declara un tipo de entrada de argumento de funci√≥n como "
"\"cualquier elemento que se pueda convertir en `String`\", la regla es la "
"contraria y se debe usar `Into`. La funci√≥n aceptar√° tipos que implementen "
"`From` y aquellos que _solo_ implementen `Into`."

#: src/std-traits/casting.md
msgid ""
"Rust has no _implicit_ type conversions, but does support explicit casts "
"with `as`. These generally follow C semantics where those are defined."
msgstr ""

#: src/std-traits/casting.md
msgid "\"as u16: {}\""
msgstr ""

#: src/std-traits/casting.md
msgid "\"as i16: {}\""
msgstr ""

#: src/std-traits/casting.md
msgid "\"as u8: {}\""
msgstr ""

#: src/std-traits/casting.md
msgid ""
"The results of `as` are _always_ defined in Rust and consistent across "
"platforms. This might not match your intuition for changing sign or casting "
"to a smaller type -- check the docs, and comment for clarity."
msgstr ""

#: src/std-traits/casting.md
msgid ""
"Casting with `as` is a relatively sharp tool that is easy to use "
"incorrectly, and can be a source of subtle bugs as future maintenance work "
"changes the types that are used or the ranges of values in types. Casts are "
"best used only when the intent is to indicate unconditional truncation (e.g. "
"selecting the bottom 32 bits of a `u64` with `as u32`, regardless of what "
"was in the high bits)."
msgstr ""

#: src/std-traits/casting.md
msgid ""
"For infallible casts (e.g. `u32` to `u64`), prefer using `From` or `Into` "
"over `as` to confirm that the cast is in fact infallible. For fallible "
"casts, `TryFrom` and `TryInto` are available when you want to handle casts "
"that fit differently from those that don't."
msgstr ""

#: src/std-traits/casting.md
msgid "Consider taking a break after this slide."
msgstr ""

#: src/std-traits/casting.md
msgid ""
"`as` is similar to a C++ static cast. Use of `as` in cases where data might "
"be lost is generally discouraged, or at least deserves an explanatory "
"comment."
msgstr ""

#: src/std-traits/casting.md
msgid "This is common in casting integers to `usize` for use as an index."
msgstr ""

#: src/std-traits/read-and-write.md
msgid ""
"Using [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) and "
"[`BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html), you can "
"abstract over `u8` sources:"
msgstr ""
"Usando [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) y "
"[`BufRead`](https://doc.rust-lang.org/std/io/trait.BufRead.html), se puede "
"abstraer sobre fuentes `u8`:"

#: src/std-traits/read-and-write.md
msgid "b\"foo\\nbar\\nbaz\\n\""
msgstr ""

#: src/std-traits/read-and-write.md
msgid "\"lines in slice: {}\""
msgstr ""

#: src/std-traits/read-and-write.md
msgid "\"lines in file: {}\""
msgstr ""

#: src/std-traits/read-and-write.md
msgid ""
"Similarly, [`Write`](https://doc.rust-lang.org/std/io/trait.Write.html) lets "
"you abstract over `u8` sinks:"
msgstr ""
"De forma similar, [`Write`](https://doc.rust-lang.org/std/io/trait.Write."
"html) te permite abstraer sobre fuentes `u8`:"

#: src/std-traits/read-and-write.md
msgid "\"\\n\""
msgstr ""

#: src/std-traits/read-and-write.md src/slices-and-lifetimes/str.md
msgid "\"World\""
msgstr ""

#: src/std-traits/read-and-write.md
msgid "\"Logged: {:?}\""
msgstr ""

#: src/std-traits/default.md
msgid "The `Default` Trait"
msgstr "El trait `Default`"

#: src/std-traits/default.md
msgid ""
"[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) trait "
"produces a default value for a type."
msgstr ""
"El trait [`Default`](https://doc.rust-lang.org/std/default/trait.Default."
"html) produce un valor predeterminado para un tipo."

#: src/std-traits/default.md
msgid "\"John Smith\""
msgstr ""

#: src/std-traits/default.md
msgid "\"{default_struct:#?}\""
msgstr ""

#: src/std-traits/default.md
msgid "\"Y is set!\""
msgstr ""

#: src/std-traits/default.md
msgid "\"{almost_default_struct:#?}\""
msgstr ""

#: src/std-traits/default.md src/slices-and-lifetimes/exercise.md
#: src/slices-and-lifetimes/solution.md
msgid "\"{:#?}\""
msgstr ""

#: src/std-traits/default.md
msgid ""
"It can be implemented directly or it can be derived via `#[derive(Default)]`."
msgstr ""
"Se puede implementar directamente o se puede derivar a trav√©s de "
"`#[derive(Default)]`."

#: src/std-traits/default.md
msgid ""
"A derived implementation will produce a value where all fields are set to "
"their default values."
msgstr ""
"Una implementaci√≥n derivada producir√° un valor en el que todos los campos "
"tendr√°n sus valores predeterminados."

#: src/std-traits/default.md
msgid "This means all types in the struct must implement `Default` too."
msgstr ""
"Esto significa que todos los tipos de la estructura tambi√©n deber√°n "
"implementar `Default`."

#: src/std-traits/default.md
msgid ""
"Standard Rust types often implement `Default` with reasonable values (e.g. "
"`0`, `\"\"`, etc)."
msgstr ""
"Los tipos est√°ndar de Rust suelen implementar `Default` con valores "
"razonables (por ejemplo, `0`, `\"\"`, etc.)."

#: src/std-traits/default.md
#, fuzzy
msgid "The partial struct initialization works nicely with default."
msgstr ""
"La copia parcial de la estructura funciona correctamente con los valores "
"predeterminados. ."

#: src/std-traits/default.md
#, fuzzy
msgid ""
"The Rust standard library is aware that types can implement `Default` and "
"provides convenience methods that use it."
msgstr ""
"La biblioteca est√°ndar de Rust tiene en cuenta que los tipos pueden "
"implementar `Default` y, por ello, proporciona m√©todos pr√°cticos que lo "
"utilizan."

#: src/std-traits/default.md
#, fuzzy
msgid ""
"The `..` syntax is called [struct update syntax](https://doc.rust-lang.org/"
"book/ch05-01-defining-structs.html#creating-instances-from-other-instances-"
"with-struct-update-syntax)."
msgstr ""
"la sintaxis `..` se denomina [sintaxis de actualizaci√≥n de estructuras]"
"(https://doc.rust-lang.org/book/ch05-01-defining-structs.html#creating-"
"instances-from-other-instances-with-struct-update-syntax)"

#: src/std-traits/closures.md
msgid ""
"Closures or lambda expressions have types which cannot be named. However, "
"they implement special [`Fn`](https://doc.rust-lang.org/std/ops/trait.Fn."
"html), [`FnMut`](https://doc.rust-lang.org/std/ops/trait.FnMut.html), and "
"[`FnOnce`](https://doc.rust-lang.org/std/ops/trait.FnOnce.html) traits:"
msgstr ""
"Los cierres o expresiones lambda tienen tipos que no pueden nombrarse. Sin "
"embargo, implementan _traits_ especiales [`Fn`](https://doc.rust-lang.org/"
"std/ops/trait.Fn.html), [`FnMut`](https://doc.rust-lang.org/std/ops/trait."
"FnMut.html) y [`FnOnce`](https://doc.rust-lang.org/std/ops/trait.FnOnce."
"html):"

#: src/std-traits/closures.md
#, fuzzy
msgid "\"Calling function on {input}\""
msgstr "Llamar Funciones Unsafe (Inseguras)"

#: src/std-traits/closures.md
msgid "\"add_3: {}\""
msgstr ""

#: src/std-traits/closures.md
msgid "\"accumulate: {}\""
msgstr ""

#: src/std-traits/closures.md
msgid "\"multiply_sum: {}\""
msgstr ""

#: src/std-traits/closures.md
msgid ""
"An `Fn` (e.g. `add_3`) neither consumes nor mutates captured values, or "
"perhaps captures nothing at all. It can be called multiple times "
"concurrently."
msgstr ""
"Un `Fn` (por ejemplo, `add_3`) no consume ni modifica los valores "
"capturados, o quiz√°  no captura nada en absoluto. Se puede llamar varias "
"veces al mismo tiempo."

#: src/std-traits/closures.md
msgid ""
"An `FnMut` (e.g. `accumulate`) might mutate captured values. You can call it "
"multiple times, but not concurrently."
msgstr ""
"Un `FnMut` (por ejemplo, `accumulate`) puede modificar los valores "
"capturados. Se puede llamar varias veces, pero no de forma simult√°nea."

#: src/std-traits/closures.md
msgid ""
"If you have an `FnOnce` (e.g. `multiply_sum`), you may only call it once. It "
"might consume captured values."
msgstr ""
"Si tienes un `FnOnce` (por ejemplo, `multiply_sum`), solo puedes llamarlo "
"una vez. Puede consumir valores capturados."

#: src/std-traits/closures.md
msgid ""
"`FnMut` is a subtype of `FnOnce`. `Fn` is a subtype of `FnMut` and `FnOnce`. "
"I.e. you can use an `FnMut` wherever an `FnOnce` is called for, and you can "
"use an `Fn` wherever an `FnMut` or `FnOnce` is called for."
msgstr ""
"`FnMut` es un subtipo de `FnOnce`, mientras que `Fn` es un subtipo de "
"`FnMut` y `FnOnce`. Es decir, puedes utilizar un `FnMut` siempre que se "
"llame a un `FnOnce`, y puedes usar un `Fn` siempre que se llame a un `FnMut` "
"o a un `FnOnce`."

#: src/std-traits/closures.md
msgid ""
"When you define a function that takes a closure, you should take `FnOnce` if "
"you can (i.e. you call it once), or `FnMut` else, and last `Fn`. This allows "
"the most flexibility for the caller."
msgstr ""

#: src/std-traits/closures.md
msgid ""
"In contrast, when you have a closure, the most flexible you can have is `Fn` "
"(it can be passed everywhere), then `FnMut`, and lastly `FnOnce`."
msgstr ""

#: src/std-traits/closures.md
msgid ""
"The compiler also infers `Copy` (e.g. for `add_3`) and `Clone` (e.g. "
"`multiply_sum`), depending on what the closure captures."
msgstr ""
"El compilador tambi√©n infiere `Copy` (por ejemplo, `add_3`) y `Clone` (por "
"ejemplo, `multiply_sum`), dependiendo de lo que capture el cierre."

#: src/std-traits/closures.md
msgid ""
"By default, closures will capture by reference if they can. The `move` "
"keyword makes them capture by value."
msgstr ""
"De forma predeterminada, los cierres capturan, si pueden, por referencia. La "
"palabra clave `move` hace que capturen por valor."

#: src/std-traits/closures.md
msgid "\"Hi\""
msgstr ""

#: src/std-traits/closures.md
msgid "\"there\""
msgstr ""

#: src/std-traits/exercise.md
msgid ""
"In this example, you will implement the classic [\"ROT13\" cipher](https://"
"en.wikipedia.org/wiki/ROT13). Copy this code to the playground, and "
"implement the missing bits. Only rotate ASCII alphabetic characters, to "
"ensure the result is still valid UTF-8."
msgstr ""

#: src/std-traits/exercise.md
msgid "// Implement the `Read` trait for `RotDecoder`.\n"
msgstr ""

#: src/std-traits/exercise.md src/std-traits/solution.md
msgid "\"Gb trg gb gur bgure fvqr!\""
msgstr ""

#: src/std-traits/exercise.md src/std-traits/solution.md
msgid "\"To get to the other side!\""
msgstr ""

#: src/std-traits/exercise.md
msgid ""
"What happens if you chain two `RotDecoder` instances together, each rotating "
"by 13 characters?"
msgstr ""

#: src/std-traits/solution.md
msgid "'A'"
msgstr ""

#: src/welcome-day-3.md
msgid "Welcome to Day 3"
msgstr "Te damos la Bienvenida al D√≠a 3"

#: src/welcome-day-3.md
msgid "Today, we will cover:"
msgstr ""

#: src/welcome-day-3.md
msgid ""
"Memory management, lifetimes, and the borrow checker: how Rust ensures "
"memory safety."
msgstr ""

#: src/welcome-day-3.md
msgid "Smart pointers: standard library pointer types."
msgstr ""

#: src/welcome-day-3.md
msgid "[Welcome](./welcome-day-3.md) (3 minutes)"
msgstr ""

#: src/welcome-day-3.md
msgid "[Memory Management](./memory-management.md) (1 hour and 10 minutes)"
msgstr ""

#: src/welcome-day-3.md
msgid "[Smart Pointers](./smart-pointers.md) (45 minutes)"
msgstr ""

#: src/welcome-day-3.md
msgid ""
"Including 10 minute breaks, this session should take about 2 hours and 15 "
"minutes"
msgstr ""

#: src/memory-management.md
msgid "[Review of Program Memory](./memory-management/review.md) (5 minutes)"
msgstr ""

#: src/memory-management.md
msgid ""
"[Approaches to Memory Management](./memory-management/approaches.md) (10 "
"minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Ownership](./memory-management/ownership.md) (5 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Move Semantics](./memory-management/move.md) (10 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Clone](./memory-management/clone.md) (2 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Copy Types](./memory-management/copy-types.md) (5 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Drop](./memory-management/drop.md) (10 minutes)"
msgstr ""

#: src/memory-management.md
msgid "[Exercise: Builder Type](./memory-management/exercise.md) (20 minutes)"
msgstr ""

#: src/memory-management/review.md
msgid "Programs allocate memory in two ways:"
msgstr ""

#: src/memory-management/review.md
msgid "Stack: Continuous area of memory for local variables."
msgstr "_Stack_: Zona de memoria continua para las variables locales."

#: src/memory-management/review.md
msgid "Values have fixed sizes known at compile time."
msgstr "Los valores tienen tama√±os fijos conocidos en tiempo de compilaci√≥n."

#: src/memory-management/review.md
msgid "Extremely fast: just move a stack pointer."
msgstr "Muy r√°pida: mueve el _stack pointer_."

#: src/memory-management/review.md
msgid "Easy to manage: follows function calls."
msgstr "F√°cil de gestionar: sigue las llamadas de funciones."

#: src/memory-management/review.md
msgid "Great memory locality."
msgstr "Excelente localidad de memoria."

#: src/memory-management/review.md
msgid "Heap: Storage of values outside of function calls."
msgstr "_Heap_: almacenamiento de valores fuera de las llamadas de funciones."

#: src/memory-management/review.md
msgid "Values have dynamic sizes determined at runtime."
msgstr "Los valores tienen tama√±os din√°micos determinados en _runtime_."

#: src/memory-management/review.md
msgid "Slightly slower than the stack: some book-keeping needed."
msgstr "Ligeramente m√°s lento que el _stack_: requiere cierta trazabilidad."

#: src/memory-management/review.md
msgid "No guarantee of memory locality."
msgstr "No se puede asegurar la localidad de la memoria."

#: src/memory-management/review.md
msgid ""
"Creating a `String` puts fixed-sized metadata on the stack and dynamically "
"sized data, the actual string, on the heap:"
msgstr ""
"Al crear un `String`, los metadatos de tama√±o fijo se colocan en la _stack_ "
"y los datos de tama√±o din√°mico (la cadena real) en el _heap_:"

#: src/memory-management/review.md
msgid ""
"Mention that a `String` is backed by a `Vec`, so it has a capacity and "
"length and can grow if mutable via reallocation on the heap."
msgstr ""
"Menciona que un `String` est√° respaldado por un `Vec`, por lo que tiene "
"capacidad y longitud y, si es mutable, puede crecer mediante reasignaci√≥n en "
"el _heap_."

#: src/memory-management/review.md
msgid ""
"If students ask about it, you can mention that the underlying memory is heap "
"allocated using the [System Allocator](https://doc.rust-lang.org/std/alloc/"
"struct.System.html) and custom allocators can be implemented using the "
"[Allocator API](https://doc.rust-lang.org/std/alloc/index.html)"
msgstr ""
"Si los alumnos lo preguntan, puedes mencionar que la memoria subyacente "
"recibe una asignaci√≥n de _heap_ mediante el [Asignador del Sistema](https://"
"doc.rust-lang.org/std/alloc/struct.System.html) y que se pueden implementar "
"asignadores personalizados mediante el [_Allocator API_](https://doc.rust-"
"lang.org/std/alloc/index.html)."

#: src/memory-management/review.md
#, fuzzy
msgid ""
"We can inspect the memory layout with `unsafe` Rust. However, you should "
"point out that this is rightfully unsafe!"
msgstr ""
"Podemos inspeccionar la disposici√≥n de la memoria con c√≥digo `unsafe`. Sin "
"embargo, debes se√±alar que esto no es seguro."

#: src/memory-management/review.md src/testing/unit-tests.md
msgid "' '"
msgstr ""

#: src/memory-management/review.md
msgid "\"world\""
msgstr ""

#: src/memory-management/review.md
msgid ""
"// DON'T DO THIS AT HOME! For educational purposes only.\n"
"    // String provides no guarantees about its layout, so this could lead "
"to\n"
"    // undefined behavior.\n"
msgstr ""

#: src/memory-management/review.md
msgid "\"ptr = {ptr:#x}, len = {len}, capacity = {capacity}\""
msgstr ""

#: src/memory-management/approaches.md
msgid "Traditionally, languages have fallen into two broad categories:"
msgstr "Tradicionalmente, los lenguajes se dividen en dos grandes categor√≠as:"

#: src/memory-management/approaches.md
msgid "Full control via manual memory management: C, C++, Pascal, ..."
msgstr ""
"Control total a trav√©s de la gesti√≥n manual de la memoria: C, C++, Pascal, "
"etc."

#: src/memory-management/approaches.md
msgid "Programmer decides when to allocate or free heap memory."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Programmer must determine whether a pointer still points to valid memory."
msgstr ""

#: src/memory-management/approaches.md
msgid "Studies show, programmers make mistakes."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Full safety via automatic memory management at runtime: Java, Python, Go, "
"Haskell, ..."
msgstr ""
"Seguridad total mediante la gesti√≥n autom√°tica de la memoria en _runtime_: "
"Java, Python, Go, Haskell, etc."

#: src/memory-management/approaches.md
msgid ""
"A runtime system ensures that memory is not freed until it can no longer be "
"referenced."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Typically implemented with reference counting, garbage collection, or RAII."
msgstr ""

#: src/memory-management/approaches.md
msgid "Rust offers a new mix:"
msgstr "Rust ofrece una mezcla de ambas:"

#: src/memory-management/approaches.md
msgid ""
"Full control _and_ safety via compile time enforcement of correct memory "
"management."
msgstr ""
"Control _y_ seguridad completa gracias a que el compilador se encarga del "
"correcto manejo de la memoria"

#: src/memory-management/approaches.md
msgid "It does this with an explicit ownership concept."
msgstr ""
"Para ello, se utiliza un concepto de _ownership_ (propiedad) expl√≠cito."

#: src/memory-management/approaches.md
msgid ""
"This slide is intended to help students coming from other languages to put "
"Rust in context."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"C must manage heap manually with `malloc` and `free`. Common errors include "
"forgetting to call `free`, calling it multiple times for the same pointer, "
"or dereferencing a pointer after the memory it points to has been freed."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"C++ has tools like smart pointers (`unique_ptr`, `shared_ptr`) that take "
"advantage of language guarantees about calling destructors to ensure memory "
"is freed when a function returns. It is still quite easy to mis-use these "
"tools and create similar bugs to C."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Java, Go, and Python rely on the garbage collector to identify memory that "
"is no longer reachable and discard it. This guarantees that any pointer can "
"be dereferenced, eliminating use-after-free and other classes of bugs. But, "
"GC has a runtime cost and is difficult to tune properly."
msgstr ""

#: src/memory-management/approaches.md
msgid ""
"Rust's ownership and borrowing model can, in many cases, get the performance "
"of C, with alloc and free operations precisely where they are required -- "
"zero cost. It also provides tools similar to C++'s smart pointers. When "
"required, other options such as reference counting are available, and there "
"are even third-party crates available to support runtime garbage collection "
"(not covered in this class)."
msgstr ""

#: src/memory-management/ownership.md
msgid ""
"All variable bindings have a _scope_ where they are valid and it is an error "
"to use a variable outside its scope:"
msgstr ""
"Todos los enlaces a variables tienen un _√°mbito_ donde son v√°lidos y se "
"produce un error cuando se usan fuera de √©l:"

#: src/memory-management/ownership.md
#, fuzzy
msgid ""
"We say that the variable _owns_ the value. Every Rust value has precisely "
"one owner at all times."
msgstr "Decimos que el valor _pertenece_ a la variable."

#: src/memory-management/ownership.md
#, fuzzy
msgid ""
"At the end of the scope, the variable is _dropped_ and the data is freed. A "
"destructor can run here to free up resources."
msgstr "Al final del √°mbito, la variable _se elimina_ y los datos se liberan."

#: src/memory-management/ownership.md
msgid ""
"Students familiar with garbage-collection implementations will know that a "
"garbage collector starts with a set of \"roots\" to find all reachable "
"memory. Rust's \"single owner\" principle is a similar idea."
msgstr ""

#: src/memory-management/move.md
msgid "An assignment will transfer _ownership_ between variables:"
msgstr "Una asignaci√≥n transferir√° su _ownership_ entre variables:"

#: src/memory-management/move.md
#, fuzzy
msgid "\"Hello!\""
msgstr "¬°Hola, mundo!"

#: src/memory-management/move.md src/slices-and-lifetimes/str.md
msgid "\"s2: {s2}\""
msgstr ""

#: src/memory-management/move.md
msgid "// println!(\"s1: {s1}\");\n"
msgstr ""

#: src/memory-management/move.md
msgid "The assignment of `s1` to `s2` transfers ownership."
msgstr "La asignaci√≥n de `s1` a `s2` transfiere el _ownership_."

#: src/memory-management/move.md
msgid "When `s1` goes out of scope, nothing happens: it does not own anything."
msgstr ""
"Cuando `s1` queda fuera del √°mbito, no ocurre nada: no le pertenece nada."

#: src/memory-management/move.md
msgid "When `s2` goes out of scope, the string data is freed."
msgstr "Cuando `s2` sale del √°mbito, los datos de la cadena se liberan."

#: src/memory-management/move.md
msgid "Before move to `s2`:"
msgstr "Antes de mover a `s2`:"

#: src/memory-management/move.md
msgid "After move to `s2`:"
msgstr "Despu√©s de mover a `s2`:"

#: src/memory-management/move.md
msgid ""
"```bob\n"
" Stack                             Heap\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - -.\n"
":                           :     :                           :\n"
":    s1 \"(inaccessible)\"    :     :                           :\n"
":   +-----------+-------+   :     :   +----+----+----+----+   :\n"
":   | ptr       |   o---+---+--+--+-->| R  | u  | s  | t  |   :\n"
":   | len       |     4 |   :  |  :   +----+----+----+----+   :\n"
":   | capacity  |     4 |   :  |  :                           :\n"
":   +-----------+-------+   :  |  :                           :\n"
":                           :  |  `- - - - - - - - - - - - - -'\n"
":    s2                     :  |\n"
":   +-----------+-------+   :  |\n"
":   | ptr       |   o---+---+--'\n"
":   | len       |     4 |   :\n"
":   | capacity  |     4 |   :\n"
":   +-----------+-------+   :\n"
":                           :\n"
"`- - - - - - - - - - - - - -'\n"
"```"
msgstr ""
"```bob\n"
" _Stack_                          _Heap_\n"
".- - - - - - - - - - - - - -.     .- - - - - - - - - - - - - -.\n"
":                           :     :                           :\n"
":    s1 \"(inaccessible)\"    :     :                           :\n"
":   +-----------+-------+   :     :   +----+----+----+----+   :\n"
":   | ptr       |   o---+---+--+--+-->| R  | u  | s  | t  |   :\n"
":   | len       |     4 |   :  |  :   +----+----+----+----+   :\n"
":   | capacity  |     4 |   :  |  :                           :\n"
":   +-----------+-------+   :  |  :                           :\n"
":                           :  |  `- - - - - - - - - - - - - -'\n"
":    s2                     :  |\n"
":   +-----------+-------+   :  |\n"
":   | ptr       |   o---+---+--'\n"
":   | len       |     4 |   :\n"
":   | capacity  |     4 |   :\n"
":   +-----------+-------+   :\n"
":                           :\n"
"`- - - - - - - - - - - - - -'\n"
"```"

#: src/memory-management/move.md
msgid ""
"When you pass a value to a function, the value is assigned to the function "
"parameter. This transfers ownership:"
msgstr ""
"Cuando pasas un valor a una funci√≥n, el valor se asigna al par√°metro de la "
"funci√≥n. Esta acci√≥n transfiere el _ownership_:"

#: src/memory-management/move.md
msgid "\"Hello {name}\""
msgstr ""

#: src/memory-management/move.md src/android/interoperability/java.md
#, fuzzy
msgid "\"Alice\""
msgstr "Slices"

#: src/memory-management/move.md
msgid "// say_hello(name);\n"
msgstr ""

#: src/memory-management/move.md
msgid ""
"Mention that this is the opposite of the defaults in C++, which copies by "
"value unless you use `std::move` (and the move constructor is defined!)."
msgstr ""
"Menciona que es lo contrario de los valores predeterminados de C++, que se "
"copian por valor, a menos que utilices `std::move` (y que el constructor de "
"movimiento est√© definido)."

#: src/memory-management/move.md
msgid ""
"It is only the ownership that moves. Whether any machine code is generated "
"to manipulate the data itself is a matter of optimization, and such copies "
"are aggressively optimized away."
msgstr ""
"Es √∫nicamente el ownership el que se mueve. Si se genera alg√∫n c√≥digo "
"m√°quina para manipular los datos en s√≠, se trata de una cuesti√≥n de "
"optimizaci√≥n, y esas copias se optimizan de forma agresiva."

#: src/memory-management/move.md
msgid ""
"Simple values (such as integers) can be marked `Copy` (see later slides)."
msgstr ""
"Los valores simples (como los enteros) se pueden marcar como `Copy` "
"(consulta las diapositivas posteriores)."

#: src/memory-management/move.md
msgid "In Rust, clones are explicit (by using `clone`)."
msgstr "En Rust, la clonaci√≥n es expl√≠cita (usando `clone`)."

#: src/memory-management/move.md
msgid "In the `say_hello` example:"
msgstr ""

#: src/memory-management/move.md
msgid ""
"With the first call to `say_hello`, `main` gives up ownership of `name`. "
"Afterwards, `name` cannot be used anymore within `main`."
msgstr ""
"Con la primera llamada a `say_hello`, `main` deja de tener el _ownership_ de "
"`name`. Despu√©s, ya no se podr√° usar `name` dentro de `main`."

#: src/memory-management/move.md
msgid ""
"The heap memory allocated for `name` will be freed at the end of the "
"`say_hello` function."
msgstr ""
"La memoria de _heap_ asignada a `name` se liberar√° al final de la funci√≥n "
"`say_hello`."

#: src/memory-management/move.md
msgid ""
"`main` can retain ownership if it passes `name` as a reference (`&name`) and "
"if `say_hello` accepts a reference as a parameter."
msgstr ""
"main` podr√° conservar el _ownership_ si pasa`name` como referencia (`&name`) "
"y si `say_hello` acepta una referencia como par√°metro."

#: src/memory-management/move.md
msgid ""
"Alternatively, `main` can pass a clone of `name` in the first call (`name."
"clone()`)."
msgstr ""
"Por otro lado, `main` puede pasar un clon de `name` en la primera llamada "
"(`name.clone()`)."

#: src/memory-management/move.md
msgid ""
"Rust makes it harder than C++ to inadvertently create copies by making move "
"semantics the default, and by forcing programmers to make clones explicit."
msgstr ""
"Rust hace que resulte m√°s dif√≠cil que en C++ crear copias por error al "
"definir la sem√°ntica de movimiento como predeterminada y al obligar a los "
"programadores a clonar s√≥lo de forma expl√≠cita."

#: src/memory-management/move.md
#, fuzzy
msgid "Defensive Copies in Modern C++"
msgstr "Double free en c√≥digo C++ moderno"

#: src/memory-management/move.md
msgid "Modern C++ solves this differently:"
msgstr "La versi√≥n moderna de C++ soluciona este problema de forma diferente:"

#: src/memory-management/move.md
msgid "\"Cpp\""
msgstr ""

#: src/memory-management/move.md
msgid "// Duplicate the data in s1.\n"
msgstr ""

#: src/memory-management/move.md
msgid ""
"The heap data from `s1` is duplicated and `s2` gets its own independent copy."
msgstr ""
"Los datos de la _stack_ de `s1` se duplican y `s2` obtiene su propia copia "
"independiente."

#: src/memory-management/move.md
msgid "When `s1` and `s2` go out of scope, they each free their own memory."
msgstr ""
"Cuando `s1` y `s2` salen del √°mbito, cada uno libera su propia memoria."

#: src/memory-management/move.md
msgid "Before copy-assignment:"
msgstr "Antes de la asignaci√≥n de copias:"

#: src/memory-management/move.md
msgid "After copy-assignment:"
msgstr "Despu√©s de la asignaci√≥n de copia:"

#: src/memory-management/move.md
msgid ""
"C++ has made a slightly different choice than Rust. Because `=` copies data, "
"the string data has to be cloned. Otherwise we would get a double-free when "
"either string goes out of scope."
msgstr ""

#: src/memory-management/move.md
msgid ""
"C++ also has [`std::move`](https://en.cppreference.com/w/cpp/utility/move), "
"which is used to indicate when a value may be moved from. If the example had "
"been `s2 = std::move(s1)`, no heap allocation would take place. After the "
"move, `s1` would be in a valid but unspecified state. Unlike Rust, the "
"programmer is allowed to keep using `s1`."
msgstr ""

#: src/memory-management/move.md
msgid ""
"Unlike Rust, `=` in C++ can run arbitrary code as determined by the type "
"which is being copied or moved."
msgstr ""

#: src/memory-management/clone.md
msgid "Clone"
msgstr ""

#: src/memory-management/clone.md
msgid ""
"Sometimes you _want_ to make a copy of a value. The `Clone` trait "
"accomplishes this."
msgstr ""

#: src/memory-management/clone.md
msgid ""
"The idea of `Clone` is to make it easy to spot where heap allocations are "
"occurring. Look for `.clone()` and a few others like `Vec::new` or `Box::"
"new`."
msgstr ""

#: src/memory-management/clone.md
msgid ""
"It's common to \"clone your way out\" of problems with the borrow checker, "
"and return later to try to optimize those clones away."
msgstr ""

#: src/memory-management/copy-types.md
msgid ""
"While move semantics are the default, certain types are copied by default:"
msgstr ""
"Aunque la sem√°ntica de movimiento es la opci√≥n predeterminada, algunos tipos "
"se copian de forma predeterminada:"

#: src/memory-management/copy-types.md
msgid "These types implement the `Copy` trait."
msgstr "Estos tipos implementan el trait `Copy`."

#: src/memory-management/copy-types.md
msgid "You can opt-in your own types to use copy semantics:"
msgstr ""
"Puedes habilitar tus propios tipos para que usen la sem√°ntica de copia:"

#: src/memory-management/copy-types.md
msgid "After the assignment, both `p1` and `p2` own their own data."
msgstr ""
"Despu√©s de la asignaci√≥n, tanto `p1` como `p2` tienen sus propios datos."

#: src/memory-management/copy-types.md
msgid "We can also use `p1.clone()` to explicitly copy the data."
msgstr ""
"Tambi√©n podemos utilizar `p1.clone()` para copiar los datos de forma "
"expl√≠cita."

#: src/memory-management/copy-types.md
msgid "Copying and cloning are not the same thing:"
msgstr "Copiar y clonar no es lo mismo:"

#: src/memory-management/copy-types.md
msgid ""
"Copying refers to bitwise copies of memory regions and does not work on "
"arbitrary objects."
msgstr ""
"Copiar hace referencia a las copias bit a bit de regiones de memoria y no "
"funciona en cualquier objeto."

#: src/memory-management/copy-types.md
msgid ""
"Copying does not allow for custom logic (unlike copy constructors in C++)."
msgstr ""
"Copiar no permite l√≥gica personalizada (a diferencia de los constructores de "
"copias de C++)."

#: src/memory-management/copy-types.md
msgid ""
"Cloning is a more general operation and also allows for custom behavior by "
"implementing the `Clone` trait."
msgstr ""
"Clonar es una operaci√≥n m√°s general y que permite un comportamiento "
"personalizado implementando el trait `Clone`."

#: src/memory-management/copy-types.md
msgid "Copying does not work on types that implement the `Drop` trait."
msgstr "Copiar no funciona en los tipos que implementan el trait `Drop`."

#: src/memory-management/copy-types.md
msgid "In the above example, try the following:"
msgstr "En el ejemplo anterior, prueba lo siguiente:"

#: src/memory-management/copy-types.md
msgid ""
"Add a `String` field to `struct Point`. It will not compile because `String` "
"is not a `Copy` type."
msgstr ""
"A√±ade un campo `String` a `struct Point`. No se compilar√° porque `String` no "
"es de tipo `Copy`."

#: src/memory-management/copy-types.md
#, fuzzy
msgid ""
"Remove `Copy` from the `derive` attribute. The compiler error is now in the "
"`println!` for `p1`."
msgstr ""
"Elimina `Copy` del atributo `derive`. El error del compilador se encuentra "
"ahora en `println!` para `p1`."

#: src/memory-management/copy-types.md
msgid "Show that it works if you clone `p1` instead."
msgstr "Demuestra que funciona si clonas `p1`."

#: src/memory-management/drop.md
msgid "The `Drop` Trait"
msgstr "El Trait `Drop`"

#: src/memory-management/drop.md
msgid ""
"Values which implement [`Drop`](https://doc.rust-lang.org/std/ops/trait.Drop."
"html) can specify code to run when they go out of scope:"
msgstr ""
"Los valores que implementan [`Drop`](https://doc.rust-lang.org/std/ops/trait."
"Drop.html) pueden especificar el c√≥digo que se ejecutar√° cuando salgan del "
"√°mbito:"

#: src/memory-management/drop.md
msgid "\"Dropping {}\""
msgstr ""

#: src/memory-management/drop.md src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"a\""
msgstr ""

#: src/memory-management/drop.md src/testing/googletest.md
msgid "\"b\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"c\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"d\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"Exiting block B\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"Exiting block A\""
msgstr ""

#: src/memory-management/drop.md
msgid "\"Exiting main\""
msgstr ""

#: src/memory-management/drop.md
msgid "Note that `std::mem::drop` is not the same as `std::ops::Drop::drop`."
msgstr ""

#: src/memory-management/drop.md
msgid "Values are automatically dropped when they go out of scope."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"When a value is dropped, if it implements `std::ops::Drop` then its `Drop::"
"drop` implementation will be called."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"All its fields will then be dropped too, whether or not it implements `Drop`."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"`std::mem::drop` is just an empty function that takes any value. The "
"significance is that it takes ownership of the value, so at the end of its "
"scope it gets dropped. This makes it a convenient way to explicitly drop "
"values earlier than they would otherwise go out of scope."
msgstr ""

#: src/memory-management/drop.md
msgid ""
"This can be useful for objects that do some work on `drop`: releasing locks, "
"closing files, etc."
msgstr ""

#: src/memory-management/drop.md
msgid "Why doesn't `Drop::drop` take `self`?"
msgstr "¬øPor qu√© `Drop::drop` no acepta `self`?"

#: src/memory-management/drop.md
msgid ""
"Short-answer: If it did, `std::mem::drop` would be called at the end of the "
"block, resulting in another call to `Drop::drop`, and a stack overflow!"
msgstr ""
"Respuesta corta: si lo hiciera, se llamar√≠a a `std::mem::drop` al final del "
"bloque, lo que dar√≠a como resultado otra llamada a `Drop::drop` y un "
"desbordamiento de la _stack_."

#: src/memory-management/drop.md
msgid "Try replacing `drop(a)` with `a.drop()`."
msgstr "Prueba a sustituir `drop(a)` por `a.drop()`."

#: src/memory-management/exercise.md
msgid ""
"In this example, we will implement a complex data type that owns all of its "
"data. We will use the \"builder pattern\" to support building a new value "
"piece-by-piece, using convenience functions."
msgstr ""

#: src/memory-management/exercise.md
msgid "Fill in the missing pieces."
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// A representation of a software package.\n"
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid ""
"/// Return a representation of this package as a dependency, for use in\n"
"    /// building other packages.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"1\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid ""
"/// A builder for a Package. Use `build()` to create the `Package` itself.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"2\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Set the package version.\n"
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Set the package authors.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"3\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Add an additional dependency.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"4\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "/// Set the language. If not set, language defaults to None.\n"
msgstr ""

#: src/memory-management/exercise.md
msgid "\"5\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"base64\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"0.13\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"base64: {base64:?}\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"log\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"0.4\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"log: {log:?}\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"serde\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"djmitche\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"4.0\""
msgstr ""

#: src/memory-management/exercise.md src/memory-management/solution.md
msgid "\"serde: {serde:?}\""
msgstr ""

#: src/memory-management/solution.md
msgid "\"0.1\""
msgstr ""

#: src/smart-pointers.md
msgid "[Box"
msgstr ""

#: src/smart-pointers.md
msgid "](./smart-pointers/box.md) (10 minutes)"
msgstr ""

#: src/smart-pointers.md
msgid "[Rc](./smart-pointers/rc.md) (5 minutes)"
msgstr ""

#: src/smart-pointers.md
msgid "[Exercise: Binary Tree](./smart-pointers/exercise.md) (30 minutes)"
msgstr ""

#: src/smart-pointers/box.md
msgid ""
"[`Box`](https://doc.rust-lang.org/std/boxed/struct.Box.html) is an owned "
"pointer to data on the heap:"
msgstr ""
"[`Box`](https://doc.rust-lang.org/std/boxed/struct.Box.html) es un puntero "
"propio de datos en el _heap_:"

#: src/smart-pointers/box.md
msgid "\"five: {}\""
msgstr ""

#: src/smart-pointers/box.md
msgid ""
"`Box<T>` implements `Deref<Target = T>`, which means that you can [call "
"methods from `T` directly on a `Box<T>`](https://doc.rust-lang.org/std/ops/"
"trait.Deref.html#more-on-deref-coercion)."
msgstr ""
"`Box<T>` implementa `Deref<Target = T>`, lo que significa que puedes [llamar "
"a m√©todos desde `T` directamente en un `Box<T>`](https://doc.rust-lang.org/"
"std/ops/trait.Deref.html#more-on-deref-coercion)."

#: src/smart-pointers/box.md
msgid ""
"Recursive data types or data types with dynamic sizes need to use a `Box`:"
msgstr ""
"Los tipos de datos recursivos o los tipos de datos con tama√±os din√°micos "
"deben utilizar un `Box`:"

#: src/smart-pointers/box.md
msgid "/// A non-empty list: first element and the rest of the list.\n"
msgstr ""

#: src/smart-pointers/box.md
msgid "/// An empty list.\n"
msgstr ""

#: src/smart-pointers/box.md
msgid "\"{list:?}\""
msgstr ""

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"```bob\n"
" Stack                           Heap\n"
".- - - - - - - - - - - - - - .     .- - - - - - - - - - - - - - - - - - - - "
"- - - - -.\n"
":                            :     :                                                 :\n"
":    "
"list                    :     :                                                 :\n"
":   +---------+----+----+    :     :    +---------+----+----+    +------+----"
"+----+  :\n"
":   | Element | 1  | o--+----+-----+--->| Element | 2  | o--+--->| Nil  | // "
"| // |  :\n"
":   +---------+----+----+    :     :    +---------+----+----+    +------+----"
"+----+  :\n"
":                            :     :                                                 :\n"
":                            :     :                                                 :\n"
"'- - - - - - - - - - - - - - '     '- - - - - - - - - - - - - - - - - - - - "
"- - - - -'\n"
"```"
msgstr ""
"```bob\n"
" _Stack_                       _Heap_\n"
".- - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                         :     :                                               :\n"
":    "
"list                 :     :                                               :\n"
":   +------+----+----+    :     :    +------+----+----+    +------+----+----"
"+   :\n"
":   | Cons | 1  | o--+----+-----+--->| Cons | 2  | o--+--->| Nil  | // | // "
"|   :\n"
":   +------+----+----+    :     :    +------+----+----+    +------+----+----"
"+   :\n"
":                         :     :                                               :\n"
":                         :     :                                               :\n"
"'- - - - - - - - - - - - -'     '- - - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"```"

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"`Box` is like `std::unique_ptr` in C++, except that it's guaranteed to be "
"not null."
msgstr ""
"`Box` es igual que `std::unique_ptr` en C++, salvo que est√° asegurado que no "
"ser√° nulo. "

#: src/smart-pointers/box.md
msgid "A `Box` can be useful when you:"
msgstr "Un `Box` puede resultar √∫til en los siguientes casos:"

#: src/smart-pointers/box.md
msgid ""
"have a type whose size that can't be known at compile time, but the Rust "
"compiler wants to know an exact size."
msgstr ""
"Si tienes un tipo cuyo tama√±o no se conoce durante la compilaci√≥n, pero el "
"compilador de Rust quiere saber el tama√±o exacto."

#: src/smart-pointers/box.md
msgid ""
"want to transfer ownership of a large amount of data. To avoid copying large "
"amounts of data on the stack, instead store the data on the heap in a `Box` "
"so only the pointer is moved."
msgstr ""
"Si quieres transferir la propiedad de una gran cantidad de datos. Para "
"evitar que se copien grandes cantidades de datos en la _stack_, almacena los "
"datos del _heap_ en un `Box` para que solo se mueva el puntero."

#: src/smart-pointers/box.md
msgid ""
"If `Box` was not used and we attempted to embed a `List` directly into the "
"`List`, the compiler would not compute a fixed size of the struct in memory "
"(`List` would be of infinite size)."
msgstr ""
"Si no se utiliza `Box` e intentamos insertar un `List` directamente dentro "
"de `List`, el compilador no calcular√≠a un tama√±o fijo de la estructura en la "
"memoria (`List` tendr√≠a un tama√±o infinito)."

#: src/smart-pointers/box.md
msgid ""
"`Box` solves this problem as it has the same size as a regular pointer and "
"just points at the next element of the `List` in the heap."
msgstr ""
"`Box` resuelve este problema, ya que tiene el mismo tama√±o que un puntero "
"normal y solo apunta al siguiente elemento de la `List` en el _heap_."

#: src/smart-pointers/box.md
msgid ""
"Remove the `Box` in the List definition and show the compiler error. "
"\"Recursive with indirection\" is a hint you might want to use a Box or "
"reference of some kind, instead of storing a value directly."
msgstr ""
"Elimina `Box` de la definici√≥n de la lista y muestra el error del "
"compilador. \"Recursivo con indirecci√≥n\" es una sugerencia de que puedes "
"usar un Box o referencia de alg√∫n tipo, en lugar de almacenar un valor "
"directamente."

#: src/smart-pointers/box.md
msgid "Niche Optimization"
msgstr "Optimizaci√≥n de la Memoria"

#: src/smart-pointers/box.md
msgid ""
"A `Box` cannot be empty, so the pointer is always valid and non-`null`. This "
"allows the compiler to optimize the memory layout:"
msgstr ""
"`Box` no puede estar vac√≠o, por lo que el puntero siempre es v√°lido y no "
"`null`. Esto permite que el compilador optimice el dise√±o de la memoria:"

#: src/smart-pointers/box.md
#, fuzzy
msgid ""
"```bob\n"
" Stack                           Heap\n"
".- - - - - - - - - - - - - - .     .- - - - - - - - - - - - - -.\n"
":                            :     :                           :\n"
":    list                    :     :                           :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":   | Element | 1  | o--+----+-----+--->| Element | 2  | // |  :\n"
":   +---------+----+----+    :     :    +---------+----+----+  :\n"
":                            :     :                           :\n"
":                            :     :                           :\n"
"'- - - - - - - - - - - - - - '     '- - - - - - - - - - - - - -'\n"
"```"
msgstr ""
"```bob\n"
" _Stack_                       _Heap_\n"
".- - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - - "
"- -.\n"
":                         :     :                                               :\n"
":    "
"list                 :     :                                               :\n"
":   +------+----+----+    :     :    +------+----+----+    +------+----+----"
"+   :\n"
":   | Cons | 1  | o--+----+-----+--->| Cons | 2  | o--+--->| Nil  | // | // "
"|   :\n"
":   +------+----+----+    :     :    +------+----+----+    +------+----+----"
"+   :\n"
":                         :     :                                               :\n"
":                         :     :                                               :\n"
"'- - - - - - - - - - - - -'     '- - - - - - - - - - - - - - - - - - - - - - "
"- -'\n"
"```"

#: src/smart-pointers/rc.md
msgid ""
"[`Rc`](https://doc.rust-lang.org/std/rc/struct.Rc.html) is a reference-"
"counted shared pointer. Use this when you need to refer to the same data "
"from multiple places:"
msgstr ""
"[`Rc`](https://doc.rust-lang.org/std/rc/struct.Rc.html) es un puntero "
"compartido de referencia contada. Util√≠zalo cuando necesites hacer "
"referencia a los mismos datos desde varios lugares:"

#: src/smart-pointers/rc.md
msgid "\"a: {a}\""
msgstr ""

#: src/smart-pointers/rc.md
msgid "\"b: {b}\""
msgstr ""

#: src/smart-pointers/rc.md
msgid ""
"See [`Arc`](../concurrency/shared_state/arc.md) and [`Mutex`](https://doc."
"rust-lang.org/std/sync/struct.Mutex.html) if you are in a multi-threaded "
"context."
msgstr ""
"Consulta [`Arc`](../concurrency/shared_state/arc.md) y [`Mutex`](https://doc."
"rust-lang.org/std/sync/struct.Mutex.html) si te encuentras en un contexto "
"multihilo."

#: src/smart-pointers/rc.md
msgid ""
"You can _downgrade_ a shared pointer into a [`Weak`](https://doc.rust-lang."
"org/std/rc/struct.Weak.html) pointer to create cycles that will get dropped."
msgstr ""
"Puedes _degradar_ un puntero compartido en un puntero [`Weak`](https://doc."
"rust-lang.org/std/rc/struct.Weak.html) para crear ciclos que se abandonar√°n."

#: src/smart-pointers/rc.md
msgid ""
"`Rc`'s count ensures that its contained value is valid for as long as there "
"are references."
msgstr ""
"El recuento de `Rc` asegura que el valor que contiene sea v√°lido mientras "
"haya referencias."

#: src/smart-pointers/rc.md
msgid "`Rc` in Rust is like `std::shared_ptr` in C++."
msgstr "`Rc` en Rust es como `std::shared_ptr` en C++."

#: src/smart-pointers/rc.md
msgid ""
"`Rc::clone` is cheap: it creates a pointer to the same allocation and "
"increases the reference count. Does not make a deep clone and can generally "
"be ignored when looking for performance issues in code."
msgstr ""
"`Rc::clone` es simple: crea un puntero en la misma asignaci√≥n y aumenta el "
"recuento de referencias. No hace clones completos y, por lo general, se "
"puede ignorar cuando se buscan problemas de rendimiento en el c√≥digo."

#: src/smart-pointers/rc.md
msgid ""
"`make_mut` actually clones the inner value if necessary (\"clone-on-write\") "
"and returns a mutable reference."
msgstr ""
"`make_mut` clona el valor interno si es necesario (\"copiar al escribir\") y "
"devuelve una referencia mutable."

#: src/smart-pointers/rc.md
msgid "Use `Rc::strong_count` to check the reference count."
msgstr "Comprueba el recuento de referencias con `Rc::strong_count`."

#: src/smart-pointers/rc.md
#, fuzzy
msgid ""
"`Rc::downgrade` gives you a _weakly reference-counted_ object to create "
"cycles that will be dropped properly (likely in combination with `RefCell`)."
msgstr ""
"`Rc::downgrade` ofrece un objeto _de referencia contada baja_ para crear "
"`Rc::downgrade` ofrece un objeto de _referencia contada d√©bil_ para crear "
"`RefCell`)."

#: src/smart-pointers/exercise.md
msgid ""
"A binary tree is a tree-type data structure where every node has two "
"children (left and right). We will create a tree where each node stores a "
"value. For a given node N, all nodes in a N's left subtree contain smaller "
"values, and all nodes in N's right subtree will contain larger values."
msgstr ""

#: src/smart-pointers/exercise.md
msgid "Implement the following types, so that the given tests pass."
msgstr ""

#: src/smart-pointers/exercise.md
msgid ""
"Extra Credit: implement an iterator over a binary tree that returns the "
"values in order."
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid "/// A node in the binary tree.\n"
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid "/// A possibly-empty subtree.\n"
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid ""
"/// A container storing a set of values, using a binary tree.\n"
"///\n"
"/// If the same value is added multiple times, it is only stored once.\n"
msgstr ""

#: src/smart-pointers/exercise.md
msgid "// Implement `new`, `insert`, `len`, and `has`.\n"
msgstr ""

#: src/smart-pointers/exercise.md src/smart-pointers/solution.md
msgid "// not a unique item\n"
msgstr ""

#: src/smart-pointers/solution.md src/testing/googletest.md
msgid "\"bar\""
msgstr ""

#: src/welcome-day-3-afternoon.md
msgid "[Borrowing](./borrowing.md) (1 hour)"
msgstr ""

#: src/welcome-day-3-afternoon.md
msgid ""
"[Slices and Lifetimes](./slices-and-lifetimes.md) (1 hour and 10 minutes)"
msgstr ""

#: src/welcome-day-3-afternoon.md
msgid ""
"Including 10 minute breaks, this session should take about 2 hours and 20 "
"minutes"
msgstr ""

#: src/borrowing.md
msgid "[Borrowing a Value](./borrowing/shared.md) (10 minutes)"
msgstr ""

#: src/borrowing.md
msgid "[Borrow Checking](./borrowing/borrowck.md) (10 minutes)"
msgstr ""

#: src/borrowing.md
msgid "[Interior Mutability](./borrowing/interior-mutability.md) (10 minutes)"
msgstr ""

#: src/borrowing.md
msgid "[Exercise: Health Statistics](./borrowing/exercise.md) (30 minutes)"
msgstr ""

#: src/borrowing/shared.md
#, fuzzy
msgid ""
"As we saw before, instead of transferring ownership when calling a function, "
"you can let a function _borrow_ the value:"
msgstr ""
"En lugar de transferir el _ownership_ al llamar a una funci√≥n, puedes "
"permitir que una funci√≥n _tome prestado_ el valor:"

#: src/borrowing/shared.md
msgid "The `add` function _borrows_ two points and returns a new point."
msgstr "La funci√≥n `add` _toma prestados_ dos puntos y devuelve uno nuevo."

#: src/borrowing/shared.md
msgid "The caller retains ownership of the inputs."
msgstr "El llamador conserva el _ownership_ de las entradas."

#: src/borrowing/shared.md
msgid ""
"This slide is a review of the material on references from day 1, expanding "
"slightly to include function arguments and return values."
msgstr ""

#: src/borrowing/shared.md
msgid "Notes on stack returns:"
msgstr "Notas sobre la devoluci√≥n de resultados de la _stack_:"

#: src/borrowing/shared.md
#, fuzzy
msgid ""
"Demonstrate that the return from `add` is cheap because the compiler can "
"eliminate the copy operation. Change the above code to print stack addresses "
"and run it on the [Playground](https://play.rust-lang.org/?"
"version=stable&mode=release&edition=2021&gist=0cb13be1c05d7e3446686ad9947c4671) "
"or look at the assembly in [Godbolt](https://rust.godbolt.org/). In the "
"\"DEBUG\" optimization level, the addresses should change, while they stay "
"the same when changing to the \"RELEASE\" setting:"
msgstr ""
"Demuestra que la instrucci√≥n de retorno de `add` es f√°cil porque el "
"compilador puede eliminar la operaci√≥n de copia. Cambia el c√≥digo anterior "
"para imprimir las direcciones de la _stack_ y ejecutarlas en el [Playground]"
"(https://play.rust-lang.org/) o consulta el ensamblador en [Godbolt](https://"
"rust.godbolt.org/). En el nivel de optimizaci√≥n \"DEBUG\", las direcciones "
"deber√≠an cambiar. Sin embargo, deber√≠an mantenerse igual modificar la "
"configuraci√≥n \"RELEASE\":"

#: src/borrowing/shared.md
msgid "The Rust compiler can do return value optimization (RVO)."
msgstr ""
"El compilador de Rust puede hacer la optimizaci√≥n del valor devuelto (RVO)."

#: src/borrowing/shared.md
msgid ""
"In C++, copy elision has to be defined in the language specification because "
"constructors can have side effects. In Rust, this is not an issue at all. If "
"RVO did not happen, Rust will always perform a simple and efficient `memcpy` "
"copy."
msgstr ""
"En C++, la elisi√≥n de copia tiene que definirse en la especificaci√≥n del "
"lenguaje, ya que los constructores pueden tener efectos secundarios. En "
"Rust, esto no supone ning√∫n problema. Si no hay RVO, Rust siempre realizar√° "
"una copia `memcpy` simple y eficiente."

#: src/borrowing/borrowck.md
#, fuzzy
msgid ""
"Rust's _borrow checker_ puts constraints on the ways you can borrow values. "
"For a given value, at any time:"
msgstr "Rust limita las formas en que se pueden tomar prestados valores:"

#: src/borrowing/borrowck.md
#, fuzzy
msgid "You can have one or more shared references to the value, _or_"
msgstr "Puedes tener uno o varios valores `&T` en un momento dado, _o_"

#: src/borrowing/borrowck.md
#, fuzzy
msgid "You can have exactly one exclusive reference to the value."
msgstr "puedes tener exactamente un valor `&mut T`."

#: src/borrowing/borrowck.md
msgid ""
"Note that the requirement is that conflicting references not _exist_ at the "
"same point. It does not matter where the reference is dereferenced."
msgstr ""

#: src/borrowing/borrowck.md
msgid ""
"The above code does not compile because `a` is borrowed as mutable (through "
"`c`) and as immutable (through `b`) at the same time."
msgstr ""
"El c√≥digo anterior no se compila porque `a` se toma prestada como mutable (a "
"trav√©s de `c`) y como inmutable (a trav√©s de `b`) al mismo tiempo."

#: src/borrowing/borrowck.md
msgid ""
"Move the `println!` statement for `b` before the scope that introduces `c` "
"to make the code compile."
msgstr ""
"Mueve la instrucci√≥n `println!` de `b` antes del √°mbito que introduce `c` "
"para que el c√≥digo compile."

#: src/borrowing/borrowck.md
msgid ""
"After that change, the compiler realizes that `b` is only ever used before "
"the new mutable borrow of `a` through `c`. This is a feature of the borrow "
"checker called \"non-lexical lifetimes\"."
msgstr ""
"Despu√©s de ese cambio, el compilador se da cuenta de que `b` solo se usa "
"antes del nuevo pr√©stamo mutable de `a` a trav√©s de `c`. Se trata de una "
"funci√≥n del verificador de pr√©stamos denominada \"tiempo de vida no l√©xico\"."

#: src/borrowing/borrowck.md
msgid ""
"The exclusive reference constraint is quite strong. Rust uses it to ensure "
"that data races do not occur. Rust also _relies_ on this constraint to "
"optimize code. For example, a value behind a shared reference can be safely "
"cached in a register for the lifetime of that reference."
msgstr ""

#: src/borrowing/borrowck.md
msgid ""
"The borrow checker is designed to accommodate many common patterns, such as "
"taking exclusive references to different fields in a struct at the same "
"time. But, there are some situations where it doesn't quite \"get it\" and "
"this often results in \"fighting with the borrow checker.\""
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"In some situations, it's necessary to modify data behind a shared (read-"
"only) reference. For example, a shared data structure might have an internal "
"cache, and wish to update that cache from read-only methods."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"The \"interior mutability\" pattern allows exclusive (mutable) access behind "
"a shared reference. The standard library provides several ways to do this, "
"all while still ensuring safety, typically by performing a runtime check."
msgstr ""

#: src/borrowing/interior-mutability.md
#, fuzzy
msgid "`RefCell`"
msgstr "`RefCell<T>`"

#: src/borrowing/interior-mutability.md
msgid "\"graph: {root:#?}\""
msgstr ""

#: src/borrowing/interior-mutability.md
msgid "\"graph sum: {}\""
msgstr ""

#: src/borrowing/interior-mutability.md
#, fuzzy
msgid "`Cell`"
msgstr "`Cell<T>`"

#: src/borrowing/interior-mutability.md
msgid ""
"`Cell` wraps a value and allows getting or setting the value, even with a "
"shared reference to the `Cell`. However, it does not allow any references to "
"the value. Since there are no references, borrowing rules cannot be broken."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"The main thing to take away from this slide is that Rust provides _safe_ "
"ways to modify data behind a shared reference. There are a variety of ways "
"to ensure that safety, and `RefCell` and `Cell` are two of them."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"`RefCell` enforces Rust's usual borrowing rules (either multiple shared "
"references or a single exclusive reference) with a runtime check. In this "
"case, all borrows are very short and never overlap, so the checks always "
"succeed."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"`Rc` only allows shared (read-only) access to its contents, since its "
"purpose is to allow (and count) many references. But we want to modify the "
"value, so we need interior mutability."
msgstr ""

#: src/borrowing/interior-mutability.md
msgid ""
"`Cell` is a simpler means to ensure safety: it has a `set` method that takes "
"`&self`. This needs no runtime check, but requires moving values, which can "
"have its own cost."
msgstr ""

#: src/borrowing/interior-mutability.md
#, fuzzy
msgid ""
"Demonstrate that reference loops can be created by adding `root` to `subtree."
"children`."
msgstr ""
"Demuestra que se pueden crear bucles de referencia a√±adiendo `root` a "
"`subtree.children` (¬°no intentes imprimirlo!)."

#: src/borrowing/interior-mutability.md
msgid ""
"To demonstrate a runtime panic, add a `fn inc(&mut self)` that increments "
"`self.value` and calls the same method on its children. This will panic in "
"the presence of the reference loop, with `thread 'main' panicked at 'already "
"borrowed: BorrowMutError'`."
msgstr ""
"Para demostrar un p√°nico en tiempo de ejecuci√≥n, a√±ade un `fn inc(&mut "
"self)` que incremente `self.value` y llame al mismo m√©todo en sus hijos. "
"Esto entrar√° en p√°nico en presencia del bucle de referencia, con `thread "
"'main' panicked at 'already borrowed: BorrowMutError'`."

#: src/borrowing/exercise.md
msgid ""
"You're working on implementing a health-monitoring system. As part of that, "
"you need to keep track of users' health statistics."
msgstr ""
"Est√°s trabajando en la implementaci√≥n de un sistema de monitorizaci√≥n de "
"salud. Por ello, debes realizar un seguimiento de las estad√≠sticas de salud "
"de los usuarios."

#: src/borrowing/exercise.md
#, fuzzy
msgid ""
"You'll start with a stubbed function in an `impl` block as well as a `User` "
"struct definition. Your goal is to implement the stubbed out method on the "
"`User` `struct` defined in the `impl` block."
msgstr ""
"Comenzar√°s con algunas funciones stub en un bloque `impl`, as√≠ como con una "
"definici√≥n de estructura `User`. Tu objetivo es implementar m√©todos con "
"stubs en la  `struct` `User` definida en el bloque `impl`."

#: src/borrowing/exercise.md
#, fuzzy
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and fill in the missing "
"method:"
msgstr ""
"Copia el fragmento de c√≥digo que aparece m√°s abajo en la p√°gina <https://"
"play.rust-lang.org/> y rellena los m√©todos que faltan:"

#: src/borrowing/exercise.md
msgid ""
"\"Update a user's statistics based on measurements from a visit to the "
"doctor\""
msgstr ""

#: src/borrowing/exercise.md src/borrowing/solution.md
#: src/android/build-rules/library.md src/android/aidl/client.md
msgid "\"Bob\""
msgstr ""

#: src/borrowing/exercise.md src/borrowing/solution.md
msgid "\"I'm {} and my age is {}\""
msgstr ""

#: src/slices-and-lifetimes.md
msgid "[Slices: &\\[T\\]](./slices-and-lifetimes/slices.md) (10 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid "[String References](./slices-and-lifetimes/str.md) (10 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Lifetime Annotations](./slices-and-lifetimes/lifetime-annotations.md) (10 "
"minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Lifetime Elision](./slices-and-lifetimes/lifetime-elision.md) (5 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Struct Lifetimes](./slices-and-lifetimes/struct-lifetimes.md) (5 minutes)"
msgstr ""

#: src/slices-and-lifetimes.md
msgid ""
"[Exercise: Protobuf Parsing](./slices-and-lifetimes/exercise.md) (30 minutes)"
msgstr ""

#: src/slices-and-lifetimes/slices.md
msgid "Slices"
msgstr "Slices"

#: src/slices-and-lifetimes/slices.md
msgid "A slice gives you a view into a larger collection:"
msgstr "Un _slice_ ofrece una visi√≥n de una colecci√≥n m√°s amplia:"

#: src/slices-and-lifetimes/slices.md
msgid "Slices borrow data from the sliced type."
msgstr "Los slices toman prestados datos del tipo slice."

#: src/slices-and-lifetimes/slices.md
msgid "Question: What happens if you modify `a[3]` right before printing `s`?"
msgstr ""
"Pregunta: ¬øQu√© ocurre si se modifica `a[3]` justo antes de imprimir `s`?"

#: src/slices-and-lifetimes/slices.md
msgid ""
"We create a slice by borrowing `a` and specifying the starting and ending "
"indexes in brackets."
msgstr ""
"Creamos un slice tomando prestado `a` y especificando entre par√©ntesis los "
"√≠ndices de inicio y de fin."

#: src/slices-and-lifetimes/slices.md
msgid ""
"If the slice starts at index 0, Rust‚Äôs range syntax allows us to drop the "
"starting index, meaning that `&a[0..a.len()]` and `&a[..a.len()]` are "
"identical."
msgstr ""
"Si el slice comienza en el √≠ndice 0, la sintaxis de rango de Rust nos "
"permite eliminar el √≠ndice inicial, lo que significa que `&a[0..a.len()]` y "
"`&a[..a.len()]` son id√©nticos."

#: src/slices-and-lifetimes/slices.md
msgid ""
"The same is true for the last index, so `&a[2..a.len()]` and `&a[2..]` are "
"identical."
msgstr ""
"Lo mismo ocurre con el √∫ltimo √≠ndice, por lo que `&a[2..a.len()]` y "
"`&a[2..]` son id√©nticos."

#: src/slices-and-lifetimes/slices.md
msgid ""
"To easily create a slice of the full array, we can therefore use `&a[..]`."
msgstr ""
"Para crear f√°cilmente un slice del array completo, podemos usar `&a[..]`."

#: src/slices-and-lifetimes/slices.md
msgid ""
"`s` is a reference to a slice of `i32`s. Notice that the type of `s` "
"(`&[i32]`) no longer mentions the array length. This allows us to perform "
"computation on slices of different sizes."
msgstr ""
"`s` es una referencia a un slice de `i32`s. Ten en cuenta que el tipo de `s` "
"(`&[i32]`) ya no menciona la longitud del array. Esto nos permite realizar "
"c√°lculos en slices de diferentes tama√±os."

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"Slices always borrow from another object. In this example, `a` has to remain "
"'alive' (in scope) for at least as long as our slice."
msgstr ""
"Los slices siempre tienen pr√©stamos de otros objetos. En este ejemplo, `a` "
"tiene que permanecer \"con vida\" (en el √°mbito) al menos durante el tiempo "
"que dure el slice. "

#: src/slices-and-lifetimes/slices.md
#, fuzzy
msgid ""
"The question about modifying `a[3]` can spark an interesting discussion, but "
"the answer is that for memory safety reasons you cannot do it through `a` at "
"this point in the execution, but you can read the data from both `a` and `s` "
"safely. It works before you created the slice, and again after the "
"`println`, when the slice is no longer used."
msgstr ""
"La cuesti√≥n sobre la modificaci√≥n de `a[3]` puede suscitar un debate "
"interesante, pero la respuesta es que, por razones de seguridad de memoria, "
"no se puede hacer mediante `a` en este punto de la ejecuci√≥n, pero s√≠ se "
"pueden leer los datos de `a` y `s` de forma segura. Funciona antes de crear "
"el slice y despu√©s de `println`, cuando el slice ya no se utiliza. En la "
"secci√≥n que trata sobre el _borrow checker_ se dar√° m√°s informaci√≥n."

#: src/slices-and-lifetimes/str.md
msgid ""
"We can now understand the two string types in Rust: `&str` is almost like "
"`&[char]`, but with its data stored in a variable-length encoding (UTF-8)."
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid "\"s1: {s1}\""
msgstr ""

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid "\"Hello \""
msgstr "¬°Hola, mundo!"

#: src/slices-and-lifetimes/str.md
msgid "\"s3: {s3}\""
msgstr ""

#: src/slices-and-lifetimes/str.md
msgid "Rust terminology:"
msgstr "Terminolog√≠a de Rust:"

#: src/slices-and-lifetimes/str.md
msgid "`&str` an immutable reference to a string slice."
msgstr "`&str` es una referencia inmutable a un slice de una cadena."

#: src/slices-and-lifetimes/str.md
msgid "`String` a mutable string buffer."
msgstr "`String` es un b√∫fer de cadena mutable."

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid ""
"`&str` introduces a string slice, which is an immutable reference to UTF-8 "
"encoded string data stored in a block of memory. String literals "
"(`‚ÄùHello‚Äù`), are stored in the program‚Äôs binary."
msgstr ""
"`&str` introduce un slice de cadena, que es una referencia inmutable a los "
"datos de cadena codificados en UTF-8 y almacenados en un bloque de memoria. "
"Los literales de cadena (`\"Hello\"`) se almacenan en el binario del "
"programa."

#: src/slices-and-lifetimes/str.md
msgid ""
"Rust‚Äôs `String` type is a wrapper around a vector of bytes. As with a "
"`Vec<T>`, it is owned."
msgstr ""
"El tipo `String` de Rust es un envoltorio que rodea a un vector de bytes. "
"Como sucede con `Vec<T>`, tiene propiedad."

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid ""
"As with many other types `String::from()` creates a string from a string "
"literal; `String::new()` creates a new empty string, to which string data "
"can be added using the `push()` and `push_str()` methods."
msgstr ""
"Al igual que ocurre con muchos otros tipos, `String::from()` crea una cadena "
"a partir de un literal de cadena. `String::new()` crea una cadena vac√≠a a la "
"que se pueden a√±adir los datos de la cadena mediante los m√©todos `push()` y "
"`push_str()`."

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid ""
"The `format!()` macro is a convenient way to generate an owned string from "
"dynamic values. It accepts the same format specification as `println!()`."
msgstr ""
"La macro `format!()` es una forma pr√°ctica de generar una cadena propia a "
"partir de valores din√°micos. Acepta la misma especificaci√≥n de formato que "
"`println!()`."

#: src/slices-and-lifetimes/str.md
msgid ""
"You can borrow `&str` slices from `String` via `&` and optionally range "
"selection. If you select a byte range that is not aligned to character "
"boundaries, the expression will panic. The `chars` iterator iterates over "
"characters and is preferred over trying to get character boundaries right."
msgstr ""

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid ""
"For C++ programmers: think of `&str` as `std::string_view` from C++, but the "
"one that always points to a valid string in memory. Rust `String` is a rough "
"equivalent of `std::string` from C++ (main difference: it can only contain "
"UTF-8 encoded bytes and will never use a small-string optimization)."
msgstr ""
"Para los programadores de C++: piensa en `&str` como el `const char*` de C+"
"+, pero el que siempre apunta a una cadena v√°lida en la memoria. `String` de "
"Rust es parecido a `std::string` de C++  (la diferencia principal es que "
"solo puede contener bytes codificados en UTF-8 y nunca utilizar√° una "
"optimizaci√≥n de cadena peque√±a)."

#: src/slices-and-lifetimes/str.md
#, fuzzy
msgid "Byte strings literals allow you to create a `&[u8]` value directly:"
msgstr "Las cadenas de bytes te permiten crear un valor `&[u8]` directamente:"

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"A reference has a _lifetime_, which must not \"outlive\" the value it refers "
"to. This is verified by the borrow checker."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"The lifetime can be implicit - this is what we have seen so far. Lifetimes "
"can also be explicit: `&'a Point`, `&'document str`. Lifetimes start with "
"`'` and `'a` is a typical default name. Read `&'a Point` as \"a borrowed "
"`Point` which is valid for at least the lifetime `a`\"."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
#, fuzzy
msgid ""
"Lifetimes are always inferred by the compiler: you cannot assign a lifetime "
"yourself. Explicit lifetime annotations create constraints where there is "
"ambiguity; the compiler verifies that there is a valid solution."
msgstr ""
"Las anotaciones durante el tiempo de vida crean restricciones. El compilador "
"verifica que hay una soluci√≥n v√°lida."

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"Lifetimes become more complicated when considering passing values to and "
"returning values from functions."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid "// What is the lifetime of p3?\n"
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid "\"p3: {p3:?}\""
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"In this example, the the compiler does not know what lifetime to infer for "
"`p3`. Looking inside the function body shows that it can only safely assume "
"that `p3`'s lifetime is the shorter of `p1` and `p2`. But just like types, "
"Rust requires explicit annotations of lifetimes on function arguments and "
"return values."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid "Add `'a` appropriately to `left_most`:"
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"This says, \"given p1 and p2 which both outlive `'a`, the return value lives "
"for at least `'a`."
msgstr ""

#: src/slices-and-lifetimes/lifetime-annotations.md
msgid ""
"In common cases, lifetimes can be elided, as described on the next slide."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "Lifetimes in Function Calls"
msgstr "Tiempos de Vida en Llamadas a Funci√≥n"

#: src/slices-and-lifetimes/lifetime-elision.md
#, fuzzy
msgid ""
"Lifetimes for function arguments and return values must be fully specified, "
"but Rust allows lifetimes to be elided in most cases with [a few simple "
"rules](https://doc.rust-lang.org/nomicon/lifetime-elision.html). This is not "
"inference -- it is just a syntactic shorthand."
msgstr ""
"El tiempo de vida de los argumentos de las funciones y los valores devueltos "
"deben especificarse por completo, pero Rust permite que se puedan eludir en "
"la mayor√≠a de los casos con [unas sencillas reglas](https://doc.rust-lang."
"org/nomicon/lifetime-elision.html)."

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "Each argument which does not have a lifetime annotation is given one."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"If there is only one argument lifetime, it is given to all un-annotated "
"return values."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"If there are multiple argument lifetimes, but the first one is for `self`, "
"that lifetime is given to all un-annotated return values."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "In this example, `cab_distance` is trivially elided."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"The `nearest` function provides another example of a function with multiple "
"references in its arguments that requires explicit annotation."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid "Try adjusting the signature to \"lie\" about the lifetimes returned:"
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"This won't compile, demonstrating that the annotations are checked for "
"validity by the compiler. Note that this is not the case for raw pointers "
"(unsafe), and this is a common source of errors with unsafe Rust."
msgstr ""

#: src/slices-and-lifetimes/lifetime-elision.md
msgid ""
"Students may ask when to use lifetimes. Rust borrows _always_ have "
"lifetimes. Most of the time, elision and type inference mean these don't "
"need to be written out. In more complicated cases, lifetime annotations can "
"help resolve ambiguity. Often, especially when prototyping, it's easier to "
"just work with owned data by cloning values where necessary."
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "Lifetimes in Data Structures"
msgstr "Tiempos de vida en estructuras de datos"

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid ""
"If a data type stores borrowed data, it must be annotated with a lifetime:"
msgstr ""
"Si un tipo de datos almacena datos prestados, se debe anotar con tiempo de "
"vida:"

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"Bye {text}!\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"The quick brown fox jumps over the lazy dog.\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "// erase(text);\n"
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"{fox:?}\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "\"{dog:?}\""
msgstr ""

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid ""
"In the above example, the annotation on `Highlight` enforces that the data "
"underlying the contained `&str` lives at least as long as any instance of "
"`Highlight` that uses that data."
msgstr ""
"En el ejemplo anterior, la anotaci√≥n en `Highlight` hace que los datos "
"subyacentes a la `&str` contenida tengan al menos la misma duraci√≥n que "
"cualquier instancia de `Highlight` que utilice esos datos."

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid ""
"If `text` is consumed before the end of the lifetime of `fox` (or `dog`), "
"the borrow checker throws an error."
msgstr ""
"Si `text` se consume antes de que acabe el tiempo de vida de `fox` (o "
"`dog`), el _borrow checker_ (verificador de pr√©stamos) muestra un error."

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid ""
"Types with borrowed data force users to hold on to the original data. This "
"can be useful for creating lightweight views, but it generally makes them "
"somewhat harder to use."
msgstr ""
"Los tipos con datos prestados (_borrowed_) obligan a los usuarios a "
"conservar los datos originales. Esto puede ser √∫til para crear vistas "
"ligeras aunque, por lo general, hace que sean un poco m√°s dif√≠ciles de usar."

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid "When possible, make data structures own their data directly."
msgstr ""
"Siempre que sea posible, haz que las estructuras de datos sean propietarias "
"directas de sus datos."

#: src/slices-and-lifetimes/struct-lifetimes.md
msgid ""
"Some structs with multiple references inside can have more than one lifetime "
"annotation. This can be necessary if there is a need to describe lifetime "
"relationships between the references themselves, in addition to the lifetime "
"of the struct itself. Those are very advanced use cases."
msgstr ""
"Algunas estructuras con varias referencias dentro pueden tener m√°s de una "
"anotaci√≥n de tiempo de vida. Esto puede ser necesario si hay que describir "
"las relaciones de tiempo de vida entre las propias referencias, adem√°s del "
"tiempo de vida de la propia estructura. Estos son casos pr√°cticos muy "
"avanzados."

#: src/slices-and-lifetimes/exercise.md
msgid ""
"In this exercise, you will build a parser for the [protobuf binary encoding]"
"(https://protobuf.dev/programming-guides/encoding/). Don't worry, it's "
"simpler than it seems! This illustrates a common parsing pattern, passing "
"slices of data. The underlying data itself is never copied."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"Fully parsing a protobuf message requires knowing the types of the fields, "
"indexed by their field numbers. That is typically provided in a `proto` "
"file. In this exercise, we'll encode that information into `match` "
"statements in functions that get called for each field."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
#, fuzzy
msgid "We'll use the following proto:"
msgstr "Puedes usar el siguiente archivo `Cargo.toml`:"

#: src/slices-and-lifetimes/exercise.md
msgid ""
"A proto message is encoded as a series of fields, one after the next. Each "
"is implemented as a \"tag\" followed by the value. The tag contains a field "
"number (e.g., `2` for the `id` field of a `Person` message) and a wire type "
"defining how the payload should be determined from the byte stream."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"Integers, including the tag, are represented with a variable-length encoding "
"called VARINT. Luckily, `parse_varint` is defined for you below. The given "
"code also defines callbacks to handle `Person` and `PhoneNumber` fields, and "
"to parse a message into a series of calls to those callbacks."
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"What remains for you is to implement the `parse_field` function and the "
"`ProtoMessage` trait for `Person` and `PhoneNumber`."
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid varint\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid wire-type\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Unexpected EOF\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid length\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Unexpected wire-type)\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "\"Invalid string (not UTF-8)\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// A wire type as seen on the wire.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// The Varint WireType indicates the value is a single VARINT.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"//I64,  -- not needed for this exercise\n"
"    /// The Len WireType indicates that the value is a length represented as "
"a\n"
"    /// VARINT followed by exactly that number of bytes.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"/// The I32 WireType indicates that the value is precisely 4 bytes in\n"
"    /// little-endian order containing a 32-bit signed integer.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// A field's value, typed based on the wire type.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "//I64(i64),  -- not needed for this exercise\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// A field, containing the field number and its value.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "//1 => WireType::I64,  -- not needed for this exercise\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"/// Parse a VARINT, returning the parsed value and the remaining bytes.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"// This is the last byte of the VARINT, so convert it to\n"
"            // a u64 and return it.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "// More than 7 bytes is invalid.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// Convert a tag into a field number and a WireType.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid "/// Parse a field, returning the remaining bytes\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid ""
"\"Based on the wire type, build a Field, consuming as many bytes as "
"necessary.\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid "\"Return the field, and any un-consumed bytes.\""
msgstr ""

#: src/slices-and-lifetimes/exercise.md src/slices-and-lifetimes/solution.md
msgid ""
"/// Parse a message in the given data, calling `T::add_field` for each field "
"in\n"
"/// the message.\n"
"///\n"
"/// The entire input is consumed.\n"
msgstr ""

#: src/slices-and-lifetimes/exercise.md
msgid "// TODO: Implement ProtoMessage for Person and PhoneNumber.\n"
msgstr ""

#: src/slices-and-lifetimes/solution.md
msgid "// Unwrap error because `value` is definitely 4 bytes long.\n"
msgstr ""

#: src/slices-and-lifetimes/solution.md
msgid "// skip everything else\n"
msgstr ""

#: src/slices-and-lifetimes/solution.md
msgid "b\"hello\""
msgstr ""

#: src/welcome-day-4.md
msgid "Welcome to Day 4"
msgstr "Bienvenido al D√≠a 4"

#: src/welcome-day-4.md
#, fuzzy
msgid ""
"Today we will cover topics relating to building large-scale software in Rust:"
msgstr "Hoy vamos a tratar algunos temas m√°s avanzados de Rust:"

#: src/welcome-day-4.md
msgid "Iterators: a deep dive on the `Iterator` trait."
msgstr ""

#: src/welcome-day-4.md
msgid "Modules and visibility."
msgstr ""

#: src/welcome-day-4.md
#, fuzzy
msgid "Testing."
msgstr "Probando"

#: src/welcome-day-4.md
msgid "Error handling: panics, `Result`, and the try operator `?`."
msgstr ""
"Gesti√≥n de errores: _panics_ (p√°nicos), `Result` y el operador _try_ `?`."

#: src/welcome-day-4.md
msgid ""
"Unsafe Rust: the escape hatch when you can't express yourself in safe Rust."
msgstr ""

#: src/welcome-day-4.md
msgid "[Welcome](./welcome-day-4.md) (3 minutes)"
msgstr ""

#: src/welcome-day-4.md
msgid "[Iterators](./iterators.md) (45 minutes)"
msgstr ""

#: src/welcome-day-4.md
msgid "[Modules](./modules.md) (40 minutes)"
msgstr ""

#: src/welcome-day-4.md
msgid "[Testing](./testing.md) (1 hour and 5 minutes)"
msgstr ""

#: src/iterators.md
msgid "[Iterator](./iterators/iterator.md) (5 minutes)"
msgstr ""

#: src/iterators.md
msgid "[IntoIterator](./iterators/intoiterator.md) (5 minutes)"
msgstr ""

#: src/iterators.md
msgid "[FromIterator](./iterators/fromiterator.md) (5 minutes)"
msgstr ""

#: src/iterators.md
msgid ""
"[Exercise: Iterator Method Chaining](./iterators/exercise.md) (30 minutes)"
msgstr ""

#: src/iterators/iterator.md
msgid ""
"The [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) "
"trait supports iterating over values in a collection. It requires a `next` "
"method and provides lots of methods. Many standard library types implement "
"`Iterator`, and you can implement it yourself, too:"
msgstr ""

#: src/iterators/iterator.md
msgid "\"fib({i}): {n}\""
msgstr ""

#: src/iterators/iterator.md
#, fuzzy
msgid ""
"The `Iterator` trait implements many common functional programming "
"operations over collections (e.g. `map`, `filter`, `reduce`, etc). This is "
"the trait where you can find all the documentation about them. In Rust these "
"functions should produce the code as efficient as equivalent imperative "
"implementations."
msgstr ""
"El trait `Iterator` implementa muchas operaciones comunes de programaci√≥n "
"funcional en colecciones (por ejemplo, `map`, `filter`, `reduce`, etc.). "
"Este es el trait que te permite encontrar toda la documentaci√≥n sobre ellas. "
"En Rust, estas funciones deber√≠an generar un c√≥digo tan eficiente como las "
"implementaciones imperativas equivalentes."

#: src/iterators/iterator.md
msgid ""
"`IntoIterator` is the trait that makes for loops work. It is implemented by "
"collection types such as `Vec<T>` and references to them such as `&Vec<T>` "
"and `&[T]`. Ranges also implement it. This is why you can iterate over a "
"vector with `for i in some_vec { .. }` but `some_vec.next()` doesn't exist."
msgstr ""
"`IntoIterator` es el trait que hace que los bucles funcionen. Se implementa "
"a trav√©s de tipos de colecciones, como `Vec<T>`, y de referencias a ellas, "
"como `&Vec<T>` y `&[T]`. Los rangos tambi√©n lo implementan. Esta es la raz√≥n "
"por la que se puede iterar sobre un vector con `for i in some_vec { .. }`, "
"pero `some_vec.next()` no existe."

#: src/iterators/intoiterator.md
#, fuzzy
msgid ""
"The `Iterator` trait tells you how to _iterate_ once you have created an "
"iterator. The related trait [`IntoIterator`](https://doc.rust-lang.org/std/"
"iter/trait.IntoIterator.html) defines how to create an iterator for a type. "
"It is used automatically by the `for` loop."
msgstr ""
"El trait `Iterator` te indica c√≥mo _iterar_ una vez que has creado un "
"iterador. El trait relacionado `IntoIterator` indica c√≥mo crear el iterador:"

#: src/iterators/intoiterator.md
msgid "\"point = {x}, {y}\""
msgstr ""

#: src/iterators/intoiterator.md
#, fuzzy
msgid ""
"Click through to the docs for `IntoIterator`. Every implementation of "
"`IntoIterator` must declare two types:"
msgstr ""
"La sintaxis aqu√≠ significa que cada implementaci√≥n de `IntoIterator` debe "
"declarar dos tipos:"

#: src/iterators/intoiterator.md
#, fuzzy
msgid "`Item`: the type to iterate over, such as `i8`,"
msgstr "`Item`: el tipo sobre el que iteramos, como `i8`,"

#: src/iterators/intoiterator.md
msgid "`IntoIter`: the `Iterator` type returned by the `into_iter` method."
msgstr "`IntoIter`: el tipo `Iterator` devuelto por el m√©todo `into_iter`."

#: src/iterators/intoiterator.md
msgid ""
"Note that `IntoIter` and `Item` are linked: the iterator must have the same "
"`Item` type, which means that it returns `Option<Item>`"
msgstr ""
"Ten en cuenta que `IntoIter` y `Item` est√°n vinculados: el iterador debe "
"tener el mismo tipo de `Item`, lo que significa que devuelve `Option<Item>`."

#: src/iterators/intoiterator.md
msgid "The example iterates over all combinations of x and y coordinates."
msgstr ""

#: src/iterators/intoiterator.md
msgid ""
"Try iterating over the grid twice in `main`. Why does this fail? Note that "
"`IntoIterator::into_iter` takes ownership of `self`."
msgstr ""

#: src/iterators/intoiterator.md
msgid ""
"Fix this issue by implementing `IntoIterator` for `&Grid` and storing a "
"reference to the `Grid` in `GridIter`."
msgstr ""

#: src/iterators/intoiterator.md
msgid ""
"The same problem can occur for standard library types: `for e in "
"some_vector` will take ownership of `some_vector` and iterate over owned "
"elements from that vector. Use `for e in &some_vector` instead, to iterate "
"over references to elements of `some_vector`."
msgstr ""

#: src/iterators/fromiterator.md
msgid "FromIterator"
msgstr "FromIterator"

#: src/iterators/fromiterator.md
msgid ""
"[`FromIterator`](https://doc.rust-lang.org/std/iter/trait.FromIterator.html) "
"lets you build a collection from an [`Iterator`](https://doc.rust-lang.org/"
"std/iter/trait.Iterator.html)."
msgstr ""
"[`FromIterator`](https://doc.rust-lang.org/std/iter/trait.FromIterator.html) "
"permite construir una colecci√≥n a partir de un [`Iterator`](https://doc.rust-"
"lang.org/std/iter/trait.Iterator.html)."

#: src/iterators/fromiterator.md
msgid "\"prime_squares: {prime_squares:?}\""
msgstr ""

#: src/iterators/fromiterator.md
#, fuzzy
msgid "`Iterator` implements"
msgstr "`Iterator`"

#: src/iterators/fromiterator.md
msgid "There are two ways to specify `B` for this method:"
msgstr ""

#: src/iterators/fromiterator.md
msgid ""
"With the \"turbofish\": `some_iterator.collect::<COLLECTION_TYPE>()`, as "
"shown. The `_` shorthand used here lets Rust infer the type of the `Vec` "
"elements."
msgstr ""

#: src/iterators/fromiterator.md
msgid ""
"With type inference: `let prime_squares: Vec<_> = some_iterator.collect()`. "
"Rewrite the example to use this form."
msgstr ""

#: src/iterators/fromiterator.md
#, fuzzy
msgid ""
"There are basic implementations of `FromIterator` for `Vec`, `HashMap`, etc. "
"There are also more specialized implementations which let you do cool things "
"like convert an `Iterator<Item = Result<V, E>>` into a `Result<Vec<V>, E>`."
msgstr ""
"Tambi√©n hay implementaciones que permiten hacer cosas interesantes, como "
"convertir un  `Iterator<Item = Result<V, E>>` en un `Result<Vec<V>, E>`."

#: src/iterators/exercise.md
#, fuzzy
msgid ""
"In this exercise, you will need to find and use some of the provided methods "
"in the [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) "
"trait to implement a complex calculation."
msgstr ""
"Se puede implementar el trait [`Iterator`](https://doc.rust-lang.org/std/"
"iter/trait.Iterator.html) en tus propios tipos:"

#: src/iterators/exercise.md
#, fuzzy
msgid ""
"Copy the following code to <https://play.rust-lang.org/> and make the tests "
"pass. Use an iterator expression and `collect` the result to construct the "
"return value."
msgstr ""
"Copia el siguiente fragmento de c√≥digo en la p√°gina <https://play.rust-lang."
"org/> para hacer la prueba. Prueba a no asignar un `Vec` a los resultados "
"intermedios:"

#: src/iterators/exercise.md src/iterators/solution.md
msgid ""
"/// Calculate the differences between elements of `values` offset by "
"`offset`,\n"
"/// wrapping around from the end of `values` to the beginning.\n"
"///\n"
"/// Element `n` of the result is `values[(n+offset)%len] - values[n]`.\n"
msgstr ""

#: src/modules.md
msgid "[Modules](./modules/modules.md) (5 minutes)"
msgstr ""

#: src/modules.md
msgid "[Filesystem Hierarchy](./modules/filesystem.md) (5 minutes)"
msgstr ""

#: src/modules.md
msgid "[Visibility](./modules/visibility.md) (5 minutes)"
msgstr ""

#: src/modules.md
msgid "[use, super, self](./modules/paths.md) (10 minutes)"
msgstr ""

#: src/modules.md
msgid ""
"[Exercise: Modules for a GUI Library](./modules/exercise.md) (15 minutes)"
msgstr ""

#: src/modules.md
msgid "This segment should take about 40 minutes"
msgstr ""

#: src/modules/modules.md
msgid "We have seen how `impl` blocks let us namespace functions to a type."
msgstr ""
"Hemos visto c√≥mo los bloques `impl` nos permiten asignar espacios de nombres "
"de funciones a un tipo."

#: src/modules/modules.md
msgid "Similarly, `mod` lets us namespace types and functions:"
msgstr ""
"Del mismo modo, `mod` nos permite asignar espacios de nombres a funciones y "
"tipos:"

#: src/modules/modules.md
msgid "\"In the foo module\""
msgstr ""

#: src/modules/modules.md
msgid "\"In the bar module\""
msgstr ""

#: src/modules/modules.md
msgid ""
"Packages provide functionality and include a `Cargo.toml` file that "
"describes how to build a bundle of 1+ crates."
msgstr ""
"Los paquetes ofrecen funciones e incluyen un archivo `Cargo.toml` que "
"describe c√≥mo compilar un paquete de m√°s de un crate."

#: src/modules/modules.md
msgid ""
"Crates are a tree of modules, where a binary crate creates an executable and "
"a library crate compiles to a library."
msgstr ""
"Los crates son un √°rbol de m√≥dulos, donde un crate binario crea un "
"ejecutable y un crate de biblioteca compila una biblioteca."

#: src/modules/modules.md
msgid "Modules define organization, scope, and are the focus of this section."
msgstr ""
"Los m√≥dulos definen la organizaci√≥n y el √°mbito, y son el centro de esta "
"secci√≥n."

#: src/modules/filesystem.md
msgid ""
"Omitting the module content will tell Rust to look for it in another file:"
msgstr ""
"Omitir el contenido del m√≥dulo har√° que Rust lo busque en otro archivo:"

#: src/modules/filesystem.md
msgid ""
"This tells rust that the `garden` module content is found at `src/garden."
"rs`. Similarly, a `garden::vegetables` module can be found at `src/garden/"
"vegetables.rs`."
msgstr ""
"Esto indica que el contenido del m√≥dulo `garden` se encuentra en `src/garden."
"rs`. Del mismo modo, el m√≥dulo `garden::vegetables` se encuentra en `src/"
"garden/vegetables.rs`."

#: src/modules/filesystem.md
msgid "The `crate` root is in:"
msgstr "La ra√≠z de `crate` est√° en:"

#: src/modules/filesystem.md
msgid "`src/lib.rs` (for a library crate)"
msgstr "`src/lib.rs` (para un crate de biblioteca)"

#: src/modules/filesystem.md
msgid "`src/main.rs` (for a binary crate)"
msgstr "`src/main.rs` (para un crate binario)"

#: src/modules/filesystem.md
msgid ""
"Modules defined in files can be documented, too, using \"inner doc "
"comments\". These document the item that contains them -- in this case, a "
"module."
msgstr ""
"Los m√≥dulos definidos en archivos tambi√©n se pueden documentar mediante "
"\"comentarios internos del documento\". En ellos se indica el elemento que "
"los contiene, en este caso, un m√≥dulo."

#: src/modules/filesystem.md
msgid ""
"//! This module implements the garden, including a highly performant "
"germination\n"
"//! implementation.\n"
msgstr ""

#: src/modules/filesystem.md
msgid "// Re-export types from this module.\n"
msgstr ""

#: src/modules/filesystem.md
msgid "/// Sow the given seed packets.\n"
msgstr ""

#: src/modules/filesystem.md
msgid "/// Harvest the produce in the garden that is ready.\n"
msgstr ""

#: src/modules/filesystem.md
msgid ""
"Before Rust 2018, modules needed to be located at `module/mod.rs` instead of "
"`module.rs`, and this is still a working alternative for editions after 2018."
msgstr ""
"Antes de Rust 2018, los m√≥dulos deb√≠an ubicarse en `module/mod.rs` en lugar "
"de en `module.rs`. Esta alternativa sigue existiendo en las ediciones "
"posteriores a 2018."

#: src/modules/filesystem.md
msgid ""
"The main reason to introduce `filename.rs` as alternative to `filename/mod."
"rs` was because many files named `mod.rs` can be hard to distinguish in IDEs."
msgstr ""
"El principal motivo de introducir `filename.rs` en lugar de `filename/mod."
"rs` se debe a que si muchos archivos llamados `mod.rs` puede ser dif√≠cil "
"distinguirlos en IDEs."

#: src/modules/filesystem.md
msgid "Deeper nesting can use folders, even if the main module is a file:"
msgstr ""
"Un anidamiento m√°s profundo puede usar carpetas, incluso si el m√≥dulo "
"principal es un archivo:"

#: src/modules/filesystem.md
msgid ""
"The place rust will look for modules can be changed with a compiler "
"directive:"
msgstr ""
"El lugar donde Rust buscar√° los m√≥dulos se puede cambiar con una directiva "
"del compilador:"

#: src/modules/filesystem.md
msgid "\"some/path.rs\""
msgstr ""

#: src/modules/filesystem.md
msgid ""
"This is useful, for example, if you would like to place tests for a module "
"in a file named `some_module_test.rs`, similar to the convention in Go."
msgstr ""
"Esto resulta √∫til, por ejemplo, si deseas colocar pruebas de un m√≥dulo en un "
"archivo denominado `some_module_test.rs`, similar a la convenci√≥n en Go."

#: src/modules/visibility.md
msgid "Modules are a privacy boundary:"
msgstr "Los m√≥dulos marcan el l√≠mite de la privacidad:"

#: src/modules/visibility.md
msgid "Module items are private by default (hides implementation details)."
msgstr ""
"Los elementos del m√≥dulo son privados de forma predeterminada (se ocultan "
"los detalles de implementaci√≥n)."

#: src/modules/visibility.md
msgid "Parent and sibling items are always visible."
msgstr "Los elementos superiores y los del mismo nivel siempre est√°n visibles."

#: src/modules/visibility.md
msgid ""
"In other words, if an item is visible in module `foo`, it's visible in all "
"the descendants of `foo`."
msgstr ""
"Es decir, si un elemento est√° visible en el m√≥dulo `foo`, se ver√° en todos "
"los elementos descendientes de `foo`."

#: src/modules/visibility.md
msgid "\"outer::private\""
msgstr ""

#: src/modules/visibility.md
msgid "\"outer::public\""
msgstr ""

#: src/modules/visibility.md
msgid "\"outer::inner::private\""
msgstr ""

#: src/modules/visibility.md
msgid "\"outer::inner::public\""
msgstr ""

#: src/modules/visibility.md
msgid "Use the `pub` keyword to make modules public."
msgstr "Haz que los m√≥dulos sean p√∫blicos con la palabra clave `pub`."

#: src/modules/visibility.md
msgid ""
"Additionally, there are advanced `pub(...)` specifiers to restrict the scope "
"of public visibility."
msgstr ""
"Adem√°s, hay especificadores `pub(...)` avanzados para restringir el √°mbito "
"de la visibilidad p√∫blica."

#: src/modules/visibility.md
msgid ""
"See the [Rust Reference](https://doc.rust-lang.org/reference/visibility-and-"
"privacy.html#pubin-path-pubcrate-pubsuper-and-pubself)."
msgstr ""
"Consulta el libro [Rust Reference](https://doc.rust-lang.org/reference/"
"visibility-and-privacy.html#pubin-path-pubcrate-pubsuper-and-pubself)."

#: src/modules/visibility.md
msgid "Configuring `pub(crate)` visibility is a common pattern."
msgstr "Configurar la visibilidad de `pub(crate)` es un patr√≥n com√∫n."

#: src/modules/visibility.md
msgid "Less commonly, you can give visibility to a specific path."
msgstr ""
"Aunque es menos frecuente, se puede dar visibilidad a una ruta espec√≠fica."

#: src/modules/visibility.md
msgid ""
"In any case, visibility must be granted to an ancestor module (and all of "
"its descendants)."
msgstr ""
"En cualquier caso, se debe dar visibilidad a un m√≥dulo antecedente (y a "
"todos sus descendientes)."

#: src/modules/paths.md
msgid "use, super, self"
msgstr ""

#: src/modules/paths.md
msgid ""
"A module can bring symbols from another module into scope with `use`. You "
"will typically see something like this at the top of each module:"
msgstr ""
"Un m√≥dulo puede incluir s√≠mbolos de otro m√≥dulo en el √°mbito con `use`. "
"Normalmente, se ve algo como esto en la parte superior de cada m√≥dulo:"

#: src/modules/paths.md
msgid "Paths"
msgstr "Rutas"

#: src/modules/paths.md
msgid "Paths are resolved as follows:"
msgstr "Las rutas se resuelven de la siguiente manera:"

#: src/modules/paths.md
msgid "As a relative path:"
msgstr "Como ruta relativa:"

#: src/modules/paths.md
msgid "`foo` or `self::foo` refers to `foo` in the current module,"
msgstr "`foo` o `self::foo` hacen referencia a `foo` en el m√≥dulo."

#: src/modules/paths.md
msgid "`super::foo` refers to `foo` in the parent module."
msgstr "`super::foo` hace referencia a `foo` en el m√≥dulo superior."

#: src/modules/paths.md
msgid "As an absolute path:"
msgstr "Como ruta absoluta:"

#: src/modules/paths.md
msgid "`crate::foo` refers to `foo` in the root of the current crate,"
msgstr "`crate::foo` hace referencia a `foo` en la ra√≠z del crate."

#: src/modules/paths.md
msgid "`bar::foo` refers to `foo` in the `bar` crate."
msgstr "`bar::foo` hace referencia a `foo` en el crate `bar`."

#: src/modules/paths.md
msgid ""
"It is common to \"re-export\" symbols at a shorter path. For example, the "
"top-level `lib.rs` in a crate might have"
msgstr ""

#: src/modules/paths.md
msgid ""
"making `DiskStorage` and `NetworkStorage` available to other crates with a "
"convenient, short path."
msgstr ""

#: src/modules/paths.md
msgid ""
"For the most part, only items that appear in a module need to be `use`'d. "
"However, a trait must be in scope to call any methods on that trait, even if "
"a type implementing that trait is already in scope. For example, to use the "
"`read_to_string` method on a type implementing the `Read` trait, you need to "
"`use std::io::Read`."
msgstr ""

#: src/modules/paths.md
msgid ""
"The `use` statement can have a wildcard: `use std::io::*`. This is "
"discouraged because it is not clear which items are imported, and those "
"might change over time."
msgstr ""

#: src/modules/exercise.md
msgid ""
"In this exercise, you will reorganize a small GUI Library implementation. "
"This library defines a `Widget` trait and a few implementations of that "
"trait, as well as a `main` function."
msgstr ""

#: src/modules/exercise.md
msgid ""
"It is typical to put each type or set of closely-related types into its own "
"module, so each widget type should get its own module."
msgstr ""

#: src/modules/exercise.md
#, fuzzy
msgid "Cargo Setup"
msgstr "Configurar"

#: src/modules/exercise.md
msgid ""
"The Rust playground only supports one file, so you will need to make a Cargo "
"project on your local filesystem:"
msgstr ""

#: src/modules/exercise.md
msgid ""
"Edit the resulting `src/main.rs` to add `mod` statements, and add additional "
"files in the `src` directory."
msgstr ""

#: src/modules/exercise.md
msgid "Source"
msgstr ""

#: src/modules/exercise.md
msgid "Here's the single-module implementation of the GUI library:"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "/// Natural width of `self`.\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "/// Draw the widget into a buffer.\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "/// Draw the widget on standard output.\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"{buffer}\""
msgstr ""

#: src/modules/exercise.md
msgid "// Add 4 paddings for borders\n"
msgstr ""

#: src/modules/exercise.md
msgid ""
"// TODO: Change draw_into to return Result<(), std::fmt::Error>. Then use "
"the\n"
"        // ?-operator here instead of .unwrap().\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"+-{:-<inner_width$}-+\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md src/testing/unit-tests.md
#: src/testing/solution.md
msgid "\"\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"| {:^inner_width$} |\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"+={:=<inner_width$}=+\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"| {:inner_width$} |\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "// add a bit of padding\n"
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"+{:-<width$}+\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"|{:^width$}|\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"Rust GUI Demo 1.23\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"This is a small text GUI demo.\""
msgstr ""

#: src/modules/exercise.md src/modules/solution.md
msgid "\"Click me!\""
msgstr ""

#: src/modules/exercise.md
msgid ""
"Encourage students to divide the code in a way that feels natural for them, "
"and get accustomed to the required `mod`, `use`, and `pub` declarations. "
"Afterward, discuss what organizations are most idiomatic."
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets/label.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Label-width\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR: Label-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Label-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets/button.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Button-width\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR: Button-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Button-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/widgets/window.rs ----\n"
msgstr ""

#: src/modules/solution.md
msgid ""
"// ANCHOR_END: Window-width\n"
"        // Add 4 paddings for borders\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR: Window-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid "// ANCHOR_END: Window-draw_into\n"
msgstr ""

#: src/modules/solution.md
msgid ""
"// TODO: after learning about error handling, you can change\n"
"        // draw_into to return Result<(), std::fmt::Error>. Then use\n"
"        // the ?-operator here instead of .unwrap().\n"
msgstr ""

#: src/modules/solution.md
msgid "// ---- src/main.rs ----\n"
msgstr ""

#: src/testing.md
msgid "[Test Modules](./testing/unit-tests.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Other Types of Tests](./testing/other.md) (10 minutes)"
msgstr ""

#: src/testing.md
msgid "[Useful Crates](./testing/useful-crates.md) (3 minutes)"
msgstr ""

#: src/testing.md
msgid "[GoogleTest](./testing/googletest.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Mocking](./testing/mocking.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Compiler Lints and Clippy](./testing/lints.md) (5 minutes)"
msgstr ""

#: src/testing.md
msgid "[Exercise: Luhn Algorithm](./testing/exercise.md) (30 minutes)"
msgstr ""

#: src/testing/unit-tests.md
msgid "Unit Tests"
msgstr "Pruebas Unitarias"

#: src/testing/unit-tests.md
msgid "Rust and Cargo come with a simple unit test framework:"
msgstr "Rust y Cargo incluyen un sencillo framework para pruebas unitarias:"

#: src/testing/unit-tests.md
msgid "Unit tests are supported throughout your code."
msgstr "Las pruebas unitarias se admiten en todo el c√≥digo."

#: src/testing/unit-tests.md
msgid "Integration tests are supported via the `tests/` directory."
msgstr ""
"Las pruebas de integraci√≥n se admiten a trav√©s del directorio `tests/`."

#: src/testing/unit-tests.md
msgid ""
"Tests are marked with `#[test]`. Unit tests are often put in a nested "
"`tests` module, using `#[cfg(test)]` to conditionally compile them only when "
"building tests."
msgstr ""

#: src/testing/unit-tests.md
#, fuzzy
msgid "\"Hello World\""
msgstr "¬°Hola, mundo!"

#: src/testing/unit-tests.md
msgid "This lets you unit test private helpers."
msgstr "Esto permite realizar pruebas unitarias de los ayudantes privados."

#: src/testing/unit-tests.md
msgid "The `#[cfg(test)]` attribute is only active when you run `cargo test`."
msgstr ""
"El atributo `#[cfg(test)]` solo est√° activo cuando se ejecuta `cargo test`."

#: src/testing/unit-tests.md
msgid "Run the tests in the playground in order to show their results."
msgstr ""

#: src/testing/other.md
msgid "Integration Tests"
msgstr "Pruebas de Integraci√≥n"

#: src/testing/other.md
msgid "If you want to test your library as a client, use an integration test."
msgstr ""
"Si quieres probar tu biblioteca como cliente, haz una prueba de integraci√≥n."

#: src/testing/other.md
msgid "Create a `.rs` file under `tests/`:"
msgstr "Crea un archivo `.rs` en `tests/`:"

#: src/testing/other.md
msgid "// tests/my_library.rs\n"
msgstr ""

#: src/testing/other.md
msgid "These tests only have access to the public API of your crate."
msgstr "Estas pruebas solo tienen acceso a la API p√∫blica de tu crate."

#: src/testing/other.md
msgid "Documentation Tests"
msgstr "Pruebas de Documentaci√≥n"

#: src/testing/other.md
msgid "Rust has built-in support for documentation tests:"
msgstr "Rust cuenta con asistencia integrada para pruebas de documentaci√≥n:"

#: src/testing/other.md
msgid ""
"/// Shortens a string to the given length.\n"
"///\n"
"/// ```\n"
"/// # use playground::shorten_string;\n"
"/// assert_eq!(shorten_string(\"Hello World\", 5), \"Hello\");\n"
"/// assert_eq!(shorten_string(\"Hello World\", 20), \"Hello World\");\n"
"/// ```\n"
msgstr ""

#: src/testing/other.md
msgid "Code blocks in `///` comments are automatically seen as Rust code."
msgstr ""
"Los bloques de c√≥digo en los comentarios `///` se ven autom√°ticamente como "
"c√≥digo de Rust."

#: src/testing/other.md
msgid "The code will be compiled and executed as part of `cargo test`."
msgstr "El c√≥digo se compilar√° y ejecutar√° como parte de `cargo test`."

#: src/testing/other.md
msgid ""
"Adding `#` in the code will hide it from the docs, but will still compile/"
"run it."
msgstr ""

#: src/testing/other.md
msgid ""
"Test the above code on the [Rust Playground](https://play.rust-lang.org/?"
"version=stable&mode=debug&edition=2021&gist=3ce2ad13ea1302f6572cb15cd96becf0)."
msgstr ""
"Prueba el c√≥digo anterior en el [playground de Rust](https://play.rust-lang."
"org/?"
"version=stable&mode=debug&edition=2021&gist=3ce2ad13ea1302f6572cb15cd96becf0)."

#: src/testing/useful-crates.md
msgid "Rust comes with only basic support for writing tests."
msgstr "Rust solo incluye asistencia b√°sica para las pruebas de escritura."

#: src/testing/useful-crates.md
msgid "Here are some additional crates which we recommend for writing tests:"
msgstr ""
"A continuaci√≥n, se indican algunos crates adicionales que recomendamos para "
"escribir pruebas:"

#: src/testing/useful-crates.md
msgid ""
"[googletest](https://docs.rs/googletest): Comprehensive test assertion "
"library in the tradition of GoogleTest for C++."
msgstr ""
"[googletest](https://docs.rs/googletest): biblioteca completa de aserci√≥n de "
"pruebas en la tradici√≥n de GoogleTest para C++."

#: src/testing/useful-crates.md
msgid "[proptest](https://docs.rs/proptest): Property-based testing for Rust."
msgstr ""
"[proptest](https://docs.rs/proptest): pruebas basadas en propiedades para "
"Rust."

#: src/testing/useful-crates.md
msgid ""
"[rstest](https://docs.rs/rstest): Support for fixtures and parameterised "
"tests."
msgstr ""
"[rstest](https://docs.rs/rstest): asistencia para _fixtures_ y pruebas "
"parametrizadas."

#: src/testing/googletest.md
#, fuzzy
msgid ""
"The [GoogleTest](https://docs.rs/googletest/) crate allows for flexible test "
"assertions using _matchers_:"
msgstr ""
"[googletest](https://docs.rs/googletest): biblioteca completa de aserci√≥n de "
"pruebas en la tradici√≥n de GoogleTest para C++."

#: src/testing/googletest.md
msgid "\"baz\""
msgstr ""

#: src/testing/googletest.md
msgid "\"xyz\""
msgstr ""

#: src/testing/googletest.md
msgid ""
"If we change the last element to `\"!\"`, the test fails with a structured "
"error message pin-pointing the error:"
msgstr ""

#: src/testing/googletest.md
msgid ""
"GoogleTest is not part of the Rust Playground, so you need to run this "
"example in a local environment. Use `cargo add googletest` to quickly add it "
"to an existing Cargo project."
msgstr ""

#: src/testing/googletest.md
msgid ""
"The `use googletest::prelude::*;` line imports a number of [commonly used "
"macros and types](https://docs.rs/googletest/latest/googletest/prelude/index."
"html)."
msgstr ""

#: src/testing/googletest.md
msgid "This just scratches the surface, there are many builtin matchers."
msgstr ""

#: src/testing/googletest.md
msgid ""
"A particularly nice feature is that mismatches in multi-line strings strings "
"are shown as a diff:"
msgstr ""

#: src/testing/googletest.md
msgid ""
"\"Memory safety found,\\n\\\n"
"                 Rust's strong typing guides the way,\\n\\\n"
"                 Secure code you'll write.\""
msgstr ""

#: src/testing/googletest.md
msgid ""
"\"Memory safety found,\\n\\\n"
"            Rust's silly humor guides the way,\\n\\\n"
"            Secure code you'll write.\""
msgstr ""

#: src/testing/googletest.md
msgid "shows a color-coded diff (colors not shown here):"
msgstr ""

#: src/testing/googletest.md
msgid ""
"The crate is a Rust port of [GoogleTest for C++](https://google.github.io/"
"googletest/)."
msgstr ""

#: src/testing/googletest.md
msgid "GoogleTest is available for use in AOSP."
msgstr ""

#: src/testing/mocking.md
msgid ""
"For mocking, [Mockall](https://docs.rs/mockall/) is a widely used library. "
"You need to refactor your code to use traits, which you can then quickly "
"mock:"
msgstr ""

#: src/testing/mocking.md
msgid ""
"The advice here is for Android (AOSP) where Mockall is the recommended "
"mocking library. There are other [mocking libraries available on crates.io]"
"(https://crates.io/keywords/mock), in particular in the area of mocking HTTP "
"services. The other mocking libraries work in a similar fashion as Mockall, "
"meaning that they make it easy to get a mock implementation of a given trait."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Note that mocking is somewhat _controversial_: mocks allow you to completely "
"isolate a test from its dependencies. The immediate result is faster and "
"more stable test execution. On the other hand, the mocks can be configured "
"wrongly and return output different from what the real dependencies would do."
msgstr ""

#: src/testing/mocking.md
msgid ""
"If at all possible, it is recommended that you use the real dependencies. As "
"an example, many databases allow you to configure an in-memory backend. This "
"means that you get the correct behavior in your tests, plus they are fast "
"and will automatically clean up after themselves."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Similarly, many web frameworks allow you to start an in-process server which "
"binds to a random port on `localhost`. Always prefer this over mocking away "
"the framework since it helps you test your code in the real environment."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Mockall is not part of the Rust Playground, so you need to run this example "
"in a local environment. Use `cargo add mockall` to quickly add Mockall to an "
"existing Cargo project."
msgstr ""

#: src/testing/mocking.md
msgid ""
"Mockall has a lot more functionality. In particular, you can set up "
"expectations which depend on the arguments passed. Here we use this to mock "
"a cat which becomes hungry 3 hours after the last time it was fed:"
msgstr ""

#: src/testing/mocking.md
msgid ""
"You can use `.times(n)` to limit the number of times a mock method can be "
"called to `n` --- the mock will automatically panic when dropped if this "
"isn't satisfied."
msgstr ""

#: src/testing/lints.md
msgid ""
"The Rust compiler produces fantastic error messages, as well as helpful "
"built-in lints. [Clippy](https://doc.rust-lang.org/clippy/) provides even "
"more lints, organized into groups that can be enabled per-project."
msgstr ""

#: src/testing/lints.md
msgid "\"X probably fits in a u16, right? {}\""
msgstr ""

#: src/testing/lints.md
msgid ""
"Run the code sample and examine the error message. There are also lints "
"visible here, but those will not be shown once the code compiles. Switch to "
"the Playground site to show those lints."
msgstr ""

#: src/testing/lints.md
msgid ""
"After resolving the lints, run `clippy` on the playground site to show "
"clippy warnings. Clippy has extensive documentation of its lints, and adds "
"new lints (including default-deny lints) all the time."
msgstr ""

#: src/testing/lints.md
msgid ""
"Note that errors or warnings with `help: ...` can be fixed with `cargo fix` "
"or via your editor."
msgstr ""

#: src/testing/exercise.md
msgid "Luhn Algorithm"
msgstr "Algoritmo de Luhn"

#: src/testing/exercise.md
msgid ""
"The [Luhn algorithm](https://en.wikipedia.org/wiki/Luhn_algorithm) is used "
"to validate credit card numbers. The algorithm takes a string as input and "
"does the following to validate the credit card number:"
msgstr ""
"El [algoritmo de Luhn](https://es.wikipedia.org/wiki/Luhn_algorithm) se usa "
"para validar n√∫meros de tarjetas de cr√©dito. El algoritmo toma una cadena "
"como entrada y hace lo siguiente para validar el n√∫mero de la tarjeta de "
"cr√©dito:"

#: src/testing/exercise.md
msgid "Ignore all spaces. Reject number with less than two digits."
msgstr ""
"Ignora todos los espacios. Rechaza los n√∫meros con menos de dos d√≠gitos."

#: src/testing/exercise.md
msgid ""
"Moving from **right to left**, double every second digit: for the number "
"`1234`, we double `3` and `1`. For the number `98765`, we double `6` and `8`."
msgstr ""
"De derecha a izquierda, duplica cada dos cifras: en el caso del n√∫mero "
"`1234`, se duplica el `3` y el `1`. En el caso del n√∫mero `98765`, se "
"duplica el `6` y el `8`."

#: src/testing/exercise.md
msgid ""
"After doubling a digit, sum the digits if the result is greater than 9. So "
"doubling `7` becomes `14` which becomes `1 + 4 = 5`."
msgstr ""
"Despu√©s de duplicar un d√≠gito, se suman los d√≠gitos si el resultado es mayor "
"a 9. Por tanto, si duplicas `7`, pasar√° a ser `14`, lo cual pasar√° a ser `1 "
"+4 = 5`."

#: src/testing/exercise.md
msgid "Sum all the undoubled and doubled digits."
msgstr "Suma todos los d√≠gitos, no duplicados y duplicados."

#: src/testing/exercise.md
msgid "The credit card number is valid if the sum ends with `0`."
msgstr ""
"El n√∫mero de la tarjeta de cr√©dito es v√°lido si la suma termina en `0`."

#: src/testing/exercise.md
msgid ""
"The provided code provides a buggy implementation of the luhn algorithm, "
"along with two basic unit tests that confirm that most the algorithm is "
"implemented correctly."
msgstr ""

#: src/testing/exercise.md
#, fuzzy
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and write additional "
"tests to uncover bugs in the provided implementation, fixing any bugs you "
"find."
msgstr ""
"Copia el fragmento de c√≥digo que aparece m√°s abajo en la p√°gina <https://"
"play.rust-lang.org/> y rellena los m√©todos y funciones que faltan:"

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4263 9826 4026 9299\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4539 3195 0343 6467\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"7992 7398 713\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4223 9826 4026 9299\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"4539 3195 0343 6476\""
msgstr ""

#: src/testing/exercise.md src/testing/solution.md
msgid "\"8273 1232 7352 0569\""
msgstr ""

#: src/testing/solution.md
msgid "// This is the buggy version that appears in the problem.\n"
msgstr ""

#: src/testing/solution.md
msgid "// This is the solution and passes all of the tests below.\n"
msgstr ""

#: src/testing/solution.md
msgid "\"1234 5678 1234 5670\""
msgstr ""

#: src/testing/solution.md
msgid "\"Is {cc_number} a valid credit card number? {}\""
msgstr ""

#: src/testing/solution.md
msgid "\"yes\""
msgstr ""

#: src/testing/solution.md
msgid "\"no\""
msgstr ""

#: src/testing/solution.md
msgid "\"foo 0 0\""
msgstr ""

#: src/testing/solution.md
msgid "\" \""
msgstr ""

#: src/testing/solution.md
msgid "\"  \""
msgstr ""

#: src/testing/solution.md
msgid "\"    \""
msgstr ""

#: src/testing/solution.md
msgid "\"0\""
msgstr ""

#: src/testing/solution.md
msgid "\" 0 0 \""
msgstr ""

#: src/welcome-day-4-afternoon.md
msgid "[Error Handling](./error-handling.md) (45 minutes)"
msgstr ""

#: src/welcome-day-4-afternoon.md
msgid "[Unsafe Rust](./unsafe-rust.md) (1 hour and 5 minutes)"
msgstr ""

#: src/welcome-day-4-afternoon.md
msgid "Including 10 minute breaks, this session should take about 2 hours"
msgstr ""

#: src/error-handling.md
msgid "[Panics](./error-handling/panics.md) (3 minutes)"
msgstr ""

#: src/error-handling.md
msgid "[Try Operator](./error-handling/try.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid "[Try Conversions](./error-handling/try-conversions.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid "[Error Trait](./error-handling/error.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid ""
"[thiserror and anyhow](./error-handling/thiserror-and-anyhow.md) (5 minutes)"
msgstr ""

#: src/error-handling.md
msgid ""
"[Exercise: Rewriting with Result](./error-handling/exercise.md) (20 minutes)"
msgstr ""

#: src/error-handling/panics.md
msgid "Rust handles fatal errors with a \"panic\"."
msgstr ""

#: src/error-handling/panics.md
msgid "Rust will trigger a panic if a fatal error happens at runtime:"
msgstr "Rust activar√° un _panic_ si se produce un error grave en _runtime_:"

#: src/error-handling/panics.md
msgid "\"v[100]: {}\""
msgstr ""

#: src/error-handling/panics.md
msgid "Panics are for unrecoverable and unexpected errors."
msgstr "Los _panics_ se usan para errores irrecuperables e inesperados."

#: src/error-handling/panics.md
msgid "Panics are symptoms of bugs in the program."
msgstr "Los _panics_ son un s√≠ntoma de que hay fallos en el programa."

#: src/error-handling/panics.md
msgid "Runtime failures like failed bounds checks can panic"
msgstr ""

#: src/error-handling/panics.md
msgid "Assertions (such as `assert!`) panic on failure"
msgstr ""

#: src/error-handling/panics.md
msgid "Purpose-specific panics can use the `panic!` macro."
msgstr ""

#: src/error-handling/panics.md
msgid ""
"A panic will \"unwind\" the stack, dropping values just as if the functions "
"had returned."
msgstr ""

#: src/error-handling/panics.md
msgid ""
"Use non-panicking APIs (such as `Vec::get`) if crashing is not acceptable."
msgstr ""
"Utiliza API que no activen _panics_ (como `Vec::get`) si no se admiten "
"fallos."

#: src/error-handling/panics.md
msgid ""
"By default, a panic will cause the stack to unwind. The unwinding can be "
"caught:"
msgstr ""
"De forma predeterminada, el _panic_ har√° que la _stack_ se desenrolle. El "
"proceso de desenrrollado se puede detectar:"

#: src/error-handling/panics.md
msgid "\"No problem here!\""
msgstr ""

#: src/error-handling/panics.md
msgid "\"{result:?}\""
msgstr ""

#: src/error-handling/panics.md
msgid "\"oh no!\""
msgstr ""

#: src/error-handling/panics.md
msgid ""
"Catching is unusual; do not attempt to implement exceptions with "
"`catch_unwind`!"
msgstr ""

#: src/error-handling/panics.md
msgid ""
"This can be useful in servers which should keep running even if a single "
"request crashes."
msgstr ""
"Esto puede ser √∫til en los servidores que deben seguir ejecut√°ndose aunque "
"una sola solicitud falle."

#: src/error-handling/panics.md
msgid "This does not work if `panic = 'abort'` is set in your `Cargo.toml`."
msgstr "No funciona si `panic = 'abort'` est√° definido en `Cargo.toml`."

#: src/error-handling/try.md
msgid ""
"Runtime errors like connection-refused or file-not-found are handled with "
"the `Result` type, but matching this type on every call can be cumbersome. "
"The try-operator `?` is used to return errors to the caller. It lets you "
"turn the common"
msgstr ""

#: src/error-handling/try.md
msgid "into the much simpler"
msgstr "en algo mucho m√°s sencillo:"

#: src/error-handling/try.md
msgid "We can use this to simplify our error handling code:"
msgstr "Podemos utilizarlo para simplificar el c√≥digo de gesti√≥n de errores:"

#: src/error-handling/try.md
msgid "//fs::write(\"config.dat\", \"alice\").unwrap();\n"
msgstr ""

#: src/error-handling/try.md src/error-handling/try-conversions.md
#: src/error-handling/thiserror-and-anyhow.md
msgid "\"config.dat\""
msgstr ""

#: src/error-handling/try.md src/error-handling/try-conversions.md
msgid "\"username or error: {username:?}\""
msgstr ""

#: src/error-handling/try.md
msgid "Simplify the `read_username` function to use `?`."
msgstr ""

#: src/error-handling/try.md
msgid "The `username` variable can be either `Ok(string)` or `Err(error)`."
msgstr "La variable `username` puede ser `Ok(string)` o `Err(error)`."

#: src/error-handling/try.md
msgid ""
"Use the `fs::write` call to test out the different scenarios: no file, empty "
"file, file with username."
msgstr ""
"Utiliza la llamada a `fs::write` para probar las distintas situaciones: sin "
"archivo, archivo vac√≠o o archivo con nombre de usuario."

#: src/error-handling/try.md
msgid ""
"Note that `main` can return a `Result<(), E>` as long as it implements `std::"
"process:Termination`. In practice, this means that `E` implements `Debug`. "
"The executable will print the `Err` variant and return a nonzero exit status "
"on error."
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"The effective expansion of `?` is a little more complicated than previously "
"indicated:"
msgstr ""
"La expansi√≥n efectiva de `?` es un poco m√°s complicada de lo que se ha "
"indicado anteriormente:"

#: src/error-handling/try-conversions.md
msgid "works the same as"
msgstr "funciona igual que"

#: src/error-handling/try-conversions.md
#, fuzzy
msgid ""
"The `From::from` call here means we attempt to convert the error type to the "
"type returned by the function. This makes it easy to encapsulate errors into "
"higher-level errors."
msgstr ""
"Aqu√≠ la llamada a `From::from` significa que intentamos convertir el tipo de "
"error al tipo que devuelve la funci√≥n:"

#: src/error-handling/try-conversions.md
msgid "\"IO error: {e}\""
msgstr ""

#: src/error-handling/try-conversions.md
msgid "\"Found no username in {path}\""
msgstr ""

#: src/error-handling/try-conversions.md
#: src/error-handling/thiserror-and-anyhow.md
msgid "//fs::write(\"config.dat\", \"\").unwrap();\n"
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"The `?` operator must return a value compatible with the return type of the "
"function. For `Result`, it means that the error types have to be compatible. "
"A function that returns `Result<T, ErrorOuter>` can only use `?` on a value "
"of type `Result<U, ErrorInner>` if `ErrorOuter` and `ErrorInner` are the "
"same type or if `ErrorOuter` implements `From<ErrorInner>`."
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"A common alternative to a `From` implementation is `Result::map_err`, "
"especially when the conversion only happens in one place."
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"There is no compatibility requirement for `Option`. A function returning "
"`Option<T>` can use the `?` operator on `Option<U>` for arbitrary `T` and "
"`U` types."
msgstr ""

#: src/error-handling/try-conversions.md
msgid ""
"A function that returns `Result` cannot use `?` on `Option` and vice versa. "
"However, `Option::ok_or` converts `Option` to `Result` whereas `Result::ok` "
"turns `Result` into `Option`."
msgstr ""

#: src/error-handling/error.md
msgid "Dynamic Error Types"
msgstr "Tipos de Errores Din√°micos"

#: src/error-handling/error.md
#, fuzzy
msgid ""
"Sometimes we want to allow any type of error to be returned without writing "
"our own enum covering all the different possibilities. The `std::error::"
"Error` trait makes it easy to create a trait object that can contain any "
"error."
msgstr ""
"A veces, queremos permitir que se devuelva cualquier tipo de error sin "
"escribir nuestra propia _enum_ que cubra todas las posibilidades. `std::"
"error::Error` facilita este proceso."

#: src/error-handling/error.md
msgid "\"count.dat\""
msgstr ""

#: src/error-handling/error.md
msgid "\"1i3\""
msgstr ""

#: src/error-handling/error.md
msgid "\"Count: {count}\""
msgstr ""

#: src/error-handling/error.md
msgid "\"Error: {err}\""
msgstr ""

#: src/error-handling/error.md
msgid ""
"The `read_count` function can return `std::io::Error` (from file operations) "
"or `std::num::ParseIntError` (from `String::parse`)."
msgstr ""

#: src/error-handling/error.md
#, fuzzy
msgid ""
"Boxing errors saves on code, but gives up the ability to cleanly handle "
"different error cases differently in the program. As such it's generally not "
"a good idea to use `Box<dyn Error>` in the public API of a library, but it "
"can be a good option in a program where you just want to display the error "
"message somewhere."
msgstr ""
"Esto permite ahorrar c√≥digo, pero no da la posibilidad de gestionar "
"eficazmente los distintos casos de error en el programa. Por lo general, no "
"es una buena idea utilizar `Box<dyn Error>` en la API p√∫blica de una "
"biblioteca, pero puede ser una buena opci√≥n en un programa en el que solo "
"quieras mostrar el mensaje de error en alguna parte."

#: src/error-handling/error.md
msgid ""
"Make sure to implement the `std::error::Error` trait when defining a custom "
"error type so it can be boxed. But if you need to support the `no_std` "
"attribute, keep in mind that the `std::error::Error` trait is currently "
"compatible with `no_std` in [nightly](https://github.com/rust-lang/rust/"
"issues/103765) only."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid ""
"The [`thiserror`](https://docs.rs/thiserror/) and [`anyhow`](https://docs.rs/"
"anyhow/) crates are widely used to simplify error handling."
msgstr ""
"Uno de los m√©todos m√°s populares para crear una _enum_ (enumeraci√≥n) de "
"errores es el crate [thiserror](https://docs.rs/thiserror/), como hicimos en "
"la p√°gina anterior:"

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"`thiserror` is often used in libraries to create custom error types that "
"implement `From<T>`."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"`anyhow` is often used by applications to help with error handling in "
"functions, including adding contextual information to your errors."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Found no username in {0}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Failed to open {path}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Failed to read\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Username: {username}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "\"Error: {err:?}\""
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
#, fuzzy
msgid "`thiserror`"
msgstr "`Error`"

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"The `Error` derive macro is provided by `thiserror`, and has lots of useful "
"attributes to help define error types in a compact way."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "The `std::error::Error` trait is derived automatically."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "The message from `#[error]` is used to derive the `Display` trait."
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid "`anyhow`"
msgstr ""

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"`anyhow::Error` is essentially a wrapper around `Box<dyn Error>`. As such "
"it's again generally not a good choice for the public API of a library, but "
"is widely used in applications."
msgstr ""
"`anyhow::Error` es b√°sicamente un envoltorio alrededor de `Box<dyn Error>`. "
"Como tal, no suele ser una buena elecci√≥n para la API p√∫blica de una "
"biblioteca, pero se usa con frecuencia en aplicaciones."

#: src/error-handling/thiserror-and-anyhow.md
msgid "`anyhow::Result<V>` is a type alias for `Result<V, anyhow::Error>`."
msgstr ""
"`anyhow::Result<V>` es un alias de tipo para `Result<V, anyhow::Error>`."

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"Actual error type inside of it can be extracted for examination if necessary."
msgstr ""
"El tipo de error real que contiene se puede extraer para analizarlo si es "
"necesario."

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"Functionality provided by `anyhow::Result<T>` may be familiar to Go "
"developers, as it provides similar usage patterns and ergonomics to `(T, "
"error)` from Go."
msgstr ""
"La funcionalidad proporcionada por `anyhow::Result<T>` puede resultar "
"familiar a los desarrolladores de Go, ya que ofrece patrones de uso y "
"ergonom√≠a similares a `(T, error)` de Go."

#: src/error-handling/thiserror-and-anyhow.md
msgid ""
"`anyhow::Context` is a trait implemented for the standard `Result` and "
"`Option` types. `use anyhow::Context` is necessary to enable `.context()` "
"and `.with_context()` on those types."
msgstr ""

#: src/error-handling/exercise.md
msgid "Exercise: Rewriting with Result"
msgstr ""

#: src/error-handling/exercise.md
msgid ""
"The following implements a very simple parser for an expression language. "
"However, it handles errors by panicking. Rewrite it to instead use idiomatic "
"error handling and propagate errors to a return from `main`. Feel free to "
"use `thiserror` and `anyhow`."
msgstr ""

#: src/error-handling/exercise.md
msgid ""
"HINT: start by fixing error handling in the `parse` function. Once that is "
"working correctly, update `Tokenizer` to implement "
"`Iterator<Item=Result<Token, TokenizerError>>` and handle that in the parser."
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// An arithmetic operator.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A token in the expression language.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// An expression in the expression language.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A reference to a variable.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A literal number.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "/// A binary operation.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'z'"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'_'"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'+'"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "'-'"
msgstr ""

#: src/error-handling/exercise.md
msgid "\"Unexpected character {c}\""
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "\"Unexpected end of input\""
msgstr ""

#: src/error-handling/exercise.md
msgid "\"Invalid 32-bit integer'\""
msgstr ""

#: src/error-handling/exercise.md
msgid "\"Unexpected token {tok:?}\""
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "// Look ahead to parse a binary operation if present.\n"
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "\"10+foo+20-30\""
msgstr ""

#: src/error-handling/exercise.md src/error-handling/solution.md
msgid "\"{expr:?}\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Unexpected character '{0}' in input\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Tokenizer error: {0}\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Unexpected token {0:?}\""
msgstr ""

#: src/error-handling/solution.md
msgid "\"Invalid number\""
msgstr ""

#: src/unsafe-rust.md
msgid "[Unsafe](./unsafe-rust/unsafe.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid ""
"[Dereferencing Raw Pointers](./unsafe-rust/dereferencing.md) (10 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Mutable Static Variables](./unsafe-rust/mutable-static.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Unions](./unsafe-rust/unions.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Unsafe Functions](./unsafe-rust/unsafe-functions.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Unsafe Traits](./unsafe-rust/unsafe-traits.md) (5 minutes)"
msgstr ""

#: src/unsafe-rust.md
msgid "[Exercise: FFI Wrapper](./unsafe-rust/exercise.md) (30 minutes)"
msgstr ""

#: src/unsafe-rust/unsafe.md
msgid "The Rust language has two parts:"
msgstr "El lenguaje Rust tiene dos partes:"

#: src/unsafe-rust/unsafe.md
msgid "**Safe Rust:** memory safe, no undefined behavior possible."
msgstr ""
"**_Safe_ Rust:** memoria segura, sin posibilidad de comportamiento "
"indefinido."

#: src/unsafe-rust/unsafe.md
msgid ""
"**Unsafe Rust:** can trigger undefined behavior if preconditions are "
"violated."
msgstr ""
"**_Unsafe_ Rust:** puede activar un comportamiento no definido si se "
"infringen las condiciones previas."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid ""
"We saw mostly safe Rust in this course, but it's important to know what "
"Unsafe Rust is."
msgstr ""
"En este curso, casi todo lo que veremos es _Safe_ Rust, aunque es importante "
"saber qu√© es _Unsafe_ Rust."

#: src/unsafe-rust/unsafe.md
msgid ""
"Unsafe code is usually small and isolated, and its correctness should be "
"carefully documented. It is usually wrapped in a safe abstraction layer."
msgstr ""
"Por lo general, el c√≥digo inseguro es peque√±o y est√° aislado, y su "
"correcci√≥n debe estar bien documentada. Suele estar envuelto en una capa de "
"abstracci√≥n segura."

#: src/unsafe-rust/unsafe.md
msgid "Unsafe Rust gives you access to five new capabilities:"
msgstr "Rust inseguro te permite acceder a cinco nuevas funciones:"

#: src/unsafe-rust/unsafe.md
msgid "Dereference raw pointers."
msgstr "Desreferenciar punteros sin formato."

#: src/unsafe-rust/unsafe.md
msgid "Access or modify mutable static variables."
msgstr "Acceder o modificar variables est√°ticas mutables."

#: src/unsafe-rust/unsafe.md
msgid "Access `union` fields."
msgstr "Acceder a los campos `union`."

#: src/unsafe-rust/unsafe.md
msgid "Call `unsafe` functions, including `extern` functions."
msgstr "Llamar a funciones `unsafe`, incluidas las funciones `extern`."

#: src/unsafe-rust/unsafe.md
msgid "Implement `unsafe` traits."
msgstr "Implementar traits `unsafe`."

#: src/unsafe-rust/unsafe.md
msgid ""
"We will briefly cover unsafe capabilities next. For full details, please see "
"[Chapter 19.1 in the Rust Book](https://doc.rust-lang.org/book/ch19-01-"
"unsafe-rust.html) and the [Rustonomicon](https://doc.rust-lang.org/nomicon/)."
msgstr ""
"A continuaci√≥n, hablaremos brevemente sobre las funciones que no son "
"seguras. Para obtener m√°s informaci√≥n, consulta el [cap√≠tulo 19.1 del Libro "
"de Rust](https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html) y el "
"documento [Rustonomicon](https://doc.rust-lang.org/nomicon/)."

#: src/unsafe-rust/unsafe.md
#, fuzzy
msgid ""
"Unsafe Rust does not mean the code is incorrect. It means that developers "
"have turned off some compiler safety features and have to write correct code "
"by themselves. It means the compiler no longer enforces Rust's memory-safety "
"rules."
msgstr ""
"_Unsafe_ Rust no significa que el c√≥digo sea incorrecto. Significa que los "
"desarrolladores han desactivado las funciones de seguridad del compilador y "
"que tienen que escribir el c√≥digo correcto por su cuenta. Significa que el "
"compilador ya no aplica las reglas de seguridad de memoria de Rust."

#: src/unsafe-rust/dereferencing.md
msgid "Creating pointers is safe, but dereferencing them requires `unsafe`:"
msgstr ""
"La creaci√≥n de punteros es un proceso seguro, pero para anular las "
"referencias, es necesario utilizar `unsafe`:"

#: src/unsafe-rust/dereferencing.md
msgid "\"careful!\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid ""
"// Safe because r1 and r2 were obtained from references and so are\n"
"    // guaranteed to be non-null and properly aligned, the objects "
"underlying\n"
"    // the references from which they were obtained are live throughout the\n"
"    // whole unsafe block, and they are not accessed either through the\n"
"    // references or concurrently through any other pointers.\n"
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid "\"r1 is: {}\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid "\"uhoh\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid "\"r2 is: {}\""
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid ""
"// NOT SAFE. DO NOT DO THIS.\n"
"    /*\n"
"    let r3: &String = unsafe { &*r1 };\n"
"    drop(s);\n"
"    println!(\"r3 is: {}\", *r3);\n"
"    */"
msgstr ""

#: src/unsafe-rust/dereferencing.md
msgid ""
"It is good practice (and required by the Android Rust style guide) to write "
"a comment for each `unsafe` block explaining how the code inside it "
"satisfies the safety requirements of the unsafe operations it is doing."
msgstr ""
"Se recomienda (y es obligatorio en la gu√≠a de estilo Rust de Android) "
"escribir un comentario para cada bloque `unsafe` explicando c√≥mo el c√≥digo "
"que contiene cumple los requisitos de seguridad de las operaciones inseguras "
"que realiza."

#: src/unsafe-rust/dereferencing.md
msgid ""
"In the case of pointer dereferences, this means that the pointers must be "
"[_valid_](https://doc.rust-lang.org/std/ptr/index.html#safety), i.e.:"
msgstr ""
"En el caso de la desreferenciaci√≥n de punteros, significa que los punteros "
"deben ser [_v√°lidos_](https://doc.rust-lang.org/std/ptr/index.html#safety), "
"por ejemplo:"

#: src/unsafe-rust/dereferencing.md
msgid "The pointer must be non-null."
msgstr "El puntero no puede ser nulo."

#: src/unsafe-rust/dereferencing.md
msgid ""
"The pointer must be _dereferenceable_ (within the bounds of a single "
"allocated object)."
msgstr ""
"El puntero debe ser _desreferenciable_ (dentro de los l√≠mites de un √∫nico "
"objeto asignado)."

#: src/unsafe-rust/dereferencing.md
msgid "The object must not have been deallocated."
msgstr "El objeto no debe haberse desasignado."

#: src/unsafe-rust/dereferencing.md
msgid "There must not be concurrent accesses to the same location."
msgstr "No debe haber accesos simult√°neos a la misma ubicaci√≥n."

#: src/unsafe-rust/dereferencing.md
msgid ""
"If the pointer was obtained by casting a reference, the underlying object "
"must be live and no reference may be used to access the memory."
msgstr ""
"Si el puntero se ha obtenido enviando una referencia, el objeto subyacente "
"debe estar activo y no puede utilizarse ninguna referencia para acceder a la "
"memoria."

#: src/unsafe-rust/dereferencing.md
msgid "In most cases the pointer must also be properly aligned."
msgstr ""
"En la mayor√≠a de los casos, el puntero tambi√©n debe estar alineado "
"adecuadamente."

#: src/unsafe-rust/dereferencing.md
msgid ""
"The \"NOT SAFE\" section gives an example of a common kind of UB bug: `*r1` "
"has the `'static` lifetime, so `r3` has type `&'static String`, and thus "
"outlives `s`. Creating a reference from a pointer requires _great care_."
msgstr ""

#: src/unsafe-rust/mutable-static.md
msgid "It is safe to read an immutable static variable:"
msgstr "Es seguro leer una variable est√°tica inmutable:"

#: src/unsafe-rust/mutable-static.md
#, fuzzy
msgid "\"Hello, world!\""
msgstr "¬°Hola, mundo!"

#: src/unsafe-rust/mutable-static.md
msgid "\"HELLO_WORLD: {HELLO_WORLD}\""
msgstr ""

#: src/unsafe-rust/mutable-static.md
msgid ""
"However, since data races can occur, it is unsafe to read and write mutable "
"static variables:"
msgstr ""
"Sin embargo, dado que pueden producirse carreras de datos, no es seguro leer "
"y escribir variables est√°ticas mutables:"

#: src/unsafe-rust/mutable-static.md
msgid "\"COUNTER: {COUNTER}\""
msgstr ""

#: src/unsafe-rust/mutable-static.md
msgid ""
"The program here is safe because it is single-threaded. However, the Rust "
"compiler is conservative and will assume the worst. Try removing the "
"`unsafe` and see how the compiler explains that it is undefined behavior to "
"mutate a static from multiple threads."
msgstr ""

#: src/unsafe-rust/mutable-static.md
msgid ""
"Using a mutable static is generally a bad idea, but there are some cases "
"where it might make sense in low-level `no_std` code, such as implementing a "
"heap allocator or working with some C APIs."
msgstr ""
"No suele ser buena idea usar una variable est√°tica mutable, pero en algunos "
"casos puede encajar en c√≥digo `no_std` de bajo nivel, como implementar una "
"asignaci√≥n de _heap_ o trabajar con algunas APIs C."

#: src/unsafe-rust/unions.md
msgid "Unions are like enums, but you need to track the active field yourself:"
msgstr ""
"Las uniones son como _enums_ (enumeraciones), pero eres t√∫ quien debe hacer "
"el seguimiento del campo activo:"

#: src/unsafe-rust/unions.md
msgid "\"int: {}\""
msgstr ""

#: src/unsafe-rust/unions.md
msgid "\"bool: {}\""
msgstr ""

#: src/unsafe-rust/unions.md
#, fuzzy
msgid "// Undefined behavior!\n"
msgstr "No hay comportamientos indefinidos en _runtime_:"

#: src/unsafe-rust/unions.md
msgid ""
"Unions are very rarely needed in Rust as you can usually use an enum. They "
"are occasionally needed for interacting with C library APIs."
msgstr ""
"Las uniones raramente son necesarias en Rust, ya que se suele utilizar una "
"_enum_. A veces se necesitan para interactuar con APIs de biblioteca C."

#: src/unsafe-rust/unions.md
msgid ""
"If you just want to reinterpret bytes as a different type, you probably want "
"[`std::mem::transmute`](https://doc.rust-lang.org/stable/std/mem/fn."
"transmute.html) or a safe wrapper such as the [`zerocopy`](https://crates.io/"
"crates/zerocopy) crate."
msgstr ""
"Si solo quieres reinterpretar los bytes como otro tipo, probablemente te "
"interese [`std::mem::transmute`](https://doc.rust-lang.org/stable/std/mem/fn."
"transmute.html) o una envoltura segura, como el crate [`zerocopy`](https://"
"crates.io/crates/zerocopy)."

#: src/unsafe-rust/unsafe-functions.md
msgid "Calling Unsafe Functions"
msgstr "Llamar Funciones Unsafe (Inseguras)"

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"A function or method can be marked `unsafe` if it has extra preconditions "
"you must uphold to avoid undefined behaviour:"
msgstr ""
"Una funci√≥n o m√©todo se puede marcar como `unsafe` si tiene condiciones "
"previas adicionales que debes mantener para evitar un comportamiento "
"indefinido:"

#: src/unsafe-rust/unsafe-functions.md src/unsafe-rust/exercise.md
#: src/unsafe-rust/solution.md src/android/interoperability/with-c.md
#: src/android/interoperability/with-c/rust.md
#: src/android/interoperability/cpp/cpp-bridge.md
#: src/exercises/chromium/build-rules.md src/bare-metal/aps/inline-assembly.md
#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"C\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"üóª‚ààüåè\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"// Safe because the indices are in the correct order, within the bounds of\n"
"    // the string slice, and lie on UTF-8 sequence boundaries.\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"emoji: {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"char count: {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid "// Undefined behavior if abs misbehaves.\n"
msgstr "No hay comportamientos indefinidos en _runtime_:"

#: src/unsafe-rust/unsafe-functions.md
msgid "\"Absolute value of -3 according to C: {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"// Not upholding the UTF-8 encoding requirement breaks memory safety!\n"
"    // println!(\"emoji: {}\", unsafe { emojis.get_unchecked(0..3) });\n"
"    // println!(\"char count: {}\", count_chars(unsafe {\n"
"    // emojis.get_unchecked(0..3) }));\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "Writing Unsafe Functions"
msgstr "Escribir Funciones Unsafe (Inseguras)"

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"You can mark your own functions as `unsafe` if they require particular "
"conditions to avoid undefined behaviour."
msgstr ""
"Puedes marcar tus propias funciones como `unsafe` si requieren condiciones "
"concretas para evitar un comportamiento indefinido."

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"/// Swaps the values pointed to by the given pointers.\n"
"///\n"
"/// # Safety\n"
"///\n"
"/// The pointers must be valid and properly aligned.\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "// Safe because ...\n"
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
msgid "\"a = {}, b = {}\""
msgstr ""

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"`get_unchecked`, like most `_unchecked` functions, is unsafe, because it can "
"create UB if the range is incorrect. `abs` is incorrect for a different "
"reason: it is an external function (FFI). Calling external functions is "
"usually only a problem when those functions do things with pointers which "
"might violate Rust's memory model, but in general any C function might have "
"undefined behaviour under any arbitrary circumstances."
msgstr ""
"Esto solo suele suponer un problema para las funciones externas que hacen "
"cosas con punteros que pueden infringir el modelo de memoria de Rust pero, "
"en general, cualquier funci√≥n C puede tener un comportamiento indefinido "
"bajo cualquier circunstancia arbitraria."

#: src/unsafe-rust/unsafe-functions.md
msgid ""
"The `\"C\"` in this example is the ABI; [other ABIs are available too]"
"(https://doc.rust-lang.org/reference/items/external-blocks.html)."
msgstr ""
"En este ejemplo, `\"C\"` es la ABI.; [tambi√©n hay otras ABI disponibles]"
"(https://doc.rust-lang.org/reference/items/external-blocks.html)."

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"We wouldn't actually use pointers for a `swap` function - it can be done "
"safely with references."
msgstr ""
"En realidad, no usar√≠amos punteros para este caso porque se puede hacer de "
"forma segura con referencias."

#: src/unsafe-rust/unsafe-functions.md
#, fuzzy
msgid ""
"Note that unsafe code is allowed within an unsafe function without an "
"`unsafe` block. We can prohibit this with `#[deny(unsafe_op_in_unsafe_fn)]`. "
"Try adding it and see what happens. This will likely change in a future Rust "
"edition."
msgstr ""
"Ten en cuenta que el c√≥digo inseguro se admite en una funci√≥n insegura sin "
"un bloque `unsafe`. Podemos prohibirlo con "
"`#[deny(unsafe_op_in_unsafe_fn)]`. Prueba a a√±adirlo para ver qu√© ocurre."

#: src/unsafe-rust/unsafe-traits.md
msgid "Implementing Unsafe Traits"
msgstr "Implementaci√≥n de Traits Unsafe (Inseguras) "

#: src/unsafe-rust/unsafe-traits.md
msgid ""
"Like with functions, you can mark a trait as `unsafe` if the implementation "
"must guarantee particular conditions to avoid undefined behaviour."
msgstr ""
"Al igual que con las funciones, puedes marcar un trait como `unsafe` si la "
"implementaci√≥n debe asegurar condiciones concretas para evitar un "
"comportamiento indefinido."

#: src/unsafe-rust/unsafe-traits.md
msgid ""
"For example, the `zerocopy` crate has an unsafe trait that looks [something "
"like this](https://docs.rs/zerocopy/latest/zerocopy/trait.AsBytes.html):"
msgstr ""
"Por ejemplo, el crate `zerocopy` tiene un trait inseguro, [que se parece a "
"esto](https://docs.rs/zerocopy/latest/zerocopy/trait.AsBytes.html):"

#: src/unsafe-rust/unsafe-traits.md
msgid ""
"/// ...\n"
"/// # Safety\n"
"/// The type must have a defined representation and no padding.\n"
msgstr ""

#: src/unsafe-rust/unsafe-traits.md
msgid "// Safe because u32 has a defined representation and no padding.\n"
msgstr ""

#: src/unsafe-rust/unsafe-traits.md
msgid ""
"There should be a `# Safety` section on the Rustdoc for the trait explaining "
"the requirements for the trait to be safely implemented."
msgstr ""
"Deber√≠a haber una secci√≥n `# Safety` en el Rustdoc para el trait explicando "
"los requisitos para que el trait pueda implementarse de forma segura."

#: src/unsafe-rust/unsafe-traits.md
msgid ""
"The actual safety section for `AsBytes` is rather longer and more "
"complicated."
msgstr ""
"La secci√≥n de seguridad actual de `AsBytes` es bastante m√°s larga y "
"complicada."

#: src/unsafe-rust/unsafe-traits.md
msgid "The built-in `Send` and `Sync` traits are unsafe."
msgstr "Los traits integrados `Send` y `Sync` no son seguros."

#: src/unsafe-rust/exercise.md
msgid "Safe FFI Wrapper"
msgstr "Envoltorio de FFI Seguro"

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid ""
"Rust has great support for calling functions through a _foreign function "
"interface_ (FFI). We will use this to build a safe wrapper for the `libc` "
"functions you would use from C to read the names of files in a directory."
msgstr ""
"Rust ofrece una gran asisencia para llamar a funciones a trav√©s de una "
"_interfaz de funci√≥n externa_ (FFI). Usaremos esto para crear un envoltorio "
"seguro para las funciones `libc` que usar√≠as desde C para leer los nombres "
"de archivo de un directorio."

#: src/unsafe-rust/exercise.md
msgid "You will want to consult the manual pages:"
msgstr "Consulta las p√°ginas del manual:"

#: src/unsafe-rust/exercise.md
msgid "[`opendir(3)`](https://man7.org/linux/man-pages/man3/opendir.3.html)"
msgstr "[`opendir(3)`](https://man7.org/linux/man-pages/man3/opendir.3.html)"

#: src/unsafe-rust/exercise.md
msgid "[`readdir(3)`](https://man7.org/linux/man-pages/man3/readdir.3.html)"
msgstr "[`readdir(3)`](https://man7.org/linux/man-pages/man3/readdir.3.html)"

#: src/unsafe-rust/exercise.md
msgid "[`closedir(3)`](https://man7.org/linux/man-pages/man3/closedir.3.html)"
msgstr "[`closedir(3)`](https://man7.org/linux/man-pages/man3/closedir.3.html)"

#: src/unsafe-rust/exercise.md
msgid ""
"You will also want to browse the [`std::ffi`](https://doc.rust-lang.org/std/"
"ffi/) module. There you find a number of string types which you need for the "
"exercise:"
msgstr ""
"Tambi√©n te recomendamos que consultes el m√≥dulo [`std::ffi`](https://doc."
"rust-lang.org/std/ffi/). Ah√≠ encontrar√°s una serie de tipos de cadena que "
"necesitas para el ejercicio:"

#: src/unsafe-rust/exercise.md
msgid "Encoding"
msgstr "Codificaci√≥n"

#: src/unsafe-rust/exercise.md
msgid "Use"
msgstr "Uso"

#: src/unsafe-rust/exercise.md
msgid ""
"[`str`](https://doc.rust-lang.org/std/primitive.str.html) and [`String`]"
"(https://doc.rust-lang.org/std/string/struct.String.html)"
msgstr ""
"[`str`](https://doc.rust-lang.org/std/primitive.str.html) y [`String`]"
"(https://doc.rust-lang.org/std/string/struct.String.html)"

#: src/unsafe-rust/exercise.md
msgid "UTF-8"
msgstr "UTF-8"

#: src/unsafe-rust/exercise.md
msgid "Text processing in Rust"
msgstr "Procesar textos en Rust"

#: src/unsafe-rust/exercise.md
msgid ""
"[`CStr`](https://doc.rust-lang.org/std/ffi/struct.CStr.html) and [`CString`]"
"(https://doc.rust-lang.org/std/ffi/struct.CString.html)"
msgstr ""
"[`CStr`](https://doc.rust-lang.org/std/ffi/struct.CStr.html) y [`CString`]"
"(https://doc.rust-lang.org/std/ffi/struct.CString.html)"

#: src/unsafe-rust/exercise.md
msgid "NUL-terminated"
msgstr "Terminado en NUL"

#: src/unsafe-rust/exercise.md
msgid "Communicating with C functions"
msgstr "Comunicarse con funciones C"

#: src/unsafe-rust/exercise.md
msgid ""
"[`OsStr`](https://doc.rust-lang.org/std/ffi/struct.OsStr.html) and "
"[`OsString`](https://doc.rust-lang.org/std/ffi/struct.OsString.html)"
msgstr ""
"[`OsStr`](https://doc.rust-lang.org/std/ffi/struct.OsStr.html) y [`OsString`]"
"(https://doc.rust-lang.org/std/ffi/struct.OsString.html)"

#: src/unsafe-rust/exercise.md
msgid "OS-specific"
msgstr "Espec√≠fico del SO"

#: src/unsafe-rust/exercise.md
msgid "Communicating with the OS"
msgstr "Comunicarse con el SO"

#: src/unsafe-rust/exercise.md
msgid "You will convert between all these types:"
msgstr "Realizar√°s conversiones entre todos estos tipos:"

#: src/unsafe-rust/exercise.md
msgid ""
"`&str` to `CString`: you need to allocate space for a trailing `\\0` "
"character,"
msgstr ""
"De `&str` a `CString`: debes asignar espacio para un car√°cter final `\\0`,"

#: src/unsafe-rust/exercise.md
msgid "`CString` to `*const i8`: you need a pointer to call C functions,"
msgstr ""
"De `CString` a `*const i8`: necesitas un puntero para llamar a funciones C,"

#: src/unsafe-rust/exercise.md
msgid ""
"`*const i8` to `&CStr`: you need something which can find the trailing `\\0` "
"character,"
msgstr ""
"De `*const i8` a `&CStr`: necesitas algo que pueda encontrar el car√°cter "
"final `\\0`,"

#: src/unsafe-rust/exercise.md
#, fuzzy
msgid ""
"`&CStr` to `&[u8]`: a slice of bytes is the universal interface for \"some "
"unknown data\","
msgstr ""
"De `&CStr` a `&[u8]`: un slice de bytes es la interfaz universal para "
"\"algunos datos desconocidos\"."

#: src/unsafe-rust/exercise.md
msgid ""
"`&[u8]` to `&OsStr`: `&OsStr` is a step towards `OsString`, use [`OsStrExt`]"
"(https://doc.rust-lang.org/std/os/unix/ffi/trait.OsStrExt.html) to create it,"
msgstr ""
"De `&[u8]` a `&OsStr`: `&OsStr` es un paso hacia `OsString`, usa [`OsStrExt`]"
"(https://doc.rust-lang.org/std/os/unix/ffi/trait.OsStrExt.html) para crearlo."

#: src/unsafe-rust/exercise.md
msgid ""
"`&OsStr` to `OsString`: you need to clone the data in `&OsStr` to be able to "
"return it and call `readdir` again."
msgstr ""
"De `OsStr` a `OsString`: debes clonar los datos en `&OsStr` para poder "
"devolverlo y llamar a `readdir` de nuevo."

#: src/unsafe-rust/exercise.md
msgid ""
"The [Nomicon](https://doc.rust-lang.org/nomicon/ffi.html) also has a very "
"useful chapter about FFI."
msgstr ""
"El [Nomicon](https://doc.rust-lang.org/nomicon/ffi.html) tambi√©n tiene un "
"cap√≠tulo muy √∫til sobre FFI."

#: src/unsafe-rust/exercise.md
msgid ""
"Copy the code below to <https://play.rust-lang.org/> and fill in the missing "
"functions and methods:"
msgstr ""
"Copia el fragmento de c√≥digo que aparece m√°s abajo en la p√°gina <https://"
"play.rust-lang.org/> y rellena los m√©todos y funciones que faltan:"

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"macos\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "// Opaque type. See https://doc.rust-lang.org/nomicon/ffi.html.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid ""
"// Layout according to the Linux man page for readdir(3), where ino_t and\n"
"    // off_t are resolved according to the definitions in\n"
"    // /usr/include/x86_64-linux-gnu/{sys/types.h, bits/typesizes.h}.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "// Layout according to the macOS man page for dir(5).\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"x86_64\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid ""
"// See https://github.com/rust-lang/libc/issues/414 and the section on\n"
"        // _DARWIN_FEATURE_64_BIT_INODE in the macOS man page for stat(2).\n"
"        //\n"
"        // \"Platforms that existed before these updates were available\" "
"refers\n"
"        // to macOS (as opposed to iOS / wearOS / etc.) on Intel and "
"PowerPC.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"readdir$INODE64\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid ""
"// Call opendir and return a Ok value if that worked,\n"
"        // otherwise return Err with a message.\n"
msgstr ""

#: src/unsafe-rust/exercise.md
msgid "// Keep calling readdir until we get a NULL pointer back.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "// Call closedir as needed.\n"
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
#: src/android/interoperability/with-c/rust.md
msgid "\".\""
msgstr ""

#: src/unsafe-rust/exercise.md src/unsafe-rust/solution.md
msgid "\"files: {:#?}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Invalid path: {err}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "// SAFETY: path.as_ptr() cannot be NULL.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Could not open {:?}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid ""
"// Keep calling readdir until we get a NULL pointer back.\n"
"        // SAFETY: self.dir is never NULL.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "// We have reached the end of the directory.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid ""
"// SAFETY: dirent is not NULL and dirent.d_name is NUL\n"
"        // terminated.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "// SAFETY: self.dir is not NULL.\n"
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Could not close {:?}\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"no-such-directory\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"Non UTF-8 character in path\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"..\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"foo.txt\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"The Foo Diaries\\n\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"bar.png\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"<PNG>\\n\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"crab.rs\""
msgstr ""

#: src/unsafe-rust/solution.md
msgid "\"//! Crab\\n\""
msgstr ""

#: src/android.md
msgid "Welcome to Rust in Android"
msgstr "Te Damos la Bienvenida a Rust en Android"

#: src/android.md
#, fuzzy
msgid ""
"Rust is supported for system software on Android. This means that you can "
"write new services, libraries, drivers or even firmware in Rust (or improve "
"existing code as needed)."
msgstr ""
"Rust es compatible con el desarrollo de plataformas nativas en Android. Esto "
"significa que puedes escribir nuevos servicios del sistema operativo en "
"Rust, as√≠ como ampliar los que ya existen."

#: src/android.md
msgid ""
"We will attempt to call Rust from one of your own projects today. So try to "
"find a little corner of your code base where we can move some lines of code "
"to Rust. The fewer dependencies and \"exotic\" types the better. Something "
"that parses some raw bytes would be ideal."
msgstr ""
"Hoy intentaremos llamar a Rust desde un proyecto personal. Intenta encontrar "
"una peque√±a esquina de tu c√≥digo base donde podamos mover algunas l√≠neas de "
"c√≥digo a Rust. Cuantas menos dependencias y tipos \"ex√≥ticos\" tenga, mejor. "
"Lo ideal ser√≠a algo que analizara bytes sin procesar."

#: src/android.md
msgid ""
"The speaker may mention any of the following given the increased use of Rust "
"in Android:"
msgstr ""

#: src/android.md
msgid ""
"Service example: [DNS over HTTP](https://security.googleblog.com/2022/07/dns-"
"over-http3-in-android.html)"
msgstr ""

#: src/android.md
msgid ""
"Libraries: [Rutabaga Virtual Graphics Interface](https://crosvm.dev/book/"
"appendix/rutabaga_gfx.html)"
msgstr ""

#: src/android.md
msgid ""
"Kernel Drivers: [Binder](https://lore.kernel.org/rust-for-linux/20231101-"
"rust-binder-v1-0-08ba9197f637@google.com/)"
msgstr ""

#: src/android.md
msgid ""
"Firmware: [pKVM firmware](https://security.googleblog.com/2023/10/bare-metal-"
"rust-in-android.html)"
msgstr ""

#: src/android/setup.md
#, fuzzy
msgid ""
"We will be using a Cuttlefish Android Virtual Device to test our code. Make "
"sure you have access to one or create a new one with:"
msgstr ""
"Utilizaremos un dispositivo Android virtual para probar el c√≥digo. Aseg√∫rate "
"de que tienes acceso a uno o cr√©alo con:"

#: src/android/setup.md
msgid ""
"Please see the [Android Developer Codelab](https://source.android.com/docs/"
"setup/start) for details."
msgstr ""
"Consulta el [Codelab para desarrolladores de Android](https://source.android."
"com/docs/setup/start) para obtener m√°s informaci√≥n."

#: src/android/setup.md
msgid ""
"Cuttlefish is a reference Android device designed to work on generic Linux "
"desktops. MacOS support is also planned."
msgstr ""

#: src/android/setup.md
msgid ""
"The Cuttlefish system image maintains high fidelity to real devices, and is "
"the ideal emulator to run many Rust use cases."
msgstr ""

#: src/android/build-rules.md
msgid "The Android build system (Soong) supports Rust via a number of modules:"
msgstr ""
"El sistema de compilaci√≥n de Android (Soong) es compatible con Rust a trav√©s "
"de una serie de m√≥dulos:"

#: src/android/build-rules.md
msgid "Module Type"
msgstr "Tipo de m√≥dulo"

#: src/android/build-rules.md
msgid "Description"
msgstr "Descripci√≥n"

#: src/android/build-rules.md
msgid "`rust_binary`"
msgstr "`rust_binary`"

#: src/android/build-rules.md
msgid "Produces a Rust binary."
msgstr "Produce un binario de Rust."

#: src/android/build-rules.md
msgid "`rust_library`"
msgstr "`rust_library`"

#: src/android/build-rules.md
msgid "Produces a Rust library, and provides both `rlib` and `dylib` variants."
msgstr ""
"Produce una biblioteca de Rust y proporciona las variantes `rlib` y `dylib`."

#: src/android/build-rules.md
msgid "`rust_ffi`"
msgstr "`rust_ffi`"

#: src/android/build-rules.md
msgid ""
"Produces a Rust C library usable by `cc` modules, and provides both static "
"and shared variants."
msgstr ""
"Produce una biblioteca de Rust C que pueden usar los m√≥dulos `cc` y "
"proporciona variantes est√°ticas y compartidas."

#: src/android/build-rules.md
msgid "`rust_proc_macro`"
msgstr "`rust_proc_macro`"

#: src/android/build-rules.md
msgid ""
"Produces a `proc-macro` Rust library. These are analogous to compiler "
"plugins."
msgstr ""
"Produce una biblioteca de Rust `proc-macro`. Son similares a complementos "
"del compilador."

#: src/android/build-rules.md
msgid "`rust_test`"
msgstr "`rust_test`"

#: src/android/build-rules.md
msgid "Produces a Rust test binary that uses the standard Rust test harness."
msgstr ""
"Produce un binario de prueba de Rust que utiliza el agente de prueba "
"est√°ndar de Rust."

#: src/android/build-rules.md
msgid "`rust_fuzz`"
msgstr "`rust_fuzz`"

#: src/android/build-rules.md
msgid "Produces a Rust fuzz binary leveraging `libfuzzer`."
msgstr "Produce un binario de fuzz de Rust que aprovecha `libfuzzer`."

#: src/android/build-rules.md
msgid "`rust_protobuf`"
msgstr "`rust_protobuf`"

#: src/android/build-rules.md
msgid ""
"Generates source and produces a Rust library that provides an interface for "
"a particular protobuf."
msgstr ""
"Genera c√≥digo fuente y produce una biblioteca Rust que proporciona una "
"interfaz para un protobuf en particular."

#: src/android/build-rules.md
msgid "`rust_bindgen`"
msgstr "`rust_bindgen`"

#: src/android/build-rules.md
msgid ""
"Generates source and produces a Rust library containing Rust bindings to C "
"libraries."
msgstr ""
"Genera c√≥digo fuente y produce una biblioteca de Rust que contiene enlaces "
"de Rust a bibliotecas de C."

#: src/android/build-rules.md
msgid "We will look at `rust_binary` and `rust_library` next."
msgstr "A continuaci√≥n, hablaremos de `rust_binary` y `rust_library`."

#: src/android/build-rules.md
msgid "Additional items speaker may mention:"
msgstr ""

#: src/android/build-rules.md
msgid ""
"Cargo is not optimized for multi-language repos, and also downloads packages "
"from the internet."
msgstr ""

#: src/android/build-rules.md
msgid ""
"For compliance and performance, Android must have crates in-tree. It must "
"also interop with C/C++/Java code. Soong fills that gap."
msgstr ""

#: src/android/build-rules.md
msgid ""
"Soong has many similarities to Bazel, which is the open-source variant of "
"Blaze (used in google3)."
msgstr ""

#: src/android/build-rules.md
msgid ""
"There is a plan to transition [Android](https://source.android.com/docs/"
"setup/build/bazel/introduction), [ChromeOS](https://chromium.googlesource."
"com/chromiumos/bazel/), and [Fuchsia](https://source.android.com/docs/setup/"
"build/bazel/introduction) to Bazel."
msgstr ""

#: src/android/build-rules.md
msgid "Learning Bazel-like build rules is useful for all Rust OS developers."
msgstr ""

#: src/android/build-rules.md
msgid "Fun fact: Data from Star Trek is a Soong-type Android."
msgstr ""

#: src/android/build-rules/binary.md
msgid "Rust Binaries"
msgstr "Binarios de Rust"

#: src/android/build-rules/binary.md
msgid ""
"Let us start with a simple application. At the root of an AOSP checkout, "
"create the following files:"
msgstr ""
"Empecemos con una sencilla aplicaci√≥n. Desde la ra√≠z de un AOSP revisado, "
"crea los siguientes archivos:"

#: src/android/build-rules/binary.md src/android/build-rules/library.md
msgid "_hello_rust/Android.bp_:"
msgstr "_hello_rust/Android.bp_:"

#: src/android/build-rules/binary.md
msgid "\"hello_rust\""
msgstr ""

#: src/android/build-rules/binary.md src/android/build-rules/library.md
#: src/android/logging.md
#, fuzzy
msgid "\"src/main.rs\""
msgstr "`src/main.rs`:"

#: src/android/build-rules/binary.md src/android/build-rules/library.md
msgid "_hello_rust/src/main.rs_:"
msgstr "_hello_rust/src/main.rs_:"

#: src/android/build-rules/binary.md src/android/build-rules/library.md
msgid "//! Rust demo.\n"
msgstr ""

#: src/android/build-rules/binary.md src/android/build-rules/library.md
msgid "/// Prints a greeting to standard output.\n"
msgstr ""

#: src/android/build-rules/binary.md src/exercises/chromium/build-rules.md
msgid "\"Hello from Rust!\""
msgstr ""

#: src/android/build-rules/binary.md
msgid "You can now build, push, and run the binary:"
msgstr "Ahora puedes compilar, insertar y ejecutar el binario:"

#: src/android/build-rules/binary.md
#, fuzzy
msgid ""
"```shell\n"
"m hello_rust\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust\" /data/local/tmp\n"
"adb shell /data/local/tmp/hello_rust\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/build-rules/library.md
msgid "Rust Libraries"
msgstr "Bibliotecas de Rust"

#: src/android/build-rules/library.md
msgid "You use `rust_library` to create a new Rust library for Android."
msgstr "Crea una biblioteca de Rust para Android con `rust_library`."

#: src/android/build-rules/library.md
msgid "Here we declare a dependency on two libraries:"
msgstr "Aqu√≠ declaramos una dependencia en dos bibliotecas:"

#: src/android/build-rules/library.md
msgid "`libgreeting`, which we define below,"
msgstr "`libgreeting`, que definimos m√°s abajo."

#: src/android/build-rules/library.md
msgid ""
"`libtextwrap`, which is a crate already vendored in [`external/rust/crates/`]"
"(https://cs.android.com/android/platform/superproject/+/master:external/rust/"
"crates/)."
msgstr ""
"`libtextwrap`, que es un crate ya incluido en [`external/rust/crates/`]"
"(https://cs.android.com/android/platform/superproject/+/master:external/rust/"
"crates/)."

#: src/android/build-rules/library.md
msgid "\"hello_rust_with_dep\""
msgstr ""

#: src/android/build-rules/library.md
msgid "\"libgreetings\""
msgstr ""

#: src/android/build-rules/library.md
msgid "\"libtextwrap\""
msgstr ""

#: src/android/build-rules/library.md
msgid "// Need this to avoid dynamic link error.\n"
msgstr ""

#: src/android/build-rules/library.md
msgid "\"greetings\""
msgstr ""

#: src/android/build-rules/library.md src/android/aidl/implementation.md
#: src/android/interoperability/java.md
#, fuzzy
msgid "\"src/lib.rs\""
msgstr "`src/main.rs`:"

#: src/android/build-rules/library.md
msgid "_hello_rust/src/lib.rs_:"
msgstr "_hello_rust/src/lib.rs_:"

#: src/android/build-rules/library.md
msgid "//! Greeting library.\n"
msgstr ""

#: src/android/build-rules/library.md
msgid "/// Greet `name`.\n"
msgstr ""

#: src/android/build-rules/library.md
#, fuzzy
msgid "\"Hello {name}, it is very nice to meet you!\""
msgstr ""
"```text\n"
"Hello Bob, it is very\n"
"nice to meet you!\n"
"```"

#: src/android/build-rules/library.md
msgid "You build, push, and run the binary like before:"
msgstr "Puedes compilar, insertar y ejecutar el binario como antes:"

#: src/android/build-rules/library.md
#, fuzzy
msgid ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/aidl.md
msgid ""
"The [Android Interface Definition Language (AIDL)](https://developer.android."
"com/guide/components/aidl) is supported in Rust:"
msgstr ""
"El [lenguaje de definici√≥n de la interfaz de Android (AIDL)](https://"
"developer.android.com/guide/components/aidl) es compatible con Rust:"

#: src/android/aidl.md
msgid "Rust code can call existing AIDL servers,"
msgstr ""
"El c√≥digo de Rust puede llamar a servidores AIDL que ya se hayan creado."

#: src/android/aidl.md
msgid "You can create new AIDL servers in Rust."
msgstr "Puedes crear servidores de AIDL en Rust."

#: src/android/aidl/interface.md
msgid "AIDL Interfaces"
msgstr "Interfaces de AIDL"

#: src/android/aidl/interface.md
msgid "You declare the API of your service using an AIDL interface:"
msgstr "La API de tu servicio se declara mediante una interfaz de AIDL:"

#: src/android/aidl/interface.md
msgid ""
"_birthday_service/aidl/com/example/birthdayservice/IBirthdayService.aidl_:"
msgstr ""
"_birthday_service/aidl/com/example/birthdayservice/IBirthdayService.aidl_:"

#: src/android/aidl/interface.md src/android/aidl/changing.md
msgid "/** Birthday service interface. */"
msgstr ""

#: src/android/aidl/interface.md src/android/aidl/changing.md
msgid "/** Generate a Happy Birthday message. */"
msgstr ""

#: src/android/aidl/interface.md
msgid "_birthday_service/aidl/Android.bp_:"
msgstr "_birthday_service/aidl/Android.bp_:"

#: src/android/aidl/interface.md
msgid "\"com.example.birthdayservice\""
msgstr ""

#: src/android/aidl/interface.md
#, fuzzy
msgid "\"com/example/birthdayservice/*.aidl\""
msgstr ""
"_birthday_service/aidl/com/example/birthdayservice/IBirthdayService.aidl_:"

#: src/android/aidl/interface.md
msgid "// Rust is not enabled by default\n"
msgstr ""

#: src/android/aidl/interface.md
msgid ""
"Add `vendor_available: true` if your AIDL file is used by a binary in the "
"vendor partition."
msgstr ""
"A√±ade `vendor_available: true` si un binario de la partici√≥n del proveedor "
"utiliza tu archivo de AIDL."

#: src/android/aidl/implementation.md
msgid "Service Implementation"
msgstr "Implementaci√≥n del servicio"

#: src/android/aidl/implementation.md
msgid "We can now implement the AIDL service:"
msgstr "Ahora podemos implementar el servicio de AIDL:"

#: src/android/aidl/implementation.md
msgid "_birthday_service/src/lib.rs_:"
msgstr "_birthday_service/src/lib.rs_:"

#: src/android/aidl/implementation.md
msgid "//! Implementation of the `IBirthdayService` AIDL interface.\n"
msgstr ""

#: src/android/aidl/implementation.md
#, fuzzy
msgid "/// The `IBirthdayService` implementation.\n"
msgstr "Implementaci√≥n del servicio"

#: src/android/aidl/implementation.md
msgid "\"Happy Birthday {name}, congratulations with the {years} years!\""
msgstr ""

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
msgid "_birthday_service/Android.bp_:"
msgstr "_birthday_service/Android.bp_:"

#: src/android/aidl/implementation.md src/android/aidl/server.md
#, fuzzy
msgid "\"libbirthdayservice\""
msgstr "_birthday_service/src/lib.rs_:"

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
#, fuzzy
msgid "\"birthdayservice\""
msgstr "_birthday_service/src/lib.rs_:"

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
msgid "\"com.example.birthdayservice-rust\""
msgstr ""

#: src/android/aidl/implementation.md src/android/aidl/server.md
#: src/android/aidl/client.md
msgid "\"libbinder_rs\""
msgstr ""

#: src/android/aidl/server.md
msgid "AIDL Server"
msgstr "Servidor de AIDL"

#: src/android/aidl/server.md
msgid "Finally, we can create a server which exposes the service:"
msgstr "Por √∫ltimo, podemos crear un servidor que exponga el servicio:"

#: src/android/aidl/server.md
msgid "_birthday_service/src/server.rs_:"
msgstr "_birthday_service/src/server.rs_:"

#: src/android/aidl/server.md src/android/aidl/client.md
msgid "//! Birthday service.\n"
msgstr ""

#: src/android/aidl/server.md
msgid "/// Entry point for birthday service.\n"
msgstr ""

#: src/android/aidl/server.md
msgid "\"Failed to register service\""
msgstr ""

#: src/android/aidl/server.md
#, fuzzy
msgid "\"birthday_server\""
msgstr "_birthday_service/src/lib.rs_:"

#: src/android/aidl/server.md
#, fuzzy
msgid "\"src/server.rs\""
msgstr "`src/bin/server.rs`:"

#: src/android/aidl/server.md src/android/aidl/client.md
msgid "// To avoid dynamic link error.\n"
msgstr ""

#: src/android/aidl/deploy.md
msgid "We can now build, push, and start the service:"
msgstr "Ahora podemos crear, insertar e iniciar el servicio:"

#: src/android/aidl/deploy.md
#, fuzzy
msgid ""
"```shell\n"
"m birthday_server\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_server\" /data/local/"
"tmp\n"
"adb root\n"
"adb shell /data/local/tmp/birthday_server\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/aidl/deploy.md
msgid "In another terminal, check that the service runs:"
msgstr "Comprueba que el servicio funciona en otra terminal:"

#: src/android/aidl/deploy.md
msgid "You can also call the service with `service call`:"
msgstr "Tambi√©n puedes llamar al servicio con `service call`:"

#: src/android/aidl/client.md
msgid "AIDL Client"
msgstr "Cliente de AIDL"

#: src/android/aidl/client.md
msgid "Finally, we can create a Rust client for our new service."
msgstr ""
"Por √∫ltimo, podemos crear un cliente de Rust para nuestro nuevo servicio."

#: src/android/aidl/client.md
msgid "_birthday_service/src/client.rs_:"
msgstr "_birthday_service/src/client.rs_:"

#: src/android/aidl/client.md
msgid "/// Connect to the BirthdayService.\n"
msgstr ""

#: src/android/aidl/client.md
msgid "/// Call the birthday service.\n"
msgstr ""

#: src/android/aidl/client.md
msgid "\"Failed to connect to BirthdayService\""
msgstr ""

#: src/android/aidl/client.md
msgid "\"{msg}\""
msgstr ""

#: src/android/aidl/client.md
#, fuzzy
msgid "\"birthday_client\""
msgstr "_birthday_service/src/client.rs_:"

#: src/android/aidl/client.md
#, fuzzy
msgid "\"src/client.rs\""
msgstr "`src/bin/client.rs`:"

#: src/android/aidl/client.md
msgid "Notice that the client does not depend on `libbirthdayservice`."
msgstr "Ten en cuenta que el cliente no depende de `libbirthdayservice`."

#: src/android/aidl/client.md
msgid "Build, push, and run the client on your device:"
msgstr "Compila, inserta y ejecuta el cliente en tu dispositivo:"

#: src/android/aidl/client.md
#, fuzzy
msgid ""
"```shell\n"
"m birthday_client\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/birthday_client\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/birthday_client Charlie 60\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/aidl/changing.md
msgid ""
"Let us extend the API with more functionality: we want to let clients "
"specify a list of lines for the birthday card:"
msgstr ""
"Ampliemos la API con m√°s funciones. Queremos que los clientes puedan indicar "
"una lista de l√≠neas para la tarjeta de cumplea√±os:"

#: src/android/logging.md
msgid ""
"You should use the `log` crate to automatically log to `logcat` (on-device) "
"or `stdout` (on-host):"
msgstr ""
"Utiliza el crate `log` para que se registre autom√°ticamente en `logcat` (en "
"el dispositivo) o `stdout` (en el host):"

#: src/android/logging.md
msgid "_hello_rust_logs/Android.bp_:"
msgstr "_hello_rust_logs/Android.bp_:"

#: src/android/logging.md
#, fuzzy
msgid "\"hello_rust_logs\""
msgstr "_hello_rust_logs/Android.bp_:"

#: src/android/logging.md
msgid "\"liblog_rust\""
msgstr ""

#: src/android/logging.md
msgid "\"liblogger\""
msgstr ""

#: src/android/logging.md
msgid "_hello_rust_logs/src/main.rs_:"
msgstr "_hello_rust_logs/src/main.rs_:"

#: src/android/logging.md
msgid "//! Rust logging demo.\n"
msgstr ""

#: src/android/logging.md
msgid "/// Logs a greeting.\n"
msgstr ""

#: src/android/logging.md
msgid "\"rust\""
msgstr ""

#: src/android/logging.md
msgid "\"Starting program.\""
msgstr ""

#: src/android/logging.md
msgid "\"Things are going fine.\""
msgstr ""

#: src/android/logging.md
msgid "\"Something went wrong!\""
msgstr ""

#: src/android/logging.md src/android/interoperability/with-c/bindgen.md
#: src/android/interoperability/with-c/rust.md
msgid "Build, push, and run the binary on your device:"
msgstr "Compila, inserta y ejecuta el binario en tu dispositivo:"

#: src/android/logging.md
#, fuzzy
msgid ""
"```shell\n"
"m hello_rust_logs\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_logs\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/hello_rust_logs\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/logging.md
msgid "The logs show up in `adb logcat`:"
msgstr "Los registros se muestran en `adb logcat`:"

#: src/android/interoperability.md
msgid ""
"Rust has excellent support for interoperability with other languages. This "
"means that you can:"
msgstr ""
"Rust admite sin problemas la interoperabilidad con otros lenguajes. Esto "
"significa que puedes hacer lo siguiente:"

#: src/android/interoperability.md
msgid "Call Rust functions from other languages."
msgstr "Llamar a funciones de Rust desde otros lenguajes."

#: src/android/interoperability.md
msgid "Call functions written in other languages from Rust."
msgstr "Llamar a funciones escritas en otros lenguajes desde Rust."

#: src/android/interoperability.md
msgid ""
"When you call functions in a foreign language we say that you're using a "
"_foreign function interface_, also known as FFI."
msgstr ""
"Cuando llamas a funciones en otro lenguaje, se dice que est√°s usando una "
"_interfaz de funci√≥n externa_, tambi√©n denominada FFI."

#: src/android/interoperability/with-c.md
msgid "Interoperability with C"
msgstr "Interoperabilidad con C"

#: src/android/interoperability/with-c.md
msgid ""
"Rust has full support for linking object files with a C calling convention. "
"Similarly, you can export Rust functions and call them from C."
msgstr ""
"Rust admite vincular archivos de objetos con una convenci√≥n de llamada de C. "
"Del mismo modo, puedes exportar funciones de Rust y llamarlas desde C."

#: src/android/interoperability/with-c.md
msgid "You can do it by hand if you want:"
msgstr "Si quieres, puedes hacerlo de forma manual:"

#: src/android/interoperability/with-c.md
msgid "\"{x}, {abs_x}\""
msgstr ""

#: src/android/interoperability/with-c.md
msgid ""
"We already saw this in the [Safe FFI Wrapper exercise](../../exercises/day-3/"
"safe-ffi-wrapper.md)."
msgstr ""
"Ya lo hemos visto en el ejercicio [Envoltorio de FFI seguro](../../exercises/"
"day-3/safe-ffi-wrapper.md)."

#: src/android/interoperability/with-c.md
msgid ""
"This assumes full knowledge of the target platform. Not recommended for "
"production."
msgstr ""
"Esto supone un conocimiento completo de la plataforma objetivo. No se "
"recomienda para producci√≥n."

#: src/android/interoperability/with-c.md
msgid "We will look at better options next."
msgstr "A continuaci√≥n, estudiaremos otras opciones mejores."

#: src/android/interoperability/with-c/bindgen.md
msgid "Using Bindgen"
msgstr "Uso de Bindgen"

#: src/android/interoperability/with-c/bindgen.md
msgid ""
"The [bindgen](https://rust-lang.github.io/rust-bindgen/introduction.html) "
"tool can auto-generate bindings from a C header file."
msgstr ""
"La herramienta [bindgen](https://rust-lang.github.io/rust-bindgen/"
"introduction.html) puede generar autom√°ticamente enlaces desde un archivo de "
"encabezado de C."

#: src/android/interoperability/with-c/bindgen.md
msgid "First create a small C library:"
msgstr "En primer lugar, crea una biblioteca de C peque√±a:"

#: src/android/interoperability/with-c/bindgen.md
msgid "_interoperability/bindgen/libbirthday.h_:"
msgstr "_interoperability/bindgen/libbirthday.h_:"

#: src/android/interoperability/with-c/bindgen.md
msgid "_interoperability/bindgen/libbirthday.c_:"
msgstr "_interoperability/bindgen/libbirthday.c_:"

#: src/android/interoperability/with-c/bindgen.md
msgid "<stdio.h>"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday.h\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"+--------------\\n\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"| Happy Birthday %s!\\n\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"| Congratulations with the %i years!\\n\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "Add this to your `Android.bp` file:"
msgstr "A√±ade lo siguiente a tu archivo `Android.bp`:"

#: src/android/interoperability/with-c/bindgen.md
msgid "_interoperability/bindgen/Android.bp_:"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday.c\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid ""
"Create a wrapper header file for the library (not strictly needed in this "
"example):"
msgstr ""
"Crea un archivo de encabezado de envoltorio para la biblioteca (no es "
"estrictamente necesario en este ejemplo):"

#: src/android/interoperability/with-c/bindgen.md
msgid "_interoperability/bindgen/libbirthday_wrapper.h_:"
msgstr "_interoperability/bindgen/libbirthday_wrapper.h_:"

#: src/android/interoperability/with-c/bindgen.md
msgid "You can now auto-generate the bindings:"
msgstr "Ahora puedes generar autom√°ticamente los enlaces:"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday_bindgen\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "\"birthday_bindgen\""
msgstr "`rust_bindgen`"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday_wrapper.h\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"bindings\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "Finally, we can use the bindings in our Rust program:"
msgstr "Por √∫ltimo, podemos utilizar los enlaces de nuestro programa de Rust:"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"print_birthday_card\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid "\"main.rs\""
msgstr "`main.rs`:"

#: src/android/interoperability/with-c/bindgen.md
msgid "_interoperability/bindgen/main.rs_:"
msgstr "_interoperability/bindgen/main.rs_:"

#: src/android/interoperability/with-c/bindgen.md
msgid "//! Bindgen demo.\n"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "// SAFETY: `print_card` is safe to call with a valid `card` pointer.\n"
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
#, fuzzy
msgid ""
"```shell\n"
"m print_birthday_card\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/print_birthday_card\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/print_birthday_card\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/interoperability/with-c/bindgen.md
msgid "Finally, we can run auto-generated tests to ensure the bindings work:"
msgstr ""
"Por √∫ltimo, podemos ejecutar pruebas generadas autom√°ticamente para "
"comprobar que los enlaces funcionan:"

#: src/android/interoperability/with-c/bindgen.md
msgid "\"libbirthday_bindgen_test\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\":libbirthday_bindgen\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"general-tests\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "\"none\""
msgstr ""

#: src/android/interoperability/with-c/bindgen.md
msgid "// Generated file, skip linting\n"
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "Calling Rust"
msgstr "Llamar a Rust"

#: src/android/interoperability/with-c/rust.md
msgid "Exporting Rust functions and types to C is easy:"
msgstr "Es f√°cil exportar las funciones y los tipos de Rust a C:"

#: src/android/interoperability/with-c/rust.md
msgid "_interoperability/rust/libanalyze/analyze.rs_"
msgstr "_interoperability/rust/libanalyze/analyze.rs_"

#: src/android/interoperability/with-c/rust.md
msgid "//! Rust FFI demo.\n"
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "/// Analyze the numbers.\n"
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"x ({x}) is smallest!\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"y ({y}) is probably larger than x ({x})\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "_interoperability/rust/libanalyze/analyze.h_"
msgstr "_interoperability/rust/libanalyze/analyze.h_"

#: src/android/interoperability/with-c/rust.md
msgid "_interoperability/rust/libanalyze/Android.bp_"
msgstr "_interoperability/rust/libanalyze/Android.bp_"

#: src/android/interoperability/with-c/rust.md
msgid "\"libanalyze_ffi\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze_ffi\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze.rs\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "We can now call this from a C binary:"
msgstr "Ahora podemos llamarlo desde un binario de C:"

#: src/android/interoperability/with-c/rust.md
msgid "_interoperability/rust/analyze/main.c_"
msgstr "_interoperability/rust/analyze/main.c_"

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze.h\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "_interoperability/rust/analyze/Android.bp_"
msgstr "_interoperability/rust/analyze/Android.bp_"

#: src/android/interoperability/with-c/rust.md
msgid "\"analyze_numbers\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
msgid "\"main.c\""
msgstr ""

#: src/android/interoperability/with-c/rust.md
#, fuzzy
msgid ""
"```shell\n"
"m analyze_numbers\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/analyze_numbers\" /data/local/"
"tmp\n"
"adb shell /data/local/tmp/analyze_numbers\n"
"```"
msgstr ""
"```shell\n"
"m hello_rust_with_dep\n"
"adb push \"$ANDROID_PRODUCT_OUT/system/bin/hello_rust_with_dep /data/local/"
"tmp\"\n"
"adb shell /data/local/tmp/hello_rust_with_dep\n"
"```"

#: src/android/interoperability/with-c/rust.md
msgid ""
"`#[no_mangle]` disables Rust's usual name mangling, so the exported symbol "
"will just be the name of the function. You can also use `#[export_name = "
"\"some_name\"]` to specify whatever name you want."
msgstr ""
"\"#\\[no_mangle\\]\" inhabilita la modificaci√≥n de nombres habitual de Rust, "
"por lo que el s√≠mbolo exportado ser√° el nombre de la funci√≥n. Tambi√©n puedes "
"utilizar `#[export_name = \"some_name\"]` para especificar el nombre que "
"quieras."

#: src/android/interoperability/cpp.md
msgid ""
"The [CXX crate](https://cxx.rs/) makes it possible to do safe "
"interoperability between Rust and C++."
msgstr ""
"El [crate CXX](https://cxx.rs/) permite una interoperabilidad segura entre "
"Rust y C++."

#: src/android/interoperability/cpp.md
msgid "The overall approach looks like this:"
msgstr "El enfoque general es el siguiente:"

#: src/android/interoperability/cpp/bridge.md
msgid ""
"CXX relies on a description of the function signatures that will be exposed "
"from each language to the other. You provide this description using extern "
"blocks in a Rust module annotated with the `#[cxx::bridge]` attribute macro."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "\"org::blobstore\""
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "// Shared structs with fields visible to both languages.\n"
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/generated-cpp.md
msgid "// Rust types and signatures exposed to C++.\n"
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/rust-bridge.md
#: src/android/interoperability/cpp/generated-cpp.md
#: src/android/interoperability/cpp/rust-result.md
#: src/chromium/interoperability-with-cpp/example-bindings.md
#: src/chromium/interoperability-with-cpp/error-handling-qr.md
#: src/chromium/interoperability-with-cpp/error-handling-png.md
#, fuzzy
msgid "\"Rust\""
msgstr "Rustdoc"

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/cpp-bridge.md
msgid "// C++ types and signatures exposed to Rust.\n"
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/cpp-bridge.md
#: src/android/interoperability/cpp/cpp-exception.md
#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "\"C++\""
msgstr ""

#: src/android/interoperability/cpp/bridge.md
#: src/android/interoperability/cpp/cpp-bridge.md
msgid "\"include/blobstore.h\""
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "The bridge is generally declared in an `ffi` module within your crate."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid ""
"From the declarations made in the bridge module, CXX will generate matching "
"Rust and C++ type/function definitions in order to expose those items to "
"both languages."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid ""
"To view the generated Rust code, use [cargo-expand](https://github.com/"
"dtolnay/cargo-expand) to view the expanded proc macro. For most of the "
"examples you would use `cargo expand ::ffi` to expand just the `ffi` module "
"(though this doesn't apply for Android projects)."
msgstr ""

#: src/android/interoperability/cpp/bridge.md
msgid "To view the generated C++ code, look in `target/cxxbridge`."
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid "Rust Bridge Declarations"
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid "// Opaque type\n"
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid "// Method on `MyType`\n"
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
#, fuzzy
msgid "// Free function\n"
msgstr "Funciones"

#: src/android/interoperability/cpp/rust-bridge.md
msgid ""
"Items declared in the `extern \"Rust\"` reference items that are in scope in "
"the parent module."
msgstr ""

#: src/android/interoperability/cpp/rust-bridge.md
msgid ""
"The CXX code generator uses your `extern \"Rust\"` section(s) to produce a C+"
"+ header file containing the corresponding C++ declarations. The generated "
"header has the same path as the Rust source file containing the bridge, "
"except with a .rs.h file extension."
msgstr ""

#: src/android/interoperability/cpp/generated-cpp.md
msgid "Results in (roughly) the following C++:"
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "C++ Bridge Declarations"
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "Results in (roughly) the following Rust:"
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "\"org$blobstore$cxxbridge1$new_blobstore_client\""
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid "\"org$blobstore$cxxbridge1$BlobstoreClient$put\""
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid ""
"The programmer does not need to promise that the signatures they have typed "
"in are accurate. CXX performs static assertions that the signatures exactly "
"correspond with what is declared in C++."
msgstr ""

#: src/android/interoperability/cpp/cpp-bridge.md
msgid ""
"`unsafe extern` blocks allow you to declare C++ functions that are safe to "
"call from Rust."
msgstr ""

#: src/android/interoperability/cpp/shared-types.md
msgid "// A=1, J=11, Q=12, K=13\n"
msgstr ""

#: src/android/interoperability/cpp/shared-types.md
msgid "Only C-like (unit) enums are supported."
msgstr ""

#: src/android/interoperability/cpp/shared-types.md
msgid ""
"A limited number of traits are supported for `#[derive()]` on shared types. "
"Corresponding functionality is also generated for the C++ code, e.g. if you "
"derive `Hash` also generates an implementation of `std::hash` for the "
"corresponding C++ type."
msgstr ""

#: src/android/interoperability/cpp/shared-enums.md
#, fuzzy
msgid "Generated Rust:"
msgstr "Unsafe Rust"

#: src/android/interoperability/cpp/shared-enums.md
msgid "Generated C++:"
msgstr ""

#: src/android/interoperability/cpp/shared-enums.md
msgid ""
"On the Rust side, the code generated for shared enums is actually a struct "
"wrapping a numeric value. This is because it is not UB in C++ for an enum "
"class to hold a value different from all of the listed variants, and our "
"Rust representation needs to have the same behavior."
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid "\"fallible1 requires depth > 0\""
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid "\"Success!\""
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid ""
"Rust functions that return `Result` are translated to exceptions on the C++ "
"side."
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid ""
"The exception thrown will always be of type `rust::Error`, which primarily "
"exposes a way to get the error message string. The error message will come "
"from the error type's `Display` impl."
msgstr ""

#: src/android/interoperability/cpp/rust-result.md
msgid ""
"A panic unwinding from Rust to C++ will always cause the process to "
"immediately terminate."
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid "\"example/include/example.h\""
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid "\"Error: {}\""
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid ""
"C++ functions declared to return a `Result` will catch any thrown exception "
"on the C++ side and return it as an `Err` value to the calling Rust function."
msgstr ""

#: src/android/interoperability/cpp/cpp-exception.md
msgid ""
"If an exception is thrown from an extern \"C++\" function that is not "
"declared by the CXX bridge to return `Result`, the program calls C++'s `std::"
"terminate`. The behavior is equivalent to the same exception being thrown "
"through a `noexcept` C++ function."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "Rust Type"
msgstr "Rust by Example"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "C++ Type"
msgstr "Ejemplo en C++"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::String`"
msgstr "`rust_bindgen`"

#: src/android/interoperability/cpp/type-mapping.md
msgid "`&str`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::Str`"
msgstr "`rust_test`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`CxxString`"
msgstr "String"

#: src/android/interoperability/cpp/type-mapping.md
msgid "`std::string`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid "`&[T]`/`&mut [T]`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::Slice`"
msgstr "`rust_ffi`"

#: src/android/interoperability/cpp/type-mapping.md
msgid "`rust::Box<T>`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid "`UniquePtr<T>`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid "`std::unique_ptr<T>`"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`Vec<T>`"
msgstr "`Vec`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`rust::Vec<T>`"
msgstr "`mpsc::Receiver<T>`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`CxxVector<T>`"
msgstr "`Cell<T>`"

#: src/android/interoperability/cpp/type-mapping.md
#, fuzzy
msgid "`std::vector<T>`"
msgstr "`mpsc::Receiver<T>`"

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"These types can be used in the fields of shared structs and the arguments "
"and returns of extern functions."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"Note that Rust's `String` does not map directly to `std::string`. There are "
"a few reasons for this:"
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"`std::string` does not uphold the UTF-8 invariant that `String` requires."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"The two types have different layouts in memory and so can't be passed "
"directly between languages."
msgstr ""

#: src/android/interoperability/cpp/type-mapping.md
msgid ""
"`std::string` requires move constructors that don't match Rust's move "
"semantics, so a `std::string` can't be passed by value to Rust."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-cpp-genrules.md
#: src/android/interoperability/cpp/android-build-rust.md
#, fuzzy
msgid "Building in Android"
msgstr "Rust en Android"

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Create a `cc_library_static` to build the C++ library, including the CXX "
"generated header and source file."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"libcxx_test_cpp\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid "\"cxx_test.cpp\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid "\"cxx-bridge-header\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"libcxx_test_bridge_header\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"libcxx_test_bridge_code\""
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Point out that `libcxx_test_bridge_header` and `libcxx_test_bridge_code` are "
"the dependencies for the CXX-generated C++ bindings. We'll show how these "
"are setup on the next slide."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Note that you also need to depend on the `cxx-bridge-header` library in "
"order to pull in common CXX definitions."
msgstr ""

#: src/android/interoperability/cpp/android-build-cpp.md
msgid ""
"Full docs for using CXX in Android can be found in [the Android docs]"
"(https://source.android.com/docs/setup/build/rust/building-rust-modules/"
"android-rust-patterns#rust-cpp-interop-using-cxx). You may want to share "
"that link with the class so that students know where they can find these "
"instructions again in the future."
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"Create two genrules: One to generate the CXX header, and one to generate the "
"CXX source file. These are then used as inputs to the `cc_library_static`."
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"// Generate a C++ header containing the C++ bindings\n"
"// to the Rust exported functions in lib.rs.\n"
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"cxxbridge\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"$(location cxxbridge) $(in) --header > $(out)\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"lib.rs\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"lib.rs.h\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "// Generate the C++ code that Rust calls into.\n"
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"$(location cxxbridge) $(in) > $(out)\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid "\"lib.rs.cc\""
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"The `cxxbridge` tool is a standalone tool that generates the C++ side of the "
"bridge module. It is included in Android and available as a Soong tool."
msgstr ""

#: src/android/interoperability/cpp/android-cpp-genrules.md
msgid ""
"By convention, if your Rust source file is `lib.rs` your header file will be "
"named `lib.rs.h` and your source file will be named `lib.rs.cc`. This naming "
"convention isn't enforced, though."
msgstr ""

#: src/android/interoperability/cpp/android-build-rust.md
msgid ""
"Create a `rust_binary` that depends on `libcxx` and your `cc_library_static`."
msgstr ""

#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"cxx_test\""
msgstr ""

#: src/android/interoperability/cpp/android-build-rust.md
msgid "\"libcxx\""
msgstr ""

#: src/android/interoperability/java.md
msgid "Interoperability with Java"
msgstr "Interoperabilidad con Java"

#: src/android/interoperability/java.md
msgid ""
"Java can load shared objects via [Java Native Interface (JNI)](https://en."
"wikipedia.org/wiki/Java_Native_Interface). The [`jni` crate](https://docs.rs/"
"jni/) allows you to create a compatible library."
msgstr ""
"Java puede cargar objetos compartidos a trav√©s de la [interfaz nativa de "
"Java (JNI)](https://es.wikipedia.org/wiki/Java_Native_Interface). [El crate "
"`jni`](https://docs.rs/jni/) permite crear una biblioteca compatible."

#: src/android/interoperability/java.md
msgid "First, we create a Rust function to export to Java:"
msgstr "En primer lugar, creamos una funci√≥n de Rust para exportar a Java:"

#: src/android/interoperability/java.md
msgid "_interoperability/java/src/lib.rs_:"
msgstr "_interoperability/java/src/lib.rs_:"

#: src/android/interoperability/java.md
msgid "//! Rust <-> Java FFI demo.\n"
msgstr ""

#: src/android/interoperability/java.md
msgid "/// HelloWorld::hello method implementation.\n"
msgstr ""

#: src/android/interoperability/java.md
msgid "\"system\""
msgstr ""

#: src/android/interoperability/java.md
msgid "\"Hello, {input}!\""
msgstr ""

#: src/android/interoperability/java.md
msgid "_interoperability/java/Android.bp_:"
msgstr "_interoperability/java/Android.bp_:"

#: src/android/interoperability/java.md
msgid "\"libhello_jni\""
msgstr ""

#: src/android/interoperability/java.md
msgid "\"hello_jni\""
msgstr ""

#: src/android/interoperability/java.md
msgid "\"libjni\""
msgstr ""

#: src/android/interoperability/java.md
#, fuzzy
msgid "We then call this function from Java:"
msgstr "Por √∫ltimo, podemos llamar a esta funci√≥n desde Java:"

#: src/android/interoperability/java.md
msgid "_interoperability/java/HelloWorld.java_:"
msgstr "_interoperability/java/HelloWorld.java_:"

#: src/android/interoperability/java.md
msgid "\"helloworld_jni\""
msgstr ""

#: src/android/interoperability/java.md
#, fuzzy
msgid "\"HelloWorld.java\""
msgstr "¬°Hola, mundo!"

#: src/android/interoperability/java.md
#, fuzzy
msgid "\"HelloWorld\""
msgstr "¬°Hola, mundo!"

#: src/android/interoperability/java.md
msgid "Finally, you can build, sync, and run the binary:"
msgstr "Ahora puedes compilar, sincronizar y ejecutar el binario:"

#: src/exercises/android/morning.md
msgid ""
"This is a group exercise: We will look at one of the projects you work with "
"and try to integrate some Rust into it. Some suggestions:"
msgstr ""
"Este es un ejercicio de grupo: escogeremos uno de los proyectos con los que "
"se est√© trabajando e intentaremos integrar Rust en √©l. Algunas sugerencias:"

#: src/exercises/android/morning.md
msgid "Call your AIDL service with a client written in Rust."
msgstr "Llama a tu servicio de AIDL con un cliente escrito en Rust."

#: src/exercises/android/morning.md
msgid "Move a function from your project to Rust and call it."
msgstr "Mueve una funci√≥n desde tu proyecto a Rust y ll√°mala."

#: src/exercises/android/morning.md
msgid ""
"No solution is provided here since this is open-ended: it relies on someone "
"in the class having a piece of code which you can turn in to Rust on the fly."
msgstr ""
"Aqu√≠ la soluci√≥n es abierta, ya que depende de que alguno de los asistentes "
"tenga un fragmento de c√≥digo que se pueda convertir en Rust sobre la marcha."

#: src/chromium.md
#, fuzzy
msgid "Welcome to Rust in Chromium"
msgstr "Te Damos la Bienvenida a Rust en Android"

#: src/chromium.md
msgid ""
"Rust is supported for third-party libraries in Chromium, with first-party "
"glue code to connect between Rust and existing Chromium C++ code."
msgstr ""

#: src/chromium.md
msgid ""
"Today, we'll call into Rust to do something silly with strings. If you've "
"got a corner of the code where you're displaying a UTF8 string to the user, "
"feel free to follow this recipe in your part of the codebase instead of the "
"exact part we talk about."
msgstr ""

#: src/chromium/setup.md
msgid ""
"Make sure you can build and run Chromium. Any platform and set of build "
"flags is OK, so long as your code is relatively recent (commit position "
"1223636 onwards, corresponding to November 2023):"
msgstr ""

#: src/chromium/setup.md
msgid ""
"(A component, debug build is recommended for quickest iteration time. This "
"is the default!)"
msgstr ""

#: src/chromium/setup.md
msgid ""
"See [How to build Chromium](https://www.chromium.org/developers/how-tos/get-"
"the-code/) if you aren't already at that point. Be warned: setting up to "
"build Chromium takes time."
msgstr ""

#: src/chromium/setup.md
msgid "It's also recommended that you have Visual Studio code installed."
msgstr ""

#: src/chromium/setup.md
msgid "About the exercises"
msgstr ""

#: src/chromium/setup.md
msgid ""
"This part of the course has a series of exercises which build on each other. "
"We'll be doing them spread throughout the course instead of just at the end. "
"If you don't have time to complete a certain part, don't worry: you can "
"catch up in the next slot."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Rust community typically uses `cargo` and libraries from [crates.io](https://"
"crates.io/). Chromium is built using `gn` and `ninja` and a curated set of "
"dependencies."
msgstr ""

#: src/chromium/cargo.md
msgid "When writing code in Rust, your choices are:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Use `gn` and `ninja` with the help of the templates from `//build/rust/*."
"gni` (e.g. `rust_static_library` that we'll meet later). This uses "
"Chromium's audited toolchain and crates."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Use `cargo`, but [restrict yourself to Chromium's audited toolchain and "
"crates](https://chromium.googlesource.com/chromium/src/+/refs/heads/main/"
"docs/rust.md#Using-cargo)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Use `cargo`, trusting a [toolchain](https://rustup.rs/) and/or [crates "
"downloaded from the internet](https://crates.io/)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"From here on we'll be focusing on `gn` and `ninja`, because this is how Rust "
"code can be built into the Chromium browser. At the same time, Cargo is an "
"important part of the Rust ecosystem and you should keep it in your toolbox."
msgstr ""

#: src/chromium/cargo.md
#, fuzzy
msgid "Mini exercise"
msgstr "Ejercicios"

#: src/chromium/cargo.md
msgid "Split into small groups and:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Brainstorm scenarios where `cargo` may offer an advantage and assess the "
"risk profile of these scenarios."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Discuss which tools, libraries, and groups of people need to be trusted when "
"using `gn` and `ninja`, offline `cargo`, etc."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Ask students to avoid peeking at the speaker notes before completing the "
"exercise. Assuming folks taking the course are physically together, ask them "
"to discuss in small groups of 3-4 people."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Notes/hints related to the first part of the exercise (\"scenarios where "
"Cargo may offer an advantage\"):"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"It's fantastic that when writing a tool, or prototyping a part of Chromium, "
"one has access to the rich ecosystem of crates.io libraries. There is a "
"crate for almost anything and they are usually quite pleasant to use. "
"(`clap` for command-line parsing, `serde` for serializing/deserializing to/"
"from various formats, `itertools` for working with iterators, etc.)."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`cargo` makes it easy to try a library (just add a single line to `Cargo."
"toml` and start writing code)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"It may be worth comparing how CPAN helped make `perl` a popular choice. Or "
"comparing with `python` + `pip`."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Development experience is made really nice not only by core Rust tools (e.g. "
"using `rustup` to switch to a different `rustc` version when testing a crate "
"that needs to work on nightly, current stable, and older stable) but also by "
"an ecosystem of third-party tools (e.g. Mozilla provides `cargo vet` for "
"streamlining and sharing security audits; `criterion` crate gives a "
"streamlined way to run benchmarks)."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`cargo` makes it easy to add a tool via `cargo install --locked cargo-vet`."
msgstr ""

#: src/chromium/cargo.md
msgid "It may be worth comparing with Chrome Extensions or VScode extensions."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Broad, generic examples of projects where `cargo` may be the right choice:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Perhaps surprisingly, Rust is becoming increasingly popular in the industry "
"for writing command line tools. The breadth and ergonomics of libraries is "
"comparable to Python, while being more robust (thanks to the rich "
"typesystem) and running faster (as a compiled, rather than interpreted "
"language)."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Participating in the Rust ecosystem requires using standard Rust tools like "
"Cargo. Libraries that want to get external contributions, and want to be "
"used outside of Chromium (e.g. in Bazel or Android/Soong build environments) "
"should probably use Cargo."
msgstr ""

#: src/chromium/cargo.md
msgid "Examples of Chromium-related projects that are `cargo`\\-based:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`serde_json_lenient` (experimented with in other parts of Google which "
"resulted in PRs with performance improvements)"
msgstr ""

#: src/chromium/cargo.md
msgid "Fontations libraries like `font-types`"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`gnrt` tool (we will meet it later in the course) which depends on `clap` "
"for command-line parsing and on `toml` for configuration files."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Disclaimer: a unique reason for using `cargo` was unavailability of `gn` "
"when building and bootstrapping Rust standard library when building Rust "
"toolchain.)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`run_gnrt.py` uses Chromium's copy of `cargo` and `rustc`. `gnrt` depends on "
"third-party libraries downloaded from the internet, by `run_gnrt.py` asks "
"`cargo` that only `--locked` content is allowed via `Cargo.lock`.)"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Students may identify the following items as being implicitly or explicitly "
"trusted:"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`rustc` (the Rust compiler) which in turn depends on the LLVM libraries, the "
"Clang compiler, the `rustc` sources (fetched from GitHub, reviewed by Rust "
"compiler team), binary Rust compiler downloaded for bootstrapping"
msgstr ""

#: src/chromium/cargo.md
msgid ""
"`rustup` (it may be worth pointing out that `rustup` is developed under the "
"umbrella of the https://github.com/rust-lang/ organization - same as `rustc`)"
msgstr ""

#: src/chromium/cargo.md
msgid "`cargo`, `rustfmt`, etc."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Various internal infrastructure (bots that build `rustc`, system for "
"distributing the prebuilt toolchain to Chromium engineers, etc.)"
msgstr ""

#: src/chromium/cargo.md
msgid "Cargo tools like `cargo audit`, `cargo vet`, etc."
msgstr ""

#: src/chromium/cargo.md
msgid ""
"Rust libraries vendored into `//third_party/rust` (audited by "
"security@chromium.org)"
msgstr ""

#: src/chromium/cargo.md
msgid "Other Rust libraries (some niche, some quite popular and commonly used)"
msgstr ""

#: src/chromium/policy.md
msgid "Chromium Rust policy"
msgstr ""

#: src/chromium/policy.md
msgid ""
"Chromium does not yet allow first-party Rust except in rare cases as "
"approved by Chromium's [Area Tech Leads](https://source.chromium.org/"
"chromium/chromium/src/+/main:ATL_OWNERS)."
msgstr ""

#: src/chromium/policy.md
msgid ""
"Chromium's policy on third party libraries is outlined [here](https://"
"chromium.googlesource.com/chromium/src/+/main/docs/adding_to_third_party."
"md#rust) - Rust is allowed for third party libraries under various "
"circumstances, including if they're the best option for performance or for "
"security."
msgstr ""

#: src/chromium/policy.md
msgid ""
"Very few Rust libraries directly expose a C/C++ API, so that means that "
"nearly all such libraries will require a small amount of first-party glue "
"code."
msgstr ""

#: src/chromium/policy.md
#, fuzzy
msgid ""
"```bob\n"
"\"C++\"                           Rust\n"
".- - - - - - - - - -.           .- - - - - - - - - - - - - - - - - - - - - - "
"-.\n"
":                   :           :                                             :\n"
": Existing Chromium :           :  Chromium Rust              Existing "
"Rust   :\n"
": \"C++\"             :           :  \"wrapper\"                  "
"crate           :\n"
": +---------------+ :           : +----------------+          +-------------"
"+ :\n"
": |               | :           : |                |          |             "
"| :\n"
": |         o-----+-+-----------+-+->            o-+----------+-->          "
"| :\n"
": |               | : Language  : |                | Crate    |             "
"| :\n"
": +---------------+ : boundary  : +----------------+ API      +-------------"
"+ :\n"
":                   :           :                                             :\n"
"`- - - - - - - - - -'           `- - - - - - - - - - - - - - - - - - - - - - "
"-'\n"
"```"
msgstr ""
"```bob\n"
" _Stack_                        _Heap_\n"
".- - - - - - - - - - - - -.     .- - - - - - - - - - - - - - - - - - - - - - "
"-.\n"
":                         :     :                                             :\n"
":    "
"list                 :     :                                             :\n"
":   +----+----+           :     :    +----+----+    +----+------"
"+             :\n"
":   | 1  | o--+-----------+-----+--->| 2  | o--+--->| // | null "
"|             :\n"
":   +----+----+           :     :    +----+----+    +----+------"
"+             :\n"
":                         :     :                                             :\n"
":                         :     :                                             :\n"
"`- - - - - - - - - - - - -'     '- - - - - - - - - - - - - - - - - - - - - - "
"-'\n"
"```"

#: src/chromium/policy.md
msgid ""
"First-party Rust glue code for a particular third-party crate should "
"normally be kept in `third_party/rust/<crate>/<version>/wrapper`."
msgstr ""

#: src/chromium/policy.md
msgid "Because of this, today's course will be heavily focused on:"
msgstr ""

#: src/chromium/policy.md
msgid "Bringing in third-party Rust libraries (\"crates\")"
msgstr ""

#: src/chromium/policy.md
msgid "Writing glue code to be able to use those crates from Chromium C++."
msgstr ""

#: src/chromium/policy.md
msgid "If this policy changes over time, the course will evolve to keep up."
msgstr ""

#: src/chromium/build-rules.md
#, fuzzy
msgid "Build rules"
msgstr "Reglas de Compilaci√≥n (Build)"

#: src/chromium/build-rules.md
msgid ""
"Rust code is usually built using `cargo`. Chromium builds with `gn` and "
"`ninja` for efficiency --- its static rules allow maximum parallelism. Rust "
"is no exception."
msgstr ""

#: src/chromium/build-rules.md
msgid "Adding Rust code to Chromium"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"In some existing Chromium `BUILD.gn` file, declare a `rust_static_library`:"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"You can also add `deps` on other Rust targets. Later we'll use this to "
"depend upon third party code."
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"You must specify _both_ the crate root, _and_ a full list of sources. The "
"`crate_root` is the file given to the Rust compiler representing the root "
"file of the compilation unit --- typically `lib.rs`. `sources` is a complete "
"list of all source files which `ninja` needs in order to determine when "
"rebuilds are necessary."
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"(There's no such thing as a Rust `source_set`, because in Rust, an entire "
"crate is a compilation unit. A `static_library` is the smallest unit.)"
msgstr ""

#: src/chromium/build-rules.md
msgid ""
"Students might be wondering why we need a gn template, rather than using "
"[gn's built-in support for Rust static libraries](https://gn.googlesource."
"com/gn/+/main/docs/reference.md#func_static_library). The answer is that "
"this template provides support for CXX interop, Rust features, and unit "
"tests, some of which we'll use later."
msgstr ""

#: src/chromium/build-rules/unsafe.md
msgid "Including `unsafe` Rust Code"
msgstr ""

#: src/chromium/build-rules/unsafe.md
msgid ""
"Unsafe Rust code is forbidden in `rust_static_library` by default --- it "
"won't compile. If you need unsafe Rust code, add `allow_unsafe = true` to "
"the gn target. (Later in the course we'll see circumstances where this is "
"necessary.)"
msgstr ""

#: src/chromium/build-rules/unsafe.md
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [\n"
"    \"lib.rs\",\n"
"    \"hippopotamus.rs\"\n"
"  ]\n"
"  allow_unsafe = true\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules/depending.md
msgid "Simply add the above target to the `deps` of some Chromium C++ target."
msgstr ""

#: src/chromium/build-rules/depending.md
msgid ""
"```gn\n"
"import(\"//build/rust/rust_static_library.gni\")\n"
"\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"}\n"
"\n"
"# or source_set, static_library etc.\n"
"component(\"preexisting_cpp\") {\n"
"  deps = [ \":my_rust_lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Types are elided in Rust code, which makes a good IDE even more useful than "
"for C++. Visual Studio code works well for Rust in Chromium. To use it,"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Ensure your VSCode has the `rust-analyzer` extension, not earlier forms of "
"Rust support"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"`gn gen out/Debug --export-rust-project` (or equivalent for your output "
"directory)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid "`ln -s out/Debug/rust-project.json rust-project.json`"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"A demo of some of the code annotation and exploration features of rust-"
"analyzer might be beneficial if the audience are naturally skeptical of IDEs."
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"The following steps may help with the demo (but feel free to instead use a "
"piece of Chromium-related Rust that you are most familiar with):"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid "Open `components/qr_code_generator/qr_code_generator_ffi_glue.rs`"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Place the cursor over the `QrCode::new` call (around line 26) in "
"\\`qr_code_generator_ffi_glue.rs"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **show documentation** (typical bindings: vscode = ctrl k i; vim/CoC = "
"K)."
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **go to definition** (typical bindings: vscode = F12; vim/CoC = g d). "
"(This will take you to `//third_party/rust/.../qr_code-.../src/lib.rs`.)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **outline** and navigate to the `QrCode::with_bits` method (around line "
"164; the outline is in the file explorer pane in vscode; typical vim/CoC "
"bindings = space o)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"Demo **type annotations** (there are quote a few nice examples in the "
"`QrCode::with_bits` method)"
msgstr ""

#: src/chromium/build-rules/vscode.md
msgid ""
"It may be worth pointing out that `gn gen ... --export-rust-project` will "
"need to be rerun after editing `BUILD.gn` files (which we will do a few "
"times throughout the exercises in this session)."
msgstr ""

#: src/exercises/chromium/build-rules.md
#, fuzzy
msgid "Build rules exercise"
msgstr "Reglas de Compilaci√≥n (Build)"

#: src/exercises/chromium/build-rules.md
msgid ""
"In your Chromium build, add a new Rust target to `//ui/base/BUILD.gn` "
"containing:"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"**Important**: note that `no_mangle` here is considered a type of unsafety "
"by the Rust compiler, so you'll need to to allow unsafe code in your `gn` "
"target."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Add this new Rust target as a dependency of `//ui/base:base`. Declare this "
"function at the top of `ui/base/resource/resource_bundle.cc` (later, we'll "
"see how this can be automated by bindings generation tools):"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Call this function from somewhere in `ui/base/resource/resource_bundle.cc` - "
"we suggest the top of `ResourceBundle::MaybeMangleLocalizedString`. Build "
"and run Chromium, and ensure that \"Hello from Rust!\" is printed lots of "
"times."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"If you use VSCode, now set up Rust to work well in VSCode. It will be useful "
"in subsequent exercises. If you've succeeded, you will be able to use right-"
"click \"Go to definition\" on `println!`."
msgstr ""

#: src/exercises/chromium/build-rules.md
#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Where to find help"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"The options available to the [`rust_static_library` gn template](https://"
"source.chromium.org/chromium/chromium/src/+/main:build/rust/"
"rust_static_library.gni;l=16)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Information about [`#[no_mangle]`](https://doc.rust-lang.org/beta/reference/"
"abi.html#the-no_mangle-attribute)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Information about [`extern \"C\"`](https://doc.rust-lang.org/std/keyword."
"extern.html)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"Information about gn's [`--export-rust-project`](https://gn.googlesource.com/"
"gn/+/main/docs/reference.md#compilation-database) switch"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"[How to install rust-analyzer in VSCode](https://code.visualstudio.com/docs/"
"languages/rust)"
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"This example is unusual because it boils down to the lowest-common-"
"denominator interop language, C. Both C++ and Rust can natively declare and "
"call C ABI functions. Later in the course, we'll connect C++ directly to "
"Rust."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"`allow_unsafe = true` is required here because `#[no_mangle]` might allow "
"Rust to generate two functions with the same name, and Rust can no longer "
"guarantee that the right one is called."
msgstr ""

#: src/exercises/chromium/build-rules.md
msgid ""
"If you need a pure Rust executable, you can also do that using the "
"`rust_executable` gn template."
msgstr ""

#: src/chromium/testing.md
msgid ""
"Rust community typically authors unit tests in a module placed in the same "
"source file as the code being tested. This was covered [earlier](../testing."
"md) in the course and looks like this:"
msgstr ""

#: src/chromium/testing.md
msgid ""
"In Chromium we place unit tests in a separate source file and we continue to "
"follow this practice for Rust --- this makes tests consistently discoverable "
"and helps to avoid rebuilding `.rs` files a second time (in the `test` "
"configuration)."
msgstr ""

#: src/chromium/testing.md
msgid ""
"This results in the following options for testing Rust code in Chromium:"
msgstr ""

#: src/chromium/testing.md
msgid ""
"Native Rust tests (i.e. `#[test]`). Discouraged outside of `//third_party/"
"rust`."
msgstr ""

#: src/chromium/testing.md
msgid ""
"`gtest` tests authored in C++ and exercising Rust via FFI calls. Sufficient "
"when Rust code is just a thin FFI layer and the existing unit tests provide "
"sufficient coverage for the feature."
msgstr ""

#: src/chromium/testing.md
msgid ""
"`gtest` tests authored in Rust and using the crate under test through its "
"public API (using `pub mod for_testing { ... }` if needed). This is the "
"subject of the next few slides."
msgstr ""

#: src/chromium/testing.md
msgid ""
"Mention that native Rust tests of third-party crates should eventually be "
"exercised by Chromium bots. (Such testing is needed rarely --- only after "
"adding or updating third-party crates.)"
msgstr ""

#: src/chromium/testing.md
msgid ""
"Some examples may help illustrate when C++ `gtest` vs Rust `gtest` should be "
"used:"
msgstr ""

#: src/chromium/testing.md
msgid ""
"QR has very little functionality in the first-party Rust layer (it's just a "
"thin FFI glue) and therefore uses the existing C++ unit tests for testing "
"both the C++ and the Rust implementation (parameterizing the tests so they "
"enable or disable Rust using a `ScopedFeatureList`)."
msgstr ""

#: src/chromium/testing.md
msgid ""
"Hypothetical/WIP PNG integration may need to implement memory-safe "
"implementation of pixel transformations that are provided by `libpng` but "
"missing in the `png` crate - e.g. RGBA => BGRA, or gamma correction. Such "
"functionality may benefit from separate tests authored in Rust."
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
msgid ""
"The [`rust_gtest_interop`](https://chromium.googlesource.com/chromium/src/+/"
"main/testing/rust_gtest_interop/README.md) library provides a way to:"
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
msgid ""
"Use a Rust function as a `gtest` testcase (using the `#[gtest(...)]` "
"attribute)"
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
msgid ""
"Use `expect_eq!` and similar macros (similar to `assert_eq!` but not "
"panicking and not terminating the test when the assertion fails)."
msgstr ""

#: src/chromium/testing/rust-gtest-interop.md
#, fuzzy
msgid "Example:"
msgstr "Ejemplo"

#: src/chromium/testing/build-gn.md
msgid ""
"The simplest way to build Rust `gtest` tests is to add them to an existing "
"test binary that already contains tests authored in C++. For example:"
msgstr ""

#: src/chromium/testing/build-gn.md
msgid ""
"```gn\n"
"test(\"ui_base_unittests\") {\n"
"  ...\n"
"  sources += [ \"my_rust_lib_unittest.rs\" ]\n"
"  deps += [ \":my_rust_lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/testing/build-gn.md
msgid ""
"Authoring Rust tests in a separate `static_library` also works, but requires "
"manually declaring the dependency on the support libraries:"
msgstr ""

#: src/chromium/testing/build-gn.md
msgid ""
"```gn\n"
"rust_static_library(\"my_rust_lib_unittests\") {\n"
"  testonly = true\n"
"  is_gtest_unittests = true\n"
"  crate_root = \"my_rust_lib_unittest.rs\"\n"
"  sources = [ \"my_rust_lib_unittest.rs\" ]\n"
"  deps = [\n"
"    \":my_rust_lib\",\n"
"    \"//testing/rust_gtest_interop\",\n"
"  ]\n"
"}\n"
"\n"
"test(\"ui_base_unittests\") {\n"
"  ...\n"
"  deps += [ \":my_rust_lib_unittests\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid ""
"After adding `:my_rust_lib` to GN `deps`, we still need to learn how to "
"import and use `my_rust_lib` from `my_rust_lib_unittest.rs`. We haven't "
"provided an explicit `crate_name` for `my_rust_lib` so its crate name is "
"computed based on the full target path and name. Fortunately we can avoid "
"working with such an unwieldy name by using the `chromium::import!` macro "
"from the automatically-imported `chromium` crate:"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid "\"//ui/base:my_rust_lib\""
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid "Under the covers the macro expands to something similar to:"
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid ""
"More information can be found in [the doc comment](https://source.chromium."
"org/chromium/chromium/src/+/main:build/rust/chromium_prelude/"
"chromium_prelude.rs?q=f:chromium_prelude.rs%20pub.use.*%5Cbimport%5Cb;%20-f:"
"third_party&ss=chromium%2Fchromium%2Fsrc) of the `chromium::import` macro."
msgstr ""

#: src/chromium/testing/chromium-import-macro.md
msgid ""
"`rust_static_library` supports specifying an explicit name via `crate_name` "
"property, but doing this is discouraged. And it is discouraged because the "
"crate name has to be globally unique. crates.io guarantees uniqueness of its "
"crate names so `cargo_crate` GN targets (generated by the `gnrt` tool "
"covered in a later section) use short crate names."
msgstr ""

#: src/exercises/chromium/testing.md
#, fuzzy
msgid "Testing exercise"
msgstr "Rust on Exercism"

#: src/exercises/chromium/testing.md
msgid "Time for another exercise!"
msgstr ""

#: src/exercises/chromium/testing.md
msgid "In your Chromium build:"
msgstr ""

#: src/exercises/chromium/testing.md
msgid ""
"Add a testable function next to `hello_from_rust`. Some suggestions: adding "
"two integers received as arguments, computing the nth Fibonacci number, "
"summing integers in a slice, etc."
msgstr ""

#: src/exercises/chromium/testing.md
msgid "Add a separate `..._unittest.rs` file with a test for the new function."
msgstr ""

#: src/exercises/chromium/testing.md
msgid "Add the new tests to `BUILD.gn`."
msgstr ""

#: src/exercises/chromium/testing.md
msgid "Build the tests, run them, and verify that the new test works."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"The Rust community offers multiple options for C++/Rust interop, with new "
"tools being developed all the time. At the moment, Chromium uses a tool "
"called CXX."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"You describe your whole language boundary in an interface definition "
"language (which looks a lot like Rust) and then CXX tools generate "
"declarations for functions and types in both Rust and C++."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
#, fuzzy
msgid ""
"See the [CXX tutorial](https://cxx.rs/tutorial.html) for a full example of "
"using this."
msgstr ""
"Consulta el [tutorial de CXX](https://cxx.rs/tutorial.html) para ver un "
"ejemplo completo de su uso."

#: src/chromium/interoperability-with-cpp.md
msgid ""
"Talk through the diagram. Explain that behind the scenes, this is doing just "
"the same as you previously did. Point out that automating the process has "
"the following benefits:"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"The tool guarantees that the C++ and Rust sides match (e.g. you get compile "
"errors if the `#[cxx::bridge]` doesn't match the actual C++ or Rust "
"definitions, but with out-of-sync manual bindings you'd get Undefined "
"Behavior)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"The tool automates generation of FFI thunks (small, C-ABI-compatible, free "
"functions) for non-C features (e.g. enabling FFI calls into Rust or C++ "
"methods; manual bindings would require authoring such top-level, free "
"functions manually)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid "The tool and the library can handle a set of core types - for example:"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"`&[T]` can be passed across the FFI boundary, even though it doesn't "
"guarantee any particular ABI or memory layout. With manual bindings `std::"
"span<T>` / `&[T]` have to be manually destructured and rebuilt out of a "
"pointer and length - this is error-prone given that each language represents "
"empty slices slightly differently)"
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"Smart pointers like `std::unique_ptr<T>`, `std::shared_ptr<T>`, and/or `Box` "
"are natively supported. With manual bindings, one would have to pass C-ABI-"
"compatible raw pointers, which would increase lifetime and memory-safety "
"risks."
msgstr ""

#: src/chromium/interoperability-with-cpp.md
msgid ""
"`rust::String` and `CxxString` types understand and maintain differences in "
"string representation across the languages (e.g. `rust::String::lossy` can "
"build a Rust string from non-UTF8 input and `rust::String::c_str` can NUL-"
"terminate a string)."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid ""
"CXX requires that the whole C++/Rust boundary is declared in `cxx::bridge` "
"modules inside `.rs` source code."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "\"example/include/blobstore.h\""
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "// Definitions of Rust types and functions go here\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Point out:"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid ""
"Although this looks like a regular Rust `mod`, the `#[cxx::bridge]` "
"procedural macro does complex things to it. The generated code is quite a "
"bit more sophisticated - though this does still result in a `mod` called "
"`ffi` in your code."
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Native support for C++'s `std::unique_ptr` in Rust"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
#, fuzzy
msgid "Native support for Rust slices in C++"
msgstr "Asistencia integrada para pruebas."

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Calls from C++ to Rust, and Rust types (in the top part)"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid "Calls from Rust to C++, and C++ types (in the bottom part)"
msgstr ""

#: src/chromium/interoperability-with-cpp/example-bindings.md
msgid ""
"**Common misconception**: It _looks_ like a C++ header is being parsed by "
"Rust, but this is misleading. This header is never interpreted by Rust, but "
"simply `#include`d in the generated C++ code for the benefit of C++ "
"compilers."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
#, fuzzy
msgid ""
"By far the most useful page when using CXX is the [type reference](https://"
"cxx.rs/bindings.html)."
msgstr ""
"Muestra la correspondencia entre [los tipos de Rust y C++](https://cxx.rs/"
"bindings.html):"

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid "CXX fundamentally suits cases where:"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"Your Rust-C++ interface is sufficiently simple that you can declare all of "
"it."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"You're using only the types natively supported by CXX already, for example "
"`std::unique_ptr`, `std::string`, `&[u8]` etc."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"It has many limitations --- for example lack of support for Rust's `Option` "
"type."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"These limitations constrain us to using Rust in Chromium only for well "
"isolated \"leaf nodes\" rather than for arbitrary Rust-C++ interop. When "
"considering a use-case for Rust in Chromium, a good starting point is to "
"draft the CXX bindings for the language boundary to see if it appears simple "
"enough."
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"You should also discuss some of the other sticky points with CXX, for "
"example:"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid ""
"Its error handling is based around C++ exceptions (given on the next slide)"
msgstr ""

#: src/chromium/interoperability-with-cpp/limitations-of-cxx.md
msgid "Function pointers are awkward to use."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"CXX's [support for `Result<T,E>`](https://cxx.rs/binding/result.html) relies "
"on C++ exceptions, so we can't use that in Chromium. Alternatives:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid "The `T` part of `Result<T, E>` can be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Returned via out parameters (e.g. via `&mut T`). This requires that `T` can "
"be passed across the FFI boundary - for example `T` has to be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid "A primitive type (like `u32` or `usize`)"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"A type natively supported by `cxx` (like `UniquePtr<T>`) that has a suitable "
"default value to use in a failure case (_unlike_ `Box<T>`)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Retained on the Rust side, and exposed via reference. This may be needed "
"when `T` is a Rust type, which cannot be passed across the FFI boundary, and "
"cannot be stored in `UniquePtr<T>`."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid "The `E` part of `Result<T, E>` can be:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Returned as a boolean (e.g. `true` representing success, and `false` "
"representing failure)"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling.md
msgid ""
"Preserving error details is in theory possible, but so far hasn't been "
"needed in practice."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
#, fuzzy
msgid "CXX Error Handling: QR Example"
msgstr "Manejo de Errores"

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"The QR code generator is [an example](https://source.chromium.org/chromium/"
"chromium/src/+/main:components/qr_code_generator/qr_code_generator_ffi_glue."
"rs;l=13-18;drc=7bf1b75b910ca430501b9c6a74c1d18a0223ecca) where a boolean is "
"used to communicate success vs failure, and where the successful result can "
"be passed across the FFI boundary:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid "\"qr_code_generator\""
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"Students may be curious about the semantics of the `out_qr_size` output. "
"This is not the size of the vector, but the size of the QR code (and "
"admittedly it is a bit redundant - this is the square root of the size of "
"the vector)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"It may be worth pointing out the importance of initializing `out_qr_size` "
"before calling into the Rust function. Creation of a Rust reference that "
"points to uninitialized memory results in Undefined Behavior (unlike in C++, "
"when only the act of dereferencing such memory results in UB)."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-qr.md
msgid ""
"If students ask about `Pin`, then explain why CXX needs it for mutable "
"references to C++ data: the answer is that C++ data can‚Äôt be moved around "
"like Rust data, because it may contain self-referential pointers."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
#, fuzzy
msgid "CXX Error Handling: PNG Example"
msgstr "Manejo de Errores"

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"A prototype of a PNG decoder illustrates what can be done when the "
"successful result cannot be passed across the FFI boundary:"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid "\"gfx::rust_bindings\""
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"/// This returns an FFI-friendly equivalent of `Result<PngReader<'a>,\n"
"        /// ()>`.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid "/// C++ bindings for the `crate::png::ResultOfPngReader` type.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid "/// C++ bindings for the `crate::png::PngReader` type.\n"
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"`PngReader` and `ResultOfPngReader` are Rust types --- objects of these "
"types cannot cross the FFI boundary without indirection of a `Box<T>`. We "
"can't have an `out_parameter: &mut PngReader`, because CXX doesn't allow C++ "
"to store Rust objects by value."
msgstr ""

#: src/chromium/interoperability-with-cpp/error-handling-png.md
msgid ""
"This example illustrates that even though CXX doesn't support arbitrary "
"generics nor templates, we can still pass them across the FFI boundary by "
"manually specializing / monomorphizing them into a non-generic type. In the "
"example `ResultOfPngReader` is a non-generic type that forwards into "
"appropriate methods of `Result<T, E>` (e.g. into `is_err`, `unwrap`, and/or "
"`as_mut`)."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "Using cxx in Chromium"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"In Chromium, we define an independent `#[cxx::bridge] mod` for each leaf-"
"node where we want to use Rust. You'd typically have one for each "
"`rust_static_library`. Just add"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"```gn\n"
"cxx_bindings = [ \"my_rust_file.rs\" ]\n"
"   # list of files containing #[cxx::bridge], not all source files\n"
"allow_unsafe = true\n"
"```"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"to your existing `rust_static_library` target alongside `crate_root` and "
"`sources`."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "C++ headers will be generated at a sensible location, so you can just"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "\"ui/base/my_rust_file.rs.h\""
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"You will find some utility functions in `//base` to convert to/from Chromium "
"C++ types to CXX Rust types --- for example [`SpanToRustSlice`](https://"
"source.chromium.org/chromium/chromium/src/+/main:base/containers/span_rust.h;"
"l=21)."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid "Students may ask --- why do we still need `allow_unsafe = true`?"
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"The broad answer is that no C/C++ code is \"safe\" by the normal Rust "
"standards. Calling back and forth to C/C++ from Rust may do arbitrary things "
"to memory, and compromise the safety of Rust's own data layouts. Presence of "
"_too many_ `unsafe` keywords in C/C++ interop can harm the signal-to-noise "
"ratio of such a keyword, and is [controversial](https://steveklabnik.com/"
"writing/the-cxx-debate), but strictly, bringing any foreign code into a Rust "
"binary can cause unexpected behavior from Rust's perspective."
msgstr ""

#: src/chromium/interoperability-with-cpp/using-cxx-in-chromium.md
msgid ""
"The narrow answer lies in the diagram at the top of [this page](../"
"interoperability-with-cpp.md) --- behind the scenes, CXX generates Rust "
"`unsafe` and `extern \"C\"` functions just like we did manually in the "
"previous section."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
#, fuzzy
msgid "Exercise: Interoperability with C++"
msgstr "Interoperabilidad con C"

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Part one"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"In the Rust file you previously created, add a `#[cxx::bridge]` which "
"specifies a single function, to be called from C++, called "
"`hello_from_rust`, taking no parameters and returning no value."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Modify your previous `hello_from_rust` function to remove `extern \"C\"` and "
"`#[no_mangle]`. This is now just a standard Rust function."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Modify your `gn` target to build these bindings."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"In your C++ code, remove the forward-declaration of `hello_from_rust`. "
"Instead, include the generated header file."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Build and run!"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Part two"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"It's a good idea to play with CXX a little. It helps you think about how "
"flexible Rust in Chromium actually is."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
#, fuzzy
msgid "Some things to try:"
msgstr "Algunas notas:"

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Call back into C++ from Rust. You will need:"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"An additional header file which you can `include!` from your `cxx::bridge`. "
"You'll need to declare your C++ function in that new header file."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"An `unsafe` block to call such a function, or alternatively specify the "
"`unsafe` keyword in your `#[cxx::bridge]` [as described here](https://cxx.rs/"
"extern-c++.html#functions-and-member-functions)."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"You may also need to `#include \"third_party/rust/cxx/v1/crate/include/cxx."
"h\"`"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Pass a C++ string from C++ into Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Pass a reference to a C++ object into Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Intentionally get the Rust function signatures mismatched from the `#[cxx::"
"bridge]`, and get used to the errors you see."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Intentionally get the C++ function signatures mismatched from the `#[cxx::"
"bridge]`, and get used to the errors you see."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Pass a `std::unique_ptr` of some type from C++ into Rust, so that Rust can "
"own some C++ object."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Create a Rust object and pass it into C++, so that C++ owns it. (Hint: you "
"need a `Box`)."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Declare some methods on a C++ type. Call them from Rust."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Declare some methods on a Rust type. Call them from C++."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Part three"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"Now you understand the strengths and limitations of CXX interop, think of a "
"couple of use-cases for Rust in Chromium where the interface would be "
"sufficiently simple. Sketch how you might define that interface."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
#, fuzzy
msgid "The [`cxx` binding reference](https://cxx.rs/bindings.html)"
msgstr ""
"Muestra la correspondencia entre [los tipos de Rust y C++](https://cxx.rs/"
"bindings.html):"

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"The [`rust_static_library` gn template](https://source.chromium.org/chromium/"
"chromium/src/+/main:build/rust/rust_static_library.gni;l=16)"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid "Some of the questions you may encounter:"
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"I'm seeing a problem initializing a variable of type X with type Y, where X "
"and Y are both function types. This is because your C++ function doesn't "
"quite match the declaration in your `cxx::bridge`."
msgstr ""

#: src/exercises/chromium/interoperability-with-cpp.md
msgid ""
"I seem to be able to freely convert C++ references into Rust references. "
"Doesn't that risk UB? For CXX's _opaque_ types, no, because they are zero-"
"sized. For CXX trivial types yes, it's _possible_ to cause UB, although "
"CXX's design makes it quite difficult to craft such an example."
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid ""
"Rust libraries are called \"crates\" and are found at [crates.io](https://"
"crates.io). It's _very easy_ for Rust crates to depend upon one another. So "
"they do!"
msgstr ""

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "C++ library"
msgstr "Biblioteca"

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "Rust crate"
msgstr "Ecosistema Rust"

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "Build system"
msgstr "Ecosistema Rust"

#: src/chromium/adding-third-party-crates.md
msgid "Lots"
msgstr ""

#: src/chromium/adding-third-party-crates.md
#, fuzzy
msgid "Consistent: `Cargo.toml`"
msgstr "`Cargo.toml`:"

#: src/chromium/adding-third-party-crates.md
msgid "Typical library size"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Large-ish"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Small"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Transitive dependencies"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "Few"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "For a Chromium engineer, this has pros and cons:"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid ""
"All crates use a common build system so we can automate their inclusion into "
"Chromium..."
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid ""
"... but, crates typically have transitive dependencies, so you will likely "
"have to bring in multiple libraries."
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "We'll discuss:"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "How to put a crate in the Chromium source code tree"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "How to make `gn` build rules for it"
msgstr ""

#: src/chromium/adding-third-party-crates.md
msgid "How to audit its source code for sufficient safety."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid "Configuring the `Cargo.toml` file to add crates"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"Chromium has a single set of centrally-managed direct crate dependencies. "
"These are managed through a single [`Cargo.toml`](https://source.chromium."
"org/chromium/chromium/src/+/main:third_party/rust/chromium_crates_io/Cargo."
"toml):"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"```toml\n"
"[dependencies]\n"
"bitflags = \"1\"\n"
"cfg-if = \"1\"\n"
"cxx = \"1\"\n"
"# lots more...\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"As with any other `Cargo.toml`, you can specify [more details about the "
"dependencies](https://doc.rust-lang.org/cargo/reference/specifying-"
"dependencies.html) --- most commonly, you'll want to specify the `features` "
"that you wish to enable in the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-cargo-toml.md
msgid ""
"When adding a crate to Chromium, you'll often need to provide some extra "
"information in an additional file, `gnrt_config.toml`, which we'll meet next."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"Alongside `Cargo.toml` is [`gnrt_config.toml`](https://source.chromium.org/"
"chromium/chromium/src/+/main:third_party/rust/chromium_crates_io/gnrt_config."
"toml). This contains Chromium-specific extensions to crate handling."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"If you add a new crate, you should specify at least the `group`. This is one "
"of:"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid "For instance,"
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"Depending on the crate source code layout, you may also need to use this "
"file to specify where its `LICENSE` file(s) can be found."
msgstr ""

#: src/chromium/adding-third-party-crates/configuring-gnrt-config-toml.md
msgid ""
"Later, we'll see some other things you will need to configure in this file "
"to resolve problems."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"A tool called `gnrt` knows how to download crates and how to generate `BUILD."
"gn` rules."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid "To start, download the crate you want like this:"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"Although the `gnrt` tool is part of the Chromium source code, by running "
"this command you will be downloading and running its dependencies from "
"`crates.io`. See [the earlier section](../cargo.md) discussing this security "
"decision."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid "This `vendor` command may download:"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
#, fuzzy
msgid "Your crate"
msgstr "Crates √ötiles"

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid "Direct and transitive dependencies"
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"New versions of other crates, as required by `cargo` to resolve the complete "
"set of crates required by Chromium."
msgstr ""

#: src/chromium/adding-third-party-crates/downloading-crates.md
msgid ""
"Chromium maintains patches for some crates, kept in `//third_party/rust/"
"chromium_crates_io/patches`. These will be reapplied automatically, but if "
"patching fails you may need to take manual action."
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"Once you've downloaded the crate, generate the `BUILD.gn` files like this:"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid "Now run `git status`. You should find:"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"At least one new crate source code in `third_party/rust/chromium_crates_io/"
"vendor`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"At least one new `BUILD.gn` in `third_party/rust/<crate name>/v<major semver "
"version>`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid "An appropriate `README.chromium`"
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
#, fuzzy
msgid ""
"The \"major semver version\" is a [Rust \"semver\" version number](https://"
"doc.rust-lang.org/cargo/reference/semver.html)."
msgstr ""
"Consulta el libro [Rust Reference](https://doc.rust-lang.org/reference/type-"
"layout.html)."

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"Take a close look, especially at the things generated in `third_party/rust`."
msgstr ""

#: src/chromium/adding-third-party-crates/generating-gn-build-rules.md
msgid ""
"Talk a little about semver --- and specifically the way that in Chromium "
"it's to allow multiple incompatible versions of a crate, which is "
"discouraged but sometimes necessary in the Cargo ecosystem."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid ""
"If your build fails, it may be because of a `build.rs`: programs which do "
"arbitrary things at build time. This is fundamentally at odds with the "
"design of `gn` and `ninja` which aim for static, deterministic, build rules "
"to maximize parallelism and repeatability of builds."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid ""
"Some `build.rs` actions are automatically supported; others require action:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "build script effect"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Supported by our gn templates"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Work required by you"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Checking rustc version to configure features on and off"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "None"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Checking platform or CPU to configure features on and off"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
#, fuzzy
msgid "Generating code"
msgstr "Gen√©ricos"

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Yes - specify in `gnrt_config.toml`"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Building C/C++"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Patch around it"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid "Arbitrary other actions"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems.md
msgid ""
"Fortunately, most crates don't contain a build script, and fortunately, most "
"build scripts only do the top two actions."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"If `ninja` complains about missing files, check the `build.rs` to see if it "
"writes source code files."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"If so, modify [`gnrt_config.toml`](../configuring-gnrt-config-toml.md) to "
"add `build-script-outputs` to the crate. If this is a transitive dependency, "
"that is, one on which Chromium code should not directly depend, also add "
"`allow-first-party-usage=false`. There are several examples already in that "
"file:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"```toml\n"
"[crate.unicode-linebreak]\n"
"allow-first-party-usage = false\n"
"build-script-outputs = [\"tables.rs\"]\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-generate-code.md
msgid ""
"Now rerun [`gnrt.py -- gen`](../generating-gn-build-rules.md) to regenerate "
"`BUILD.gn` files to inform ninja that this particular output file is input "
"to subsequent build steps."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid ""
"Some crates use the [`cc`](https://crates.io/crates/cc) crate to build and "
"link C/C++ libraries. Other crates parse C/C++ using [`bindgen`](https://"
"crates.io/crates/bindgen) within their build scripts. These actions can't be "
"supported in a Chromium context --- our gn, ninja and LLVM build system is "
"very specific in expressing relationships between build actions."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "So, your options are:"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "Avoid these crates"
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid "Apply a patch to the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/resolving-problems/build-scripts-which-take-arbitrary-actions.md
msgid ""
"Patches should be kept in `third_party/rust/chromium_crates_io/patches/"
"<crate>` - see for example the [patches against the `cxx` crate](https://"
"source.chromium.org/chromium/chromium/src/+/main:third_party/rust/"
"chromium_crates_io/patches/cxx/) - and will be applied automatically by "
"`gnrt` each time it upgrades the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid ""
"Once you've added a third-party crate and generated build rules, depending "
"on a crate is simple. Find your `rust_static_library` target, and add a "
"`dep` on the `:lib` target within your crate."
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
#, fuzzy
msgid "Specifically,"
msgstr "Espec√≠fico del SO"

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid ""
"```bob\n"
"                     +------------+      +----------------------+\n"
"\"//third_party/rust\" | crate name | \"/v\" | major semver version | \":"
"lib\"\n"
"                     +------------+      +----------------------+\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/depending-on-a-crate.md
msgid ""
"```gn\n"
"rust_static_library(\"my_rust_lib\") {\n"
"  crate_root = \"lib.rs\"\n"
"  sources = [ \"lib.rs\" ]\n"
"  deps = [ \"//third_party/rust/example_rust_crate/v1:lib\" ]\n"
"}\n"
"```"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid "Auditing Third Party Crates"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Adding new libraries is subject to Chromium's standard [policies](https://"
"chromium.googlesource.com/chromium/src/+/refs/heads/main/docs/rust."
"md#Third_party-review), but of course also subject to security review. As "
"you may be bringing in not just a single crate but also transitive "
"dependencies, there may be a lot of code to review. On the other hand, safe "
"Rust code can have limited negative side effects. How should you review it?"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Over time Chromium aims to move to a process based around [cargo vet]"
"(https://mozilla.github.io/cargo-vet/)."
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Meanwhile, for each new crate addition, we are checking for the following:"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Understand why each crate is used. What's the relationship between crates? "
"If the build system for each crate contains a `build.rs` or procedural "
"macros, work out what they're for. Are they compatible with the way Chromium "
"is normally built?"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid "Check each crate seems to be reasonably well maintained"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Use `cd third-party/rust/chromium_crates_io; cargo audit` to check for known "
"vulnerabilities (first you'll need to `cargo install cargo-audit`, which "
"ironically involves downloading lots of dependencies from the internet[2](../"
"cargo.md))"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Ensure any `unsafe` code is good enough for the [Rule of Two](https://"
"chromium.googlesource.com/chromium/src/+/main/docs/security/rule-of-2."
"md#unsafe-code-in-safe-languages)"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid "Check for any use of `fs` or `net` APIs"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"Read all the code at a sufficient level to look for anything out of place "
"that might have been maliciously inserted. (You can't realistically aim for "
"100% perfection here: there's often just too much code.)"
msgstr ""

#: src/chromium/adding-third-party-crates/reviews-and-audits.md
msgid ""
"These are just guidelines --- work with reviewers from `security@chromium."
"org` to work out the right way to become confident of the crate."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "Checking Crates into Chromium Source Code"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "`git status` should reveal:"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "Crate code in `//third_party/rust/chromium_crates_io`"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"Metadata (`BUILD.gn` and `README.chromium`) in `//third_party/rust/<crate>/"
"<version>`"
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid "Please also add an `OWNERS` file in the latter location."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"You should land all this, along with your `Cargo.toml` and `gnrt_config."
"toml` changes, into the Chromium repo."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"**Important**: you need to use `git add -f` because otherwise `.gitignore` "
"files may result in some files being skipped."
msgstr ""

#: src/chromium/adding-third-party-crates/checking-in.md
msgid ""
"As you do so, you might find presubmit checks fail because of non-inclusive "
"language. This is because Rust crate data tends to include names of git "
"branches, and many projects still use non-inclusive terminology there. So "
"you may need to run:"
msgstr ""

#: src/chromium/adding-third-party-crates/keeping-up-to-date.md
msgid ""
"As the OWNER of any third party Chromium dependency, you are [expected to "
"keep it up to date with any security fixes](https://chromium.googlesource."
"com/chromium/src/+/main/docs/adding_to_third_party.md#add-owners). It is "
"hoped that we will soon automate this for Rust crates, but for now, it's "
"still your responsibility just as it is for any other third party dependency."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"Add [uwuify](https://crates.io/crates/uwuify) to Chromium, turning off the "
"crate's [default features](https://doc.rust-lang.org/cargo/reference/"
"features.html#the-default-feature). Assume that the crate will be used in "
"shipping Chromium, but won't be used to handle untrustworthy input."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"(In the next exercise we'll use uwuify from Chromium, but feel free to skip "
"ahead and do that now if you like. Or, you could create a new "
"[`rust_executable` target](https://source.chromium.org/chromium/chromium/src/"
"+/main:build/rust/rust_executable.gni) which uses `uwuify`)."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "Students will need to download lots of transitive dependencies."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "The total crates needed are:"
msgstr ""

#: src/exercises/chromium/third-party.md
#, fuzzy
msgid "`instant`,"
msgstr "Constante"

#: src/exercises/chromium/third-party.md
msgid "`lock_api`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`parking_lot`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`parking_lot_core`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`redox_syscall`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`scopeguard`,"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`smallvec`, and"
msgstr ""

#: src/exercises/chromium/third-party.md
msgid "`uwuify`."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"If students are downloading even more than that, they probably forgot to "
"turn off the default features."
msgstr ""

#: src/exercises/chromium/third-party.md
msgid ""
"Thanks to [Daniel Liu](https://github.com/Daniel-Liu-c0deb0t) for this crate!"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid "Bringing It Together --- Exercise"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"In this exercise, you're going to add a whole new Chromium feature, bringing "
"together everything you already learned."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid "The Brief from Product Management"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"A community of pixies has been discovered living in a remote rainforest. "
"It's important that we get Chromium for Pixies delivered to them as soon as "
"possible."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"The requirement is to translate all Chromium's UI strings into Pixie "
"language."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"There's not time to wait for proper translations, but fortunately pixie "
"language is very close to English, and it turns out there's a Rust crate "
"which does the translation."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"In fact, you already [imported that crate in the previous exercise](https://"
"crates.io/crates/uwuify)."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"(Obviously, real translations of Chrome require incredible care and "
"diligence. Don't ship this!)"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid "Steps"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"Modify `ResourceBundle::MaybeMangleLocalizedString` so that it uwuifies all "
"strings before display. In this special build of Chromium, it should always "
"do this irrespective of the setting of `mangle_localized_strings_`."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"If you've done everything right across all these exercises, congratulations, "
"you should have created Chrome for pixies!"
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"UTF16 vs UTF8. Students should be aware that Rust strings are always UTF8, "
"and will probably decide that it's better to do the conversion on the C++ "
"side using `base::UTF16ToUTF8` and back again."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"If students decide to do the conversion on the Rust side, they'll need to "
"consider [`String::from_utf16`](https://doc.rust-lang.org/std/string/struct."
"String.html#method.from_utf16), consider error handling, and consider which "
"[CXX supported types can transfer a lot of u16s](https://cxx.rs/binding/"
"slice.html)."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"Students may design the C++/Rust boundary in several different ways, e.g. "
"taking and returning strings by value, or taking a mutable reference to a "
"string. If a mutable reference is used, CXX will likely tell the student "
"that they need to use [`Pin`](https://doc.rust-lang.org/std/pin/). You may "
"need to explain what `Pin` does, and then explain why CXX needs it for "
"mutable references to C++ data: the answer is that C++ data can't be moved "
"around like Rust data, because it may contain self-referential pointers."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"The C++ target containing `ResourceBundle::MaybeMangleLocalizedString` will "
"need to depend on a `rust_static_library` target. The student probably "
"already did this."
msgstr ""

#: src/exercises/chromium/bringing-it-together.md
msgid ""
"The `rust_static_library` target will need to depend on `//third_party/rust/"
"uwuify/v0_2:lib`."
msgstr ""

#: src/exercises/chromium/solutions.md
msgid ""
"Solutions to the Chromium exercises can be found in [this series of CLs]"
"(https://chromium-review.googlesource.com/c/chromium/src/+/5096560)."
msgstr ""

#: src/bare-metal.md
msgid "Welcome to Bare Metal Rust"
msgstr "Te damos la bienvenida a Bare Metal Rust"

#: src/bare-metal.md
msgid ""
"This is a standalone one-day course about bare-metal Rust, aimed at people "
"who are familiar with the basics of Rust (perhaps from completing the "
"Comprehensive Rust course), and ideally also have some experience with bare-"
"metal programming in some other language such as C."
msgstr ""
"Este es un curso independiente de un d√≠a sobre Rust bare-metal, dirigido a "
"personas que est√°n familiarizadas con los conceptos b√°sicos de Rust (tal vez "
"despu√©s de completar el curso Comprehensive Rust). Lo ideal ser√≠a que "
"tambi√©n tuvieran experiencia con la programaci√≥n bare-metal en otros "
"lenguajes, como C."

#: src/bare-metal.md
msgid ""
"Today we will talk about 'bare-metal' Rust: running Rust code without an OS "
"underneath us. This will be divided into several parts:"
msgstr ""
"Hoy vamos a hablar de Rust \"bare-metal\": ejecutar c√≥digo de Rust sin un "
"sistema operativo. Se dividir√° en varias partes:"

#: src/bare-metal.md
msgid "What is `no_std` Rust?"
msgstr "¬øQu√© es `no_std` en Rust?"

#: src/bare-metal.md
msgid "Writing firmware for microcontrollers."
msgstr "Escribir firmware para microcontroladores."

#: src/bare-metal.md
msgid "Writing bootloader / kernel code for application processors."
msgstr "Escribir c√≥digo bootloader o kernel para procesadores de aplicaciones."

#: src/bare-metal.md
msgid "Some useful crates for bare-metal Rust development."
msgstr "Algunos crates √∫tiles para el desarrollo de Rust bare-metal."

#: src/bare-metal.md
msgid ""
"For the microcontroller part of the course we will use the [BBC micro:bit]"
"(https://microbit.org/) v2 as an example. It's a [development board](https://"
"tech.microbit.org/hardware/) based on the Nordic nRF51822 microcontroller "
"with some LEDs and buttons, an I2C-connected accelerometer and compass, and "
"an on-board SWD debugger."
msgstr ""
"En la parte del curso dedicada a los microcontroladores, utilizaremos la "
"versi√≥n 2 de [BBC micro:bit](https://microbit.org/) como ejemplo. Es una "
"[placa de desarrollo](https://tech.microbit.org/hardware/) basada en el "
"microcontrolador Nordic nRF51822 con algunos LED y botones, un aceler√≥metro "
"y una br√∫jula conectados mediante I2C y un depurador SWD integrado."

#: src/bare-metal.md
msgid ""
"To get started, install some tools we'll need later. On gLinux or Debian:"
msgstr ""
"Para empezar, instala algunas de las herramientas que necesitar√°s m√°s "
"adelante. En gLinux o Debian:"

#: src/bare-metal.md
msgid ""
"And give users in the `plugdev` group access to the micro:bit programmer:"
msgstr ""
"Permite a los usuarios del grupo `plugdev` acceder al programador micro:bit:"

#: src/bare-metal.md src/bare-metal/microcontrollers/debugging.md
msgid "On MacOS:"
msgstr "En MacOS:"

#: src/bare-metal/no_std.md
msgid "`core`"
msgstr "`core`"

#: src/bare-metal/no_std.md
msgid "`std`"
msgstr "`std`"

#: src/bare-metal/no_std.md
msgid "Slices, `&str`, `CStr`"
msgstr "Slices, `&str`, `CStr`"

#: src/bare-metal/no_std.md
msgid "`NonZeroU8`..."
msgstr "`NonZeroU8`..."

#: src/bare-metal/no_std.md
msgid "`Option`, `Result`"
msgstr "`Option`, `Result`"

#: src/bare-metal/no_std.md
msgid "`Display`, `Debug`, `write!`..."
msgstr "`Display`, `Debug`, `write!`..."

#: src/bare-metal/no_std.md
msgid "`panic!`, `assert_eq!`..."
msgstr "`panic!`, `assert_eq!`..."

#: src/bare-metal/no_std.md
msgid "`NonNull` and all the usual pointer-related functions"
msgstr "`NonNull` y todas las funciones relacionadas con punteros habituales"

#: src/bare-metal/no_std.md
msgid "`Future` and `async`/`await`"
msgstr "`Future` and `async`/`await`"

#: src/bare-metal/no_std.md
msgid "`fence`, `AtomicBool`, `AtomicPtr`, `AtomicU32`..."
msgstr "`fence`, `AtomicBool`, `AtomicPtr`, `AtomicU32`..."

#: src/bare-metal/no_std.md
msgid "`Duration`"
msgstr "`Duration`"

#: src/bare-metal/no_std.md
msgid "`Box`, `Cow`, `Arc`, `Rc`"
msgstr "`Box`, `Cow`, `Arc`, `Rc`"

#: src/bare-metal/no_std.md
msgid "`Vec`, `BinaryHeap`, `BtreeMap`, `LinkedList`, `VecDeque`"
msgstr "`Vec`, `BinaryHeap`, `BtreeMap`, `LinkedList`, `VecDeque`"

#: src/bare-metal/no_std.md
msgid "`String`, `CString`, `format!`"
msgstr "`String`, `CString`, `format!`"

#: src/bare-metal/no_std.md
msgid "`Error`"
msgstr "`Error`"

#: src/bare-metal/no_std.md
msgid "`Mutex`, `Condvar`, `Barrier`, `Once`, `RwLock`, `mpsc`"
msgstr "`Mutex`, `Condvar`, `Barrier`, `Once`, `RwLock`, `mpsc`"

#: src/bare-metal/no_std.md
msgid "`File` and the rest of `fs`"
msgstr "`File` y el resto de `fs`"

#: src/bare-metal/no_std.md
msgid "`println!`, `Read`, `Write`, `Stdin`, `Stdout` and the rest of `io`"
msgstr "`println!`, `Read`, `Write`, `Stdin`, `Stdout` y el resto de `io`"

#: src/bare-metal/no_std.md
msgid "`Path`, `OsString`"
msgstr "`Path`, `OsString`"

#: src/bare-metal/no_std.md
msgid "`net`"
msgstr "`net`"

#: src/bare-metal/no_std.md
msgid "`Command`, `Child`, `ExitCode`"
msgstr "`Command`, `Child`, `ExitCode`"

#: src/bare-metal/no_std.md
msgid "`spawn`, `sleep` and the rest of `thread`"
msgstr "`spawn`, `sleep` y el resto de `thread`"

#: src/bare-metal/no_std.md
msgid "`SystemTime`, `Instant`"
msgstr "`SystemTime`, `Instant`"

#: src/bare-metal/no_std.md
msgid "`HashMap` depends on RNG."
msgstr "`HashMap` depende de RNG."

#: src/bare-metal/no_std.md
msgid "`std` re-exports the contents of both `core` and `alloc`."
msgstr "`std` vuelve a exportar el contenido de `core` y `alloc`."

#: src/bare-metal/minimal.md
msgid "A minimal `no_std` program"
msgstr "Un programa `no_std` m√≠nimo"

#: src/bare-metal/minimal.md
msgid "This will compile to an empty binary."
msgstr "Se compilar√° en un binario vac√≠o."

#: src/bare-metal/minimal.md
msgid "`std` provides a panic handler; without it we must provide our own."
msgstr ""
"`std` proporciona un controlador de _panic_; sin no hay, debemos "
"proporcionar uno nuestro."

#: src/bare-metal/minimal.md
msgid "It can also be provided by another crate, such as `panic-halt`."
msgstr "Tambi√©n puede proporcionarlo otro crate, como `panic-halt`."

#: src/bare-metal/minimal.md
msgid ""
"Depending on the target, you may need to compile with `panic = \"abort\"` to "
"avoid an error about `eh_personality`."
msgstr ""
"Dependiendo del objetivo, es posible que tengas que compilar con `panic = "
"\"abort\"` para evitar un error sobre `eh_personality`."

#: src/bare-metal/minimal.md
msgid ""
"Note that there is no `main` or any other entry point; it's up to you to "
"define your own entry point. This will typically involve a linker script and "
"some assembly code to set things up ready for Rust code to run."
msgstr ""
"Ten en cuenta que no hay `main` ni ning√∫n otro punto de entrada; depende de "
"ti definir un punto de entrada propio. Esto suele implicar una secuencia de "
"comandos de enlazador y alg√∫n c√≥digo de ensamblado de forma que todo est√© "
"preparado para que se ejecute el c√≥digo de Rust."

#: src/bare-metal/alloc.md
msgid ""
"To use `alloc` you must implement a [global (heap) allocator](https://doc."
"rust-lang.org/stable/std/alloc/trait.GlobalAlloc.html)."
msgstr ""
"Para utilizar `alloc`, debes implementar un [asignador global (de _heap_)]"
"(https://doc.rust-lang.org/stable/std/alloc/trait.GlobalAlloc.html)."

#: src/bare-metal/alloc.md
msgid ""
"// Safe because `HEAP` is only used here and `entry` is only called once.\n"
msgstr ""

#: src/bare-metal/alloc.md
msgid "// Give the allocator some memory to allocate.\n"
msgstr ""

#: src/bare-metal/alloc.md
msgid "// Now we can do things that require heap allocation.\n"
msgstr ""

#: src/bare-metal/alloc.md
#, fuzzy
msgid "\"A string\""
msgstr "String"

#: src/bare-metal/alloc.md
msgid ""
"`buddy_system_allocator` is a third-party crate implementing a basic buddy "
"system allocator. Other crates are available, or you can write your own or "
"hook into your existing allocator."
msgstr ""
"`buddy_system_allocator` es un crate de terceros que implementa un _buddy "
"system allocator_ (una t√©cnica de asignaci√≥n de memoria) b√°sico. Hay otros "
"crates disponibles, pero tambi√©n puedes escribir el tuyo propio o conectarte "
"a tu asignador."

#: src/bare-metal/alloc.md
msgid ""
"The const parameter of `LockedHeap` is the max order of the allocator; i.e. "
"in this case it can allocate regions of up to 2\\*\\*32 bytes."
msgstr ""
"El par√°metro const de `LockedHeap` es el orden m√°ximo del asignador. Es "
"decir, en este caso, puede asignar regiones de hasta 2\\*\\*32 bytes."

#: src/bare-metal/alloc.md
msgid ""
"If any crate in your dependency tree depends on `alloc` then you must have "
"exactly one global allocator defined in your binary. Usually this is done in "
"the top-level binary crate."
msgstr ""
"Si alg√∫n crate del √°rbol de dependencias depende de `alloc`, debes tener "
"exactamente un asignador global definido en el binario. Esto se suele hacer "
"en el crate binario de nivel superior."

#: src/bare-metal/alloc.md
msgid ""
"`extern crate panic_halt as _` is necessary to ensure that the `panic_halt` "
"crate is linked in so we get its panic handler."
msgstr ""
"`extern crate panic_halt as _` es necesario para asegurar que el crate "
"`panic_halt` est√© vinculado y as√≠ podamos obtener su controlador de _panic_."

#: src/bare-metal/alloc.md
msgid "This example will build but not run, as it doesn't have an entry point."
msgstr ""
"Este ejemplo se compilar√° pero no se ejecutar√°, ya que no cuenta con un "
"punto de entrada."

#: src/bare-metal/microcontrollers.md
msgid ""
"The `cortex_m_rt` crate provides (among other things) a reset handler for "
"Cortex M microcontrollers."
msgstr ""
"El crate `cortex_m_rt` proporciona (entre otras cosas) un controlador de "
"reinicio para microcontroladores Cortex M."

#: src/bare-metal/microcontrollers.md
msgid ""
"Next we'll look at how to access peripherals, with increasing levels of "
"abstraction."
msgstr ""
"A continuaci√≥n, veremos c√≥mo se accede a los perif√©ricos con niveles de "
"abstracci√≥n cada vez mayores."

#: src/bare-metal/microcontrollers.md
msgid ""
"The `cortex_m_rt::entry` macro requires that the function have type `fn() -"
"> !`, because returning to the reset handler doesn't make sense."
msgstr ""
"La macro `cortex_m_rt::entry` requiere que la funci√≥n tenga el tipo `fn() -"
"> !`, ya que no tiene sentido devolver resultados al controlador de reinicio."

#: src/bare-metal/microcontrollers.md
msgid "Run the example with `cargo embed --bin minimal`"
msgstr "Ejecuta el ejemplo con `cargo embed --bin minimal`."

#: src/bare-metal/microcontrollers/mmio.md
msgid ""
"Most microcontrollers access peripherals via memory-mapped IO. Let's try "
"turning on an LED on our micro:bit:"
msgstr ""
"La mayor√≠a de los microcontroladores acceden a los perif√©ricos a trav√©s de E/"
"S asignada a la memoria. Vamos a probar a encender un LED en nuestro micro:"
"bit:"

#: src/bare-metal/microcontrollers/mmio.md
msgid "/// GPIO port 0 peripheral address\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
msgid "// GPIO peripheral offsets\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
msgid "// PIN_CNF fields\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
#: src/bare-metal/microcontrollers/pacs.md
#: src/bare-metal/microcontrollers/hals.md
msgid "// Configure GPIO 0 pins 21 and 28 as push-pull outputs.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
msgid ""
"// Safe because the pointers are to valid peripheral control registers, and\n"
"    // no aliases exist.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
#: src/bare-metal/microcontrollers/pacs.md
#: src/bare-metal/microcontrollers/hals.md
msgid "// Set pin 28 low and pin 21 high to turn the LED on.\n"
msgstr ""

#: src/bare-metal/microcontrollers/mmio.md
msgid ""
"GPIO 0 pin 21 is connected to the first column of the LED matrix, and pin 28 "
"to the first row."
msgstr ""
"El pin 21 de GPIO 0 est√° conectado a la primera columna de la matriz de LED "
"y el pin 28 a la primera fila."

#: src/bare-metal/microcontrollers/mmio.md
#: src/bare-metal/microcontrollers/pacs.md
#: src/bare-metal/microcontrollers/hals.md
#: src/bare-metal/microcontrollers/board-support.md
msgid "Run the example with:"
msgstr "Ejecuta el ejemplo con:"

#: src/bare-metal/microcontrollers/pacs.md
msgid "Peripheral Access Crates"
msgstr "Crates de Acceso Perif√©rico"

#: src/bare-metal/microcontrollers/pacs.md
msgid ""
"[`svd2rust`](https://crates.io/crates/svd2rust) generates mostly-safe Rust "
"wrappers for memory-mapped peripherals from [CMSIS-SVD](https://www.keil.com/"
"pack/doc/CMSIS/SVD/html/index.html) files."
msgstr ""
"[`svd2rust`](https://crates.io/crates/svd2rust) genera, en su gran mayor√≠a, "
"envoltorios seguros de Rust para perif√©ricos asignados a la memoria a partir "
"de archivos [CMSIS-SVD](https://www.keil.com/pack/doc/CMSIS/SVD/html/index."
"html)."

#: src/bare-metal/microcontrollers/pacs.md
msgid ""
"SVD (System View Description) files are XML files typically provided by "
"silicon vendors which describe the memory map of the device."
msgstr ""
"Los archivos SVD (System View Description) son archivos XML que suelen "
"proporcionar los proveedores de silicio y que describen el mapa de memoria "
"del dispositivo."

#: src/bare-metal/microcontrollers/pacs.md
msgid ""
"They are organised by peripheral, register, field and value, with names, "
"descriptions, addresses and so on."
msgstr ""
"Se organizan por perif√©rico, registro, campo y valor, con nombres, "
"descripciones y direcciones, etc."

#: src/bare-metal/microcontrollers/pacs.md
msgid ""
"SVD files are often buggy and incomplete, so there are various projects "
"which patch the mistakes, add missing details, and publish the generated "
"crates."
msgstr ""
"Los archivos SVD suelen tener errores y estar incompletos, por lo que "
"existen varios proyectos que aplican parches a los errores, a√±aden detalles "
"que faltan y publican los crates generados."

#: src/bare-metal/microcontrollers/pacs.md
msgid "`cortex-m-rt` provides the vector table, among other things."
msgstr "`cortex-m-rt` proporciona la tabla de vectores, entre otras cosas."

#: src/bare-metal/microcontrollers/pacs.md
msgid ""
"If you `cargo install cargo-binutils` then you can run `cargo objdump --bin "
"pac -- -d --no-show-raw-insn` to see the resulting binary."
msgstr ""
"Si instalas `cargo install cargo-binutils` puedes ejecutar `cargo objdump --"
"bin pac -- -d --no-show-raw-insn` para ver el binario resultante."

#: src/bare-metal/microcontrollers/hals.md
msgid "HAL crates"
msgstr "Crates HAL"

#: src/bare-metal/microcontrollers/hals.md
msgid ""
"[HAL crates](https://github.com/rust-embedded/awesome-embedded-rust#hal-"
"implementation-crates) for many microcontrollers provide wrappers around "
"various peripherals. These generally implement traits from [`embedded-hal`]"
"(https://crates.io/crates/embedded-hal)."
msgstr ""
"[Los crates HAL](https://github.com/rust-embedded/awesome-embedded-rust#hal-"
"implementation-crates) de muchos microcontroladores incluyen envoltorios "
"alrededor de varios perif√©ricos. Por lo general, implementan traits de "
"[`embedded-hal`](https://crates.io/crates/embedded-hal)."

#: src/bare-metal/microcontrollers/hals.md
msgid "// Create HAL wrapper for GPIO port 0.\n"
msgstr ""

#: src/bare-metal/microcontrollers/hals.md
msgid ""
"`set_low` and `set_high` are methods on the `embedded_hal` `OutputPin` trait."
msgstr ""
"`set_low` y `set_high` son m√©todos del trait `OutputPin` de `embedded_hal`."

#: src/bare-metal/microcontrollers/hals.md
msgid ""
"HAL crates exist for many Cortex-M and RISC-V devices, including various "
"STM32, GD32, nRF, NXP, MSP430, AVR and PIC microcontrollers."
msgstr ""
"Hay crates HAL para muchos dispositivos Cortex-M y RISC-V, incluidos varios "
"microcontroladores STM32, GD32, nRF, NXP, MSP430, AVR y PIC."

#: src/bare-metal/microcontrollers/board-support.md
msgid "Board support crates"
msgstr "Crates de compatibilidad de placa"

#: src/bare-metal/microcontrollers/board-support.md
msgid ""
"Board support crates provide a further level of wrapping for a specific "
"board for convenience."
msgstr ""
"Los crates de compatibilidad de placa proporcionan un nivel adicional de "
"envoltorio a una placa espec√≠fica para mayor comodidad."

#: src/bare-metal/microcontrollers/board-support.md
msgid ""
"In this case the board support crate is just providing more useful names, "
"and a bit of initialisation."
msgstr ""
"En este caso, el crate de compatibilidad de placa proporciona solo nombres "
"m√°s √∫tiles y un poco de inicializaci√≥n."

#: src/bare-metal/microcontrollers/board-support.md
msgid ""
"The crate may also include drivers for some on-board devices outside of the "
"microcontroller itself."
msgstr ""
"El crate tambi√©n puede incluir controladores para algunos dispositivos "
"integrados fuera del propio microcontrolador ."

#: src/bare-metal/microcontrollers/board-support.md
msgid "`microbit-v2` includes a simple driver for the LED matrix."
msgstr "`microbit-v2` incluye un controlador sencillo para la matriz de LED."

#: src/bare-metal/microcontrollers/type-state.md
msgid "The type state pattern"
msgstr "El patr√≥n de tipo de estado"

#: src/bare-metal/microcontrollers/type-state.md
msgid "// let gpio0_01_again = gpio0.p0_01; // Error, moved.\n"
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md
msgid "// pin_input.is_high(); // Error, moved.\n"
msgstr ""

#: src/bare-metal/microcontrollers/type-state.md
msgid ""
"Pins don't implement `Copy` or `Clone`, so only one instance of each can "
"exist. Once a pin is moved out of the port struct nobody else can take it."
msgstr ""
"Los pines no implementan `Copy` ni `Clone`, por lo que solo puede haber una "
"instancia de cada uno. Cuando se quita un pin de la estructura del puerto, "
"nadie m√°s puede usarlo."

#: src/bare-metal/microcontrollers/type-state.md
msgid ""
"Changing the configuration of a pin consumes the old pin instance, so you "
"can‚Äôt keep use the old instance afterwards."
msgstr ""
"Si cambias la configuraci√≥n de un pin, se consumir√° la instancia del pin "
"anterior y no podr√°s seguir usando la instancia previa."

#: src/bare-metal/microcontrollers/type-state.md
msgid ""
"The type of a value indicates the state that it is in: e.g. in this case, "
"the configuration state of a GPIO pin. This encodes the state machine into "
"the type system, and ensures that you don't try to use a pin in a certain "
"way without properly configuring it first. Illegal state transitions are "
"caught at compile time."
msgstr ""
"El tipo de un valor indica el estado en el que se encuentra: por ejemplo, en "
"este caso, el estado de configuraci√≥n de un pin de GPIO. De esta manera, se "
"codifica la m√°quina de estados en el sistema de tipos, asegurando as√≠ que no "
"se use un pin de cierta forma sin antes configurarlo correctamente. Las "
"transiciones de estado ilegales se detectan durante el tiempo de compilaci√≥n."

#: src/bare-metal/microcontrollers/type-state.md
msgid ""
"You can call `is_high` on an input pin and `set_high` on an output pin, but "
"not vice-versa."
msgstr ""
"Puedes llamar a `is_high` en un pin de entrada y a `set_high` en un pin de "
"salida, pero no al rev√©s."

#: src/bare-metal/microcontrollers/type-state.md
msgid "Many HAL crates follow this pattern."
msgstr "Muchos crates HAL siguen este patr√≥n."

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid ""
"The [`embedded-hal`](https://crates.io/crates/embedded-hal) crate provides a "
"number of traits covering common microcontroller peripherals."
msgstr ""
"El crate [`embedded-hal`](https://crates.io/crates/embedded-hal) proporciona "
"una serie de traits que cubren los perif√©ricos habituales de los "
"microcontroladores."

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid "GPIO"
msgstr "GPIO"

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid "ADC"
msgstr "ADC"

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid "I2C, SPI, UART, CAN"
msgstr "I2C, SPI, UART, CAN"

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid "RNG"
msgstr "RNG"

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid "Timers"
msgstr "Temporizadores"

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid "Watchdogs"
msgstr "Watchdogs"

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid ""
"Other crates then implement [drivers](https://github.com/rust-embedded/"
"awesome-embedded-rust#driver-crates) in terms of these traits, e.g. an "
"accelerometer driver might need an I2C or SPI bus implementation."
msgstr ""
"Es entonces cuando otros crates implementan [controladores](https://github."
"com/rust-embedded/awesome-embedded-rust#driver-crates) en funci√≥n de estos "
"traits. Por ejemplo, un controlador de aceler√≥metro podr√≠a necesitar una "
"implementaci√≥n de bus I2C o SPI."

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid ""
"There are implementations for many microcontrollers, as well as other "
"platforms such as Linux on Raspberry Pi."
msgstr ""
"Hay implementaciones para muchos microcontroladores, as√≠ como otras "
"plataformas como Linux en Raspberry Pi."

#: src/bare-metal/microcontrollers/embedded-hal.md
msgid ""
"There is work in progress on an `async` version of `embedded-hal`, but it "
"isn't stable yet."
msgstr ""
"Se est√° trabajando en una versi√≥n `async` de `embedded-hal`, pero a√∫n no es "
"estable."

#: src/bare-metal/microcontrollers/probe-rs.md
msgid ""
"[probe-rs](https://probe.rs/) is a handy toolset for embedded debugging, "
"like OpenOCD but better integrated."
msgstr ""
"[probe-rs](https://probe.rs/) es un conjunto de herramientas de depuraci√≥n "
"integradas muy √∫til, como OpenOCD, pero mejor integrado."

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"SWD (Serial Wire Debug) and JTAG via CMSIS-DAP, ST-Link and J-Link probes"
msgstr " y JTAG a trav√©s de comprobaciones CMSIS-DAP, ST-Link y J-Link"

#: src/bare-metal/microcontrollers/probe-rs.md
msgid "GDB stub and Microsoft DAP (Debug Adapter Protocol) server"
msgstr ""

#: src/bare-metal/microcontrollers/probe-rs.md
msgid "Cargo integration"
msgstr "Integraci√≥n de Cargo"

#: src/bare-metal/microcontrollers/probe-rs.md
#, fuzzy
msgid ""
"`cargo-embed` is a cargo subcommand to build and flash binaries, log RTT "
"(Real Time Transfers) output and connect GDB. It's configured by an `Embed."
"toml` file in your project directory."
msgstr ""
" y conectar GDB. Se configura mediante un archivo `Embed.toml` en el "
"directorio del proyecto."

#: src/bare-metal/microcontrollers/probe-rs.md
msgid ""
"[CMSIS-DAP](https://arm-software.github.io/CMSIS_5/DAP/html/index.html) is "
"an Arm standard protocol over USB for an in-circuit debugger to access the "
"CoreSight Debug Access Port of various Arm Cortex processors. It's what the "
"on-board debugger on the BBC micro:bit uses."
msgstr ""
"[CMSIS-DAP](https://arm-software.github.io/CMSIS_5/DAP/html/index.html) es "
"un protocolo est√°ndar de Arm mediante USB que permite que un depurador en "
"circuito acceda al puerto de acceso de depuraci√≥n CoreSight de varios "
"procesadores Cortex de Arm. Es lo que utiliza el depurador integrado en el "
"BBC micro:bit"

#: src/bare-metal/microcontrollers/probe-rs.md
msgid ""
"ST-Link is a range of in-circuit debuggers from ST Microelectronics, J-Link "
"is a range from SEGGER."
msgstr ""
"ST-Link es una gama de depuradores en circuito de ST Microelectronics. J-"
"Link es una gama de SEGGER."

#: src/bare-metal/microcontrollers/probe-rs.md
msgid ""
"The Debug Access Port is usually either a 5-pin JTAG interface or 2-pin "
"Serial Wire Debug."
msgstr ""
"El puerto de acceso de depuraci√≥n suele ser una interfaz JTAG de 5 pines o "
"una SWD de 2 pines."

#: src/bare-metal/microcontrollers/probe-rs.md
msgid ""
"probe-rs is a library which you can integrate into your own tools if you "
"want to."
msgstr ""
"probe-rs es una biblioteca que puedes integrar en tus propias herramientas."

#: src/bare-metal/microcontrollers/probe-rs.md
msgid ""
"The [Microsoft Debug Adapter Protocol](https://microsoft.github.io/debug-"
"adapter-protocol/) lets VSCode and other IDEs debug code running on any "
"supported microcontroller."
msgstr ""
"[El protocolo de adaptador de depuraci√≥n de Microsoft](https://microsoft."
"github.io/debug-adapter-protocol/) permite que VSCode y otros IDEs depuren "
"el c√≥digo que se ejecuta en cualquier microcontrolador compatible."

#: src/bare-metal/microcontrollers/probe-rs.md
msgid "cargo-embed is a binary built using the probe-rs library."
msgstr "cargo-embed es un binario compilado con la biblioteca probe-rs."

#: src/bare-metal/microcontrollers/probe-rs.md
msgid ""
"RTT (Real Time Transfers) is a mechanism to transfer data between the debug "
"host and the target through a number of ringbuffers."
msgstr ""
"TTR (transferencias en tiempo real) es un mecanismo para transferir datos "
"entre el host de depuraci√≥n y el objetivo a trav√©s de una serie de b√∫feres "
"circulares."

#: src/bare-metal/microcontrollers/debugging.md
#, fuzzy
msgid "_Embed.toml_:"
msgstr "Embed.toml:"

#: src/bare-metal/microcontrollers/debugging.md
msgid "In one terminal under `src/bare-metal/microcontrollers/examples/`:"
msgstr "En un terminal en `src/bare-metal/microcontrollers/examples/`:"

#: src/bare-metal/microcontrollers/debugging.md
msgid "In another terminal in the same directory:"
msgstr "En otro terminal del mismo directorio:"

#: src/bare-metal/microcontrollers/debugging.md
msgid "On gLinux or Debian:"
msgstr ""

#: src/bare-metal/microcontrollers/debugging.md
msgid "In GDB, try running:"
msgstr "En GDB, prueba a ejecutar:"

#: src/bare-metal/microcontrollers/other-projects.md
#: src/bare-metal/aps/other-projects.md
msgid "Other projects"
msgstr "Otros proyectos"

#: src/bare-metal/microcontrollers/other-projects.md
msgid "[RTIC](https://rtic.rs/)"
msgstr "[RTIC](https://rtic.rs/)"

#: src/bare-metal/microcontrollers/other-projects.md
msgid "\"Real-Time Interrupt-driven Concurrency\""
msgstr "\"Concurrencia en tiempo real basada en interrupciones\""

#: src/bare-metal/microcontrollers/other-projects.md
msgid ""
"Shared resource management, message passing, task scheduling, timer queue"
msgstr ""
"Gesti√≥n de recursos compartidos, env√≠o de mensajes, programaci√≥n de tareas, "
"cola del temporizador, etc."

#: src/bare-metal/microcontrollers/other-projects.md
msgid "[Embassy](https://embassy.dev/)"
msgstr "[Embassy](https://embassy.dev/)"

#: src/bare-metal/microcontrollers/other-projects.md
msgid "`async` executors with priorities, timers, networking, USB"
msgstr "Ejecutores `async` con prioridades, temporizadores, redes, USB, etc."

#: src/bare-metal/microcontrollers/other-projects.md
msgid "[TockOS](https://www.tockos.org/documentation/getting-started)"
msgstr "[TockOS](https://www.tockos.org/documentation/getting-started)"

#: src/bare-metal/microcontrollers/other-projects.md
msgid ""
"Security-focused RTOS with preemptive scheduling and Memory Protection Unit "
"support"
msgstr ""
"RTOS centrado en la seguridad con programaci√≥n interrumpible y "
"compatibilidad con la unidad de protecci√≥n de memoria."

#: src/bare-metal/microcontrollers/other-projects.md
msgid "[Hubris](https://hubris.oxide.computer/)"
msgstr "[Hubris](https://hubris.oxide.computer/)"

#: src/bare-metal/microcontrollers/other-projects.md
msgid ""
"Microkernel RTOS from Oxide Computer Company with memory protection, "
"unprivileged drivers, IPC"
msgstr ""
"RTOS de microkernel de Oxide Computer Company con protecci√≥n de memoria, "
"controladores sin privilegios, IPC, etc."

#: src/bare-metal/microcontrollers/other-projects.md
msgid "[Bindings for FreeRTOS](https://github.com/lobaro/FreeRTOS-rust)"
msgstr "[Enlaces para FreeRTOS](https://github.com/lobaro/FreeRTOS-rust)"

#: src/bare-metal/microcontrollers/other-projects.md
msgid ""
"Some platforms have `std` implementations, e.g. [esp-idf](https://esp-rs."
"github.io/book/overview/using-the-standard-library.html)."
msgstr ""
"Algunas plataformas tienen implementaciones `std`, como [esp-idf](https://"
"esp-rs.github.io/book/overview/using-the-standard-library.html)."

#: src/bare-metal/microcontrollers/other-projects.md
msgid "RTIC can be considered either an RTOS or a concurrency framework."
msgstr "RTIC se puede considerar un RTOS o un framework de concurrencia."

#: src/bare-metal/microcontrollers/other-projects.md
msgid "It doesn't include any HALs."
msgstr "No incluye ning√∫n HAL."

#: src/bare-metal/microcontrollers/other-projects.md
msgid ""
"It uses the Cortex-M NVIC (Nested Virtual Interrupt Controller) for "
"scheduling rather than a proper kernel."
msgstr ""
"Usa el NVIC (controlador de interrupci√≥n virtual anidado) Cortex‚ÄêM para la "
"programaci√≥n en lugar de un kernel propio."

#: src/bare-metal/microcontrollers/other-projects.md
msgid "Cortex-M only."
msgstr "Solo Cortex-M."

#: src/bare-metal/microcontrollers/other-projects.md
msgid ""
"Google uses TockOS on the Haven microcontroller for Titan security keys."
msgstr ""
"Google utiliza TockOS en el microcontrolador Haven para las llaves de "
"seguridad Titan."

#: src/bare-metal/microcontrollers/other-projects.md
msgid ""
"FreeRTOS is mostly written in C, but there are Rust bindings for writing "
"applications."
msgstr ""
"FreeRTOS est√° escrito principalmente en C, pero hay enlaces de Rust para "
"aplicaciones de escritura."

#: src/exercises/bare-metal/morning.md
msgid ""
"We will read the direction from an I2C compass, and log the readings to a "
"serial port."
msgstr ""
"Leeremos la direcci√≥n desde una br√∫jula I2C, y registraremos las lecturas en "
"un puerto serie."

#: src/exercises/bare-metal/morning.md src/exercises/concurrency/morning.md
msgid ""
"After looking at the exercises, you can look at the [solutions](solutions-"
"morning.md) provided."
msgstr ""
"Despu√©s de realizar los ejercicios, puedes consultar las [soluciones]"
"(solutions-morning.md) correspondientes."

#: src/exercises/bare-metal/compass.md
msgid ""
"We will read the direction from an I2C compass, and log the readings to a "
"serial port. If you have time, try displaying it on the LEDs somehow too, or "
"use the buttons somehow."
msgstr ""
"Leeremos la direcci√≥n desde una br√∫jula I2C, y registraremos las lecturas en "
"un puerto serie. Si tienes tiempo, prueba a mostrarlo tambi√©n en los LED o "
"usa los botones de alguna forma."

#: src/exercises/bare-metal/compass.md
msgid "Hints:"
msgstr "Sugerencias:"

#: src/exercises/bare-metal/compass.md
msgid ""
"Check the documentation for the [`lsm303agr`](https://docs.rs/lsm303agr/"
"latest/lsm303agr/) and [`microbit-v2`](https://docs.rs/microbit-v2/latest/"
"microbit/) crates, as well as the [micro:bit hardware](https://tech.microbit."
"org/hardware/)."
msgstr ""
"Consulta la documentaci√≥n sobre los crates [`lsm303agr`](https://docs.rs/"
"lsm303agr/latest/lsm303agr/) y [`microbit-v2`](https://docs.rs/microbit-v2/"
"latest/microbit/), as√≠ como [el hardware de micro:bit](https://tech.microbit."
"org/hardware/)."

#: src/exercises/bare-metal/compass.md
msgid ""
"The LSM303AGR Inertial Measurement Unit is connected to the internal I2C bus."
msgstr ""
"La unidad de medici√≥n inercial LSM303AGR est√° conectada al bus I2C interno."

#: src/exercises/bare-metal/compass.md
msgid ""
"TWI is another name for I2C, so the I2C master peripheral is called TWIM."
msgstr ""
"TWI es otro nombre para I2C, por lo que el perif√©rico I2C maestro se llama "
"TWIM."

#: src/exercises/bare-metal/compass.md
msgid ""
"The LSM303AGR driver needs something implementing the `embedded_hal::"
"blocking::i2c::WriteRead` trait. The [`microbit::hal::Twim`](https://docs.rs/"
"microbit-v2/latest/microbit/hal/struct.Twim.html) struct implements this."
msgstr ""
"El controlador LSM303AGR necesita algo que implemente  el trait "
"`embedded_hal::blocking::i2c::WriteRead`. La estructura [`microbit::hal::"
"Twim`](https://docs.rs/microbit-v2/latest/microbit/hal/struct.Twim.html) "
"implementa esto."

#: src/exercises/bare-metal/compass.md
msgid ""
"You have a [`microbit::Board`](https://docs.rs/microbit-v2/latest/microbit/"
"struct.Board.html) struct with fields for the various pins and peripherals."
msgstr ""
"Tienes una estructura [`microbit::Board`](https://docs.rs/microbit-v2/latest/"
"microbit/struct.Board.html) con campos para los distintos pines y "
"perif√©ricos."

#: src/exercises/bare-metal/compass.md
msgid ""
"You can also look at the [nRF52833 datasheet](https://infocenter.nordicsemi."
"com/pdf/nRF52833_PS_v1.5.pdf) if you want, but it shouldn't be necessary for "
"this exercise."
msgstr ""
"Tambi√©n puedes consultar la \\[hoja de datos nRF52833\\][nRF52833 datasheet]"
"(https://infocenter.nordicsemi.com/pdf/nRF52833_PS_v1.5.pdf) si quieres, "
"pero no deber√≠a ser necesario para este ejercicio."

#: src/exercises/bare-metal/compass.md
msgid ""
"Download the [exercise template](../../comprehensive-rust-exercises.zip) and "
"look in the `compass` directory for the following files."
msgstr ""
"Descarga la [plantilla de ejercicio](../../comprehensive-rust-exercises.zip) "
"y busca los siguientes archivos en el directorio `compass`."

#: src/exercises/bare-metal/compass.md src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_src/main.rs_:"
msgstr "`src/main.rs`:"

#: src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "// Configure serial port.\n"
msgstr ""

#: src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "// Use the system timer as a delay provider.\n"
msgstr ""

#: src/exercises/bare-metal/compass.md
msgid ""
"// Set up the I2C controller and Inertial Measurement Unit.\n"
"    // TODO\n"
msgstr ""

#: src/exercises/bare-metal/compass.md
#: src/exercises/bare-metal/solutions-morning.md
msgid "\"Ready.\""
msgstr ""

#: src/exercises/bare-metal/compass.md
msgid ""
"// Read compass data and log it to the serial port.\n"
"        // TODO\n"
msgstr ""

#: src/exercises/bare-metal/compass.md src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_Cargo.toml_ (you shouldn't need to change this):"
msgstr "`Cargo.toml` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/compass.md
#, fuzzy
msgid "_Embed.toml_ (you shouldn't need to change this):"
msgstr "`Embed.toml` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/compass.md src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_.cargo/config.toml_ (you shouldn't need to change this):"
msgstr "`.cargo/config.toml` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/compass.md
msgid "See the serial output on Linux with:"
msgstr "Consulta la salida de serie en Linux con:"

#: src/exercises/bare-metal/compass.md
msgid ""
"Or on Mac OS something like (the device name may be slightly different):"
msgstr ""
"En Mac OS deber√≠a ser algo como lo siguiente (el nombre del dispositivo "
"puede ser algo diferente):"

#: src/exercises/bare-metal/compass.md
msgid "Use Ctrl+A Ctrl+Q to quit picocom."
msgstr "Pulsa Ctrl+A Ctrl+Q para salir de Picocom."

#: src/exercises/bare-metal/solutions-morning.md
msgid "Bare Metal Rust Morning Exercise"
msgstr "Rust Bare Metal: Ejercicio de la Ma√±ana"

#: src/exercises/bare-metal/solutions-morning.md
msgid "([back to exercise](compass.md))"
msgstr "([volver al ejercicio](compass.md))"

#: src/exercises/bare-metal/solutions-morning.md
msgid "// Set up the I2C controller and Inertial Measurement Unit.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "\"Setting up IMU...\""
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "// Set up display and timer.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "// Read compass data and log it to the serial port.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid "\"{},{},{}\\t{},{},{}\""
msgstr ""

#: src/exercises/bare-metal/solutions-morning.md
msgid ""
"// If button A is pressed, switch to the next mode and briefly blink all "
"LEDs\n"
"        // on.\n"
msgstr ""

#: src/bare-metal/aps.md
msgid "Application processors"
msgstr "Procesadores de aplicaciones"

#: src/bare-metal/aps.md
msgid ""
"So far we've talked about microcontrollers, such as the Arm Cortex-M series. "
"Now let's try writing something for Cortex-A. For simplicity we'll just work "
"with QEMU's aarch64 ['virt'](https://qemu-project.gitlab.io/qemu/system/arm/"
"virt.html) board."
msgstr ""
"Hasta ahora hemos hablado de microcontroladores, como la serie Cortex‚ÄêM de "
"Arm. Ahora vamos a probar a escribir algo para Cortex-A. Para simplificar, "
"solo trabajaremos con la placa ['virt'](https://qemu-project.gitlab.io/qemu/"
"system/arm/virt.html) aarch64 de QEMU."

#: src/bare-metal/aps.md
msgid ""
"Broadly speaking, microcontrollers don't have an MMU or multiple levels of "
"privilege (exception levels on Arm CPUs, rings on x86), while application "
"processors do."
msgstr ""
"En t√©rminos generales, los microcontroladores no tienen un MMU ni varios "
"niveles de privilegio (niveles de excepci√≥n en las CPU de Arm, anillos en "
"x86), mientras que los procesadores de aplicaciones s√≠ los tienen."

#: src/bare-metal/aps.md
msgid ""
"QEMU supports emulating various different machines or board models for each "
"architecture. The 'virt' board doesn't correspond to any particular real "
"hardware, but is designed purely for virtual machines."
msgstr ""
"QEMU permite emular varias m√°quinas o modelos de placa diferentes para cada "
"arquitectura. La placa \"virt\" no se corresponde con ning√∫n hardware real "
"concreto, pero est√° dise√±ada exclusivamente para m√°quinas virtuales."

#: src/bare-metal/aps/entry-point.md
msgid ""
"Before we can start running Rust code, we need to do some initialisation."
msgstr ""
"Antes de que podamos empezar a ejecutar c√≥digo de Rust, tenemos que hacer "
"alguna inicializaci√≥n."

#: src/bare-metal/aps/entry-point.md
msgid ""
"```armasm\n"
".section .init.entry, \"ax\"\n"
".global entry\n"
"entry:\n"
"    /*\n"
"     * Load and apply the memory management configuration, ready to enable "
"MMU and\n"
"     * caches.\n"
"     */\n"
"    adrp x30, idmap\n"
"    msr ttbr0_el1, x30\n"
"\n"
"    mov_i x30, .Lmairval\n"
"    msr mair_el1, x30\n"
"\n"
"    mov_i x30, .Ltcrval\n"
"    /* Copy the supported PA range into TCR_EL1.IPS. */\n"
"    mrs x29, id_aa64mmfr0_el1\n"
"    bfi x30, x29, #32, #4\n"
"\n"
"    msr tcr_el1, x30\n"
"\n"
"    mov_i x30, .Lsctlrval\n"
"\n"
"    /*\n"
"     * Ensure everything before this point has completed, then invalidate "
"any\n"
"     * potentially stale local TLB entries before they start being used.\n"
"     */\n"
"    isb\n"
"    tlbi vmalle1\n"
"    ic iallu\n"
"    dsb nsh\n"
"    isb\n"
"\n"
"    /*\n"
"     * Configure sctlr_el1 to enable MMU and cache and don't proceed until "
"this\n"
"     * has completed.\n"
"     */\n"
"    msr sctlr_el1, x30\n"
"    isb\n"
"\n"
"    /* Disable trapping floating point access in EL1. */\n"
"    mrs x30, cpacr_el1\n"
"    orr x30, x30, #(0x3 << 20)\n"
"    msr cpacr_el1, x30\n"
"    isb\n"
"\n"
"    /* Zero out the bss section. */\n"
"    adr_l x29, bss_begin\n"
"    adr_l x30, bss_end\n"
"0:  cmp x29, x30\n"
"    b.hs 1f\n"
"    stp xzr, xzr, [x29], #16\n"
"    b 0b\n"
"\n"
"1:  /* Prepare the stack. */\n"
"    adr_l x30, boot_stack_end\n"
"    mov sp, x30\n"
"\n"
"    /* Set up exception vector. */\n"
"    adr x30, vector_table_el1\n"
"    msr vbar_el1, x30\n"
"\n"
"    /* Call into Rust code. */\n"
"    bl main\n"
"\n"
"    /* Loop forever waiting for interrupts. */\n"
"2:  wfi\n"
"    b 2b\n"
"```"
msgstr ""

#: src/bare-metal/aps/entry-point.md
msgid ""
"This is the same as it would be for C: initialising the processor state, "
"zeroing the BSS, and setting up the stack pointer."
msgstr ""
"Es lo mismo que en C: inicializar el estado del procesador, poner a cero el "
"BSS y configurar el puntero de la _stack_."

#: src/bare-metal/aps/entry-point.md
msgid ""
"The BSS (block starting symbol, for historical reasons) is the part of the "
"object file which containing statically allocated variables which are "
"initialised to zero. They are omitted from the image, to avoid wasting space "
"on zeroes. The compiler assumes that the loader will take care of zeroing "
"them."
msgstr ""
"El BSS (s√≠mbolo de inicio del bloque, por motivos hist√≥ricos) es la parte "
"del objeto que contiene variables asignadas de forma est√°tica que se "
"inicializan a cero. Se omiten en la imagen para evitar malgastar espacio con "
"ceros. El compilador asume que el cargador se encargar√° de ponerlos a cero."

#: src/bare-metal/aps/entry-point.md
msgid ""
"The BSS may already be zeroed, depending on how memory is initialised and "
"the image is loaded, but we zero it to be sure."
msgstr ""
"Es posible que el BSS ya est√© a cero, dependiendo de c√≥mo se inicialice la "
"memoria y c√≥mo se cargue la imagen, aunque se pone igualmente a cero para "
"estar seguros."

#: src/bare-metal/aps/entry-point.md
msgid ""
"We need to enable the MMU and cache before reading or writing any memory. If "
"we don't:"
msgstr ""
"Necesitamos habilitar la MMU y la cach√© antes de leer o escribir memoria. Si "
"no lo hacemos, suceder√° lo siguiente:"

#: src/bare-metal/aps/entry-point.md
msgid ""
"Unaligned accesses will fault. We build the Rust code for the `aarch64-"
"unknown-none` target which sets `+strict-align` to prevent the compiler "
"generating unaligned accesses, so it should be fine in this case, but this "
"is not necessarily the case in general."
msgstr ""
"Los accesos no alineados fallar√°n. Compilamos el c√≥digo Rust para el "
"objetivo `aarch64-unknown-none`, que define `+strict-align` para evitar que "
"el compilador genere accesos no alineados. En este caso deber√≠a estar bien, "
"pero no tiene por qu√© ser as√≠ en general."

#: src/bare-metal/aps/entry-point.md
msgid ""
"If it were running in a VM, this can lead to cache coherency issues. The "
"problem is that the VM is accessing memory directly with the cache disabled, "
"while the host has cacheable aliases to the same memory. Even if the host "
"doesn't explicitly access the memory, speculative accesses can lead to cache "
"fills, and then changes from one or the other will get lost when the cache "
"is cleaned or the VM enables the cache. (Cache is keyed by physical address, "
"not VA or IPA.)"
msgstr ""
"Si se estuviera ejecutando en una m√°quina virtual, podr√≠a provocar problemas "
"de coherencia en la cach√©. El problema es que la m√°quina virtual accede a la "
"memoria directamente con la cach√© inhabilitada, mientras que el host cuenta "
"con alias que se pueden almacenar en cach√© en la misma memoria. Incluso si "
"el host no accede expl√≠citamente a la memoria, los accesos especulativos "
"pueden provocar que se llene la cach√©, haciendo que los cambios de uno u "
"otro se pierdan cuando se borre la cach√© o cuando la m√°quina virtual la "
"habilite. (La cach√© est√° codificada por direcci√≥n f√≠sica, no por VA ni IPA)."

#: src/bare-metal/aps/entry-point.md
msgid ""
"For simplicity, we just use a hardcoded pagetable (see `idmap.S`) which "
"identity maps the first 1 GiB of address space for devices, the next 1 GiB "
"for DRAM, and another 1 GiB higher up for more devices. This matches the "
"memory layout that QEMU uses."
msgstr ""
"Para simplificar, solo se utiliza una tabla de p√°ginas codificada (consulta "
"`idmap.S`) que mapea la identidad del primer GiB de espacio de direcciones "
"para dispositivos, el siguiente GiB para DRAM y otro GiB m√°s para m√°s "
"dispositivos. Esto coincide con la disposici√≥n de memoria que utiliza QEMU."

#: src/bare-metal/aps/entry-point.md
msgid ""
"We also set up the exception vector (`vbar_el1`), which we'll see more about "
"later."
msgstr ""
"Tambi√©n configuramos el vector de excepci√≥n (`vbar_el1`), del que veremos "
"m√°s contenido en pr√≥ximas dipositivas."

#: src/bare-metal/aps/entry-point.md
msgid ""
"All examples this afternoon assume we will be running at exception level 1 "
"(EL1). If you need to run at a different exception level you'll need to "
"modify `entry.S` accordingly."
msgstr ""
"Todos los ejemplos de esta tarde se ejecutar√°n en el nivel de excepci√≥n 1 "
"(EL1). Si necesitas ejecutar en un nivel de excepci√≥n diferente, deber√°s "
"modificar `entry.S` seg√∫n corresponda."

#: src/bare-metal/aps/inline-assembly.md
msgid "Inline assembly"
msgstr "Ensamblaje integrado"

#: src/bare-metal/aps/inline-assembly.md
#, fuzzy
msgid ""
"Sometimes we need to use assembly to do things that aren't possible with "
"Rust code. For example, to make an HVC (hypervisor call) to tell the "
"firmware to power off the system:"
msgstr ""
"A veces necesitamos usar el ensamblador para hacer cosas que no son posibles "
"con c√≥digo Rust. Por ejemplo, hacer un "

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"// Safe because this only uses the declared registers and doesn't do\n"
"    // anything with memory.\n"
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"hvc #0\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w0\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w1\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w2\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w3\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w4\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w5\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w6\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid "\"w7\""
msgstr ""

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"(If you actually want to do this, use the [`smccc`](https://crates.io/crates/"
"smccc) crate which has wrappers for all these functions.)"
msgstr ""
"(Si realmente quieres hacer esto, utiliza el crate [`smccc`](https://crates."
"io/crates/smccc) que tiene envoltorios para todas estas funciones)."

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"PSCI is the Arm Power State Coordination Interface, a standard set of "
"functions to manage system and CPU power states, among other things. It is "
"implemented by EL3 firmware and hypervisors on many systems."
msgstr ""
"PSCI es la interfaz de coordinaci√≥n de estado de alimentaci√≥n de Arm, un "
"conjunto est√°ndar de funciones para gestionar los estados de alimentaci√≥n "
"del sistema y de la CPU, entre otras cosas. Lo implementan el firmware EL3 y "
"los hipervisores en muchos sistemas."

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"The `0 => _` syntax means initialise the register to 0 before running the "
"inline assembly code, and ignore its contents afterwards. We need to use "
"`inout` rather than `in` because the call could potentially clobber the "
"contents of the registers."
msgstr ""
"La sintaxis `0 => _` significa inicializar el registro a 0 antes de ejecutar "
"el c√≥digo de ensamblaje integrado e ignorar su contenido despu√©s. "
"Necesitamos utilizar `inout` en lugar de `in` porque la llamada podr√≠a "
"alterar el contenido de los registros."

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"This `main` function needs to be `#[no_mangle]` and `extern \"C\"` because "
"it is called from our entry point in `entry.S`."
msgstr ""
"Esta funci√≥n `main` debe ser `#[no_mangle]` y `extern \"C\"`, ya que se "
"llama desde nuestro punto de entrada en `entry.S`."

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"`_x0`‚Äì`_x3` are the values of registers `x0`‚Äì`x3`, which are conventionally "
"used by the bootloader to pass things like a pointer to the device tree. "
"According to the standard aarch64 calling convention (which is what `extern "
"\"C\"` specifies to use), registers `x0`‚Äì`x7` are used for the first 8 "
"arguments passed to a function, so `entry.S` doesn't need to do anything "
"special except make sure it doesn't change these registers."
msgstr ""
"`_x0`‚Äì`_x3` son los valores de los registros `x0`‚Äì`x3`, que el bootloader "
"utiliza habitualmente para pasar elementos al √°rbol de dispositivos, como un "
"puntero. De acuerdo con la convenci√≥n de llamadas est√°ndar de aarch64 (que "
"es lo que `extern \"C\"` usa), los registros `x0`‚Äì`x7` se utilizan para los "
"primeros ocho argumentos que se pasan a una funci√≥n, de modo que `entry.S` "
"no tiene que hacer nada especial, salvo asegurarse de que no cambia estos "
"registros."

#: src/bare-metal/aps/inline-assembly.md
msgid ""
"Run the example in QEMU with `make qemu_psci` under `src/bare-metal/aps/"
"examples`."
msgstr ""
"Ejecuta el ejemplo en QEMU con `make qemu_psci` en `src/bare-metal/aps/"
"examples`."

#: src/bare-metal/aps/mmio.md
msgid "Volatile memory access for MMIO"
msgstr "Acceso a la memoria vol√°til para MMIO"

#: src/bare-metal/aps/mmio.md
msgid "Use `pointer::read_volatile` and `pointer::write_volatile`."
msgstr "Se puede usar `pointer::read_volatile` y `pointer::write_volatile`."

#: src/bare-metal/aps/mmio.md
msgid "Never hold a reference."
msgstr "Nunca retengas una referencia."

#: src/bare-metal/aps/mmio.md
msgid ""
"`addr_of!` lets you get fields of structs without creating an intermediate "
"reference."
msgstr ""
"`addr_of!` permite obtener campos de estructuras sin crear una referencia "
"intermedia."

#: src/bare-metal/aps/mmio.md
msgid ""
"Volatile access: read or write operations may have side-effects, so prevent "
"the compiler or hardware from reordering, duplicating or eliding them."
msgstr ""
"Acceso vol√°til: las operaciones de lectura o escritura pueden tener efectos "
"secundarios, por lo que se debe evitar que el compilador o el hardware las "
"reordene, duplique u omita."

#: src/bare-metal/aps/mmio.md
msgid ""
"Usually if you write and then read, e.g. via a mutable reference, the "
"compiler may assume that the value read is the same as the value just "
"written, and not bother actually reading memory."
msgstr ""
"Normalmente, si escribes y luego lees (por ejemplo, a trav√©s de una "
"referencia mutable), el compilador puede suponer que el valor le√≠do es el "
"mismo que el que se acaba de escribir, sin molestarse si quiera en leer "
"realmente la memoria."

#: src/bare-metal/aps/mmio.md
msgid ""
"Some existing crates for volatile access to hardware do hold references, but "
"this is unsound. Whenever a reference exist, the compiler may choose to "
"dereference it."
msgstr ""
"Algunos crates para el acceso vol√°til al hardware s√≠ mantienen referencias, "
"aunque no es seguro. Siempre que exista una referencia, el compilador puede "
"desreferenciarla."

#: src/bare-metal/aps/mmio.md
msgid ""
"Use the `addr_of!` macro to get struct field pointers from a pointer to the "
"struct."
msgstr ""
"Utiliza la macro `addr_of!` para obtener punteros de campos de estructuras a "
"partir de un puntero en la estructura."

#: src/bare-metal/aps/uart.md
msgid "Let's write a UART driver"
msgstr "Vamos a escribir un controlador de UART"

#: src/bare-metal/aps/uart.md
msgid ""
"The QEMU 'virt' machine has a [PL011](https://developer.arm.com/"
"documentation/ddi0183/g) UART, so let's write a driver for that."
msgstr ""
"La m√°quina \"virt\" de QEMU tiene una UART [PL011]https://developer.arm.com/"
"documentation/ddi0183/g), as√≠ que vamos a escribir un controlador para ella."

#: src/bare-metal/aps/uart.md
msgid "/// Minimal driver for a PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
msgid ""
"/// Constructs a new instance of the UART driver for a PL011 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the 8 MMIO control registers of "
"a\n"
"    /// PL011 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "/// Writes a single byte to the UART.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "// Wait until there is room in the TX buffer.\n"
msgstr ""

#: src/bare-metal/aps/uart.md
msgid ""
"// Safe because we know that the base address points to the control\n"
"        // registers of a PL011 device which is appropriately mapped.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "// Write to the TX buffer.\n"
msgstr ""

#: src/bare-metal/aps/uart.md src/bare-metal/aps/better-uart/driver.md
#: src/exercises/bare-metal/rtc.md
msgid "// Wait until the UART is no longer busy.\n"
msgstr ""

#: src/bare-metal/aps/uart.md
msgid ""
"Note that `Uart::new` is unsafe while the other methods are safe. This is "
"because as long as the caller of `Uart::new` guarantees that its safety "
"requirements are met (i.e. that there is only ever one instance of the "
"driver for a given UART, and nothing else aliasing its address space), then "
"it is always safe to call `write_byte` later because we can assume the "
"necessary preconditions."
msgstr ""
"Ten en cuenta que `Uart::new` no es seguro, mientras que los otros m√©todos "
"s√≠ lo son. Esto se debe a que mientras que el llamador de `Uart::new` "
"asegure que se cumplan sus requisitos de seguridad (es decir, que solo haya "
"una instancia del controlador para una UART determinada y que nada m√°s "
"asigne alias a su espacio de direcciones), siempre es m√°s seguro llamar a "
"`write_byte` m√°s adelante, ya que podemos asumir\\ las condiciones previas "
"necesarias."

#: src/bare-metal/aps/uart.md
msgid ""
"We could have done it the other way around (making `new` safe but "
"`write_byte` unsafe), but that would be much less convenient to use as every "
"place that calls `write_byte` would need to reason about the safety"
msgstr ""
"Podr√≠amos haberlo hecho al rev√©s (haciendo que `new` fuese seguro y "
"`write_byte` no seguro), pero\\ser√≠a mucho menos c√≥modo de usar, ya que cada "
"lugar que llamase a `write_byte` tendr√≠a que pensar en la seguridad"

#: src/bare-metal/aps/uart.md
msgid ""
"This is a common pattern for writing safe wrappers of unsafe code: moving "
"the burden of proof for soundness from a large number of places to a smaller "
"number of places."
msgstr ""
"Este es un patr√≥n com√∫n para escribir envoltorios seguros de c√≥digo "
"inseguro: mover la carga de la prueba de seguridad de un gran n√∫mero de "
"lugares a otro m√°s peque√±o."

#: src/bare-metal/aps/uart/traits.md
msgid "More traits"
msgstr "M√°s traits"

#: src/bare-metal/aps/uart/traits.md
msgid ""
"We derived the `Debug` trait. It would be useful to implement a few more "
"traits too."
msgstr ""
"Hemos derivado el trait `Debug`. Tambi√©n ser√≠a √∫til implementar algunos "
"traits m√°s."

#: src/bare-metal/aps/uart/traits.md src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because it just contains a pointer to device memory, which can be\n"
"// accessed from any context.\n"
msgstr ""

#: src/bare-metal/aps/uart/traits.md
msgid ""
"Implementing `Write` lets us use the `write!` and `writeln!` macros with our "
"`Uart` type."
msgstr ""
"Implementar `Write` nos permite utilizar las macros `write!` y `writeln!` "
"con nuestro tipo `Uart`."

#: src/bare-metal/aps/uart/traits.md
msgid ""
"Run the example in QEMU with `make qemu_minimal` under `src/bare-metal/aps/"
"examples`."
msgstr ""
"Ejecuta el ejemplo en QEMU con `make qemu_minimal` en `src/bare-metal/aps/"
"examples`."

#: src/bare-metal/aps/better-uart.md
msgid "A better UART driver"
msgstr "Un controlador UART mejor"

#: src/bare-metal/aps/better-uart.md
msgid ""
"The PL011 actually has [a bunch more registers](https://developer.arm.com/"
"documentation/ddi0183/g/programmers-model/summary-of-registers), and adding "
"offsets to construct pointers to access them is error-prone and hard to "
"read. Plus, some of them are bit fields which would be nice to access in a "
"structured way."
msgstr ""
"En realidad, PL011 tiene [muchos registros m√°s](https://developer.arm.com/"
"documentation/ddi0183/g/programmers-model/summary-of-registers), por lo que "
"a√±adir desplazamientos para crear punteros que les permita acceder a ellos "
"da lugar a errores y dificulta la lectura. Adem√°s, algunos de ellos son "
"campos de bits a los que estar√≠a bien acceder de forma estructurada."

#: src/bare-metal/aps/better-uart.md
msgid "Offset"
msgstr "Desplazamiento"

#: src/bare-metal/aps/better-uart.md
msgid "Register name"
msgstr "Nombre de registro"

#: src/bare-metal/aps/better-uart.md
msgid "Width"
msgstr "Ancho"

#: src/bare-metal/aps/better-uart.md
msgid "0x00"
msgstr "0x00"

#: src/bare-metal/aps/better-uart.md
msgid "DR"
msgstr "DR"

#: src/bare-metal/aps/better-uart.md
msgid "12"
msgstr "12"

#: src/bare-metal/aps/better-uart.md
msgid "0x04"
msgstr "0x04"

#: src/bare-metal/aps/better-uart.md
msgid "RSR"
msgstr "RSR"

#: src/bare-metal/aps/better-uart.md
msgid "0x18"
msgstr "0x18"

#: src/bare-metal/aps/better-uart.md
msgid "FR"
msgstr "FR"

#: src/bare-metal/aps/better-uart.md
msgid "9"
msgstr "9"

#: src/bare-metal/aps/better-uart.md
msgid "0x20"
msgstr "0x20"

#: src/bare-metal/aps/better-uart.md
msgid "ILPR"
msgstr "ILPR"

#: src/bare-metal/aps/better-uart.md
msgid "0x24"
msgstr "0x24"

#: src/bare-metal/aps/better-uart.md
msgid "IBRD"
msgstr "IBRD"

#: src/bare-metal/aps/better-uart.md
msgid "16"
msgstr "16"

#: src/bare-metal/aps/better-uart.md
msgid "0x28"
msgstr "0x28"

#: src/bare-metal/aps/better-uart.md
msgid "FBRD"
msgstr "FBRD"

#: src/bare-metal/aps/better-uart.md
msgid "0x2c"
msgstr "0x2c"

#: src/bare-metal/aps/better-uart.md
msgid "LCR_H"
msgstr "LCR_H"

#: src/bare-metal/aps/better-uart.md
msgid "0x30"
msgstr "0x30"

#: src/bare-metal/aps/better-uart.md
msgid "CR"
msgstr "CR"

#: src/bare-metal/aps/better-uart.md
msgid "0x34"
msgstr "0x34"

#: src/bare-metal/aps/better-uart.md
msgid "IFLS"
msgstr "IFLS"

#: src/bare-metal/aps/better-uart.md
msgid "0x38"
msgstr "0x38"

#: src/bare-metal/aps/better-uart.md
msgid "IMSC"
msgstr "IMSC"

#: src/bare-metal/aps/better-uart.md
msgid "11"
msgstr "11"

#: src/bare-metal/aps/better-uart.md
msgid "0x3c"
msgstr "0x3c"

#: src/bare-metal/aps/better-uart.md
msgid "RIS"
msgstr "RIS"

#: src/bare-metal/aps/better-uart.md
msgid "0x40"
msgstr "0x40"

#: src/bare-metal/aps/better-uart.md
msgid "MIS"
msgstr "MIS"

#: src/bare-metal/aps/better-uart.md
msgid "0x44"
msgstr "0x44"

#: src/bare-metal/aps/better-uart.md
msgid "ICR"
msgstr "ICR"

#: src/bare-metal/aps/better-uart.md
msgid "0x48"
msgstr "0x48"

#: src/bare-metal/aps/better-uart.md
msgid "DMACR"
msgstr "DMACR"

#: src/bare-metal/aps/better-uart.md
msgid "There are also some ID registers which have been omitted for brevity."
msgstr "Tambi√©n hay algunos registros de ID que se han omitido para abreviar."

#: src/bare-metal/aps/better-uart/bitflags.md
msgid ""
"The [`bitflags`](https://crates.io/crates/bitflags) crate is useful for "
"working with bitflags."
msgstr ""
"El crate [`bitflags`](https://crates.io/crates/bitflags) resulta √∫til para "
"trabajar con bitflags."

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Flags from the UART flag register.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Clear to send.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Data set ready.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Data carrier detect.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// UART busy transmitting data.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Receive FIFO is empty.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Transmit FIFO is full.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Receive FIFO is full.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Transmit FIFO is empty.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md src/exercises/bare-metal/rtc.md
msgid "/// Ring indicator.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/bitflags.md
msgid ""
"The `bitflags!` macro creates a newtype something like `Flags(u16)`, along "
"with a bunch of method implementations to get and set flags."
msgstr ""
"La macro `bitflags!` crea un newtype, como `Flags(u16)`, junto con un mont√≥n "
"de implementaciones de m√©todos para obtener y definir _flags_ (banderas)."

#: src/bare-metal/aps/better-uart/registers.md
msgid "Multiple registers"
msgstr "Varios registros"

#: src/bare-metal/aps/better-uart/registers.md
msgid ""
"We can use a struct to represent the memory layout of the UART's registers."
msgstr ""
"Podemos utilizar una estructura para representar la disposici√≥n de la "
"memoria de los registros de UART."

#: src/bare-metal/aps/better-uart/registers.md
msgid ""
"[`#[repr(C)]`](https://doc.rust-lang.org/reference/type-layout.html#the-c-"
"representation) tells the compiler to lay the struct fields out in order, "
"following the same rules as C. This is necessary for our struct to have a "
"predictable layout, as default Rust representation allows the compiler to "
"(among other things) reorder fields however it sees fit."
msgstr ""
"[`#[repr(C)]`](https://doc.rust-lang.org/reference/type-layout.html#the-c-"
"representation) indica al compilador que ordene los campos de la estructura "
"siguiendo las mismas reglas que en C. Esto es necesario para que nuestra "
"estructura tenga un dise√±o predecible, ya que la representaci√≥n "
"predeterminada de Rust permite que el compilador (entre otras cosas) "
"reordene los campos como crea conveniente."

#: src/bare-metal/aps/better-uart/driver.md
msgid "Now let's use the new `Registers` struct in our driver."
msgstr ""
"Ahora vamos a utilizar la nueva estructura de `Registers` en nuestro "
"controlador."

#: src/bare-metal/aps/better-uart/driver.md
msgid "/// Driver for a PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md src/exercises/bare-metal/rtc.md
msgid ""
"// Safe because we know that self.registers points to the control\n"
"        // registers of a PL011 device which is appropriately mapped.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md src/exercises/bare-metal/rtc.md
msgid ""
"/// Reads and returns a pending byte, or `None` if nothing has been\n"
"    /// received.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md src/exercises/bare-metal/rtc.md
msgid "// TODO: Check for error conditions in bits 8-11.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/driver.md
msgid ""
"Note the use of `addr_of!` / `addr_of_mut!` to get pointers to individual "
"fields without creating an intermediate reference, which would be unsound."
msgstr ""
"F√≠jate en el uso de `addr_of!` y `addr_of_mut!` para llevar punteros a "
"campos individuales sin crear una referencia intermedia. Ser√≠a una acci√≥n "
"insegura."

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
msgid "Using it"
msgstr "Uso"

#: src/bare-metal/aps/better-uart/using.md
msgid ""
"Let's write a small program using our driver to write to the serial console, "
"and echo incoming bytes."
msgstr ""
"Vamos a crear un peque√±o programa con nuestro controlador para escribir en "
"la consola serie y compartir los bytes entrantes."

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Base address of the primary PL011 UART.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because `PL011_BASE_ADDRESS` is the base address of a PL011 device,\n"
"    // and nothing else accesses that address range.\n"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md src/bare-metal/aps/logging/using.md
msgid "\"main({x0:#x}, {x1:#x}, {x2:#x}, {x3:#x})\""
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
msgid "b'\\r'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md src/async/pitfalls/cancellation.md
msgid "b'\\n'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
msgid "b'q'"
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
msgid "\"Bye!\""
msgstr ""

#: src/bare-metal/aps/better-uart/using.md
msgid ""
"As in the [inline assembly](../inline-assembly.md) example, this `main` "
"function is called from our entry point code in `entry.S`. See the speaker "
"notes there for details."
msgstr ""
"Al igual que en el ejemplo de [ensamblaje integrado](../inline-assembly.md), "
"esta funci√≥n `main` se llama desde nuestro c√≥digo de punto de entrada en "
"`entry.S`. Consulta las notas del orador para obtener m√°s informaci√≥n."

#: src/bare-metal/aps/better-uart/using.md
msgid ""
"Run the example in QEMU with `make qemu` under `src/bare-metal/aps/examples`."
msgstr ""
"Ejecuta el ejemplo en QEMU con `make qemu` en `src/bare-metal/aps/examples`."

#: src/bare-metal/aps/logging.md
msgid ""
"It would be nice to be able to use the logging macros from the [`log`]"
"(https://crates.io/crates/log) crate. We can do this by implementing the "
"`Log` trait."
msgstr ""
"Estar√≠a bien poder utilizar las macros de registro del crate [`log`](https://"
"crates.io/crates/log). Podemos hacerlo implementando el trait `Log`."

#: src/bare-metal/aps/logging.md src/exercises/bare-metal/rtc.md
msgid "\"[{}] {}\""
msgstr ""

#: src/bare-metal/aps/logging.md src/exercises/bare-metal/rtc.md
msgid "/// Initialises UART logger.\n"
msgstr ""

#: src/bare-metal/aps/logging.md
msgid ""
"The unwrap in `log` is safe because we initialise `LOGGER` before calling "
"`set_logger`."
msgstr ""
"La desenvoltura en `log` es segura porque inicializamos `LOGGER` antes de "
"llamar a `set_logger`."

#: src/bare-metal/aps/logging/using.md
msgid "We need to initialise the logger before we use it."
msgstr "Debemos inicializar el registrador antes de utilizarlo."

#: src/bare-metal/aps/logging/using.md src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"{info}\""
msgstr ""

#: src/bare-metal/aps/logging/using.md
msgid "Note that our panic handler can now log details of panics."
msgstr ""
"Ten en cuenta que nuestro controlador de _panic_ ahora ya puede registrar la "
"informaci√≥n de los p√°nicos."

#: src/bare-metal/aps/logging/using.md
msgid ""
"Run the example in QEMU with `make qemu_logger` under `src/bare-metal/aps/"
"examples`."
msgstr ""
"Ejecuta el ejemplo en QEMU con `make qemu_logger` en `src/bare-metal/aps/"
"examples`."

#: src/bare-metal/aps/exceptions.md
msgid ""
"AArch64 defines an exception vector table with 16 entries, for 4 types of "
"exceptions (synchronous, IRQ, FIQ, SError) from 4 states (current EL with "
"SP0, current EL with SPx, lower EL using AArch64, lower EL using AArch32). "
"We implement this in assembly to save volatile registers to the stack before "
"calling into Rust code:"
msgstr ""
"AArch64 define una tabla de vectores de excepci√≥n con 16 entradas, para 4 "
"tipos de excepciones (synchronous, IRQ, FIQ, SError) desde 4 estados (EL "
"actual con SP0, EL actual con SPx, EL inferior con AArch64 y EL inferior con "
"AArch32). Implementamos esto en el ensamblaje para guardar los registros "
"vol√°tiles en la _stack_ antes de llamar al c√≥digo de Rust:"

#: src/bare-metal/aps/exceptions.md
msgid "EL is exception level; all our examples this afternoon run in EL1."
msgstr ""
"EL significa nivel de excepci√≥n (por sus siglas en ingl√©s); todos nuestros "
"ejemplos de esta tarde se ejecutan en EL1."

#: src/bare-metal/aps/exceptions.md
msgid ""
"For simplicity we aren't distinguishing between SP0 and SPx for the current "
"EL exceptions, or between AArch32 and AArch64 for the lower EL exceptions."
msgstr ""
"Para simplificar, no distinguimos entre SP0 y SPx para las excepciones del "
"EL actual, ni entre AArch32 y AArch64 para las excepciones de EL inferiores."

#: src/bare-metal/aps/exceptions.md
msgid ""
"For this example we just log the exception and power down, as we don't "
"expect any of them to actually happen."
msgstr ""
"En este ejemplo, nos limitaremos a registrar la excepci√≥n y a apagarla, ya "
"que no esperamos que se produzca ninguna."

#: src/bare-metal/aps/exceptions.md
msgid ""
"We can think of exception handlers and our main execution context more or "
"less like different threads. [`Send` and `Sync`](../../concurrency/send-sync."
"md) will control what we can share between them, just like with threads. For "
"example, if we want to share some value between exception handlers and the "
"rest of the program, and it's `Send` but not `Sync`, then we'll need to wrap "
"it in something like a `Mutex` and put it in a static."
msgstr ""
"Podr√≠amos pensar en los controladores de excepciones y en nuestro contexto "
"de ejecuci√≥n principal como si fueran hilos diferentes. [`Send` y `Sync`]"
"(../../concurrency/send-sync.md) controlar√°n lo que podemos compartir entre "
"ellos, igual que con los hilos. Por ejemplo, si queremos compartir alg√∫n "
"valor entre los controladores de excepciones y el resto del programa, y es "
"`Send`en vez de `Sync`, necesitaremos envolverlo en un `Mutex`, por ejemplo, "
"y ponerlo en un est√°tico."

#: src/bare-metal/aps/other-projects.md
msgid "[oreboot](https://github.com/oreboot/oreboot)"
msgstr "[oreboot](https://github.com/oreboot/oreboot)"

#: src/bare-metal/aps/other-projects.md
msgid "\"coreboot without the C\""
msgstr "\"coreboot sin la C\"."

#: src/bare-metal/aps/other-projects.md
msgid "Supports x86, aarch64 and RISC-V."
msgstr "Compatible con x86, aarch64 y RISC-V."

#: src/bare-metal/aps/other-projects.md
msgid "Relies on LinuxBoot rather than having many drivers itself."
msgstr "Depende de LinuxBoot en lugar de tener controladores propios."

#: src/bare-metal/aps/other-projects.md
msgid ""
"[Rust RaspberryPi OS tutorial](https://github.com/rust-embedded/rust-"
"raspberrypi-OS-tutorials)"
msgstr ""
"[Tutorial del SO de Rust en RaspberryPi][Rust RaspberryPi OS tutorial]"
"(https://github.com/rust-embedded/rust-raspberrypi-OS-tutorials)"

#: src/bare-metal/aps/other-projects.md
msgid ""
"Initialisation, UART driver, simple bootloader, JTAG, exception levels, "
"exception handling, page tables"
msgstr ""
"Inicializaci√≥n, controlador de UART, bootloader sencillo, JTAG, niveles de "
"excepci√≥n, gesti√≥n de excepciones, tablas de p√°ginas, etc."

#: src/bare-metal/aps/other-projects.md
msgid ""
"Some dodginess around cache maintenance and initialisation in Rust, not "
"necessarily a good example to copy for production code."
msgstr ""
"Algunas dudas sobre el mantenimiento de la cach√© y la inicializaci√≥n en "
"Rust, aunque no es precisamente un buen ejemplo para copiar en c√≥digo de "
"producci√≥n."

#: src/bare-metal/aps/other-projects.md
msgid "[`cargo-call-stack`](https://crates.io/crates/cargo-call-stack)"
msgstr "[`cargo-call-stack`](https://crates.io/crates/cargo-call-stack)"

#: src/bare-metal/aps/other-projects.md
msgid "Static analysis to determine maximum stack usage."
msgstr "An√°lisis est√°tico para determinar el uso m√°ximo de la _stack_."

#: src/bare-metal/aps/other-projects.md
msgid ""
"The RaspberryPi OS tutorial runs Rust code before the MMU and caches are "
"enabled. This will read and write memory (e.g. the stack). However:"
msgstr ""
"El tutorial del sistema operativo en RaspberryPi ejecuta c√≥digo de Rust "
"antes de que la MMU y las cach√©s se habiliten. De este modo, se leer√° y "
"escribir√° memoria (por ejemplo, la _stack_). Sin embargo:"

#: src/bare-metal/aps/other-projects.md
msgid ""
"Without the MMU and cache, unaligned accesses will fault. It builds with "
"`aarch64-unknown-none` which sets `+strict-align` to prevent the compiler "
"generating unaligned accesses so it should be alright, but this is not "
"necessarily the case in general."
msgstr ""
"Sin la MMU y la cach√©, los accesos no alineados fallar√°n. Se compila con "
"`aarch64-unknown-none`, que define `+strict-align` para evitar que el "
"compilador genere accesos no alineados. Deber√≠a estar bien, pero no tiene "
"por qu√© ser as√≠, en general."

#: src/bare-metal/aps/other-projects.md
msgid ""
"If it were running in a VM, this can lead to cache coherency issues. The "
"problem is that the VM is accessing memory directly with the cache disabled, "
"while the host has cacheable aliases to the same memory. Even if the host "
"doesn't explicitly access the memory, speculative accesses can lead to cache "
"fills, and then changes from one or the other will get lost. Again this is "
"alright in this particular case (running directly on the hardware with no "
"hypervisor), but isn't a good pattern in general."
msgstr ""
"Si se estuviera ejecutando en una m√°quina virtual, podr√≠a provocar problemas "
"de coherencia en la cach√©. El problema es que la m√°quina virtual accede a la "
"memoria directamente con la cach√© inhabilitada, mientras que el host cuenta "
"con alias que se pueden almacenar en cach√© en la misma memoria. Incluso si "
"el host no accede expl√≠citamente a la memoria, los accesos especulativos "
"pueden provocar que se llene la cach√©, haciendo que los cambios de uno u "
"otro se pierdan. De nuevo, es correcto en este caso particular (si se "
"ejecuta directamente en el hardware sin hipervisor) pero, por lo general, no "
"es un buen patr√≥n."

#: src/bare-metal/useful-crates.md
msgid "Useful crates"
msgstr "Crates √ötiles"

#: src/bare-metal/useful-crates.md
msgid ""
"We'll go over a few crates which solve some common problems in bare-metal "
"programming."
msgstr ""
"A continuaci√≥n, repasaremos algunos crates que resuelven ciertos problemas "
"comunes en la programaci√≥n bare-metal."

#: src/bare-metal/useful-crates/zerocopy.md
msgid ""
"The [`zerocopy`](https://docs.rs/zerocopy/) crate (from Fuchsia) provides "
"traits and macros for safely converting between byte sequences and other "
"types."
msgstr ""
"El crate [`zerocopy`](https://docs.rs/zerocopy/) (de Fuchsia) proporciona "
"traits y macros para realizar conversiones seguras entre secuencias de bytes "
"y otros tipos."

#: src/bare-metal/useful-crates/zerocopy.md
msgid ""
"This is not suitable for MMIO (as it doesn't use volatile reads and writes), "
"but can be useful for working with structures shared with hardware e.g. by "
"DMA, or sent over some external interface."
msgstr ""
"No es adecuado para MMIO (ya que no utiliza lecturas y escrituras "
"vol√°tiles), pero puede ser √∫til para trabajar con estructuras compartidas "
"con hardware (por ejemplo, mediante DMA) o enviadas a trav√©s de alguna "
"interfaz externa."

#: src/bare-metal/useful-crates/zerocopy.md
msgid ""
"`FromBytes` can be implemented for types for which any byte pattern is "
"valid, and so can safely be converted from an untrusted sequence of bytes."
msgstr ""
"`FromBytes` se puede implementar en tipos en los que cualquier patr√≥n de "
"bytes es v√°lido, por lo que se puede convertir de forma segura a partir de "
"una secuencia de bytes que no es fiable."

#: src/bare-metal/useful-crates/zerocopy.md
msgid ""
"Attempting to derive `FromBytes` for these types would fail, because "
"`RequestType` doesn't use all possible u32 values as discriminants, so not "
"all byte patterns are valid."
msgstr ""
"Si se intenta derivar `FromBytes` para estos tipos, se producir√≠a un error, "
"pues `RequestType` no utiliza todos los valores u32 posibles como "
"discriminantes y, por tanto, todos los patrones de bytes son v√°lidos."

#: src/bare-metal/useful-crates/zerocopy.md
msgid ""
"`zerocopy::byteorder` has types for byte-order aware numeric primitives."
msgstr ""
"`zerocopy::byteorder` tiene tipos para primitivos num√©ricos conscientes del "
"orden de bytes."

#: src/bare-metal/useful-crates/zerocopy.md
msgid ""
"Run the example with `cargo run` under `src/bare-metal/useful-crates/"
"zerocopy-example/`. (It won't run in the Playground because of the crate "
"dependency.)"
msgstr ""
"Ejecuta el ejemplo con `cargo run` en `src/bare-metal/useful-crates/zerocopy-"
"example/`. (No se ejecutar√° en  el playground debido a la dependencia del "
"crate)."

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid ""
"The [`aarch64-paging`](https://crates.io/crates/aarch64-paging) crate lets "
"you create page tables according to the AArch64 Virtual Memory System "
"Architecture."
msgstr ""
"El crate [`aarch64-paging`](https://crates.io/crates/aarch64-paging) permite "
"crear tablas de p√°ginas de acuerdo con la arquitectura del sistema de "
"memoria virtual AArch64."

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid "// Create a new page table with identity mapping.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid "// Map a 2 MiB region of memory as read-only.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid "// Set `TTBR0_EL1` to activate the page table.\n"
msgstr ""

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid ""
"For now it only supports EL1, but support for other exception levels should "
"be straightforward to add."
msgstr ""
"Por ahora, solo es compatible con EL1, pero deber√≠a ser sencillo a√±adir "
"compatibilidad con otros niveles de excepci√≥n."

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid ""
"This is used in Android for the [Protected VM Firmware](https://cs.android."
"com/android/platform/superproject/+/master:packages/modules/Virtualization/"
"pvmfw/)."
msgstr ""
"Se utiliza en Android para el [Firmware de M√°quina Virtual Protegida]"
"(https://cs.android.com/android/platform/superproject/+/master:packages/"
"modules/Virtualization/pvmfw/)."

#: src/bare-metal/useful-crates/aarch64-paging.md
msgid ""
"There's no easy way to run this example, as it needs to run on real hardware "
"or under QEMU."
msgstr ""
"No hay una forma sencilla de ejecutar este ejemplo, ya que debe hacerse en "
"hardware real o en QEMU."

#: src/bare-metal/useful-crates/buddy_system_allocator.md
msgid ""
"[`buddy_system_allocator`](https://crates.io/crates/buddy_system_allocator) "
"is a third-party crate implementing a basic buddy system allocator. It can "
"be used both for [`LockedHeap`](https://docs.rs/buddy_system_allocator/0.9.0/"
"buddy_system_allocator/struct.LockedHeap.html) implementing [`GlobalAlloc`]"
"(https://doc.rust-lang.org/core/alloc/trait.GlobalAlloc.html) so you can use "
"the standard `alloc` crate (as we saw [before](../alloc.md)), or for "
"allocating other address space. For example, we might want to allocate MMIO "
"space for PCI BARs:"
msgstr ""
"[`buddy_system_allocator`](https://crates.io/crates/buddy_system_allocator) "
"es un crate de terceros que implementa un asignador b√°sico del sistema "
"buddy. Se puede utilizar tanto para [`LockedHeap`](https://docs.rs/"
"buddy_system_allocator/0.9.0/buddy_system_allocator/struct.LockedHeap.html) "
"implementando [`GlobalAlloc`](https://doc.rust-lang.org/core/alloc/trait."
"GlobalAlloc.html), de forma que puedas usar el crate `alloc` est√°ndar (tal y "
"como vimos [antes](../alloc.md)), o para asignar otro espacio de "
"direcciones. Por ejemplo, podr√≠amos querer asignar espacio MMIO para los "
"registros de direcci√≥n base (BAR) de PCI:"

#: src/bare-metal/useful-crates/buddy_system_allocator.md
msgid "PCI BARs always have alignment equal to their size."
msgstr "Los BAR de PCI siempre tienen una alineaci√≥n igual a su tama√±o."

#: src/bare-metal/useful-crates/buddy_system_allocator.md
msgid ""
"Run the example with `cargo run` under `src/bare-metal/useful-crates/"
"allocator-example/`. (It won't run in the Playground because of the crate "
"dependency.)"
msgstr ""
"Ejecuta el ejemplo con `cargo run` en `src/bare-metal/useful-crates/"
"allocator-example/`. (No se ejecutar√° en el playground debido a la "
"dependencia del crate)."

#: src/bare-metal/useful-crates/tinyvec.md
msgid ""
"Sometimes you want something which can be resized like a `Vec`, but without "
"heap allocation. [`tinyvec`](https://crates.io/crates/tinyvec) provides "
"this: a vector backed by an array or slice, which could be statically "
"allocated or on the stack, which keeps track of how many elements are used "
"and panics if you try to use more than are allocated."
msgstr ""
"A veces, se necesita algo que se pueda cambiar de tama√±o, como `Vec`, pero "
"sin asignaci√≥n de _heap_. [`tinyvec`](https://crates.io/crates/tinyvec) "
"ofrece un vector respaldado por un array o slice, que se podr√≠a asignar "
"est√°ticamente o en la _stack_, y que hace un seguimiento de cu√°ntos "
"elementos se usan, entrando en _panic_ si intentas utilizar m√°s elementos de "
"los asignados."

#: src/bare-metal/useful-crates/tinyvec.md
msgid ""
"`tinyvec` requires that the element type implement `Default` for "
"initialisation."
msgstr ""
"`tinyvec` requiere que el tipo de elemento implemente `Default` para la "
"inicializaci√≥n."

#: src/bare-metal/useful-crates/tinyvec.md
msgid ""
"The Rust Playground includes `tinyvec`, so this example will run fine inline."
msgstr ""
"El playground de Rust incluye `tinyvec`, por lo que este ejemplo se "
"ejecutar√° bien aunque est√© insertado."

#: src/bare-metal/useful-crates/spin.md
msgid ""
"`std::sync::Mutex` and the other synchronisation primitives from `std::sync` "
"are not available in `core` or `alloc`. How can we manage synchronisation or "
"interior mutability, such as for sharing state between different CPUs?"
msgstr ""
"`std::sync::Mutex` y el resto de los primitivos de sincronizaci√≥n de `std::"
"sync` no est√°n disponibles en `core` o `alloc`. ¬øC√≥mo podemos gestionar la "
"sincronizaci√≥n o la mutabilidad interior para, por ejemplo, compartir el "
"estado entre diferentes CPUs?"

#: src/bare-metal/useful-crates/spin.md
msgid ""
"The [`spin`](https://crates.io/crates/spin) crate provides spinlock-based "
"equivalents of many of these primitives."
msgstr ""
"El crate [`spin`](https://crates.io/crates/spin) proporciona equivalentes "
"basados en spinlocks de muchos de estos primitivos."

#: src/bare-metal/useful-crates/spin.md
msgid "Be careful to avoid deadlock if you take locks in interrupt handlers."
msgstr ""
"Intenta evitar interbloqueos si usas bloqueos en los controladores de las "
"interrupciones."

#: src/bare-metal/useful-crates/spin.md
#, fuzzy
msgid ""
"`spin` also has a ticket lock mutex implementation; equivalents of `RwLock`, "
"`Barrier` and `Once` from `std::sync`; and `Lazy` for lazy initialisation."
msgstr ""
"`spin` tambi√©n cuenta con una implementaci√≥n de exclusi√≥n mutua de bloqueo "
"de tickets; equivalentes de `RwLock`, `Barrier` y `Once` de `std::sync`, y "
"`Lazy` para inicializaci√≥n perezosa"

#: src/bare-metal/useful-crates/spin.md
msgid ""
"The [`once_cell`](https://crates.io/crates/once_cell) crate also has some "
"useful types for late initialisation with a slightly different approach to "
"`spin::once::Once`."
msgstr ""
"El crate [`once_cell`](https://crates.io/crates/once_cell) tambi√©n tiene "
"algunos tipos √∫tiles de inicializaci√≥n tard√≠a con un enfoque ligeramente "
"distinto al de `spin::once::Once`."

#: src/bare-metal/useful-crates/spin.md
msgid ""
"The Rust Playground includes `spin`, so this example will run fine inline."
msgstr ""
"El playground de Rust incluye `spin`, por lo que este ejemplo se ejecutar√° "
"bien aunque est√° insertado."

#: src/bare-metal/android.md
msgid ""
"To build a bare-metal Rust binary in AOSP, you need to use a "
"`rust_ffi_static` Soong rule to build your Rust code, then a `cc_binary` "
"with a linker script to produce the binary itself, and then a `raw_binary` "
"to convert the ELF to a raw binary ready to be run."
msgstr ""
"Para compilar un binario de Rust bare-metal en AOSP, tienes que usar una "
"regla `rust_ffi_static` de Soong para crear tu c√≥digo Rust y, seguidamente, "
"un `cc_binary` con una secuencia de comandos de enlazador para producir el "
"binario en s√≠. Por √∫ltimo, un `raw_binary` para convertir el ELF en un "
"binario sin formato que pueda ejecutarse."

#: src/bare-metal/android/vmbase.md
msgid "vmbase"
msgstr "vmbase"

#: src/bare-metal/android/vmbase.md
msgid ""
"For VMs running under crosvm on aarch64, the [vmbase](https://android."
"googlesource.com/platform/packages/modules/Virtualization/+/refs/heads/"
"master/vmbase/) library provides a linker script and useful defaults for the "
"build rules, along with an entry point, UART console logging and more."
msgstr ""
"En el caso de las m√°quinas virtuales que se ejecutan con crosvm en aarch64, "
"la biblioteca [vmbase](https://android.googlesource.com/platform/packages/"
"modules/Virtualization/+/refs/heads/master/vmbase/) proporciona una "
"secuencia de comandos de enlazador y valores predeterminados √∫tiles para las "
"reglas de compilaci√≥n, adem√°s de un punto de entrada, registro de la consola "
"UART y mucho m√°s."

#: src/bare-metal/android/vmbase.md
msgid ""
"The `main!` macro marks your main function, to be called from the `vmbase` "
"entry point."
msgstr ""
"La macro `main!` indica tu funci√≥n principal, que se llama desde el punto de "
"entrada `vmbase`."

#: src/bare-metal/android/vmbase.md
msgid ""
"The `vmbase` entry point handles console initialisation, and issues a "
"PSCI_SYSTEM_OFF to shutdown the VM if your main function returns."
msgstr ""
"El punto de entrada `vmbase` gestiona la inicializaci√≥n de la consola y "
"emite PSCI_SYSTEM_OFF para apagar la m√°quina virtual si tu funci√≥n principal "
"devuelve un resultado."

#: src/exercises/bare-metal/afternoon.md
msgid "We will write a driver for the PL031 real-time clock device."
msgstr ""
"Escribiremos un controlador para el dispositivo de reloj en tiempo real "
"PL031."

#: src/exercises/bare-metal/afternoon.md src/exercises/concurrency/afternoon.md
msgid ""
"After looking at the exercises, you can look at the [solutions](solutions-"
"afternoon.md) provided."
msgstr ""
"Luego de ver los ejercicios, puedes ver las [soluciones](solutions-afternoon."
"md) que se brindan."

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "RTC driver"
msgstr "Controlador RTC"

#: src/exercises/bare-metal/rtc.md
msgid ""
"The QEMU aarch64 virt machine has a [PL031](https://developer.arm.com/"
"documentation/ddi0224/c) real-time clock at 0x9010000. For this exercise, "
"you should write a driver for it."
msgstr ""
"La m√°quina virtual aarch64 de QEMU tiene un reloj en tiempo real [PL031]"
"(https://developer.arm.com/documentation/ddi0224/c) en 0x9010000. En este "
"ejercicio, debes escribir un controlador para el reloj."

#: src/exercises/bare-metal/rtc.md
msgid ""
"Use it to print the current time to the serial console. You can use the "
"[`chrono`](https://crates.io/crates/chrono) crate for date/time formatting."
msgstr ""
"√ösalo para imprimir la hora en la consola serie. Puedes usar el crate "
"[`chrono`](https://crates.io/crates/chrono) para dar formato a la fecha y la "
"hora."

#: src/exercises/bare-metal/rtc.md
msgid ""
"Use the match register and raw interrupt status to busy-wait until a given "
"time, e.g. 3 seconds in the future. (Call [`core::hint::spin_loop`](https://"
"doc.rust-lang.org/core/hint/fn.spin_loop.html) inside the loop.)"
msgstr ""
"Utiliza el registro de coincidencias y el estado de interrupci√≥n sin formato "
"para esperar hasta un momento dado, por ejemplo, un adelanto de 3 segundos. "
"(Llama a [`core::hint::spin_loop`](https://doc.rust-lang.org/core/hint/fn."
"spin_loop.html) dentro d+el bucle)."

#: src/exercises/bare-metal/rtc.md
msgid ""
"_Extension if you have time:_ Enable and handle the interrupt generated by "
"the RTC match. You can use the driver provided in the [`arm-gic`](https://"
"docs.rs/arm-gic/) crate to configure the Arm Generic Interrupt Controller."
msgstr ""
"_Ampliaci√≥n si hay tiempo:_ habilita y gestiona la interrupci√≥n que genera "
"la coincidencia de RTC. Puedes usar el controlador que se proporciona con el "
"crate [`arm-gic`](https://docs.rs/arm-gic/) para configurar el controlador "
"de interrupciones gen√©rico (GIC) de Arm."

#: src/exercises/bare-metal/rtc.md
msgid "Use the RTC interrupt, which is wired to the GIC as `IntId::spi(2)`."
msgstr ""
"Utiliza la interrupci√≥n de RTC, que est√° conectada al GIC como `IntId::"
"spi(2)`."

#: src/exercises/bare-metal/rtc.md
msgid ""
"Once the interrupt is enabled, you can put the core to sleep via `arm_gic::"
"wfi()`, which will cause the core to sleep until it receives an interrupt."
msgstr ""
"Despu√©s de habilitar la interrupci√≥n, puedes poner el n√∫cleo en suspensi√≥n "
"mediante `arm_gic::wfi()`, lo que har√° que entre en suspensi√≥n hasta que "
"reciba una interrupci√≥n."

#: src/exercises/bare-metal/rtc.md
msgid ""
"Download the [exercise template](../../comprehensive-rust-exercises.zip) and "
"look in the `rtc` directory for the following files."
msgstr ""
"Descarga la [plantilla de ejercicio](../../comprehensive-rust-exercises.zip) "
"y busca en el directorio `rtc` los siguientes archivos."

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Base addresses of the GICv3.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"main({:#x}, {:#x}, {:#x}, {:#x})\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because `GICD_BASE_ADDRESS` and `GICR_BASE_ADDRESS` are the base\n"
"    // addresses of a GICv3 distributor and redistributor respectively, and\n"
"    // nothing else accesses those address ranges.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// TODO: Create instance of RTC driver and print current time.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// TODO: Wait for 3 seconds.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid ""
"_src/exceptions.rs_ (you should only need to change this for the 3rd part of "
"the exercise):"
msgstr ""
"`src/exceptions.rs` (solo se deber√≠a cambiar esto en la tercera parte del "
"ejercicio):"

#: src/exercises/bare-metal/rtc.md
msgid ""
"// Copyright 2023 Google LLC\n"
"//\n"
"// Licensed under the Apache License, Version 2.0 (the \"License\");\n"
"// you may not use this file except in compliance with the License.\n"
"// You may obtain a copy of the License at\n"
"//\n"
"//      http://www.apache.org/licenses/LICENSE-2.0\n"
"//\n"
"// Unless required by applicable law or agreed to in writing, software\n"
"// distributed under the License is distributed on an \"AS IS\" BASIS,\n"
"// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
"// See the License for the specific language governing permissions and\n"
"// limitations under the License.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"sync_exception_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"irq_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"No pending interrupt\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"IRQ {intid:?}\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"fiq_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"serr_current\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"sync_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"irq_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"fiq_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"serr_lower\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_src/logger.rs_ (you shouldn't need to change this):"
msgstr "`src/logger.rs` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR: main\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_src/pl011.rs_ (you shouldn't need to change this):"
msgstr "`src/pl011.rs` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR: Flags\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR_END: Flags\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"/// Flags from the UART Receive Status Register / Error Clear Register.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Framing error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Parity error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Break error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "/// Overrun error.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR: Registers\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR_END: Registers\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"// ANCHOR: Uart\n"
"/// Driver for a PL011 UART.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid ""
"/// Constructs a new instance of the UART driver for a PL011 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the MMIO control registers of "
"a\n"
"    /// PL011 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "// ANCHOR_END: Uart\n"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_build.rs_ (you shouldn't need to change this):"
msgstr "`build.rs` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid "\"linux\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"CROSS_COMPILE\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "\"aarch64-linux-gnu\""
msgstr "aarch64-paging"

#: src/exercises/bare-metal/rtc.md
msgid "\"aarch64-none-elf\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"entry.S\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "\"exceptions.S\""
msgstr "Excepciones"

#: src/exercises/bare-metal/rtc.md
msgid "\"idmap.S\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "\"empty\""
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_entry.S_ (you shouldn't need to change this):"
msgstr "`entry.S` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
".macro adr_l, reg:req, sym:req\n"
"\tadrp \\reg, \\sym\n"
"\tadd \\reg, \\reg, :lo12:\\sym\n"
".endm\n"
"\n"
".macro mov_i, reg:req, imm:req\n"
"\tmovz \\reg, :abs_g3:\\imm\n"
"\tmovk \\reg, :abs_g2_nc:\\imm\n"
"\tmovk \\reg, :abs_g1_nc:\\imm\n"
"\tmovk \\reg, :abs_g0_nc:\\imm\n"
".endm\n"
"\n"
".set .L_MAIR_DEV_nGnRE,\t0x04\n"
".set .L_MAIR_MEM_WBWA,\t0xff\n"
".set .Lmairval, .L_MAIR_DEV_nGnRE | (.L_MAIR_MEM_WBWA << 8)\n"
"\n"
"/* 4 KiB granule size for TTBR0_EL1. */\n"
".set .L_TCR_TG0_4KB, 0x0 << 14\n"
"/* 4 KiB granule size for TTBR1_EL1. */\n"
".set .L_TCR_TG1_4KB, 0x2 << 30\n"
"/* Disable translation table walk for TTBR1_EL1, generating a translation "
"fault instead. */\n"
".set .L_TCR_EPD1, 0x1 << 23\n"
"/* Translation table walks for TTBR0_EL1 are inner sharable. */\n"
".set .L_TCR_SH_INNER, 0x3 << 12\n"
"/*\n"
" * Translation table walks for TTBR0_EL1 are outer write-back read-allocate "
"write-allocate\n"
" * cacheable.\n"
" */\n"
".set .L_TCR_RGN_OWB, 0x1 << 10\n"
"/*\n"
" * Translation table walks for TTBR0_EL1 are inner write-back read-allocate "
"write-allocate\n"
" * cacheable.\n"
" */\n"
".set .L_TCR_RGN_IWB, 0x1 << 8\n"
"/* Size offset for TTBR0_EL1 is 2**39 bytes (512 GiB). */\n"
".set .L_TCR_T0SZ_512, 64 - 39\n"
".set .Ltcrval, .L_TCR_TG0_4KB | .L_TCR_TG1_4KB | .L_TCR_EPD1 | ."
"L_TCR_RGN_OWB\n"
".set .Ltcrval, .Ltcrval | .L_TCR_RGN_IWB | .L_TCR_SH_INNER | ."
"L_TCR_T0SZ_512\n"
"\n"
"/* Stage 1 instruction access cacheability is unaffected. */\n"
".set .L_SCTLR_ELx_I, 0x1 << 12\n"
"/* SP alignment fault if SP is not aligned to a 16 byte boundary. */\n"
".set .L_SCTLR_ELx_SA, 0x1 << 3\n"
"/* Stage 1 data access cacheability is unaffected. */\n"
".set .L_SCTLR_ELx_C, 0x1 << 2\n"
"/* EL0 and EL1 stage 1 MMU enabled. */\n"
".set .L_SCTLR_ELx_M, 0x1 << 0\n"
"/* Privileged Access Never is unchanged on taking an exception to EL1. */\n"
".set .L_SCTLR_EL1_SPAN, 0x1 << 23\n"
"/* SETEND instruction disabled at EL0 in aarch32 mode. */\n"
".set .L_SCTLR_EL1_SED, 0x1 << 8\n"
"/* Various IT instructions are disabled at EL0 in aarch32 mode. */\n"
".set .L_SCTLR_EL1_ITD, 0x1 << 7\n"
".set .L_SCTLR_EL1_RES1, (0x1 << 11) | (0x1 << 20) | (0x1 << 22) | (0x1 << "
"28) | (0x1 << 29)\n"
".set .Lsctlrval, .L_SCTLR_ELx_M | .L_SCTLR_ELx_C | .L_SCTLR_ELx_SA | ."
"L_SCTLR_EL1_ITD | .L_SCTLR_EL1_SED\n"
".set .Lsctlrval, .Lsctlrval | .L_SCTLR_ELx_I | .L_SCTLR_EL1_SPAN | ."
"L_SCTLR_EL1_RES1\n"
"\n"
"/**\n"
" * This is a generic entry point for an image. It carries out the operations "
"required to prepare the\n"
" * loaded image to be run. Specifically, it zeroes the bss section using "
"registers x25 and above,\n"
" * prepares the stack, enables floating point, and sets up the exception "
"vector. It preserves x0-x3\n"
" * for the Rust entry point, as these may contain boot parameters.\n"
" */\n"
".section .init.entry, \"ax\"\n"
".global entry\n"
"entry:\n"
"\t/* Load and apply the memory management configuration, ready to enable MMU "
"and caches. */\n"
"\tadrp x30, idmap\n"
"\tmsr ttbr0_el1, x30\n"
"\n"
"\tmov_i x30, .Lmairval\n"
"\tmsr mair_el1, x30\n"
"\n"
"\tmov_i x30, .Ltcrval\n"
"\t/* Copy the supported PA range into TCR_EL1.IPS. */\n"
"\tmrs x29, id_aa64mmfr0_el1\n"
"\tbfi x30, x29, #32, #4\n"
"\n"
"\tmsr tcr_el1, x30\n"
"\n"
"\tmov_i x30, .Lsctlrval\n"
"\n"
"\t/*\n"
"\t * Ensure everything before this point has completed, then invalidate any "
"potentially stale\n"
"\t * local TLB entries before they start being used.\n"
"\t */\n"
"\tisb\n"
"\ttlbi vmalle1\n"
"\tic iallu\n"
"\tdsb nsh\n"
"\tisb\n"
"\n"
"\t/*\n"
"\t * Configure sctlr_el1 to enable MMU and cache and don't proceed until "
"this has completed.\n"
"\t */\n"
"\tmsr sctlr_el1, x30\n"
"\tisb\n"
"\n"
"\t/* Disable trapping floating point access in EL1. */\n"
"\tmrs x30, cpacr_el1\n"
"\torr x30, x30, #(0x3 << 20)\n"
"\tmsr cpacr_el1, x30\n"
"\tisb\n"
"\n"
"\t/* Zero out the bss section. */\n"
"\tadr_l x29, bss_begin\n"
"\tadr_l x30, bss_end\n"
"0:\tcmp x29, x30\n"
"\tb.hs 1f\n"
"\tstp xzr, xzr, [x29], #16\n"
"\tb 0b\n"
"\n"
"1:\t/* Prepare the stack. */\n"
"\tadr_l x30, boot_stack_end\n"
"\tmov sp, x30\n"
"\n"
"\t/* Set up exception vector. */\n"
"\tadr x30, vector_table_el1\n"
"\tmsr vbar_el1, x30\n"
"\n"
"\t/* Call into Rust code. */\n"
"\tbl main\n"
"\n"
"\t/* Loop forever waiting for interrupts. */\n"
"2:\twfi\n"
"\tb 2b\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_exceptions.S_ (you shouldn't need to change this):"
msgstr "`exceptions.S` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
"/**\n"
" * Saves the volatile registers onto the stack. This currently takes 14\n"
" * instructions, so it can be used in exception handlers with 18 "
"instructions\n"
" * left.\n"
" *\n"
" * On return, x0 and x1 are initialised to elr_el2 and spsr_el2 "
"respectively,\n"
" * which can be used as the first and second arguments of a subsequent "
"call.\n"
" */\n"
".macro save_volatile_to_stack\n"
"\t/* Reserve stack space and save registers x0-x18, x29 & x30. */\n"
"\tstp x0, x1, [sp, #-(8 * 24)]!\n"
"\tstp x2, x3, [sp, #8 * 2]\n"
"\tstp x4, x5, [sp, #8 * 4]\n"
"\tstp x6, x7, [sp, #8 * 6]\n"
"\tstp x8, x9, [sp, #8 * 8]\n"
"\tstp x10, x11, [sp, #8 * 10]\n"
"\tstp x12, x13, [sp, #8 * 12]\n"
"\tstp x14, x15, [sp, #8 * 14]\n"
"\tstp x16, x17, [sp, #8 * 16]\n"
"\tstr x18, [sp, #8 * 18]\n"
"\tstp x29, x30, [sp, #8 * 20]\n"
"\n"
"\t/*\n"
"\t * Save elr_el1 & spsr_el1. This such that we can take nested exception\n"
"\t * and still be able to unwind.\n"
"\t */\n"
"\tmrs x0, elr_el1\n"
"\tmrs x1, spsr_el1\n"
"\tstp x0, x1, [sp, #8 * 22]\n"
".endm\n"
"\n"
"/**\n"
" * Restores the volatile registers from the stack. This currently takes 14\n"
" * instructions, so it can be used in exception handlers while still leaving "
"18\n"
" * instructions left; if paired with save_volatile_to_stack, there are 4\n"
" * instructions to spare.\n"
" */\n"
".macro restore_volatile_from_stack\n"
"\t/* Restore registers x2-x18, x29 & x30. */\n"
"\tldp x2, x3, [sp, #8 * 2]\n"
"\tldp x4, x5, [sp, #8 * 4]\n"
"\tldp x6, x7, [sp, #8 * 6]\n"
"\tldp x8, x9, [sp, #8 * 8]\n"
"\tldp x10, x11, [sp, #8 * 10]\n"
"\tldp x12, x13, [sp, #8 * 12]\n"
"\tldp x14, x15, [sp, #8 * 14]\n"
"\tldp x16, x17, [sp, #8 * 16]\n"
"\tldr x18, [sp, #8 * 18]\n"
"\tldp x29, x30, [sp, #8 * 20]\n"
"\n"
"\t/* Restore registers elr_el1 & spsr_el1, using x0 & x1 as scratch. */\n"
"\tldp x0, x1, [sp, #8 * 22]\n"
"\tmsr elr_el1, x0\n"
"\tmsr spsr_el1, x1\n"
"\n"
"\t/* Restore x0 & x1, and release stack space. */\n"
"\tldp x0, x1, [sp], #8 * 24\n"
".endm\n"
"\n"
"/**\n"
" * This is a generic handler for exceptions taken at the current EL while "
"using\n"
" * SP0. It behaves similarly to the SPx case by first switching to SPx, "
"doing\n"
" * the work, then switching back to SP0 before returning.\n"
" *\n"
" * Switching to SPx and calling the Rust handler takes 16 instructions. To\n"
" * restore and return we need an additional 16 instructions, so we can "
"implement\n"
" * the whole handler within the allotted 32 instructions.\n"
" */\n"
".macro current_exception_sp0 handler:req\n"
"\tmsr spsel, #1\n"
"\tsave_volatile_to_stack\n"
"\tbl \\handler\n"
"\trestore_volatile_from_stack\n"
"\tmsr spsel, #0\n"
"\teret\n"
".endm\n"
"\n"
"/**\n"
" * This is a generic handler for exceptions taken at the current EL while "
"using\n"
" * SPx. It saves volatile registers, calls the Rust handler, restores "
"volatile\n"
" * registers, then returns.\n"
" *\n"
" * This also works for exceptions taken from EL0, if we don't care about\n"
" * non-volatile registers.\n"
" *\n"
" * Saving state and jumping to the Rust handler takes 15 instructions, and\n"
" * restoring and returning also takes 15 instructions, so we can fit the "
"whole\n"
" * handler in 30 instructions, under the limit of 32.\n"
" */\n"
".macro current_exception_spx handler:req\n"
"\tsave_volatile_to_stack\n"
"\tbl \\handler\n"
"\trestore_volatile_from_stack\n"
"\teret\n"
".endm\n"
"\n"
".section .text.vector_table_el1, \"ax\"\n"
".global vector_table_el1\n"
".balign 0x800\n"
"vector_table_el1:\n"
"sync_cur_sp0:\n"
"\tcurrent_exception_sp0 sync_exception_current\n"
"\n"
".balign 0x80\n"
"irq_cur_sp0:\n"
"\tcurrent_exception_sp0 irq_current\n"
"\n"
".balign 0x80\n"
"fiq_cur_sp0:\n"
"\tcurrent_exception_sp0 fiq_current\n"
"\n"
".balign 0x80\n"
"serr_cur_sp0:\n"
"\tcurrent_exception_sp0 serr_current\n"
"\n"
".balign 0x80\n"
"sync_cur_spx:\n"
"\tcurrent_exception_spx sync_exception_current\n"
"\n"
".balign 0x80\n"
"irq_cur_spx:\n"
"\tcurrent_exception_spx irq_current\n"
"\n"
".balign 0x80\n"
"fiq_cur_spx:\n"
"\tcurrent_exception_spx fiq_current\n"
"\n"
".balign 0x80\n"
"serr_cur_spx:\n"
"\tcurrent_exception_spx serr_current\n"
"\n"
".balign 0x80\n"
"sync_lower_64:\n"
"\tcurrent_exception_spx sync_lower\n"
"\n"
".balign 0x80\n"
"irq_lower_64:\n"
"\tcurrent_exception_spx irq_lower\n"
"\n"
".balign 0x80\n"
"fiq_lower_64:\n"
"\tcurrent_exception_spx fiq_lower\n"
"\n"
".balign 0x80\n"
"serr_lower_64:\n"
"\tcurrent_exception_spx serr_lower\n"
"\n"
".balign 0x80\n"
"sync_lower_32:\n"
"\tcurrent_exception_spx sync_lower\n"
"\n"
".balign 0x80\n"
"irq_lower_32:\n"
"\tcurrent_exception_spx irq_lower\n"
"\n"
".balign 0x80\n"
"fiq_lower_32:\n"
"\tcurrent_exception_spx fiq_lower\n"
"\n"
".balign 0x80\n"
"serr_lower_32:\n"
"\tcurrent_exception_spx serr_lower\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_idmap.S_ (you shouldn't need to change this):"
msgstr "`idmap.S` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```armasm\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
".set .L_TT_TYPE_BLOCK, 0x1\n"
".set .L_TT_TYPE_PAGE,  0x3\n"
".set .L_TT_TYPE_TABLE, 0x3\n"
"\n"
"/* Access flag. */\n"
".set .L_TT_AF, 0x1 << 10\n"
"/* Not global. */\n"
".set .L_TT_NG, 0x1 << 11\n"
".set .L_TT_XN, 0x3 << 53\n"
"\n"
".set .L_TT_MT_DEV, 0x0 << 2\t\t\t// MAIR #0 (DEV_nGnRE)\n"
".set .L_TT_MT_MEM, (0x1 << 2) | (0x3 << 8)\t// MAIR #1 (MEM_WBWA), inner "
"shareable\n"
"\n"
".set .L_BLOCK_DEV, .L_TT_TYPE_BLOCK | .L_TT_MT_DEV | .L_TT_AF | .L_TT_XN\n"
".set .L_BLOCK_MEM, .L_TT_TYPE_BLOCK | .L_TT_MT_MEM | .L_TT_AF | .L_TT_NG\n"
"\n"
".section \".rodata.idmap\", \"a\", %progbits\n"
".global idmap\n"
".align 12\n"
"idmap:\n"
"\t/* level 1 */\n"
"\t.quad\t\t.L_BLOCK_DEV | 0x0\t\t    // 1 GiB of device mappings\n"
"\t.quad\t\t.L_BLOCK_MEM | 0x40000000\t// 1 GiB of DRAM\n"
"\t.fill\t\t254, 8, 0x0\t\t\t// 254 GiB of unmapped VA space\n"
"\t.quad\t\t.L_BLOCK_DEV | 0x4000000000 // 1 GiB of device mappings\n"
"\t.fill\t\t255, 8, 0x0\t\t\t// 255 GiB of remaining VA space\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_image.ld_ (you shouldn't need to change this):"
msgstr "`image.ld` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid ""
"```ld\n"
"/*\n"
" * Copyright 2023 Google LLC\n"
" *\n"
" * Licensed under the Apache License, Version 2.0 (the \"License\");\n"
" * you may not use this file except in compliance with the License.\n"
" * You may obtain a copy of the License at\n"
" *\n"
" *     https://www.apache.org/licenses/LICENSE-2.0\n"
" *\n"
" * Unless required by applicable law or agreed to in writing, software\n"
" * distributed under the License is distributed on an \"AS IS\" BASIS,\n"
" * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n"
" * See the License for the specific language governing permissions and\n"
" * limitations under the License.\n"
" */\n"
"\n"
"/*\n"
" * Code will start running at this symbol which is placed at the start of "
"the\n"
" * image.\n"
" */\n"
"ENTRY(entry)\n"
"\n"
"MEMORY\n"
"{\n"
"\timage : ORIGIN = 0x40080000, LENGTH = 2M\n"
"}\n"
"\n"
"SECTIONS\n"
"{\n"
"\t/*\n"
"\t * Collect together the code.\n"
"\t */\n"
"\t.init : ALIGN(4096) {\n"
"\t\ttext_begin = .;\n"
"\t\t*(.init.entry)\n"
"\t\t*(.init.*)\n"
"\t} >image\n"
"\t.text : {\n"
"\t\t*(.text.*)\n"
"\t} >image\n"
"\ttext_end = .;\n"
"\n"
"\t/*\n"
"\t * Collect together read-only data.\n"
"\t */\n"
"\t.rodata : ALIGN(4096) {\n"
"\t\trodata_begin = .;\n"
"\t\t*(.rodata.*)\n"
"\t} >image\n"
"\t.got : {\n"
"\t\t*(.got)\n"
"\t} >image\n"
"\trodata_end = .;\n"
"\n"
"\t/*\n"
"\t * Collect together the read-write data including .bss at the end which\n"
"\t * will be zero'd by the entry code.\n"
"\t */\n"
"\t.data : ALIGN(4096) {\n"
"\t\tdata_begin = .;\n"
"\t\t*(.data.*)\n"
"\t\t/*\n"
"\t\t * The entry point code assumes that .data is a multiple of 32\n"
"\t\t * bytes long.\n"
"\t\t */\n"
"\t\t. = ALIGN(32);\n"
"\t\tdata_end = .;\n"
"\t} >image\n"
"\n"
"\t/* Everything beyond this point will not be included in the binary. */\n"
"\tbin_end = .;\n"
"\n"
"\t/* The entry point code assumes that .bss is 16-byte aligned. */\n"
"\t.bss : ALIGN(16)  {\n"
"\t\tbss_begin = .;\n"
"\t\t*(.bss.*)\n"
"\t\t*(COMMON)\n"
"\t\t. = ALIGN(16);\n"
"\t\tbss_end = .;\n"
"\t} >image\n"
"\n"
"\t.stack (NOLOAD) : ALIGN(4096) {\n"
"\t\tboot_stack_begin = .;\n"
"\t\t. += 40 * 4096;\n"
"\t\t. = ALIGN(4096);\n"
"\t\tboot_stack_end = .;\n"
"\t} >image\n"
"\n"
"\t. = ALIGN(4K);\n"
"\tPROVIDE(dma_region = .);\n"
"\n"
"\t/*\n"
"\t * Remove unused sections from the image.\n"
"\t */\n"
"\t/DISCARD/ : {\n"
"\t\t/* The image loads itself so doesn't need these sections. */\n"
"\t\t*(.gnu.hash)\n"
"\t\t*(.hash)\n"
"\t\t*(.interp)\n"
"\t\t*(.eh_frame_hdr)\n"
"\t\t*(.eh_frame)\n"
"\t\t*(.note.gnu.build-id)\n"
"\t}\n"
"}\n"
"```"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "_Makefile_ (you shouldn't need to change this):"
msgstr "`Makefile` (no deber√≠a ser necesario cambiarlo):"

#: src/exercises/bare-metal/rtc.md
msgid "# Copyright 2023 Google LLC"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "$(shell uname -s)"
msgstr ""

#: src/exercises/bare-metal/rtc.md
#, fuzzy
msgid "aarch64-linux-gnu"
msgstr "aarch64-paging"

#: src/exercises/bare-metal/rtc.md
msgid "stdio -display none -kernel $< -s"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "cargo clean"
msgstr ""

#: src/exercises/bare-metal/rtc.md
msgid "Run the code in QEMU with `make qemu`."
msgstr "Ejecuta el c√≥digo en QEMU con `make qemu`."

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "Bare Metal Rust Afternoon"
msgstr "Rust Bare Metal: tarde"

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "([back to exercise](rtc.md))"
msgstr "([volver al ejercicio](rtc.md))"

#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "_main.rs_:"
msgstr "`main.rs`:"

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Base address of the PL031 RTC.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// The IRQ used by the PL031 RTC.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because `PL031_BASE_ADDRESS` is the base address of a PL031 device,\n"
"    // and nothing else accesses that address range.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"RTC: {time}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "// Wait for 3 seconds, without interrupts.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"Waiting for {}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"matched={}, interrupt_pending={}\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "\"Finished waiting\""
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "// Wait another 3 seconds for an interrupt.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "_pl031.rs_:"
msgstr "`pl031.rs`:"

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Data register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Match register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Load register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Control register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Interrupt Mask Set or Clear register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Raw Interrupt Status\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Masked Interrupt Status\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Interrupt Clear Register\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
#, fuzzy
msgid "/// Driver for a PL031 real-time clock.\n"
msgstr ""
"Escribiremos un controlador para el dispositivo de reloj en tiempo real "
"PL031."

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Constructs a new instance of the RTC driver for a PL031 device at the\n"
"    /// given base address.\n"
"    ///\n"
"    /// # Safety\n"
"    ///\n"
"    /// The given base address must point to the MMIO control registers of "
"a\n"
"    /// PL031 device, which must be mapped into the address space of the "
"process\n"
"    /// as device memory and not have any other aliases.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Reads the current RTC value.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"// Safe because we know that self.registers points to the control\n"
"        // registers of a PL031 device which is appropriately mapped.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Writes a match value. When the RTC value matches this then an interrupt\n"
"    /// will be generated (if it is enabled).\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Returns whether the match register matches the RTC value, whether or "
"not\n"
"    /// the interrupt is enabled.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Returns whether there is currently an interrupt pending.\n"
"    ///\n"
"    /// This should be true if and only if `matched` returns true and the\n"
"    /// interrupt is masked.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid ""
"/// Sets or clears the interrupt mask.\n"
"    ///\n"
"    /// When the mask is true the interrupt is enabled; when it is false "
"the\n"
"    /// interrupt is disabled.\n"
msgstr ""

#: src/exercises/bare-metal/solutions-afternoon.md
msgid "/// Clears a pending interrupt, if any.\n"
msgstr ""

#: src/concurrency.md
msgid "Welcome to Concurrency in Rust"
msgstr "Te Damos la Bienvenida a Concurrencia en Rust"

#: src/concurrency.md
msgid ""
"Rust has full support for concurrency using OS threads with mutexes and "
"channels."
msgstr ""
"Rust es totalmente compatible con la concurrencia mediante hilos del SO con "
"exclusiones mutuas y canales."

#: src/concurrency.md
msgid ""
"The Rust type system plays an important role in making many concurrency bugs "
"compile time bugs. This is often referred to as _fearless concurrency_ since "
"you can rely on the compiler to ensure correctness at runtime."
msgstr ""
"El sistema de tipos de Rust desempe√±a un papel importante al hacer que "
"muchos errores de concurrencia sean errores en tiempo de compilaci√≥n. A "
"menudo, esto se conoce como _concurrencia sin miedo_, ya que puedes confiar "
"en el compilador para asegurar la correcci√≥n en el tiempo de ejecuci√≥n."

#: src/concurrency/threads.md
msgid "Rust threads work similarly to threads in other languages:"
msgstr "Los hilos de Rust funcionan de forma similar a los de otros lenguajes:"

#: src/concurrency/threads.md
msgid "\"Count in thread: {i}!\""
msgstr ""

#: src/concurrency/threads.md
msgid "\"Main thread: {i}\""
msgstr ""

#: src/concurrency/threads.md
msgid "Threads are all daemon threads, the main thread does not wait for them."
msgstr ""
"Los hilos son todos hilos daemon, y el hilo principal no espera por ellos."

#: src/concurrency/threads.md
msgid "Thread panics are independent of each other."
msgstr "Los p√°nicos de los hilos son independientes entre s√≠."

#: src/concurrency/threads.md
msgid "Panics can carry a payload, which can be unpacked with `downcast_ref`."
msgstr ""
"Los p√°nicos pueden transportar una carga √∫til, que se puede desempaquetar "
"con `downcast_ref`."

#: src/concurrency/threads.md
#, fuzzy
msgid ""
"Notice that the thread is stopped before it reaches 10 --- the main thread "
"is not waiting."
msgstr ""
"Observa que el hilo se detiene antes de llegar a 10; el hilo principal no "
"est√° esperando."

#: src/concurrency/threads.md
msgid ""
"Use `let handle = thread::spawn(...)` and later `handle.join()` to wait for "
"the thread to finish."
msgstr ""
"Utiliza `let handle = thread::spawn(...)` y, despu√©s, `handle.join()` para "
"esperar a que el hilo termine."

#: src/concurrency/threads.md
msgid "Trigger a panic in the thread, notice how this doesn't affect `main`."
msgstr "Activa un p√°nico en el hilo y observa c√≥mo esto no afecta a `main`."

#: src/concurrency/threads.md
msgid ""
"Use the `Result` return value from `handle.join()` to get access to the "
"panic payload. This is a good time to talk about [`Any`](https://doc.rust-"
"lang.org/std/any/index.html)."
msgstr ""
"Usa el valor devuelto `Result` de `handle.join.()` para acceder a la carga "
"√∫til del p√°nico. Este es un buen momento para hablar sobre [`Any`](https://"
"doc.rust-lang.org/std/any/index.html)."

#: src/concurrency/scoped-threads.md
msgid "Normal threads cannot borrow from their environment:"
msgstr "Los hilos normales no pueden tomar nada prestado de su entorno:"

#: src/concurrency/scoped-threads.md
msgid ""
"However, you can use a [scoped thread](https://doc.rust-lang.org/std/thread/"
"fn.scope.html) for this:"
msgstr ""
"Sin embargo, puedes usar un [hilo con √°mbito](https://doc.rust-lang.org/std/"
"thread/fn.scope.html) para lo siguiente:"

#: src/concurrency/scoped-threads.md
msgid ""
"The reason for that is that when the `thread::scope` function completes, all "
"the threads are guaranteed to be joined, so they can return borrowed data."
msgstr ""
"La raz√≥n es que, cuando se completa la funci√≥n `thread::scope`, se asegura "
"que todos los hilos est√°n unidos, por lo que pueden devolver datos prestados."

#: src/concurrency/scoped-threads.md
msgid ""
"Normal Rust borrowing rules apply: you can either borrow mutably by one "
"thread, or immutably by any number of threads."
msgstr ""
"Se aplican las reglas normales de pr√©stamo de Rust: un hilo puede tomar "
"datos prestados de manera mutable o cualquier n√∫mero de hilos puede tomar "
"datos prestados de manera inmutable."

#: src/concurrency/channels.md
msgid ""
"Rust channels have two parts: a `Sender<T>` and a `Receiver<T>`. The two "
"parts are connected via the channel, but you only see the end-points."
msgstr ""
"Los canales de Rust tienen dos partes: `Sender<T>` y `Receiver<T>`. Las dos "
"partes est√°n conectadas a trav√©s del canal, pero solo se ven los puntos "
"finales."

#: src/concurrency/channels.md
msgid "\"Received: {:?}\""
msgstr ""

#: src/concurrency/channels.md
msgid ""
"`mpsc` stands for Multi-Producer, Single-Consumer. `Sender` and `SyncSender` "
"implement `Clone` (so you can make multiple producers) but `Receiver` does "
"not."
msgstr ""
"`mpsc` son las siglas de Multi-Producer, Single-Consumer (multiproductor, "
"consumidor √∫nico.) `Sender` y `SyncSender` implementan `Clone` (es decir, "
"puedes crear varios productores), pero `Receiver` no."

#: src/concurrency/channels.md
msgid ""
"`send()` and `recv()` return `Result`. If they return `Err`, it means the "
"counterpart `Sender` or `Receiver` is dropped and the channel is closed."
msgstr ""
"`send()` y `recv()` devuelven `Result`. Si devuelven `Err`, significa que el "
"hom√≥logo `Sender` o `Receiver` se ha eliminado y el canal se ha cerrado."

#: src/concurrency/channels/unbounded.md
msgid "You get an unbounded and asynchronous channel with `mpsc::channel()`:"
msgstr "Se obtiene un canal as√≠ncrono y sin l√≠mites con `mpsc::channel()`:"

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"Message {i}\""
msgstr ""

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"{thread_id:?}: sent Message {i}\""
msgstr ""

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"{thread_id:?}: done\""
msgstr ""

#: src/concurrency/channels/unbounded.md src/concurrency/channels/bounded.md
msgid "\"Main: got {msg}\""
msgstr ""

#: src/concurrency/channels/bounded.md
msgid ""
"With bounded (synchronous) channels, `send` can block the current thread:"
msgstr "Con canales limitados (s√≠ncronos), `send` puede bloquear el hilo:"

#: src/concurrency/channels/bounded.md
msgid ""
"Calling `send` will block the current thread until there is space in the "
"channel for the new message. The thread can be blocked indefinitely if there "
"is nobody who reads from the channel."
msgstr ""
"Al llamar a `send`, se bloquear√° el hilo hasta que haya espacio suficiente "
"en el canal para el mensaje nuevo. El hilo se puede bloquear de forma "
"indefinida si no hay nadie que lea el canal."

#: src/concurrency/channels/bounded.md
msgid ""
"A call to `send` will abort with an error (that is why it returns `Result`) "
"if the channel is closed. A channel is closed when the receiver is dropped."
msgstr ""
"Si se cierra el canal, se anular√° la llamada a `send` y se producir√° un "
"error (por eso devuelve `Result`). Un canal se cierra cuando se elimina el "
"receptor."

#: src/concurrency/channels/bounded.md
msgid ""
"A bounded channel with a size of zero is called a \"rendezvous channel\". "
"Every send will block the current thread until another thread calls `read`."
msgstr ""
"Un canal delimitado con un tama√±o de cero se denomina \"canal rendezvous\". "
"Cada env√≠o bloquear√° el hilo actual hasta que otro hilo llame a `read`."

#: src/concurrency/send-sync.md
#, fuzzy
msgid ""
"How does Rust know to forbid shared access across threads? The answer is in "
"two traits:"
msgstr ""
"¬øC√≥mo sabe Rust que debe prohibir el acceso compartido entre hilos? La "
"respuesta est√° en dos traits:"

#: src/concurrency/send-sync.md
msgid ""
"[`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html): a type `T` "
"is `Send` if it is safe to move a `T` across a thread boundary."
msgstr ""
"[`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html): un tipo `T` "
"es `Send` si es seguro mover un `T` entre los l√≠mites de un hilo."

#: src/concurrency/send-sync.md
msgid ""
"[`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html): a type `T` "
"is `Sync` if it is safe to move a `&T` across a thread boundary."
msgstr ""
"[`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html): un tipo `T` "
"es `Sync` si es seguro mover un `&T` entre los l√≠mites de un hilo."

#: src/concurrency/send-sync.md
msgid ""
"`Send` and `Sync` are [unsafe traits](../unsafe/unsafe-traits.md). The "
"compiler will automatically derive them for your types as long as they only "
"contain `Send` and `Sync` types. You can also implement them manually when "
"you know it is valid."
msgstr ""
"`Send` y `Sync` son [traits inseguros](../unsafe/unsafe-traits.md). El "
"compilador los derivar√° autom√°ticamente a tus tipos siempre que solo "
"contengan los tipos `Send` y `Sync`. Tambi√©n puedes implementarlos de forma "
"manual cuando sepas que es v√°lido."

#: src/concurrency/send-sync.md
msgid ""
"One can think of these traits as markers that the type has certain thread-"
"safety properties."
msgstr ""
"Se podr√≠a pensar en estos traits como marcadores que indican que el tipo "
"tiene ciertas propiedades de seguridad en hilos."

#: src/concurrency/send-sync.md
msgid "They can be used in the generic constraints as normal traits."
msgstr ""
"Se pueden utilizar en las restricciones gen√©ricas como traits normales."

#: src/concurrency/send-sync/send.md
msgid ""
"A type `T` is [`Send`](https://doc.rust-lang.org/std/marker/trait.Send.html) "
"if it is safe to move a `T` value to another thread."
msgstr ""
"Un tipo `T` es [`Send`](https://doc.rust-lang.org/std/marker/trait.Send."
"html) si es seguro mover un valor `T` a otro hilo."

#: src/concurrency/send-sync/send.md
msgid ""
"The effect of moving ownership to another thread is that _destructors_ will "
"run in that thread. So the question is when you can allocate a value in one "
"thread and deallocate it in another."
msgstr ""
"El efecto de mover la propiedad a otro hilo es que los _destructores_ se "
"ejecutar√°n en ese hilo. Por tanto, la cuestion es cu√°ndo se puede asignar un "
"valor a un hilo y desasignarlo en otro."

#: src/concurrency/send-sync/send.md
msgid ""
"As an example, a connection to the SQLite library must only be accessed from "
"a single thread."
msgstr ""
"Por ejemplo, solo se puede acceder a una conexi√≥n a la biblioteca SQLite "
"desde un √∫nico hilo."

#: src/concurrency/send-sync/sync.md
msgid ""
"A type `T` is [`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync.html) "
"if it is safe to access a `T` value from multiple threads at the same time."
msgstr ""
"Un tipo `T` es [`Sync`](https://doc.rust-lang.org/std/marker/trait.Sync."
"html) si es seguro acceder a un valor `T` desde varios hilos al mismo tiempo."

#: src/concurrency/send-sync/sync.md
msgid "More precisely, the definition is:"
msgstr "En concreto, la definici√≥n es la siguiente:"

#: src/concurrency/send-sync/sync.md
msgid "`T` is `Sync` if and only if `&T` is `Send`"
msgstr "`T` es `Sync` √∫nicamente si `&T` es `Send`."

#: src/concurrency/send-sync/sync.md
msgid ""
"This statement is essentially a shorthand way of saying that if a type is "
"thread-safe for shared use, it is also thread-safe to pass references of it "
"across threads."
msgstr ""
"Esta instrucci√≥n es, b√°sicamente, una forma resumida de indicar que, si un "
"tipo es seguro para los hilos en uso compartido, tambi√©n lo es para pasar "
"referencias de √©l a trav√©s de los hilos."

#: src/concurrency/send-sync/sync.md
msgid ""
"This is because if a type is Sync it means that it can be shared across "
"multiple threads without the risk of data races or other synchronization "
"issues, so it is safe to move it to another thread. A reference to the type "
"is also safe to move to another thread, because the data it references can "
"be accessed from any thread safely."
msgstr ""
"Esto se debe a que, si el tipo es Sync, significa que se puede compartir "
"entre m√∫ltiples hilos sin el riesgo de que haya carreras de datos u otros "
"problemas de sincronizaci√≥n, por lo que es seguro moverlo a otro hilo. "
"Tambi√©n es seguro mover una referencia al tipo a otro hilo, ya que se puede "
"acceder de forma segura a los datos a los que hace referencia desde "
"cualquier hilo."

#: src/concurrency/send-sync/examples.md
msgid "`Send + Sync`"
msgstr "`Send + Sync`"

#: src/concurrency/send-sync/examples.md
msgid "Most types you come across are `Send + Sync`:"
msgstr "La mayor√≠a de los tipos que encuentras son `Send + Sync`:"

#: src/concurrency/send-sync/examples.md
msgid "`i8`, `f32`, `bool`, `char`, `&str`, ..."
msgstr "`i8`, `f32`, `bool`, `char`, `&str`, etc."

#: src/concurrency/send-sync/examples.md
msgid "`(T1, T2)`, `[T; N]`, `&[T]`, `struct { x: T }`, ..."
msgstr "`(T1, T2)`, `[T; N]`, `&[T]`, `struct { x: T }`, etc."

#: src/concurrency/send-sync/examples.md
msgid "`String`, `Option<T>`, `Vec<T>`, `Box<T>`, ..."
msgstr "`String`, `Option<T>`, `Vec<T>`, `Box<T>`, etc."

#: src/concurrency/send-sync/examples.md
msgid "`Arc<T>`: Explicitly thread-safe via atomic reference count."
msgstr ""
"`Arc<T>`: expl√≠citamente seguro para los hilos mediante el recuento at√≥mico "
"de referencias."

#: src/concurrency/send-sync/examples.md
msgid "`Mutex<T>`: Explicitly thread-safe via internal locking."
msgstr ""
"`Mutex<T>`: expl√≠citamente seguro para los hilos mediante bloqueo interno."

#: src/concurrency/send-sync/examples.md
msgid "`AtomicBool`, `AtomicU8`, ...: Uses special atomic instructions."
msgstr ""
"`AtomicBool`, `AtomicU8`, etc.: utiliza instrucciones at√≥micas especiales."

#: src/concurrency/send-sync/examples.md
msgid ""
"The generic types are typically `Send + Sync` when the type parameters are "
"`Send + Sync`."
msgstr ""
"Los tipos gen√©ricos suelen ser `Send + Sync` cuando los par√°metros del tipo "
"son `Send + Sync`."

#: src/concurrency/send-sync/examples.md
msgid "`Send + !Sync`"
msgstr "`Send + !Sync`"

#: src/concurrency/send-sync/examples.md
msgid ""
"These types can be moved to other threads, but they're not thread-safe. "
"Typically because of interior mutability:"
msgstr ""
"Estos tipos se pueden mover a otros hilos, pero no son seguros para los "
"hilos. Normalmente, esto se debe a la mutabilidad interior:"

#: src/concurrency/send-sync/examples.md
msgid "`mpsc::Sender<T>`"
msgstr "`mpsc::Sender<T>`"

#: src/concurrency/send-sync/examples.md
msgid "`mpsc::Receiver<T>`"
msgstr "`mpsc::Receiver<T>`"

#: src/concurrency/send-sync/examples.md
msgid "`Cell<T>`"
msgstr "`Cell<T>`"

#: src/concurrency/send-sync/examples.md
msgid "`RefCell<T>`"
msgstr "`RefCell<T>`"

#: src/concurrency/send-sync/examples.md
msgid "`!Send + Sync`"
msgstr "`!Send + Sync`"

#: src/concurrency/send-sync/examples.md
msgid ""
"These types are thread-safe, but they cannot be moved to another thread:"
msgstr ""
"Estos tipos son seguros para los hilos _(thread safe)_, pero no se pueden "
"mover a otro hilo:"

#: src/concurrency/send-sync/examples.md
#, fuzzy
msgid ""
"`MutexGuard<T: Sync>`: Uses OS level primitives which must be deallocated on "
"the thread which created them."
msgstr ""
"`MutexGuard<T>`: utiliza primitivos de nivel SO que se deben desasignar en "
"el hilo que los cre√≥."

#: src/concurrency/send-sync/examples.md
msgid "`!Send + !Sync`"
msgstr "`!Send + !Sync`"

#: src/concurrency/send-sync/examples.md
msgid "These types are not thread-safe and cannot be moved to other threads:"
msgstr ""
"Estos tipos no son seguros para los hilos y no se pueden mover a otros hilos:"

#: src/concurrency/send-sync/examples.md
msgid ""
"`Rc<T>`: each `Rc<T>` has a reference to an `RcBox<T>`, which contains a non-"
"atomic reference count."
msgstr ""
"`Rc<T>`: cada `Rc<T>` tiene una referencia a un `RcBox<T>`, que contiene un "
"recuento de referencias no at√≥mico."

#: src/concurrency/send-sync/examples.md
msgid ""
"`*const T`, `*mut T`: Rust assumes raw pointers may have special concurrency "
"considerations."
msgstr ""
"`*const T`, `*mut T`: Rust asume que los punteros sin procesar pueden tener "
"consideraciones especiales de concurrencia."

#: src/concurrency/shared_state.md
msgid ""
"Rust uses the type system to enforce synchronization of shared data. This is "
"primarily done via two types:"
msgstr ""
"Rust utiliza el sistema de tipos para implementar la sincronizaci√≥n de los "
"datos compartidos. Esto se hace principalmente a trav√©s de dos tipos:"

#: src/concurrency/shared_state.md
msgid ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html), atomic "
"reference counted `T`: handles sharing between threads and takes care to "
"deallocate `T` when the last reference is dropped,"
msgstr ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html), recuento "
"at√≥mico de referencias `T`: gestiona el uso compartido entre hilos y se "
"encarga de desasignar `T` cuando se elimina la √∫ltima referencia."

#: src/concurrency/shared_state.md
msgid ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html): ensures "
"mutually exclusive access to the `T` value."
msgstr ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html): asegura "
"el acceso mutuamente excluyente al valor `T`."

#: src/concurrency/shared_state/arc.md
msgid ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html) allows shared "
"read-only access via `Arc::clone`:"
msgstr ""
"[`Arc<T>`](https://doc.rust-lang.org/std/sync/struct.Arc.html) permite el "
"acceso compartido de solo lectura a trav√©s de `Arc::clone`:"

#: src/concurrency/shared_state/arc.md
msgid "\"{thread_id:?}: {v:?}\""
msgstr ""

#: src/concurrency/shared_state/arc.md src/concurrency/shared_state/example.md
msgid "\"v: {v:?}\""
msgstr ""

#: src/concurrency/shared_state/arc.md
msgid ""
"`Arc` stands for \"Atomic Reference Counted\", a thread safe version of `Rc` "
"that uses atomic operations."
msgstr ""
"`Arc` son las siglas de \"Atomic Reference Counted\" (recuento at√≥mico de "
"referencias), una versi√≥n de `Rc` segura para los hilos que utiliza "
"operaciones at√≥micas."

#: src/concurrency/shared_state/arc.md
msgid ""
"`Arc<T>` implements `Clone` whether or not `T` does. It implements `Send` "
"and `Sync` if and only if `T` implements them both."
msgstr ""
"`Arc<T>` implementa `Clone`, independientemente de si `T` lo hace o no. "
"Implementa `Send` y `Sync` si `T` implementa ambos."

#: src/concurrency/shared_state/arc.md
msgid ""
"`Arc::clone()` has the cost of atomic operations that get executed, but "
"after that the use of the `T` is free."
msgstr ""
"`Arc::clone()` tiene el coste de las operaciones at√≥micas que se ejecutan; "
"despu√©s el uso de `T` es libre."

#: src/concurrency/shared_state/arc.md
msgid ""
"Beware of reference cycles, `Arc` does not use a garbage collector to detect "
"them."
msgstr ""
"Hay que prestar atenci√≥n a los ciclos de referencia, ya que `Arc` no usa un "
"recolector de memoria residual para detectarlos."

#: src/concurrency/shared_state/arc.md
msgid "`std::sync::Weak` can help."
msgstr "`std::sync::Weak` puede resultar √∫til."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) ensures "
"mutual exclusion _and_ allows mutable access to `T` behind a read-only "
"interface (another form of [interior mutability](../../borrowing/interior-"
"mutability)):"
msgstr ""
"[`Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html) asegura "
"la exclusi√≥n mutua _y_ permite un acceso mutable a `T` a trav√©s de una "
"interfaz de solo lectura:"

#: src/concurrency/shared_state/mutex.md
msgid "\"v: {:?}\""
msgstr ""

#: src/concurrency/shared_state/mutex.md
msgid ""
"Notice how we have a [`impl<T: Send> Sync for Mutex<T>`](https://doc.rust-"
"lang.org/std/sync/struct.Mutex.html#impl-Sync-for-Mutex%3CT%3E) blanket "
"implementation."
msgstr ""
"F√≠jate en c√≥mo tenemos una implementaci√≥n general de [`impl<T: Send> Sync "
"for Mutex<T>`](https://doc.rust-lang.org/std/sync/struct.Mutex.html#impl-"
"Sync-for-Mutex%3CT%3E)."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid ""
"`Mutex` in Rust looks like a collection with just one element --- the "
"protected data."
msgstr ""
"`Mutex` en Rust parece una colecci√≥n con un solo elemento: los datos "
"protegidos."

#: src/concurrency/shared_state/mutex.md
msgid ""
"It is not possible to forget to acquire the mutex before accessing the "
"protected data."
msgstr ""
"No es posible olvidarse de adquirir la exclusi√≥n mutua antes de acceder a "
"los datos protegidos."

#: src/concurrency/shared_state/mutex.md
msgid ""
"You can get an `&mut T` from an `&Mutex<T>` by taking the lock. The "
"`MutexGuard` ensures that the `&mut T` doesn't outlive the lock being held."
msgstr ""
"Puedes obtener un `&mut T` de `Mutex<T>` mediante el bloqueo. El "
"`MutexGuard` asegura que `&mut T` no dure m√°s tiempo que el bloqueo que se "
"ha aplicado."

#: src/concurrency/shared_state/mutex.md
msgid ""
"`Mutex<T>` implements both `Send` and `Sync` iff (if and only if) `T` "
"implements `Send`."
msgstr ""
"`Mutex<T>` implementa tanto `Send` como `Sync` √∫nicamente si `T` implementa "
"`Send`."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid "A read-write lock counterpart: `RwLock`."
msgstr "Un equivalente de bloqueo de lectura y escritura: `RwLock`."

#: src/concurrency/shared_state/mutex.md
#, fuzzy
msgid "Why does `lock()` return a `Result`?"
msgstr "¬øPor qu√© `lock()` devuelve un `Result`? "

#: src/concurrency/shared_state/mutex.md
msgid ""
"If the thread that held the `Mutex` panicked, the `Mutex` becomes "
"\"poisoned\" to signal that the data it protected might be in an "
"inconsistent state. Calling `lock()` on a poisoned mutex fails with a "
"[`PoisonError`](https://doc.rust-lang.org/std/sync/struct.PoisonError.html). "
"You can call `into_inner()` on the error to recover the data regardless."
msgstr ""
"Si el hilo que contiene `Mutex` entra en p√°nico, `Mutex` se \"envenena\" "
"para indicar que los datos que proteg√≠a pueden estar en un estado "
"incoherente. Llamar a `lock()` en una exclusi√≥n mutua envenenada da el error "
"[`PoisonError`](https://doc.rust-lang.org/std/sync/struct.PoisonError.html). "
"Puedes llamar a `into_inner()` en el error para recuperar los datos de todos "
"modos."

#: src/concurrency/shared_state/example.md
msgid "Let us see `Arc` and `Mutex` in action:"
msgstr "Veamos c√≥mo funcionan `Arc` y `Mutex`:"

#: src/concurrency/shared_state/example.md
msgid "// use std::sync::{Arc, Mutex};\n"
msgstr ""

#: src/concurrency/shared_state/example.md
msgid "Possible solution:"
msgstr "Soluci√≥n posible:"

#: src/concurrency/shared_state/example.md
msgid "Notable parts:"
msgstr "Puntos a destacar:"

#: src/concurrency/shared_state/example.md
msgid ""
"`v` is wrapped in both `Arc` and `Mutex`, because their concerns are "
"orthogonal."
msgstr ""
"`v` se envuelve tanto en `Arc` como en `Mutex`, porque sus preocupaciones "
"son ortogonales."

#: src/concurrency/shared_state/example.md
msgid ""
"Wrapping a `Mutex` in an `Arc` is a common pattern to share mutable state "
"between threads."
msgstr ""
"Envolver un `Mutex` en un `Arc` es un patr√≥n habitual para compartir el "
"estado mutable entre hilos."

#: src/concurrency/shared_state/example.md
msgid ""
"`v: Arc<_>` needs to be cloned as `v2` before it can be moved into another "
"thread. Note `move` was added to the lambda signature."
msgstr ""
"`v: Arc<_>` se debe clonar como `v2` antes de poder moverlo a otro hilo. Ten "
"en cuenta que `move` se ha a√±adido a la firma lambda."

#: src/concurrency/shared_state/example.md
msgid ""
"Blocks are introduced to narrow the scope of the `LockGuard` as much as "
"possible."
msgstr ""
"Se introducen bloqueos para limitar al m√°ximo el √°mbito de `LockGuard`."

#: src/exercises/concurrency/morning.md
msgid "Let us practice our new concurrency skills with"
msgstr "Vamos a practicar nuestras nuevas habilidades de concurrencia con"

#: src/exercises/concurrency/morning.md
msgid "Dining philosophers: a classic problem in concurrency."
msgstr "La cena de los fil√≥sofos: un problema cl√°sico de concurrencia."

#: src/exercises/concurrency/morning.md
msgid ""
"Multi-threaded link checker: a larger project where you'll use Cargo to "
"download dependencies and then check links in parallel."
msgstr ""
"El comprobador de enlaces multihilo: un proyecto m√°s grande donde utilizar√°s "
"Cargo para descargar dependencias y luego comprobar los enlaces en paralelo."

#: src/exercises/concurrency/dining-philosophers.md
msgid "The dining philosophers problem is a classic problem in concurrency:"
msgstr ""
"El problema de la cena de los fil√≥sofos es un problema cl√°sico de "
"concurrencia:"

#: src/exercises/concurrency/dining-philosophers.md
msgid ""
"Five philosophers dine together at the same table. Each philosopher has "
"their own place at the table. There is a fork between each plate. The dish "
"served is a kind of spaghetti which has to be eaten with two forks. Each "
"philosopher can only alternately think and eat. Moreover, a philosopher can "
"only eat their spaghetti when they have both a left and right fork. Thus two "
"forks will only be available when their two nearest neighbors are thinking, "
"not eating. After an individual philosopher finishes eating, they will put "
"down both forks."
msgstr ""
"Cinco fil√≥sofos cenan juntos en la misma mesa. Cada fil√≥sofo tiene su propio "
"sitio en ella. Hay un tenedor entre cada plato. El plato que van a degustar "
"es una especie de espaguetis que hay que comer con dos tenedores. Los "
"fil√≥sofos solo pueden pensar y comer alternativamente. Adem√°s, solo pueden "
"comer sus espaguetis cuando disponen de un tenedor a la izquierda y otro a "
"la derecha. Por tanto, los dos tenedores solo estar√°n disponibles cuando su "
"dos vecinos m√°s cercanos est√©n pensando y no comiendo. Cuando un fil√≥sofo "
"termina de comer, deja los dos tenedores en la mesa."

#: src/exercises/concurrency/dining-philosophers.md
msgid ""
"You will need a local [Cargo installation](../../cargo/running-locally.md) "
"for this exercise. Copy the code below to a file called `src/main.rs`, fill "
"out the blanks, and test that `cargo run` does not deadlock:"
msgstr ""
"Para realizar este ejercicio necesitar√°s una \\[instalaci√≥n local de "
"Cargo\\] (../../cargo/running-locally.md). Copia el fragmento de c√≥digo que "
"aparece m√°s abajo en un archivo denominado `src/main.rs`, rellena los "
"espacios en blanco y comprueba que `cargo run` no presenta interbloqueos:"

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"// left_fork: ...\n"
"    // right_fork: ...\n"
"    // thoughts: ...\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Eureka! {} has a new idea!\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Pick up forks...\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"{} is eating...\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "\"Socrates\""
msgstr "Crates HAL"

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Hypatia\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Plato\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Aristotle\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/solutions-morning.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Pythagoras\""
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Create forks\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Create philosophers\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
msgid "// Make each of them think and eat 100 times\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Output their thoughts\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers.md
msgid "You can use the following `Cargo.toml`:"
msgstr "Puedes usar el siguiente archivo `Cargo.toml`:"

#: src/exercises/concurrency/dining-philosophers.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"dining-philosophers\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"```"
msgstr ""

#: src/exercises/concurrency/link-checker.md
msgid ""
"Let us use our new knowledge to create a multi-threaded link checker. It "
"should start at a webpage and check that links on the page are valid. It "
"should recursively check other pages on the same domain and keep doing this "
"until all pages have been validated."
msgstr ""
"Utilicemos nuestros nuevos conocimientos para crear un comprobador de "
"enlaces multihilo. Deber√≠a empezar en una p√°gina web y comprobar que los "
"enlaces de la p√°gina son v√°lidos. Deber√≠a consultar otras p√°ginas del mismo "
"dominio y seguir haci√©ndolo hasta que todas las p√°ginas se hayan validado."

#: src/exercises/concurrency/link-checker.md
msgid ""
"For this, you will need an HTTP client such as [`reqwest`](https://docs.rs/"
"reqwest/). Create a new Cargo project and `reqwest` it as a dependency with:"
msgstr ""
"Para ello, necesitar√°s un cliente HTTP como [`reqwest`](https://docs.rs/"
"reqwest/). Crea un proyecto de Cargo y aplica `reqwest` como una dependencia "
"con:"

#: src/exercises/concurrency/link-checker.md
msgid ""
"If `cargo add` fails with `error: no such subcommand`, then please edit the "
"`Cargo.toml` file by hand. Add the dependencies listed below."
msgstr ""
"Si `cargo add` da `error: no such subcommand`, edita el archivo `Cargo.toml` "
"de forma manual. A√±ade las dependencias que se indican m√°s abajo."

#: src/exercises/concurrency/link-checker.md
msgid ""
"You will also need a way to find links. We can use [`scraper`](https://docs."
"rs/scraper/) for that:"
msgstr ""
"Tambi√©n necesitar√°s una forma de encontrar enlaces. Podemos usar [`scraper`]"
"(https://docs.rs/scraper/) para eso:"

#: src/exercises/concurrency/link-checker.md
msgid ""
"Finally, we'll need some way of handling errors. We use [`thiserror`]"
"(https://docs.rs/thiserror/) for that:"
msgstr ""
"Por √∫ltimo, necesitaremos alg√∫n m√©todo para gestionar los errores. Para "
"ello, usaremos [`thiserror`](https://docs.rs/thiserror/):"

#: src/exercises/concurrency/link-checker.md
msgid ""
"The `cargo add` calls will update the `Cargo.toml` file to look like this:"
msgstr ""
"Las llamadas a `cargo add` actualizar√°n el archivo `Cargo.toml` para que "
"tenga este aspecto:"

#: src/exercises/concurrency/link-checker.md
msgid ""
"```toml\n"
"[package]\n"
"name = \"link-checker\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"publish = false\n"
"\n"
"[dependencies]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"
msgstr ""
"```toml\n"
"[package]\n"
"name = \"link-checker\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"publish = false\n"
"\n"
"[dependencies]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"

#: src/exercises/concurrency/link-checker.md
msgid ""
"You can now download the start page. Try with a small site such as `https://"
"www.google.org/`."
msgstr ""
"Ya puedes descargar la p√°gina de inicio. Prueba con un sitio peque√±o, como "
"`https://www.google.org/`."

#: src/exercises/concurrency/link-checker.md
msgid "Your `src/main.rs` file should look something like this:"
msgstr "El archivo `src/main.rs` deber√≠a tener un aspecto similar a este:"

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"request error: {0}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"bad http response: {0}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"Checking {:#}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"href\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"On {base_url:#}: ignored unparsable {href:?}: {err}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
#: src/exercises/concurrency/solutions-morning.md
msgid "\"https://www.google.org\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
msgid "\"Links: {links:#?}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
msgid "\"Could not extract links: {err:#}\""
msgstr ""

#: src/exercises/concurrency/link-checker.md
msgid "Run the code in `src/main.rs` with"
msgstr "Ejecuta el c√≥digo en `src/main.rs` con"

#: src/exercises/concurrency/link-checker.md
msgid ""
"Use threads to check the links in parallel: send the URLs to be checked to a "
"channel and let a few threads check the URLs in parallel."
msgstr ""
"Comprueba los enlaces en paralelo con los hilos: env√≠a las URLs que se van a "
"comprobar a un canal y deja que varios hilos comprueben las URLs en paralelo."

#: src/exercises/concurrency/link-checker.md
msgid ""
"Extend this to recursively extract links from all pages on the `www.google."
"org` domain. Put an upper limit of 100 pages or so so that you don't end up "
"being blocked by the site."
msgstr ""
"Ampl√≠a esta opci√≥n para extraer enlaces de todas las p√°ginas del dominio "
"`www.google.org`. Define un l√≠mite m√°ximo de 100 p√°ginas para que el sitio "
"no te bloquee."

#: src/exercises/concurrency/solutions-morning.md
msgid "Concurrency Morning Exercise"
msgstr "Concurrencia: Ejercicios de la Ma√±ana"

#: src/exercises/concurrency/solutions-morning.md
msgid "([back to exercise](dining-philosophers.md))"
msgstr "([volver al ejercicio](dining-philosophers.md))"

#: src/exercises/concurrency/solutions-morning.md
msgid "\"{} is trying to eat\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid ""
"// To avoid a deadlock, we have to break the symmetry\n"
"        // somewhere. This will swap the forks without deinitializing\n"
"        // either of them.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "\"{thought}\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "Link Checker"
msgstr "Comprobador de Enlaces"

#: src/exercises/concurrency/solutions-morning.md
msgid "([back to exercise](link-checker.md))"
msgstr "([volver al ejercicio](link-checker.md))"

#: src/exercises/concurrency/solutions-morning.md
msgid ""
"/// Determine whether links within the given page should be extracted.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid ""
"/// Mark the given page as visited, returning false if it had already\n"
"    /// been visited.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "// The sender got dropped. No more commands coming in.\n"
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "\"Got crawling error: {:#}\""
msgstr ""

#: src/exercises/concurrency/solutions-morning.md
msgid "\"Bad URLs: {:#?}\""
msgstr ""

#: src/async.md
msgid "Async Rust"
msgstr "Async en Rust"

#: src/async.md
msgid ""
"\"Async\" is a concurrency model where multiple tasks are executed "
"concurrently by executing each task until it would block, then switching to "
"another task that is ready to make progress. The model allows running a "
"larger number of tasks on a limited number of threads. This is because the "
"per-task overhead is typically very low and operating systems provide "
"primitives for efficiently identifying I/O that is able to proceed."
msgstr ""
"\"Async\" es un modelo de concurrencia en el que se ejecutan varias tareas "
"al mismo tiempo. Se ejecuta cada una de ellas hasta que se bloquea y, a "
"continuaci√≥n, se cambia a otra tarea que est√° lista para progresar. El "
"modelo permite ejecutar un mayor n√∫mero de tareas en un n√∫mero limitado de "
"hilos. Esto se debe a que la sobrecarga por tarea suele ser muy baja y los "
"sistemas operativos proporcionan primitivos para identificar de forma "
"eficiente las E/S que pueden continuar."

#: src/async.md
msgid ""
"Rust's asynchronous operation is based on \"futures\", which represent work "
"that may be completed in the future. Futures are \"polled\" until they "
"signal that they are complete."
msgstr ""
"La operaci√≥n as√≠ncrona de Rust se basa en \"valores futuros\", que "
"representan el trabajo que puede completarse m√°s adelante. Los futuros se "
"\"sondean\" hasta que indican que se han completado."

#: src/async.md
msgid ""
"Futures are polled by an async runtime, and several different runtimes are "
"available."
msgstr ""
"Los futuros se sondean mediante un tiempo de ejecuci√≥n as√≠ncrono y hay "
"disponibles varios tiempos de ejecuci√≥n diferentes."

#: src/async.md
msgid ""
"Python has a similar model in its `asyncio`. However, its `Future` type is "
"callback-based, and not polled. Async Python programs require a \"loop\", "
"similar to a runtime in Rust."
msgstr ""
"Python tiene un modelo similar en su `asyncio`. Sin embargo, su tipo "
"`Future` est√° basado en retrollamadas y no se sondea. Los programas "
"as√≠ncronos de Python requieren un \"bucle\", similar a un tiempo de "
"ejecuci√≥n en Rust."

#: src/async.md
msgid ""
"JavaScript's `Promise` is similar, but again callback-based. The language "
"runtime implements the event loop, so many of the details of Promise "
"resolution are hidden."
msgstr ""
"`Promise` de JavaScript es parecido, pero tambi√©n se basa en retrollamadas. "
"El tiempo de ejecuci√≥n del lenguaje implementa el bucle de eventos, por lo "
"que muchos de los detalles de la resoluci√≥n de Promise est√°n ocultos."

#: src/async/async-await.md
msgid ""
"At a high level, async Rust code looks very much like \"normal\" sequential "
"code:"
msgstr ""
"En general, el c√≥digo as√≠ncrono de Rust se parece mucho al c√≥digo secuencial "
"\"normal\":"

#: src/async/async-await.md
msgid "\"Count is: {i}!\""
msgstr ""

#: src/async/async-await.md
msgid ""
"Note that this is a simplified example to show the syntax. There is no long "
"running operation or any real concurrency in it!"
msgstr ""
"Ten en cuenta que este es un ejemplo simplificado para mostrar la sintaxis. "
"No hay ninguna operaci√≥n de larga duraci√≥n ni concurrencia real."

#: src/async/async-await.md
msgid "What is the return type of an async call?"
msgstr "¬øCu√°l es el tipo de resultado devuelto de una llamada as√≠ncrona?"

#: src/async/async-await.md
msgid "Use `let future: () = async_main(10);` in `main` to see the type."
msgstr "Consulta el tipo con `let future: () = async_main(10);` en `main` ."

#: src/async/async-await.md
#, fuzzy
msgid ""
"The \"async\" keyword is syntactic sugar. The compiler replaces the return "
"type with a future."
msgstr ""
"La palabra clave \"async\" es az√∫car sint√°ctico. El compilador sustituye el "
"tipo de resultado devuelto por un futuro. "

#: src/async/async-await.md
msgid ""
"You cannot make `main` async, without additional instructions to the "
"compiler on how to use the returned future."
msgstr ""
"No se puede hacer que `main` sea as√≠ncrono sin dar instrucciones adicionales "
"al compilador sobre c√≥mo usar el futuro devuelto."

#: src/async/async-await.md
#, fuzzy
msgid ""
"You need an executor to run async code. `block_on` blocks the current thread "
"until the provided future has run to completion."
msgstr ""
"Se necesita un ejecutor para ejecutar el c√≥digo as√≠ncrono. `block_on` "
"bloquea el hilo hasta que se complete el futuro proporcionado. "

#: src/async/async-await.md
msgid ""
"`.await` asynchronously waits for the completion of another operation. "
"Unlike `block_on`, `.await` doesn't block the current thread."
msgstr ""
"`.await` espera de forma as√≠ncrona la finalizaci√≥n de otra operaci√≥n. A "
"diferencia de `block_on`, `.await` no bloquea el hilo."

#: src/async/async-await.md
#, fuzzy
msgid ""
"`.await` can only be used inside an `async` function (or block; these are "
"introduced later)."
msgstr ""
"`.await` solo se puede usar dentro de una funci√≥n `async` (o bloqueo; estos "
"se ver√°n m√°s tarde). "

#: src/async/futures.md
msgid ""
"[`Future`](https://doc.rust-lang.org/std/future/trait.Future.html) is a "
"trait, implemented by objects that represent an operation that may not be "
"complete yet. A future can be polled, and `poll` returns a [`Poll`](https://"
"doc.rust-lang.org/std/task/enum.Poll.html)."
msgstr ""
"[`Future`](https://doc.rust-lang.org/std/future/trait.Future.html) es un "
"trait implementado por objetos que representan una operaci√≥n que puede que "
"a√∫n no se haya completado. Se puede sondear un futuro y `poll` devuelve un "
"[`Poll`](https://doc.rust-lang.org/std/task/enum.Poll.html)."

#: src/async/futures.md
msgid ""
"An async function returns an `impl Future`. It's also possible (but "
"uncommon) to implement `Future` for your own types. For example, the "
"`JoinHandle` returned from `tokio::spawn` implements `Future` to allow "
"joining to it."
msgstr ""
"Una funci√≥n as√≠ncrona devuelve `impl Future`. Tambi√©n es posible (aunque no "
"es habitual) implementar `Future` para tus propios tipos. Por ejemplo, el "
"`JoinHandle` devuelto por `tokio::spawn` implementa `Future` para permitir "
"que se una a √©l."

#: src/async/futures.md
msgid ""
"The `.await` keyword, applied to a Future, causes the current async function "
"to pause until that Future is ready, and then evaluates to its output."
msgstr ""
"La palabra clave `.await`, aplicada a un futuro, provoca que la funci√≥n "
"as√≠ncrona se detenga hasta que dicho futuro est√© listo y, a continuaci√≥n, se "
"eval√∫a su salida."

#: src/async/futures.md
msgid ""
"The `Future` and `Poll` types are implemented exactly as shown; click the "
"links to show the implementations in the docs."
msgstr ""
"Los tipos `Future` y `Polll` se implementan exactamente como se indica. Haz "
"clic en los enlaces para mostrar las implementaciones en los documentos."

#: src/async/futures.md
msgid ""
"We will not get to `Pin` and `Context`, as we will focus on writing async "
"code, rather than building new async primitives. Briefly:"
msgstr ""
"No trataremos `Pin` ni `Context`, ya que nos centraremos en escribir c√≥digo "
"as√≠ncrono en lugar de compilar nuevos primitivos as√≠ncronos. Brevemente:"

#: src/async/futures.md
msgid ""
"`Context` allows a Future to schedule itself to be polled again when an "
"event occurs."
msgstr ""
"`Context` permite que un futuro se programe a s√≠ mismo para que se vuelva a "
"sondear cuando se produzca un evento."

#: src/async/futures.md
msgid ""
"`Pin` ensures that the Future isn't moved in memory, so that pointers into "
"that future remain valid. This is required to allow references to remain "
"valid after an `.await`."
msgstr ""
"`Pin` asegura que el futuro no se mueva en la memoria, de forma que los "
"punteros en ese futuro siguen siendo v√°lidos. Esto es necesario para que las "
"referencias sigan siendo v√°lidas despu√©s de `.await`."

#: src/async/runtimes.md
msgid ""
"A _runtime_ provides support for performing operations asynchronously (a "
"_reactor_) and is responsible for executing futures (an _executor_). Rust "
"does not have a \"built-in\" runtime, but several options are available:"
msgstr ""
"Un _runtime_ ofrece asistencia para realizar operaciones de forma as√≠ncrona "
"(un _reactor_) y es responsable de ejecutar futuros (un _ejecutor_). Rust no "
"cuenta con un tiempo de ejecuci√≥n \"integrado\", pero hay varias opciones "
"disponibles:"

#: src/async/runtimes.md
msgid ""
"[Tokio](https://tokio.rs/): performant, with a well-developed ecosystem of "
"functionality like [Hyper](https://hyper.rs/) for HTTP or [Tonic](https://"
"github.com/hyperium/tonic) for gRPC."
msgstr ""
"[Tokio](https://tokio.rs/): eficaz, con un ecosistema bien desarrollado de "
"funciones, como [Hyper](https://hyper.rs/) para HTTP o [Tonic](https://"
"github.com/hyperium/tonic) para usar gRPC."

#: src/async/runtimes.md
msgid ""
"[async-std](https://async.rs/): aims to be a \"std for async\", and includes "
"a basic runtime in `async::task`."
msgstr ""
"[async-std](https://async.rs/): se trata de un \"std para async\" e incluye "
"un tiempo de ejecuci√≥n b√°sico en `async::task`."

#: src/async/runtimes.md
msgid "[smol](https://docs.rs/smol/latest/smol/): simple and lightweight"
msgstr "[smol](https://docs.rs/smol/latest/smol/): sencillo y ligero."

#: src/async/runtimes.md
msgid ""
"Several larger applications have their own runtimes. For example, [Fuchsia]"
"(https://fuchsia.googlesource.com/fuchsia/+/refs/heads/main/src/lib/fuchsia-"
"async/src/lib.rs) already has one."
msgstr ""
"Varias aplicaciones de mayor tama√±o tienen sus propios tiempos de ejecuci√≥n. "
"Por ejemplo, [Fuchsia](https://fuchsia.googlesource.com/fuchsia/+/refs/heads/"
"main/src/lib/fuchsia-async/src/lib.rs) ya tiene uno."

#: src/async/runtimes.md
msgid ""
"Note that of the listed runtimes, only Tokio is supported in the Rust "
"playground. The playground also does not permit any I/O, so most interesting "
"async things can't run in the playground."
msgstr ""
"Ten en cuenta que, de los tiempos de ejecuci√≥n enumerados, el playground de "
"Rust solo admite Tokio. El playground tampoco permite ning√∫n tipo de E/S, "
"por lo que la mayor√≠a de elementos as√≠ncronos interesantes no se pueden "
"ejecutar. en √©l."

#: src/async/runtimes.md
msgid ""
"Futures are \"inert\" in that they do not do anything (not even start an I/O "
"operation) unless there is an executor polling them. This differs from JS "
"Promises, for example, which will run to completion even if they are never "
"used."
msgstr ""
"Los futuros son \"inertes\", ya que no realizan ninguna acci√≥n (ni siquiera "
"iniciar una operaci√≥n de E/S) a menos que haya un ejecutor que los sondee. "
"Muy diferente de las promesas de JavaScript, por ejemplo, que se ejecutan "
"hasta su finalizaci√≥n, aunque nunca se utilicen."

#: src/async/runtimes/tokio.md
#, fuzzy
msgid "Tokio provides:"
msgstr "Tokio ofrece lo siguiente: "

#: src/async/runtimes/tokio.md
msgid "A multi-threaded runtime for executing asynchronous code."
msgstr "Un tiempo de ejecuci√≥n multihilo para ejecutar c√≥digo as√≠ncrono."

#: src/async/runtimes/tokio.md
msgid "An asynchronous version of the standard library."
msgstr "Una versi√≥n as√≠ncrona de la biblioteca est√°ndar."

#: src/async/runtimes/tokio.md
msgid "A large ecosystem of libraries."
msgstr "Un amplio ecosistema de bibliotecas."

#: src/async/runtimes/tokio.md
msgid "\"Count in task: {i}!\""
msgstr ""

#: src/async/runtimes/tokio.md
msgid "\"Main task: {i}\""
msgstr ""

#: src/async/runtimes/tokio.md
msgid "With the `tokio::main` macro we can now make `main` async."
msgstr "Con la macro `tokio::main`, podemos hacer que `main` sea as√≠ncrono."

#: src/async/runtimes/tokio.md
msgid "The `spawn` function creates a new, concurrent \"task\"."
msgstr "La funci√≥n `spawn` crea una \"tarea\" simult√°nea."

#: src/async/runtimes/tokio.md
msgid "Note: `spawn` takes a `Future`, you don't call `.await` on `count_to`."
msgstr ""
"Nota: `spawn` utiliza un `Future`, no se llama a `.await` en `count_to`."

#: src/async/runtimes/tokio.md
msgid "**Further exploration:**"
msgstr "**M√°s informaci√≥n:**"

#: src/async/runtimes/tokio.md
msgid ""
"Why does `count_to` not (usually) get to 10? This is an example of async "
"cancellation. `tokio::spawn` returns a handle which can be awaited to wait "
"until it finishes."
msgstr ""
"¬øPor qu√© `count_to` no suele llegar a 10? Se trata de un ejemplo de "
"cancelaci√≥n as√≠ncrona. `tokio::spawn` devuelve un controlador que puede "
"esperarse hasta que termine."

#: src/async/runtimes/tokio.md
msgid "Try `count_to(10).await` instead of spawning."
msgstr "Prueba `count_to(10).await` en lugar de usar spawn."

#: src/async/runtimes/tokio.md
msgid "Try awaiting the task returned from `tokio::spawn`."
msgstr "Intenta esperar a la correci√≥n de la tarea de `tokio::spawn`."

#: src/async/tasks.md
msgid "Rust has a task system, which is a form of lightweight threading."
msgstr "Rust tiene un sistema de tareas, que es una forma de hilo ligero."

#: src/async/tasks.md
msgid ""
"A task has a single top-level future which the executor polls to make "
"progress. That future may have one or more nested futures that its `poll` "
"method polls, corresponding loosely to a call stack. Concurrency within a "
"task is possible by polling multiple child futures, such as racing a timer "
"and an I/O operation."
msgstr ""
"Una tarea tiene un solo futuro de nivel superior que el ejecutor sondea para "
"hacer que progrese. El futuro puede tener uno o varios futuros anidados que "
"su m√©todo `poll` sondea, lo que se corresponde con una pila de llamadas. La "
"concurrencia dentro de una tarea es posible mediante el sondeo de varios "
"futuros secundarios , como una carrera de un temporizador y una operaci√≥n de "
"E/S."

#: src/async/tasks.md
msgid "\"127.0.0.1:0\""
msgstr ""

#: src/async/tasks.md
msgid "\"listening on port {}\""
msgstr ""

#: src/async/tasks.md
msgid "\"connection from {addr:?}\""
msgstr ""

#: src/async/tasks.md
msgid "b\"Who are you?\\n\""
msgstr ""

#: src/async/tasks.md
msgid "\"socket error\""
msgstr ""

#: src/async/tasks.md
msgid "\"Thanks for dialing in, {name}!\\n\""
msgstr ""

#: src/async/tasks.md src/async/control-flow/join.md
msgid ""
"Copy this example into your prepared `src/main.rs` and run it from there."
msgstr ""
"Copia este ejemplo en el archivo `src/main.rs` que has preparado y ejec√∫talo "
"desde ah√≠."

#: src/async/tasks.md
msgid ""
"Try connecting to it with a TCP connection tool like [nc](https://www.unix."
"com/man-page/linux/1/nc/) or [telnet](https://www.unix.com/man-page/linux/1/"
"telnet/)."
msgstr ""

#: src/async/tasks.md
msgid ""
"Ask students to visualize what the state of the example server would be with "
"a few connected clients. What tasks exist? What are their Futures?"
msgstr ""
"Pide a los alumnos que vean cu√°l ser√≠a el estado del servidor de ejemplo con "
"algunos clientes conectados. ¬øQu√© tareas hay? ¬øCu√°les son sus futuros?"

#: src/async/tasks.md
#, fuzzy
msgid ""
"This is the first time we've seen an `async` block. This is similar to a "
"closure, but does not take any arguments. Its return value is a Future, "
"similar to an `async fn`."
msgstr ""
"Esta es la primera vez que vemos un bloque `async`. Es similar a un cierre, "
"pero no acepta argumentos. Su valor devuelto es un futuro, similar a `async "
"fn`. "

#: src/async/tasks.md
msgid ""
"Refactor the async block into a function, and improve the error handling "
"using `?`."
msgstr ""
"Refactoriza el bloque as√≠ncrono en una funci√≥n y mejora la gesti√≥n de "
"errores con `?`."

#: src/async/channels.md
msgid ""
"Several crates have support for asynchronous channels. For instance `tokio`:"
msgstr "Varios crates admiten canales as√≠ncronos. Por ejemplo, `tokio`:"

#: src/async/channels.md
msgid "\"Received {count} pings so far.\""
msgstr ""

#: src/async/channels.md
msgid "\"ping_handler complete\""
msgstr ""

#: src/async/channels.md
msgid "\"Failed to send ping.\""
msgstr ""

#: src/async/channels.md
msgid "\"Sent {} pings so far.\""
msgstr ""

#: src/async/channels.md
msgid "\"Something went wrong in ping handler task.\""
msgstr ""

#: src/async/channels.md
msgid "Change the channel size to `3` and see how it affects the execution."
msgstr ""
"Cambia el tama√±o del canal a `3` y comprueba c√≥mo afecta a la ejecuci√≥n."

#: src/async/channels.md
msgid ""
"Overall, the interface is similar to the `sync` channels as seen in the "
"[morning class](concurrency/channels.md)."
msgstr ""
"En general, la interfaz es similar a los canales `sync`, tal como se ha "
"visto ver en la [clase de la ma√±ana](concurrency/channels.md)."

#: src/async/channels.md
msgid "Try removing the `std::mem::drop` call. What happens? Why?"
msgstr "Prueba a quitar la llamada a `std::mem::drop`. ¬øQu√© sucede? ¬øPor qu√©?"

#: src/async/channels.md
msgid ""
"The [Flume](https://docs.rs/flume/latest/flume/) crate has channels that "
"implement both `sync` and `async` `send` and `recv`. This can be convenient "
"for complex applications with both IO and heavy CPU processing tasks."
msgstr ""
"El crate [Flume](https://docs.rs/flume/latest/flume/) tiene canales que "
"implementan `sync` y `async`,`send` y `recv`. Esto puede resultar pr√°ctico "
"para aplicaciones complejas con tareas de E/S y tareas pesadas de "
"procesamiento de CPU."

#: src/async/channels.md
msgid ""
"What makes working with `async` channels preferable is the ability to "
"combine them with other `future`s to combine them and create complex control "
"flow."
msgstr ""
"Es preferible trabajar con canales `async` por la capacidad de combinarlos "
"con otros `future` para poder crear un flujo de control complejo."

#: src/async/control-flow.md
msgid "Futures Control Flow"
msgstr "Flujo de Control de Futuros"

#: src/async/control-flow.md
msgid ""
"Futures can be combined together to produce concurrent compute flow graphs. "
"We have already seen tasks, that function as independent threads of "
"execution."
msgstr ""
"Los futuros pueden combinarse para producir gr√°ficos de flujo de computaci√≥n "
"simult√°neos. Ya hemos visto tareas que funcionan como hilos de ejecuci√≥n "
"independientes."

#: src/async/control-flow.md
msgid "[Join](control-flow/join.md)"
msgstr "[Join](control-flow/join.md)"

#: src/async/control-flow.md
msgid "[Select](control-flow/select.md)"
msgstr "[Select](control-flow/select.md)"

#: src/async/control-flow/join.md
msgid ""
"A join operation waits until all of a set of futures are ready, and returns "
"a collection of their results. This is similar to `Promise.all` in "
"JavaScript or `asyncio.gather` in Python."
msgstr ""
"Una operaci√≥n join espera hasta que todos los futuros est√©n listos y "
"devuelve una colecci√≥n de sus resultados. Es similar a `Promise.all` en "
"JavaScript o `asyncio.gather` en Python."

#: src/async/control-flow/join.md
msgid "\"https://google.com\""
msgstr ""

#: src/async/control-flow/join.md
msgid "\"https://httpbin.org/ip\""
msgstr ""

#: src/async/control-flow/join.md
msgid "\"https://play.rust-lang.org/\""
msgstr ""

#: src/async/control-flow/join.md
msgid "\"BAD_URL\""
msgstr ""

#: src/async/control-flow/join.md
msgid ""
"For multiple futures of disjoint types, you can use `std::future::join!` but "
"you must know how many futures you will have at compile time. This is "
"currently in the `futures` crate, soon to be stabilised in `std::future`."
msgstr ""
"En el caso de varios futuros de tipos distintos, puedes utilizar `std::"
"future::join!`, pero debes saber cu√°ntos futuros tendr√°s en el tiempo de "
"compilaci√≥n. Esto se encuentra actualmente en el crate `futures`, que pronto "
"se estabilizar√° en `std::future`."

#: src/async/control-flow/join.md
#, fuzzy
msgid ""
"The risk of `join` is that one of the futures may never resolve, this would "
"cause your program to stall."
msgstr ""
"El riesgo que supone 'join' es que puede que uno de los futuros no se "
"resuelva nunca, causando que el programa se bloquee. "

#: src/async/control-flow/join.md
msgid ""
"You can also combine `join_all` with `join!` for instance to join all "
"requests to an http service as well as a database query. Try adding a "
"`tokio::time::sleep` to the future, using `futures::join!`. This is not a "
"timeout (that requires `select!`, explained in the next chapter), but "
"demonstrates `join!`."
msgstr ""
"Tambi√©n puedes combinar `join_all` con `join!`, por ejemplo, para unir todas "
"las solicitudes a un servicio HTTP, as√≠ como una consulta a la base de "
"datos. Prueba a a√±adir un tokio::time::sleep`al futuro mediante`futures::"
"join!`. No se trata de un tiempo de espera (para eso se requiere `select!`, "
"que se explica en el siguiente cap√≠tulo), sino que muestra `join!\\`."

#: src/async/control-flow/select.md
msgid ""
"A select operation waits until any of a set of futures is ready, and "
"responds to that future's result. In JavaScript, this is similar to `Promise."
"race`. In Python, it compares to `asyncio.wait(task_set, return_when=asyncio."
"FIRST_COMPLETED)`."
msgstr ""
"Una operaci√≥n select espera hasta que un conjunto de futuros est√© listo y "
"responde al resultado de ese futuro. En JavaScript, esto es similar a "
"`Promise.race`. En Python, se compara con `asyncio.wait(task_set, "
"return_when=asyncio.FIRST_COMPLETED)`."

#: src/async/control-flow/select.md
#, fuzzy
msgid ""
"Similar to a match statement, the body of `select!` has a number of arms, "
"each of the form `pattern = future => statement`. When a `future` is ready, "
"its return value is destructured by the `pattern`. The `statement` is then "
"run with the resulting variables. The `statement` result becomes the result "
"of the `select!` macro."
msgstr ""
"Al igual que en el caso de una instrucci√≥n _match_, el cuerpo de `select!` "
"tiene una serie de brazos, cada uno de los cuales tiene la forma `pattern = "
"future => statement`. Cuando `future` est√° listo, la instrucci√≥n se ejecuta "
"con las variables de `pattern` vinculadas al resultado de `future`."

#: src/async/control-flow/select.md
msgid "\"Felix\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Failed to send cat.\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Rex\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Failed to send dog.\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Failed to receive winner\""
msgstr ""

#: src/async/control-flow/select.md
msgid "\"Winner is {winner:?}\""
msgstr ""

#: src/async/control-flow/select.md
msgid ""
"In this example, we have a race between a cat and a dog. "
"`first_animal_to_finish_race` listens to both channels and will pick "
"whichever arrives first. Since the dog takes 50ms, it wins against the cat "
"that take 500ms."
msgstr ""
"En este ejemplo, tenemos una carrera entre un gato y un perro. "
"`first_animal_to_finish_race` escucha a ambos canales y elige el que llegue "
"primero. Como el perro tarda 50¬†ms, gana al gato, que tarda 500¬†ms."

#: src/async/control-flow/select.md
msgid ""
"You can use `oneshot` channels in this example as the channels are supposed "
"to receive only one `send`."
msgstr ""
"En este ejemplo, puedes usar canales `oneshot`, ya que se supone que solo "
"recibir√°n un `send`."

#: src/async/control-flow/select.md
msgid ""
"Try adding a deadline to the race, demonstrating selecting different sorts "
"of futures."
msgstr ""
"Prueba a a√±adir un l√≠mite a la carrera y demuestra c√≥mo se seleccionan "
"distintos tipos de futuros."

#: src/async/control-flow/select.md
msgid ""
"Note that `select!` drops unmatched branches, which cancels their futures. "
"It is easiest to use when every execution of `select!` creates new futures."
msgstr ""
"Ten en cuenta que `select!` elimina las ramas sin coincidencias, cancelando "
"as√≠ sus futuros. Es m√°s f√°cil de usar cuando cada ejecuci√≥n de `select!` "
"crea futuros."

#: src/async/control-flow/select.md
msgid ""
"An alternative is to pass `&mut future` instead of the future itself, but "
"this can lead to issues, further discussed in the pinning slide."
msgstr ""
"Tambi√©n puedes enviar `&mut future` en lugar del futuro en s√≠, pero esto "
"podr√≠a provocar problemas, como se explica m√°s adelante en la diapositiva "
"sobre pines."

#: src/async/pitfalls.md
msgid "Pitfalls of async/await"
msgstr "Inconvenientes de async/await"

#: src/async/pitfalls.md
msgid ""
"Async / await provides convenient and efficient abstraction for concurrent "
"asynchronous programming. However, the async/await model in Rust also comes "
"with its share of pitfalls and footguns. We illustrate some of them in this "
"chapter:"
msgstr ""
"Async/await ofrece una abstracci√≥n pr√°ctica y eficiente para la programaci√≥n "
"as√≠ncrona simult√°nea. Sin embargo, el modelo async/await de Rust tambi√©n "
"viene acompa√±ado de errores y footguns. En este cap√≠tulo veremos algunos de "
"ellos:"

#: src/async/pitfalls.md
msgid "[Blocking the Executor](pitfalls/blocking-executor.md)"
msgstr "[Bloqueo del ejecutor](pitfalls/blocking-executor.md)"

#: src/async/pitfalls.md
msgid "[Pin](pitfalls/pin.md)"
msgstr "[Pin](pitfalls/pin.md)"

#: src/async/pitfalls.md
msgid "[Async Traits](pitfalls/async-traits.md)"
msgstr "[Traits as√≠ncronos](pitfalls/async-traits.md)"

#: src/async/pitfalls.md
msgid "[Cancellation](pitfalls/cancellation.md)"
msgstr "[Cancelaci√≥n](pitfalls/cancellation.md)"

#: src/async/pitfalls/blocking-executor.md
msgid "Blocking the executor"
msgstr "Bloqueo del ejecutor"

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Most async runtimes only allow IO tasks to run concurrently. This means that "
"CPU blocking tasks will block the executor and prevent other tasks from "
"being executed. An easy workaround is to use async equivalent methods where "
"possible."
msgstr ""
"La mayor√≠a de los tiempos de ejecuci√≥n as√≠ncronos solo permiten que las "
"tareas de E/S se ejecuten de forma simult√°nea. Esto significa que las tareas "
"que bloquean la CPU bloquear√°n el ejecutor e impedir√°n que se ejecuten otras "
"tareas. Una soluci√≥n alternativa y sencilla es utilizar m√©todos as√≠ncronos "
"equivalentes siempre que sea posible."

#: src/async/pitfalls/blocking-executor.md
msgid "\"future {id} slept for {duration_ms}ms, finished after {}ms\""
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid "\"current_thread\""
msgstr ""

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Run the code and see that the sleeps happen consecutively rather than "
"concurrently."
msgstr ""
"Ejecuta el c√≥digo y comprueba que las suspensiones se producen de forma "
"consecutiva y no simult√°nea."

#: src/async/pitfalls/blocking-executor.md
msgid ""
"The `\"current_thread\"` flavor puts all tasks on a single thread. This "
"makes the effect more obvious, but the bug is still present in the multi-"
"threaded flavor."
msgstr ""
"La versi√≥n `\"current_thread\"` re√∫ne todas las tareas en un solo hilo. Esto "
"consigue que el efecto sea m√°s obvio, pero el error sigue estando presente "
"en la versi√≥n multihilo."

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Switch the `std::thread::sleep` to `tokio::time::sleep` and await its result."
msgstr ""
"Cambia `std::thread::sleep` a `tokio::time::sleep`. y espera su resultado."

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Another fix would be to `tokio::task::spawn_blocking` which spawns an actual "
"thread and transforms its handle into a future without blocking the executor."
msgstr ""
"Otra soluci√≥n ser√≠a `tokio::task::spawn_blocking`, que genera un hilo real y "
"transforma su controlador en un futuro sin bloquear el ejecutor."

#: src/async/pitfalls/blocking-executor.md
msgid ""
"You should not think of tasks as OS threads. They do not map 1 to 1 and most "
"executors will allow many tasks to run on a single OS thread. This is "
"particularly problematic when interacting with other libraries via FFI, "
"where that library might depend on thread-local storage or map to specific "
"OS threads (e.g., CUDA). Prefer `tokio::task::spawn_blocking` in such "
"situations."
msgstr ""
"No debes pensar en las tareas como hilos del sistema operativo. No se "
"asignan 1 a 1 y la mayor√≠a de los ejecutores permitir√°n que se ejecuten "
"muchas tareas en un solo hilo del sistema operativo. Esta situaci√≥n es "
"especialmente problem√°tica cuando se interact√∫a con otras bibliotecas a "
"trav√©s de FFI, donde dicha biblioteca puede depender del almacenamiento "
"local de hilos o puede asignarse a hilos espec√≠ficos del sistema operativo "
"(por ejemplo, CUDA). En estos casos es preferible usar `tokio::task::"
"spawn_blocking`."

#: src/async/pitfalls/blocking-executor.md
msgid ""
"Use sync mutexes with care. Holding a mutex over an `.await` may cause "
"another task to block, and that task may be running on the same thread."
msgstr ""
"Utiliza las exclusi√≥n mutuas de sincronizaci√≥n con cuidado. Si mantienes una "
"exclusi√≥n mutua sobre un `.await`, puede que se bloquee otra tarea y que "
"esta se est√© ejecutando en el mismo hilo."

#: src/async/pitfalls/pin.md
msgid ""
"Async blocks and functions return types implementing the `Future` trait. The "
"type returned is the result of a compiler transformation which turns local "
"variables into data stored inside the future."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"Some of those variables can hold pointers to other local variables. Because "
"of that, the future should never be moved to a different memory location, as "
"it would invalidate those pointers."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"To prevent moving the future type in memory, it can only be polled through a "
"pinned pointer. `Pin` is a wrapper around a reference that disallows all "
"operations that would move the instance it points to into a different memory "
"location."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"// A work item. In this case, just sleep for the given time and respond\n"
"// with a message on the `respond_on` channel.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// A worker which listens for work on a queue and performs it.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// Pretend to work.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"failed to send response\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// TODO: report number of iterations every 100ms\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "// A requester which requests work and waits for it to complete.\n"
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"failed to send on work queue\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"failed waiting for response\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid "\"work result for iteration {i}: {resp}\""
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"You may recognize this as an example of the actor pattern. Actors typically "
"call `select!` in a loop."
msgstr ""
"Puede que reconozcas esto como un ejemplo del patr√≥n actor. Los actores "
"suelen llamar a `select!` en un bucle."

#: src/async/pitfalls/pin.md
msgid ""
"This serves as a summation of a few of the previous lessons, so take your "
"time with it."
msgstr ""
"Esta secci√≥n es un resumen de algunas de las lecciones anteriores, as√≠ que "
"t√≥mate tu tiempo ."

#: src/async/pitfalls/pin.md
msgid ""
"Naively add a `_ = sleep(Duration::from_millis(100)) => { println!(..) }` to "
"the `select!`. This will never execute. Why?"
msgstr ""
"Si a√±ade un `_ = sleep(Duration::from_millis(100)) => { println!(..) }` a "
"`select!`, nunca se ejecutar√°. ¬øPor qu√©?"

#: src/async/pitfalls/pin.md
msgid ""
"Instead, add a `timeout_fut` containing that future outside of the `loop`:"
msgstr ""
"En su lugar, a√±ade un `timeout_fut` que contenga ese futuro fuera de `loop`:"

#: src/async/pitfalls/pin.md
msgid ""
"This still doesn't work. Follow the compiler errors, adding `&mut` to the "
"`timeout_fut` in the `select!` to work around the move, then using `Box::"
"pin`:"
msgstr ""
"Continuar√° sin funcionar. Sigue los errores del compilador y a√±ade `&mut` a "
"`timeout_fut` en `select!` para ir despejando el problema. A continuaci√≥n, "
"usa `Box::pin`:"

#: src/async/pitfalls/pin.md
msgid ""
"This compiles, but once the timeout expires it is `Poll::Ready` on every "
"iteration (a fused future would help with this). Update to reset "
"`timeout_fut` every time it expires."
msgstr ""
"Se puede compilar, pero una vez que vence el tiempo de espera, aparece "
"`Poll::Ready` en cada iteraci√≥n (un futuro fusionado podr√≠a resultar √∫til). "
"Actualiza para restablecer `timeout_fut` cada vez que expire."

#: src/async/pitfalls/pin.md
msgid ""
"Box allocates on the heap. In some cases, `std::pin::pin!` (only recently "
"stabilized, with older code often using `tokio::pin!`) is also an option, "
"but that is difficult to use for a future that is reassigned."
msgstr ""
"Box se asigna en el mont√≠culo. En algunos casos, `std::pin::pin!` (solo si "
"se ha estabilizado recientemente, con c√≥digo antiguo que suele utilizar "
"`tokio::pin!`) tambi√©n es una opci√≥n, pero dif√≠cil de utilizar en un futuro "
"que se reasigna."

#: src/async/pitfalls/pin.md
msgid ""
"Another alternative is to not use `pin` at all but spawn another task that "
"will send to a `oneshot` channel every 100ms."
msgstr ""
"Otra alternativa es no utilizar `pin`, sino generar otra tarea que se "
"enviar√° a un canal de `oneshot` cada 100¬†ms."

#: src/async/pitfalls/pin.md
msgid ""
"Data that contains pointers to itself is called self-referential. Normally, "
"the Rust borrow checker would prevent self-referential data from being "
"moved, as the references cannot outlive the data they point to. However, the "
"code transformation for async blocks and functions is not verified by the "
"borrow checker."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"`Pin` is a wrapper around a reference. An object cannot be moved from its "
"place using a pinned pointer. However, it can still be moved through an "
"unpinned pointer."
msgstr ""

#: src/async/pitfalls/pin.md
msgid ""
"The `poll` method of the `Future` trait uses `Pin<&mut Self>` instead of "
"`&mut Self` to refer to the instance. That's why it can only be called on a "
"pinned pointer."
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid ""
"Async methods in traits are not yet supported in the stable channel ([An "
"experimental feature exists in nightly and should be stabilized in the mid "
"term.](https://blog.rust-lang.org/inside-rust/2022/11/17/async-fn-in-trait-"
"nightly.html))"
msgstr ""
"Los m√©todos as√≠ncronos en traits todav√≠a no son compatibles con el canal "
"estable. ([Existe una caracter√≠stica experimental en nightly que deber√≠a "
"estabilizarse a medio plazo.](https://blog.rust-lang.org/inside-"
"rust/2022/11/17/async-fn-in-trait-nightly.html))"

#: src/async/pitfalls/async-traits.md
msgid ""
"The crate [async_trait](https://docs.rs/async-trait/latest/async_trait/) "
"provides a workaround through a macro:"
msgstr ""
"El crate [async_trait](https://docs.rs/async-trait/latest/async_trait/) "
"proporciona una soluci√≥n mediante una macro:"

#: src/async/pitfalls/async-traits.md
msgid "\"running all sleepers..\""
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid "\"slept for {}ms\""
msgstr ""

#: src/async/pitfalls/async-traits.md
msgid ""
"`async_trait` is easy to use, but note that it's using heap allocations to "
"achieve this. This heap allocation has performance overhead."
msgstr ""
"`async_trait` es f√°cil de usar, pero ten en cuenta que utiliza asignaciones "
"de mont√≠culos para conseguirlo. Esta asignaci√≥n de mont√≠culo tiene una "
"sobrecarga de rendimiento."

#: src/async/pitfalls/async-traits.md
msgid ""
"The challenges in language support for `async trait` are deep Rust and "
"probably not worth describing in-depth. Niko Matsakis did a good job of "
"explaining them in [this post](https://smallcultfollowing.com/babysteps/"
"blog/2019/10/26/async-fn-in-traits-are-hard/) if you are interested in "
"digging deeper."
msgstr ""
"Los problemas de compatibilidad del lenguaje con `async trait` son muy "
"complejos y no vale la pena describirlos en profundidad. Niko Matsakis lo "
"explica muy bien en [esta publicaci√≥n](https://smallcultfollowing.com/"
"babysteps/blog/2019/10/26/async-fn-in-traits-are-hard/), por si te interesa "
"investigar m√°s a fondo."

#: src/async/pitfalls/async-traits.md
msgid ""
"Try creating a new sleeper struct that will sleep for a random amount of "
"time and adding it to the Vec."
msgstr ""
"Prueba a crear una estructura que entre en suspensi√≥n durante un periodo "
"aleatorio y a√±√°dela a Vec."

#: src/async/pitfalls/cancellation.md
msgid ""
"Dropping a future implies it can never be polled again. This is called "
"_cancellation_ and it can occur at any `await` point. Care is needed to "
"ensure the system works correctly even when futures are cancelled. For "
"example, it shouldn't deadlock or lose data."
msgstr ""
"Si eliminas un futuro, no se podr√° volver a sondear. Este fen√≥meno se "
"denomina _cancelaci√≥n_ y puede producirse en cualquier momento de `await`. "
"Hay que tener cuidado para asegurar que el sistema funcione correctamente, "
"incluso cuando se cancelen los futuros. Por ejemplo, no deber√≠a sufrir "
"interbloqueos o perder datos."

#: src/async/pitfalls/cancellation.md
#, fuzzy
msgid "\"not UTF-8\""
msgstr "UTF-8"

#: src/async/pitfalls/cancellation.md
msgid "\"hi\\nthere\\n\""
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid "\"tick!\""
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"The compiler doesn't help with cancellation-safety. You need to read API "
"documentation and consider what state your `async fn` holds."
msgstr ""
"El compilador no ayuda con la seguridad de la cancelaci√≥n. Debes leer la "
"documentaci√≥n de la API y tener en cuenta el estado de tu `async fn`."

#: src/async/pitfalls/cancellation.md
msgid ""
"Unlike `panic` and `?`, cancellation is part of normal control flow (vs "
"error-handling)."
msgstr ""
"A diferencia de `panic` y `?`, la cancelaci√≥n forma parte del flujo de "
"control normal (en contraposici√≥n a la gesti√≥n de errores)."

#: src/async/pitfalls/cancellation.md
msgid "The example loses parts of the string."
msgstr "En el ejemplo se pierden partes de la cadena."

#: src/async/pitfalls/cancellation.md
msgid ""
"Whenever the `tick()` branch finishes first, `next()` and its `buf` are "
"dropped."
msgstr ""
"Cuando la rama `tick()` termina primero, se eliminan `next()` y su `buf`."

#: src/async/pitfalls/cancellation.md
msgid ""
"`LinesReader` can be made cancellation-safe by making `buf` part of the "
"struct:"
msgstr ""
"`LinesReader` se puede configurar para que no se cancele marcando `buf` como "
"parte del _struct_:"

#: src/async/pitfalls/cancellation.md
msgid "// prefix buf and bytes with self.\n"
msgstr ""

#: src/async/pitfalls/cancellation.md
msgid ""
"[`Interval::tick`](https://docs.rs/tokio/latest/tokio/time/struct.Interval."
"html#method.tick) is cancellation-safe because it keeps track of whether a "
"tick has been 'delivered'."
msgstr ""
"[`Interval::tick`](https://docs.rs/tokio/latest/tokio/time/struct.Interval."
"html#method.tick) es a prueba de cancelaciones, ya que registra si una marca "
"se ha 'entregado'."

#: src/async/pitfalls/cancellation.md
msgid ""
"[`AsyncReadExt::read`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncReadExt.html#method.read) is cancellation-safe because it either "
"returns or doesn't read data."
msgstr ""
"[`AsyncReadExt::read`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncReadExt.html#method.read) es a prueba de cancelaciones porque o "
"devuelve los datos o no los lee."

#: src/async/pitfalls/cancellation.md
msgid ""
"[`AsyncBufReadExt::read_line`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncBufReadExt.html#method.read_line) is similar to the example and _isn't_ "
"cancellation-safe. See its documentation for details and alternatives."
msgstr ""
"[`AsyncBufReadExt::read_line`](https://docs.rs/tokio/latest/tokio/io/trait."
"AsyncBufReadExt.html#method.read_line) es similar al ejemplo y _no est√°_ "
"configurado a prueba de cancelaciones. Consulta su documentaci√≥n para "
"obtener informaci√≥n detallada y alternativas."

#: src/exercises/concurrency/afternoon.md
msgid ""
"To practice your Async Rust skills, we have again two exercises for you:"
msgstr ""
"Para practicar tus habilidades con async de Rust, tenemos otros dos nuevos "
"ejercicios:"

#: src/exercises/concurrency/afternoon.md
msgid ""
"Dining philosophers: we already saw this problem in the morning. This time "
"you are going to implement it with Async Rust."
msgstr ""
"La cena de los fil√≥sofos: ya hemos visto este problema por la ma√±ana. Esta "
"vez vas a implementarlo con async de Rust."

#: src/exercises/concurrency/afternoon.md
msgid ""
"A Broadcast Chat Application: this is a larger project that allows you "
"experiment with more advanced Async Rust features."
msgstr ""
"Una aplicaci√≥n de chat de difusi√≥n: se trata de un proyecto m√°s grande que "
"te permite experimentar con caracter√≠sticas m√°s avanzadas de async de Rust."

#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "Dining Philosophers --- Async"
msgstr "La Cena de Fil√≥sofos - Async"

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"See [dining philosophers](dining-philosophers.md) for a description of the "
"problem."
msgstr ""
"Consulta la descripci√≥n del problema en la secci√≥n sobre [la cena de "
"fil√≥sofos](dining-philosophers.md)."

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"As before, you will need a local [Cargo installation](../../cargo/running-"
"locally.md) for this exercise. Copy the code below to a file called `src/"
"main.rs`, fill out the blanks, and test that `cargo run` does not deadlock:"
msgstr ""
"Como antes, necesitar√°s una [instalaci√≥n local de Cargo](../../cargo/running-"
"locally.md) para realizar el ejercicio. Copia el fragmento de c√≥digo que "
"aparece m√°s abajo en un archivo denominado `src/main.rs`, rellena los "
"espacios en blanco y comprueba que `cargo run` no presenta interbloqueos:"

#: src/exercises/concurrency/dining-philosophers-async.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Make them think and eat\n"
msgstr ""

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"Since this time you are using Async Rust, you'll need a `tokio` dependency. "
"You can use the following `Cargo.toml`:"
msgstr ""
"Dado que esta vez usas async, necesitar√°s una dependencia `tokio`. Puedes "
"usar el siguiente `Cargo.toml`:"

#: src/exercises/concurrency/dining-philosophers-async.md
#, fuzzy
msgid ""
"```toml\n"
"[package]\n"
"name = \"dining-philosophers-async-dine\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"\n"
"[dependencies]\n"
"tokio = { version = \"1.26.0\", features = [\"sync\", \"time\", \"macros\", "
"\"rt-multi-thread\"] }\n"
"```"
msgstr ""
"```toml\n"
"[package]\n"
"name = \"link-checker\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"publish = false\n"
"\n"
"[dependencies]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"

#: src/exercises/concurrency/dining-philosophers-async.md
msgid ""
"Also note that this time you have to use the `Mutex` and the `mpsc` module "
"from the `tokio` crate."
msgstr ""
"Adem√°s, ten en cuenta que esta vez tienes que utilizar `Mutex` y el m√≥dulo "
"`mpsc` del crate `tokio`."

#: src/exercises/concurrency/dining-philosophers-async.md
#, fuzzy
msgid "Can you make your implementation single-threaded?"
msgstr "¬øPuedes conseguir que tu implementaci√≥n tenga un solo hilo? "

#: src/exercises/concurrency/chat-app.md
msgid ""
"In this exercise, we want to use our new knowledge to implement a broadcast "
"chat application. We have a chat server that the clients connect to and "
"publish their messages. The client reads user messages from the standard "
"input, and sends them to the server. The chat server broadcasts each message "
"that it receives to all the clients."
msgstr ""
"En este ejercicio, queremos usar nuestros nuevos conocimientos para "
"implementar una aplicaci√≥n de chat de difusi√≥n. Disponemos de un servidor de "
"chat al que los clientes se conectan y publican sus mensajes. El cliente lee "
"los mensajes de usuario de la entrada est√°ndar y los env√≠a al servidor. El "
"servidor del chat transmite cada mensaje que recibe a todos los clientes."

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid ""
"For this, we use [a broadcast channel](https://docs.rs/tokio/latest/tokio/"
"sync/broadcast/fn.channel.html) on the server, and [`tokio_websockets`]"
"(https://docs.rs/tokio-websockets/) for the communication between the client "
"and the server."
msgstr ""
"Para ello, usaremos \\[un canal en abierto](https://docs.rs/tokio/latest/"
"tokio/sync/broadcast/fn.channel.html) en el servidor y [`tokio_websockets`]"
"(https://docs.rs/tokio-websockets/0.3.2/tokio_websockets/) para la "
"comunicaci√≥n entre el cliente y el servidor."

#: src/exercises/concurrency/chat-app.md
msgid "Create a new Cargo project and add the following dependencies:"
msgstr "Crea un proyecto de Cargo y a√±ade las siguientes dependencias:"

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid "_Cargo.toml_:"
msgstr "`Cargo.toml`:"

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid ""
"```toml\n"
"[package]\n"
"name = \"chat-async\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"\n"
"[dependencies]\n"
"futures-util = { version = \"0.3.30\", features = [\"sink\"] }\n"
"http = \"1.0.0\"\n"
"tokio = { version = \"1.28.1\", features = [\"full\"] }\n"
"tokio-websockets = { version = \"0.5.1\", features = [\"client\", "
"\"fastrand\", \"server\", \"sha1_smol\"] }\n"
"```"
msgstr ""
"```toml\n"
"[package]\n"
"name = \"link-checker\"\n"
"version = \"0.1.0\"\n"
"edition = \"2021\"\n"
"publish = false\n"
"\n"
"[dependencies]\n"
"reqwest = { version = \"0.11.12\", features = [\"blocking\", \"rustls-"
"tls\"] }\n"
"scraper = \"0.13.0\"\n"
"thiserror = \"1.0.37\"\n"
"```"

#: src/exercises/concurrency/chat-app.md
msgid "The required APIs"
msgstr "Las APIs necesarias"

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid ""
"You are going to need the following functions from `tokio` and "
"[`tokio_websockets`](https://docs.rs/tokio-websockets/). Spend a few minutes "
"to familiarize yourself with the API."
msgstr ""
"Necesitar√°s las siguientes funciones de `tokio` y [`tokio_websockets`]"
"(https://docs.rs/tokio-websockets/0.3.2/tokio_websockets/). Dedica unos "
"minutos a familiarizarte con la API. "

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid ""
"[StreamExt::next()](https://docs.rs/futures-util/0.3.28/futures_util/stream/"
"trait.StreamExt.html#method.next) implemented by `WebSocketStream`: for "
"asynchronously reading messages from a Websocket Stream."
msgstr ""
"[SinkExt::send()](https://docs.rs/futures-util/0.3.28/futures_util/sink/"
"trait.SinkExt.html#method.send) implementado por `WebsocketStream`: permite "
"enviar mensajes de forma as√≠ncrona a trav√©s de un flujo WebSocket."

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid ""
"[SinkExt::send()](https://docs.rs/futures-util/0.3.28/futures_util/sink/"
"trait.SinkExt.html#method.send) implemented by `WebSocketStream`: for "
"asynchronously sending messages on a Websocket Stream."
msgstr ""
"[SinkExt::send()](https://docs.rs/futures-util/0.3.28/futures_util/sink/"
"trait.SinkExt.html#method.send) implementado por `WebsocketStream`: permite "
"enviar mensajes de forma as√≠ncrona a trav√©s de un flujo WebSocket."

#: src/exercises/concurrency/chat-app.md
msgid ""
"[Lines::next_line()](https://docs.rs/tokio/latest/tokio/io/struct.Lines."
"html#method.next_line): for asynchronously reading user messages from the "
"standard input."
msgstr ""
"[Lines::next_line()](https://docs.rs/tokio/latest/tokio/io/struct.Lines."
"html#method.next_line): para la lectura as√≠ncrona de mensajes de usuario de "
"la entrada est√°ndar."

#: src/exercises/concurrency/chat-app.md
msgid ""
"[Sender::subscribe()](https://docs.rs/tokio/latest/tokio/sync/broadcast/"
"struct.Sender.html#method.subscribe): for subscribing to a broadcast channel."
msgstr ""
"[Sender::subscribe()](https://docs.rs/tokio/latest/tokio/sync/broadcast/"
"struct.Sender.html#method.subscribe): para suscribirse a un canal en abierto."

#: src/exercises/concurrency/chat-app.md
msgid "Two binaries"
msgstr "Dos binarios"

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid ""
"Normally in a Cargo project, you can have only one binary, and one `src/main."
"rs` file. In this project, we need two binaries. One for the client, and one "
"for the server. You could potentially make them two separate Cargo projects, "
"but we are going to put them in a single Cargo project with two binaries. "
"For this to work, the client and the server code should go under `src/bin` "
"(see the [documentation](https://doc.rust-lang.org/cargo/reference/cargo-"
"targets.html#binaries))."
msgstr ""
"Normalmente, en un proyecto de Cargo, solo puedes tener un archivo binario y "
"un archivo `src/main.rs`. En este proyecto, se necesitan dos binarios, uno "
"para el cliente y otro para el servidor. Puedes convertirlos en dos "
"proyectos de Cargo independientes, pero los incluiremos en un solo proyecto "
"de Cargo con dos binarios. Para que funcione, el c√≥digo del cliente y del "
"servidor deben aparecer en `src/bin` (consulta la [documentaci√≥n](https://"
"doc.rust-lang.org/cargo/reference/cargo-targets.html#binaries)). "

#: src/exercises/concurrency/chat-app.md
#, fuzzy
msgid ""
"Copy the following server and client code into `src/bin/server.rs` and `src/"
"bin/client.rs`, respectively. Your task is to complete these files as "
"described below."
msgstr ""
"Copia el fragmento de c√≥digo del servidor y del cliente que aparecen m√°s "
"abajo en `src/bin/server.rs` y `src/bin/client.rs`, respectivamente. Tu "
"tarea es completar estos archivos como se describe a continuaci√≥n. "

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "_src/bin/server.rs_:"
msgstr "`src/bin/server.rs`:"

#: src/exercises/concurrency/chat-app.md
msgid "// TODO: For a hint, see the description of the task below.\n"
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"127.0.0.1:2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"listening on port 2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"New connection from {addr:?}\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Wrap the raw TCP stream into a websocket.\n"
msgstr ""

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid "_src/bin/client.rs_:"
msgstr "`src/bin/client.rs`:"

#: src/exercises/concurrency/chat-app.md
#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"ws://127.0.0.1:2000\""
msgstr ""

#: src/exercises/concurrency/chat-app.md
msgid "Running the binaries"
msgstr "Ejecutar los binarios"

#: src/exercises/concurrency/chat-app.md
msgid "Run the server with:"
msgstr "Ejecuta el servidor con:"

#: src/exercises/concurrency/chat-app.md
msgid "and the client with:"
msgstr "y el cliente con:"

#: src/exercises/concurrency/chat-app.md
msgid "Implement the `handle_connection` function in `src/bin/server.rs`."
msgstr "Implementa la funci√≥n `handle_connection` en `src/bin/server.rs`."

#: src/exercises/concurrency/chat-app.md
msgid ""
"Hint: Use `tokio::select!` for concurrently performing two tasks in a "
"continuous loop. One task receives messages from the client and broadcasts "
"them. The other sends messages received by the server to the client."
msgstr ""
"Sugerencia: usa `tokio::select!` para realizar dos tareas simult√°neamente en "
"un bucle continuo. Una tarea recibe mensajes del cliente y los transmite. La "
"otra env√≠a los mensajes que recibe el servidor al cliente."

#: src/exercises/concurrency/chat-app.md
msgid "Complete the main function in `src/bin/client.rs`."
msgstr "Completa la funci√≥n principal en `src/bin/client.rs`."

#: src/exercises/concurrency/chat-app.md
msgid ""
"Hint: As before, use `tokio::select!` in a continuous loop for concurrently "
"performing two tasks: (1) reading user messages from standard input and "
"sending them to the server, and (2) receiving messages from the server, and "
"displaying them for the user."
msgstr ""
"Sugerencia: al igual que antes, usa `tokio::select!` en un bucle continuo "
"para realizar dos tareas simult√°neamente: (1) leer los mensajes del usuario "
"desde la entrada est√°ndar y enviarlos al servidor, y (2) recibir mensajes "
"del servidor y mostr√°rselos al usuario."

#: src/exercises/concurrency/chat-app.md
msgid ""
"Optional: Once you are done, change the code to broadcast messages to all "
"clients, but the sender of the message."
msgstr ""
"Opcional: cuando termines, cambia el c√≥digo para difundir mensajes a todos "
"los clientes, excepto al remitente."

#: src/exercises/concurrency/solutions-afternoon.md
msgid "Concurrency Afternoon Exercise"
msgstr "Concurrencia: Ejercicios de la Tarde"

#: src/exercises/concurrency/solutions-afternoon.md
msgid "([back to exercise](dining-philosophers-async.md))"
msgstr "([volver al ejercicio](dining-philosophers-async.md))"

#: src/exercises/concurrency/solutions-afternoon.md
msgid ""
"// Add a delay before picking the second fork to allow the execution\n"
"        // to transfer to another task\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "// The locks are dropped here\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid ""
"// To avoid a deadlock, we have to break the symmetry\n"
"            // somewhere. This will swap the forks without deinitializing\n"
"            // either of them.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "// tx is dropped here, so we don't need to explicitly drop it later\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Here is a thought: {thought}\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "([back to exercise](chat-app.md))"
msgstr "([volver al ejercicio](chat-app.md))"

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"Welcome to chat! Type a message\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
#, fuzzy
msgid ""
"// A continuous loop for concurrently performing two tasks: (1) receiving\n"
"    // messages from `ws_stream` and broadcasting them, and (2) receiving\n"
"    // messages on `bcast_rx` and sending them to the client.\n"
msgstr ""
"Sugerencia: al igual que antes, usa `tokio::select!` en un bucle continuo "
"para realizar dos tareas simult√°neamente: (1) leer los mensajes del usuario "
"desde la entrada est√°ndar y enviarlos al servidor, y (2) recibir mensajes "
"del servidor y mostr√°rselos al usuario."

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"From client {addr:?} {text:?}\""
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "// Continuous loop for concurrently sending and receiving messages.\n"
msgstr ""

#: src/exercises/concurrency/solutions-afternoon.md
msgid "\"From server: {}\""
msgstr ""

#: src/thanks.md
msgid ""
"_Thank you for taking Comprehensive Rust ü¶Ä!_ We hope you enjoyed it and "
"that it was useful."
msgstr ""
"_Gracias por realizar el curso Comprehensive Rust ü¶Ä._ Esperamos que te haya "
"gustado y que te haya resultado √∫til."

#: src/thanks.md
msgid ""
"We've had a lot of fun putting the course together. The course is not "
"perfect, so if you spotted any mistakes or have ideas for improvements, "
"please get in [contact with us on GitHub](https://github.com/google/"
"comprehensive-rust/discussions). We would love to hear from you."
msgstr ""
"Nos lo hemos pasado muy bien preparando el curso. Sabemos que no es "
"perfecto, as√≠ que si has detectado alg√∫n error o tienes ideas para "
"mejorarlo, [ponte en contacto con nosotros en GitHub](https://github.com/"
"google/comprehensive-rust/discussions). Nos encantar√≠a saber tu opini√≥n."

#: src/glossary.md
msgid ""
"The following is a glossary which aims to give a short definition of many "
"Rust terms. For translations, this also serves to connect the term back to "
"the English original."
msgstr ""

#: src/glossary.md
msgid ""
"allocate:  \n"
"Dynamic memory allocation on [the heap](memory-management/stack-vs-heap.md)."
msgstr ""

#: src/glossary.md
msgid ""
"argument:  \n"
"Information that is passed into a function or method."
msgstr ""

#: src/glossary.md
msgid ""
"Bare-metal Rust:  \n"
"Low-level Rust development, often deployed to a system without an operating "
"system. See [Bare-metal Rust](bare-metal.md)."
msgstr ""

#: src/glossary.md
msgid ""
"block:  \n"
"See [Blocks](control-flow/blocks.md) and _scope_."
msgstr ""

#: src/glossary.md
msgid ""
"borrow:  \n"
"See [Borrowing](ownership/borrowing.md)."
msgstr ""

#: src/glossary.md
msgid ""
"borrow checker:  \n"
"The part of the Rust compiler which checks that all borrows are valid."
msgstr ""

#: src/glossary.md
msgid ""
"brace:  \n"
"`{` and `}`. Also called _curly brace_, they delimit _blocks_."
msgstr ""

#: src/glossary.md
msgid ""
"build:  \n"
"The process of converting source code into executable code or a usable "
"program."
msgstr ""

#: src/glossary.md
msgid ""
"call:  \n"
"To invoke or execute a function or method."
msgstr ""

#: src/glossary.md
msgid ""
"channel:  \n"
"Used to safely pass messages [between threads](concurrency/channels.md)."
msgstr ""

#: src/glossary.md
msgid ""
"Comprehensive Rust ü¶Ä:  \n"
"The courses here are jointly called Comprehensive Rust ü¶Ä."
msgstr ""

#: src/glossary.md
msgid ""
"concurrency:  \n"
"The execution of multiple tasks or processes at the same time."
msgstr ""

#: src/glossary.md
msgid ""
"Concurrency in Rust:  \n"
"See [Concurrency in Rust](concurrency.md)."
msgstr ""

#: src/glossary.md
msgid ""
"constant:  \n"
"A value that does not change during the execution of a program."
msgstr ""

#: src/glossary.md
msgid ""
"control flow:  \n"
"The order in which the individual statements or instructions are executed in "
"a program."
msgstr ""

#: src/glossary.md
msgid ""
"crash:  \n"
"An unexpected and unhandled failure or termination of a program."
msgstr ""

#: src/glossary.md
msgid ""
"enumeration:  \n"
"A data type that holds one of several named constants, possibly with an "
"associated tuple or struct."
msgstr ""

#: src/glossary.md
msgid ""
"error:  \n"
"An unexpected condition or result that deviates from the expected behavior."
msgstr ""

#: src/glossary.md
msgid ""
"error handling:  \n"
"The process of managing and responding to errors that occur during program "
"execution."
msgstr ""

#: src/glossary.md
msgid ""
"exercise:  \n"
"A task or problem designed to practice and test programming skills."
msgstr ""

#: src/glossary.md
msgid ""
"function:  \n"
"A reusable block of code that performs a specific task."
msgstr ""

#: src/glossary.md
msgid ""
"garbage collector:  \n"
"A mechanism that automatically frees up memory occupied by objects that are "
"no longer in use."
msgstr ""

#: src/glossary.md
msgid ""
"generics:  \n"
"A feature that allows writing code with placeholders for types, enabling "
"code reuse with different data types."
msgstr ""

#: src/glossary.md
msgid ""
"immutable:  \n"
"Unable to be changed after creation."
msgstr ""

#: src/glossary.md
msgid ""
"integration test:  \n"
"A type of test that verifies the interactions between different parts or "
"components of a system."
msgstr ""

#: src/glossary.md
msgid ""
"keyword:  \n"
"A reserved word in a programming language that has a specific meaning and "
"cannot be used as an identifier."
msgstr ""

#: src/glossary.md
msgid ""
"library:  \n"
"A collection of precompiled routines or code that can be used by programs."
msgstr ""

#: src/glossary.md
msgid ""
"macro:  \n"
"Rust macros can be recognized by a `!` in the name. Macros are used when "
"normal functions are not enough. A typical example is `format!`, which takes "
"a variable number of arguments, which isn't supported by Rust functions."
msgstr ""

#: src/glossary.md
msgid ""
"`main` function:  \n"
"Rust programs start executing with the `main` function."
msgstr ""

#: src/glossary.md
msgid ""
"match:  \n"
"A control flow construct in Rust that allows for pattern matching on the "
"value of an expression."
msgstr ""

#: src/glossary.md
msgid ""
"memory leak:  \n"
"A situation where a program fails to release memory that is no longer "
"needed, leading to a gradual increase in memory usage."
msgstr ""

#: src/glossary.md
msgid ""
"method:  \n"
"A function associated with an object or a type in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"module:  \n"
"A namespace that contains definitions, such as functions, types, or traits, "
"to organize code in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"move:  \n"
"The transfer of ownership of a value from one variable to another in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"mutable:  \n"
"A property in Rust that allows variables to be modified after they have been "
"declared."
msgstr ""

#: src/glossary.md
msgid ""
"ownership:  \n"
"The concept in Rust that defines which part of the code is responsible for "
"managing the memory associated with a value."
msgstr ""

#: src/glossary.md
msgid ""
"panic:  \n"
"An unrecoverable error condition in Rust that results in the termination of "
"the program."
msgstr ""

#: src/glossary.md
msgid ""
"parameter:  \n"
"A value that is passed into a function or method when it is called."
msgstr ""

#: src/glossary.md
msgid ""
"pattern:  \n"
"A combination of values, literals, or structures that can be matched against "
"an expression in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"payload:  \n"
"The data or information carried by a message, event, or data structure."
msgstr ""

#: src/glossary.md
msgid ""
"program:  \n"
"A set of instructions that a computer can execute to perform a specific task "
"or solve a particular problem."
msgstr ""

#: src/glossary.md
msgid ""
"programming language:  \n"
"A formal system used to communicate instructions to a computer, such as Rust."
msgstr ""

#: src/glossary.md
msgid ""
"receiver:  \n"
"The first parameter in a Rust method that represents the instance on which "
"the method is called."
msgstr ""

#: src/glossary.md
msgid ""
"reference counting:  \n"
"A memory management technique in which the number of references to an object "
"is tracked, and the object is deallocated when the count reaches zero."
msgstr ""

#: src/glossary.md
msgid ""
"return:  \n"
"A keyword in Rust used to indicate the value to be returned from a function."
msgstr ""

#: src/glossary.md
msgid ""
"Rust:  \n"
"A systems programming language that focuses on safety, performance, and "
"concurrency."
msgstr ""

#: src/glossary.md
msgid ""
"Rust Fundamentals:  \n"
"Days 1 to 3 of this course."
msgstr ""

#: src/glossary.md
msgid ""
"Rust in Android:  \n"
"See [Rust in Android](android.md)."
msgstr ""

#: src/glossary.md
msgid ""
"Rust in Chromium:  \n"
"See [Rust in Chromium](chromium.md)."
msgstr ""

#: src/glossary.md
msgid ""
"safe:  \n"
"Refers to code that adheres to Rust's ownership and borrowing rules, "
"preventing memory-related errors."
msgstr ""

#: src/glossary.md
msgid ""
"scope:  \n"
"The region of a program where a variable is valid and can be used."
msgstr ""

#: src/glossary.md
msgid ""
"standard library:  \n"
"A collection of modules providing essential functionality in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"static:  \n"
"A keyword in Rust used to define static variables or items with a `'static` "
"lifetime."
msgstr ""

#: src/glossary.md
msgid ""
"string:  \n"
"A data type storing textual data. See [`String` vs `str`](basic-syntax/"
"string-slices.html) for more."
msgstr ""

#: src/glossary.md
msgid ""
"struct:  \n"
"A composite data type in Rust that groups together variables of different "
"types under a single name."
msgstr ""

#: src/glossary.md
msgid ""
"test:  \n"
"A Rust module containing functions that test the correctness of other "
"functions."
msgstr ""

#: src/glossary.md
msgid ""
"thread:  \n"
"A separate sequence of execution in a program, allowing concurrent execution."
msgstr ""

#: src/glossary.md
msgid ""
"thread safety:  \n"
"The property of a program that ensures correct behavior in a multithreaded "
"environment."
msgstr ""

#: src/glossary.md
msgid ""
"trait:  \n"
"A collection of methods defined for an unknown type, providing a way to "
"achieve polymorphism in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"trait bound:  \n"
"An abstraction where you can require types to implement some traits of your "
"interest."
msgstr ""

#: src/glossary.md
msgid ""
"tuple:  \n"
"A composite data type that contains variables of different types. Tuple "
"fields have no names, and are accessed by their ordinal numbers."
msgstr ""

#: src/glossary.md
msgid ""
"type:  \n"
"A classification that specifies which operations can be performed on values "
"of a particular kind in Rust."
msgstr ""

#: src/glossary.md
msgid ""
"type inference:  \n"
"The ability of the Rust compiler to deduce the type of a variable or "
"expression."
msgstr ""

#: src/glossary.md
msgid ""
"undefined behavior:  \n"
"Actions or conditions in Rust that have no specified result, often leading "
"to unpredictable program behavior."
msgstr ""

#: src/glossary.md
msgid ""
"union:  \n"
"A data type that can hold values of different types but only one at a time."
msgstr ""

#: src/glossary.md
msgid ""
"unit test:  \n"
"Rust comes with built-in support for running small unit tests and larger "
"integration tests. See [Unit Tests](testing/unit-tests.html)."
msgstr ""

#: src/glossary.md
msgid ""
"unit type:  \n"
"Type that holds no data, written as a tuple with no members."
msgstr ""

#: src/glossary.md
msgid ""
"unsafe:  \n"
"The subset of Rust which allows you to trigger _undefined behavior_. See "
"[Unsafe Rust](unsafe.html)."
msgstr ""

#: src/glossary.md
msgid ""
"variable:  \n"
"A memory location storing data. Variables are valid in a _scope_."
msgstr ""

#: src/other-resources.md
msgid "Other Rust Resources"
msgstr "Otros recursos de Rust"

#: src/other-resources.md
msgid ""
"The Rust community has created a wealth of high-quality and free resources "
"online."
msgstr ""
"La comunidad de Rust ha creado una gran cantidad de recursos online sin "
"coste y de gran calidad."

#: src/other-resources.md
msgid "Official Documentation"
msgstr "Documentaci√≥n oficial"

#: src/other-resources.md
msgid "The Rust project hosts many resources. These cover Rust in general:"
msgstr ""
"El proyecto Rust cuenta con muchos recursos. Estos tratan sobre Rust en "
"general:"

#: src/other-resources.md
msgid ""
"[The Rust Programming Language](https://doc.rust-lang.org/book/): the "
"canonical free book about Rust. Covers the language in detail and includes a "
"few projects for people to build."
msgstr ""
"[The Rust Programming Language](https://doc.rust-lang.org/book/): el libro "
"can√≥nico sobre Rust sin coste alguno. Trata el lenguaje de forma detallada e "
"incluye algunos proyectos que los usuarios pueden compilar."

#: src/other-resources.md
msgid ""
"[Rust By Example](https://doc.rust-lang.org/rust-by-example/): covers the "
"Rust syntax via a series of examples which showcase different constructs. "
"Sometimes includes small exercises where you are asked to expand on the code "
"in the examples."
msgstr ""
"[Rust by Example](https://doc.rust-lang.org/rust-by-example/): trata la "
"sintaxis de Rust a trav√©s de una serie de ejemplos que muestran distintas "
"construcciones. A veces incluye peque√±os ejercicios en los que se te pide "
"que ampl√≠es el c√≥digo de los ejemplos."

#: src/other-resources.md
msgid ""
"[Rust Standard Library](https://doc.rust-lang.org/std/): full documentation "
"of the standard library for Rust."
msgstr ""
"[La biblioteca est√°ndar de Rust](https://doc.rust-lang.org/std/): "
"documentaci√≥n completa de la biblioteca est√°ndar de Rust."

#: src/other-resources.md
msgid ""
"[The Rust Reference](https://doc.rust-lang.org/reference/): an incomplete "
"book which describes the Rust grammar and memory model."
msgstr ""
"[The Rust Reference](https://doc.rust-lang.org/reference/): un libro "
"incompleto que describe la gram√°tica y el modelo de memoria de Rust."

#: src/other-resources.md
msgid "More specialized guides hosted on the official Rust site:"
msgstr "Consulta gu√≠as m√°s especializadas en el sitio oficial de Rust:"

#: src/other-resources.md
msgid ""
"[The Rustonomicon](https://doc.rust-lang.org/nomicon/): covers unsafe Rust, "
"including working with raw pointers and interfacing with other languages "
"(FFI)."
msgstr ""
"[The Rustonomicon](https://doc.rust-lang.org/nomicon/): trata de Rust "
"inseguro, incluido c√≥mo trabajar con punteros sin formato e interactuar con "
"otros lenguajes (FFI)."

#: src/other-resources.md
msgid ""
"[Asynchronous Programming in Rust](https://rust-lang.github.io/async-book/): "
"covers the new asynchronous programming model which was introduced after the "
"Rust Book was written."
msgstr ""
"[Asynchronous Programming in Rust](https://rust-lang.github.io/async-book/): "
"incluye el nuevo modelo de programaci√≥n as√≠ncrona que se introdujo despu√©s "
"de que se escribiera el libro de Rust."

#: src/other-resources.md
msgid ""
"[The Embedded Rust Book](https://doc.rust-lang.org/stable/embedded-book/): "
"an introduction to using Rust on embedded devices without an operating "
"system."
msgstr ""
"[The Embedded Rust Book](https://doc.rust-lang.org/stable/embedded-book/): "
"una introducci√≥n sobre el uso de Rust en dispositivos integrados sin sistema "
"operativo."

#: src/other-resources.md
msgid "Unofficial Learning Material"
msgstr "Material de formaci√≥n no oficial"

#: src/other-resources.md
msgid "A small selection of other guides and tutorial for Rust:"
msgstr "Una peque√±a selecci√≥n de otras gu√≠as y tutoriales sobre Rust:"

#: src/other-resources.md
msgid ""
"[Learn Rust the Dangerous Way](http://cliffle.com/p/dangerust/): covers Rust "
"from the perspective of low-level C programmers."
msgstr ""
"[Learn Rust the Dangerous Way](http://cliffle.com/p/dangerust/): trata Rust "
"desde la perspectiva de los programadores de C de bajo nivel."

#: src/other-resources.md
msgid ""
"[Rust for Embedded C Programmers](https://docs.opentitan.org/doc/ug/"
"rust_for_c/): covers Rust from the perspective of developers who write "
"firmware in C."
msgstr ""
"[Rust for Embedded C Programmers](https://docs.opentitan.org/doc/ug/"
"rust_for_c/): explica Rust desde la perspectiva de los desarrolladores que "
"escriben _firmware_ en C."

#: src/other-resources.md
msgid ""
"[Rust for professionals](https://overexact.com/rust-for-professionals/): "
"covers the syntax of Rust using side-by-side comparisons with other "
"languages such as C, C++, Java, JavaScript, and Python."
msgstr ""
"[Rust for professonals](https://overexact.com/rust-for-professionals/): "
"trata la sintaxis de Rust compar√°ndola con otros lenguajes, como C, C++, "
"Java, JavaScript y Python."

#: src/other-resources.md
msgid ""
"[Rust on Exercism](https://exercism.org/tracks/rust): 100+ exercises to help "
"you learn Rust."
msgstr ""
"[Rust on Exercism](https://exercism.org/tracks/rust): m√°s de 100 ejercicios "
"para aprender Rust."

#: src/other-resources.md
msgid ""
"[Ferrous Teaching Material](https://ferrous-systems.github.io/teaching-"
"material/index.html): a series of small presentations covering both basic "
"and advanced part of the Rust language. Other topics such as WebAssembly, "
"and async/await are also covered."
msgstr ""
"[Ferrous Teaching Material](https://ferrous-systems.github.io/teaching-"
"material/index.html): una serie de peque√±as presentaciones que cubren tanto "
"la parte b√°sica como la parte m√°s avanzada del lenguaje Rust. Tambi√©n se "
"tratan otros temas como WebAssembly y async/await."

#: src/other-resources.md
msgid ""
"[Beginner's Series to Rust](https://docs.microsoft.com/en-us/shows/beginners-"
"series-to-rust/) and [Take your first steps with Rust](https://docs."
"microsoft.com/en-us/learn/paths/rust-first-steps/): two Rust guides aimed at "
"new developers. The first is a set of 35 videos and the second is a set of "
"11 modules which covers Rust syntax and basic constructs."
msgstr ""
"[Beginner's Series to Rust](https://docs.microsoft.com/es/shows/beginners-"
"series-to-rust/) y [Take your first steps with Rust](https://docs.microsoft."
"com/es/learn/paths/rust-first-steps/): dos gu√≠as de Rust dirigidas a nuevos "
"desarrolladores. La primera es un conjunto de 35 v√≠deos y la segunda es un "
"conjunto de 11 m√≥dulos que cubren la sintaxis y las construcciones b√°sicas "
"de Rust."

#: src/other-resources.md
msgid ""
"[Learn Rust With Entirely Too Many Linked Lists](https://rust-unofficial."
"github.io/too-many-lists/): in-depth exploration of Rust's memory management "
"rules, through implementing a few different types of list structures."
msgstr ""
"[Learn Rust With Entirely Too Many Linked Lists](https://rust-unofficial."
"github.io/too-many-lists/): exploraci√≥n detallada de las reglas de gesti√≥n "
"de la memoria de Rust a trav√©s de la implementaci√≥n de algunos tipos "
"diferentes de estructuras de listas."

#: src/other-resources.md
msgid ""
"Please see the [Little Book of Rust Books](https://lborb.github.io/book/) "
"for even more Rust books."
msgstr ""
"Consulta [The Little Book of Rust Books](https://lborb.github.io/book/) para "
"ver m√°s libros de Rust."

#: src/credits.md
msgid ""
"The material here builds on top of the many great sources of Rust "
"documentation. See the page on [other resources](other-resources.md) for a "
"full list of useful resources."
msgstr ""
"Este material se basa en las numerosas fuentes de documentaci√≥n sobre Rust. "
"Consulta la p√°gina de [otros recursos](other-resources.md) para ver una "
"lista completa de recursos √∫tiles."

#: src/credits.md
msgid ""
"The material of Comprehensive Rust is licensed under the terms of the Apache "
"2.0 license, please see [`LICENSE`](https://github.com/google/comprehensive-"
"rust/blob/main/LICENSE) for details."
msgstr ""
"El material de Comprehensive Rust est√° sujeto a los t√©rminos de la licencia "
"Apache 2.0. Para obtener m√°s informaci√≥n, consulta [`LICENSE`](https://"
"github.com/google/comprehensive-rust/blob/main/LICENSE)."

#: src/credits.md
msgid "Rust by Example"
msgstr "Rust by Example"

#: src/credits.md
msgid ""
"Some examples and exercises have been copied and adapted from [Rust by "
"Example](https://doc.rust-lang.org/rust-by-example/). Please see the "
"`third_party/rust-by-example/` directory for details, including the license "
"terms."
msgstr ""
"Algunos ejemplos y ejercicios se han copiado y adaptado del libro [Rust by "
"Example](https://doc.rust-lang.org/rust-by-example/). Consulta el directorio "
"`third_party/rust-by-example/` para obtener m√°s informaci√≥n, incluidos los "
"t√©rminos de la licencia."

#: src/credits.md
msgid "Rust on Exercism"
msgstr "Rust on Exercism"

#: src/credits.md
msgid ""
"Some exercises have been copied and adapted from [Rust on Exercism](https://"
"exercism.org/tracks/rust). Please see the `third_party/rust-on-exercism/` "
"directory for details, including the license terms."
msgstr ""
"Se han copiado y adaptado algunos ejercicios del recurso [Rust on Exercism]"
"(https://exercism.org/tracks/rust). Consulta el directorio `third_party/rust-"
"on-exercism/` para obtener m√°s informaci√≥n, incluidos los t√©rminos de la "
"licencia."

#: src/credits.md
msgid "CXX"
msgstr "CXX"

#: src/credits.md
msgid ""
"The [Interoperability with C++](android/interoperability/cpp.md) section "
"uses an image from [CXX](https://cxx.rs/). Please see the `third_party/cxx/` "
"directory for details, including the license terms."
msgstr ""
"En la secci√≥n [Interoperabilidad con C++](android/Interop/cpp.md) se usa una "
"imagen de [CXX](https://cxx.rs/). Consulta el directorio `third_party/cxx/` "
"para obtener m√°s informaci√≥n, incluidos los t√©rminos de la licencia."

#~ msgid "Small Example"
#~ msgstr "Peque√±o ejemplo"

#~ msgid "Why Rust?"
#~ msgstr "¬øPor qu√© Rust?"

#~ msgid "Compile Time Guarantees"
#~ msgstr "Garant√≠as en Tiempo de Compilaci√≥n"

#~ msgid "Runtime Guarantees"
#~ msgstr "Garant√≠as en Runtime (Tiempo de Ejecuci√≥n)"

#~ msgid "Modern Features"
#~ msgstr "Funcionalidades Modernas"

#~ msgid "Basic Syntax"
#~ msgstr "Sintaxis b√°sica"

#~ msgid "String vs str"
#~ msgstr "String o str"

#~ msgid "Overloading"
#~ msgstr "Sobrecarga"

#~ msgid "Arrays and for Loops"
#~ msgstr "Arrays y Loops for"

#~ msgid "if expressions"
#~ msgstr "expresiones if"

#~ msgid "for expressions"
#~ msgstr "expresiones for"

#~ msgid "while expressions"
#~ msgstr "expresiones while"

#~ msgid "break & continue"
#~ msgstr "break y continue"

#~ msgid "loop expressions"
#~ msgstr "Expresiones loop"

#~ msgid "Variant Payloads"
#~ msgstr "Payloads Variantes"

#~ msgid "Enum Sizes"
#~ msgstr "Tama√±os de Enum"

#, fuzzy
#~ msgid "Novel Control Flow"
#~ msgstr "Control de Flujo"

#~ msgid "if let expressions"
#~ msgstr "expresiones if let"

#~ msgid "while let expressions"
#~ msgstr "expresiones while let"

#~ msgid "match expressions"
#~ msgstr "expresiones match"

#~ msgid "Destructuring Structs"
#~ msgstr "Desestructurando Structs"

#~ msgid "Destructuring Arrays"
#~ msgstr "Desestructurando Arrays"

#~ msgid "Match Guards"
#~ msgstr "Guardas de Match"

#, fuzzy
#~ msgid "Pattern Matching (TBD)"
#~ msgstr "Correspondencia de Patrones"

#~ msgid "Stack Memory"
#~ msgstr "Memoria de la Pila (_Stack_)"

#~ msgid "Manual Memory Management"
#~ msgstr "Manejo Manual de Memoria"

#~ msgid "Scope-Based Memory Management"
#~ msgstr "Manejo de Memoria basado en Scope (√°mbitos)"

#~ msgid "Garbage Collection"
#~ msgstr "Recolecci√≥n de memoria residual"

#~ msgid "Rust Memory Management"
#~ msgstr "Manejo de la Memoria en Rust"

#~ msgid "Moved Strings in Rust"
#~ msgstr "Cadenas movidas en Rust"

#~ msgid "Double Frees in Modern C++"
#~ msgstr "Double free en c√≥digo C++ moderno"

#~ msgid "Moves in Function Calls"
#~ msgstr "Movimientos en llamadas de funci√≥n"

#~ msgid "Copying and Cloning"
#~ msgstr "Copiar y clonar"

#~ msgid "Shared and Unique Borrows"
#~ msgstr "Pr√©stamos compartidos y √∫nicos"

#~ msgid "Field Shorthand Syntax"
#~ msgstr "Sintaxis abreviada de campos"

#~ msgid "Method Receiver"
#~ msgstr "Receptor de m√©todo"

#~ msgid "Storing Books"
#~ msgstr "Almacenar libros"

#~ msgid "Option and Result"
#~ msgstr "Option y Result"

#~ msgid "Vec"
#~ msgstr "Vec"

#~ msgid "HashMap"
#~ msgstr "HashMap"

#~ msgid "Box"
#~ msgstr "Box"

#~ msgid "Recursive Data Types"
#~ msgstr "Tipos de datos recursivos"

#~ msgid "Rc"
#~ msgstr "Rc"

#~ msgid "Iterators and Ownership"
#~ msgstr "Iteradores y Ownership (Propiedad)"

#~ msgid "Strings and Iterators"
#~ msgstr "Cadenas e Iteradores"

#~ msgid "Generic Methods"
#~ msgstr "M√©todos Gen√©ricos"

#~ msgid "Monomorphization"
#~ msgstr "Monomorfizaci√≥n"

#~ msgid "Default Methods"
#~ msgstr "M√©todos por Default"

#~ msgid "impl Trait"
#~ msgstr "impl Trait"

#~ msgid "Important Traits"
#~ msgstr "Traits Importantes"

#~ msgid "From and Into"
#~ msgstr "From e Into"

#~ msgid "Operators: Add, Mul, ..."
#~ msgstr "Operadores: Add, Mul, ‚Ä¶."

#~ msgid "A Simple GUI Library"
#~ msgstr "Una Biblioteca GUI sencilla"

#~ msgid "Points and Polygons"
#~ msgstr "Puntos y Pol√≠gonos"

#~ msgid "Catching Stack Unwinding"
#~ msgstr "Catching Stack Unwinding"

#~ msgid "Structured Error Handling"
#~ msgstr "Manejo de Errores Estructurado"

#~ msgid "Propagating Errors with ?"
#~ msgstr "Propagaci√≥n de Errores con ?"

#~ msgid "Converting Error Types"
#~ msgstr "Conversi√≥n de Tipos de Errores"

#~ msgid "Deriving Error Enums"
#~ msgstr "Derivaci√≥n de Enums de Error"

#~ msgid "Adding Context to Errors"
#~ msgstr "A√±adir Contexto a los Errores"

#~ msgid "no_std"
#~ msgstr "no_std"

#~ msgid "alloc"
#~ msgstr "alloc"

#~ msgid "embedded-hal"
#~ msgstr "embedded-hal"

#~ msgid "probe-rs, cargo-embed"
#~ msgstr "probe-rs, cargo-embed"

#~ msgid "zerocopy"
#~ msgstr "zerocopy"

#~ msgid "buddy_system_allocator"
#~ msgstr "buddy_system_allocator"

#~ msgid "tinyvec"
#~ msgstr "tinyvec"

#~ msgid "spin"
#~ msgstr "girar"

#~ msgid "Send and Sync"
#~ msgstr "Send y Sync"

#~ msgid "Send"
#~ msgstr "Send"

#~ msgid "Sync"
#~ msgstr "Sync"

#~ msgid "Arc"
#~ msgstr "Arc"

#~ msgid "Mutex"
#~ msgstr "Mutex"

#~ msgid "async/await"
#~ msgstr "async / await"

#~ msgid "Pin"
#~ msgstr "Fijar"

#~ msgid "Day 1 Morning"
#~ msgstr "D√≠a 1: ma√±ana"

#~ msgid "Day 1 Afternoon"
#~ msgstr "D√≠a 1: tarde"

#~ msgid "Day 2 Morning"
#~ msgstr "D√≠a 2: ma√±ana"

#~ msgid "Day 2 Afternoon"
#~ msgstr "D√≠a 2: tarde"

#~ msgid "Day 3 Morning"
#~ msgstr "D√≠a 3: ma√±ana"

#~ msgid "Day 3 Afternoon"
#~ msgstr "D√≠a 3: tarde"

#~ msgid "Bare Metal Rust Morning"
#~ msgstr "Rust Bare Metal: ma√±ana"

#~ msgid "Concurrency Morning"
#~ msgstr "Concurrencia: ma√±ana"

#~ msgid "Concurrency Afternoon"
#~ msgstr "Concurrencia: tarde"

#~ msgid ""
#~ "Day 1: Basic Rust, syntax, control flow, creating and consuming values."
#~ msgstr ""
#~ "D√≠a 1: Rust B√°sico, sintaxis, control de flujo, creaci√≥n y consumo de "
#~ "valores."

#~ msgid ""
#~ "Day 2: Memory management, ownership, compound data types, and the "
#~ "standard library."
#~ msgstr ""
#~ "D√≠a 2: Gesti√≥n de memoria, _ownership_ (propiedad), tipos de datos "
#~ "compuestos y la biblioteca est√°ndar."

#~ msgid "Day 3: Generics, traits, error handling, testing, and unsafe Rust."
#~ msgstr ""
#~ "D√≠a 3: Gen√©ricos, _traits_, gesti√≥n de errores, pruebas y _unsafe_ "
#~ "(inseguro) Rust."

#~ msgid ""
#~ "```shell\n"
#~ "cargo init concurrency\n"
#~ "cd concurrency\n"
#~ "cargo add tokio --features full\n"
#~ "cargo run\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "cargo init concurrency\n"
#~ "cd concurrency\n"
#~ "cargo add tokio --features full\n"
#~ "cargo run\n"
#~ "```"

#~ msgid ""
#~ "```shell\n"
#~ "sudo apt install cargo rust-src rustfmt\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "sudo apt install cargo rust-src rustfmt\n"
#~ "```"

#, fuzzy
#~ msgid ""
#~ "We suggest using [VS Code](https://code.visualstudio.com/) to edit the "
#~ "code (but any LSP compatible editor works with rust-analyzer[3](https://"
#~ "rust-analyzer.github.io/))."
#~ msgstr ""
#~ "Recomendamos usar [VS Code](https://code.visualstudio.com/) para editar "
#~ "el c√≥digo (aunque cualquier editor compatible con LSP funciona con [rust-"
#~ "analyzer](https://rust-analyzer.github.io/))."

#~ msgid ""
#~ "Some folks also like to use the [JetBrains](https://www.jetbrains.com/"
#~ "clion/) family of IDEs, which do their own analysis but have their own "
#~ "tradeoffs. If you prefer them, you can install the [Rust Plugin](https://"
#~ "www.jetbrains.com/rust/). Please take note that as of January 2023 "
#~ "debugging only works on the CLion version of the JetBrains IDEA suite."
#~ msgstr ""
#~ "A algunos compa√±eros tambi√©n les gusta usar la familia [JetBrains]"
#~ "(https://www.jetbrains.com/clion/) de IDEs, que hacen sus propios "
#~ "an√°lisis, pero tambi√©n tienen inconvenientes. Si lo prefieres, puedes "
#~ "instalar el [Rust Plugin](https://www.jetbrains.com/rust/). Ten en cuenta "
#~ "que, a partir de enero del 2023, la depuraci√≥n solo funciona en la "
#~ "versi√≥n CLion del paquete de JetBrains IDEA."

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    println!(\"Edit me!\");\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    println!(\"Edit me!\");\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```shell\n"
#~ "% rustc --version\n"
#~ "rustc 1.69.0 (84c898d65 2023-04-16)\n"
#~ "% cargo --version\n"
#~ "cargo 1.69.0 (6e9a83356 2023-04-12)\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "% rustc --version\n"
#~ "rustc 1.69.0 (84c898d65 2023-04-16)\n"
#~ "% cargo --version\n"
#~ "cargo 1.69.0 (6e9a83356 2023-04-12)\n"
#~ "```"

#~ msgid ""
#~ "```shell\n"
#~ "$ cargo new exercise\n"
#~ "     Created binary (application) `exercise` package\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "$ cargo new exercise\n"
#~ "     Created binary (application) `exercise` package\n"
#~ "```"

#~ msgid ""
#~ "```shell\n"
#~ "$ cd exercise\n"
#~ "$ cargo run\n"
#~ "   Compiling exercise v0.1.0 (/home/mgeisler/tmp/exercise)\n"
#~ "    Finished dev [unoptimized + debuginfo] target(s) in 0.75s\n"
#~ "     Running `target/debug/exercise`\n"
#~ "Hello, world!\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "$ cd exercise\n"
#~ "$ cargo run\n"
#~ "   Compiling exercise v0.1.0 (/home/mgeisler/tmp/exercise)\n"
#~ "    Finished dev [unoptimized + debuginfo] target(s) in 0.75s\n"
#~ "     Running `target/debug/exercise`\n"
#~ "Hola Mundo!\n"
#~ "```"

#~ msgid ""
#~ "```rust\n"
#~ "fn main() {\n"
#~ "    println!(\"Edit me!\");\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust\n"
#~ "fn main() {\n"
#~ "    println!(\"Edit me!\");\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```shell\n"
#~ "$ cargo run\n"
#~ "   Compiling exercise v0.1.0 (/home/mgeisler/tmp/exercise)\n"
#~ "    Finished dev [unoptimized + debuginfo] target(s) in 0.24s\n"
#~ "     Running `target/debug/exercise`\n"
#~ "Edit me!\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "$ cargo run\n"
#~ "   Compiling exercise v0.1.0 (/home/mgeisler/tmp/exercise)\n"
#~ "    Finished dev [unoptimized + debuginfo] target(s) in 0.24s\n"
#~ "     Running `target/debug/ejercicio`\n"
#~ "Modif√≠came!\n"
#~ "```"

#~ msgid ""
#~ "Control flow constructs: `if`, `if let`, `while`, `while let`, `break`, "
#~ "and `continue`."
#~ msgstr ""
#~ "Control de flujo: `if`, `if let`, `while`, `while let`, `break`, y "
#~ "`continue`."

#~ msgid ""
#~ "The idea for the first day is to show _just enough_ of Rust to be able to "
#~ "speak about the famous borrow checker. The way Rust handles memory is a "
#~ "major feature and we should show students this right away."
#~ msgstr ""
#~ "La idea del primer d√≠a es mostrar _lo suficiente_ de Rustcomo para poder "
#~ "hablar del famoso _borrow checker_. La forma en que Rust gestiona la "
#~ "memoria es una caracter√≠stica importante y debemos mostrarla a los "
#~ "estudiantes desde el principio."

#~ msgid ""
#~ "If you're teaching this in a classroom, this is a good place to go over "
#~ "the schedule. We suggest splitting the day into two parts (following the "
#~ "slides):"
#~ msgstr ""
#~ "Si est√°s impartiendo el curso en un aula, este es un buen lugar para "
#~ "repasar el calendario. Te recomendamos que dividas el d√≠a en dos partes "
#~ "(siguiendo las diapositivas):"

#~ msgid "Morning: 9:00 to 12:00,"
#~ msgstr "Ma√±ana: 9:00 to 12:00,"

#~ msgid "Afternoon: 13:00 to 16:00."
#~ msgstr "Tarde: de 13:00 a 16:00."

#~ msgid ""
#~ "You can of course adjust this as necessary. Please make sure to include "
#~ "breaks, we recommend a break every hour!"
#~ msgstr ""
#~ "Por supuesto, puedes ajustar las horas seg√∫n lo necesites. No olvides "
#~ "incluir pausas, recomendamos hacer un descanso cada hora."

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    println!(\"Hello üåç!\");\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    println!(\"Hola üåç!\");\n"
#~ "}\n"
#~ "```"

#~ msgid "Here is a small example program in Rust:"
#~ msgstr "A continuaci√≥n, se muestra un peque√±o programa de ejemplo de Rust:"

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn main() {              // Program entry point\n"
#~ "    let mut x: i32 = 6;  // Mutable variable binding\n"
#~ "    print!(\"{x}\");       // Macro for printing, like printf\n"
#~ "    while x != 1 {       // No parenthesis around expression\n"
#~ "        if x % 2 == 0 {  // Math like in other languages\n"
#~ "            x = x / 2;\n"
#~ "        } else {\n"
#~ "            x = 3 * x + 1;\n"
#~ "        }\n"
#~ "        print!(\" -> {x}\");\n"
#~ "    }\n"
#~ "    println!();\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn main() {              // Punto de entrada del programa\n"
#~ "    let mut x: i32 = 6;  // Variable mutable vinculante\n"
#~ "    print!(\"{x}\");       // Macro para printing, como printf\n"
#~ "    while x != 1 {       // Sin par√©ntesis alrededor de las expresiones\n"
#~ "        if x % 2 == 0 {  // Operaciones matem√°ticas como en otros "
#~ "lenguajes\n"
#~ "            x = x / 2;\n"
#~ "        } else {\n"
#~ "            x = 3 * x + 1;\n"
#~ "        }\n"
#~ "        print!(\" -> {x}\");\n"
#~ "    }\n"
#~ "    println!();\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "The code implements the Collatz conjecture: it is believed that the loop "
#~ "will always end, but this is not yet proved. Edit the code and play with "
#~ "different inputs."
#~ msgstr ""
#~ "El c√≥digo implementa la conjetura de Collatz: se cree que el bucle "
#~ "terminar√° siempre, pero a√∫n no se ha demostrado. Edita el c√≥digo y prueba "
#~ "con diferentes entradas."

#~ msgid ""
#~ "Explain that all variables are statically typed. Try removing `i32` to "
#~ "trigger type inference. Try with `i8` instead and trigger a runtime "
#~ "integer overflow."
#~ msgstr ""
#~ "Explica que todas las variables est√°n tipadas est√°ticamente. Prueba a "
#~ "quitar `i32` para activar la inferencia de tipos. Prueba con `i8` y "
#~ "provoca un desbordamiento de enteros en _runtime_."

#~ msgid "Change `let mut x` to `let x`, discuss the compiler error."
#~ msgstr "Cambia `let mut x` por `let x` y discute el error del compilador."

#~ msgid ""
#~ "Show how `print!` gives a compilation error if the arguments don't match "
#~ "the format string."
#~ msgstr ""
#~ "Muestra c√≥mo `print!` da un error de compilaci√≥n si los argumentos no "
#~ "coinciden con la cadena de formato."

#~ msgid ""
#~ "Show how you need to use `{}` as a placeholder if you want to print an "
#~ "expression which is more complex than just a single variable."
#~ msgstr ""
#~ "Muestra c√≥mo se debe usar `{}` como marcador de posici√≥n para poder "
#~ "imprimir una expresi√≥n m√°s compleja que una sola variable."

#~ msgid ""
#~ "Show the students the standard library, show them how to search for `std::"
#~ "fmt` which has the rules of the formatting mini-language. It's important "
#~ "that the students become familiar with searching in the standard library."
#~ msgstr ""
#~ "Muestra a los alumnos la biblioteca est√°ndar y c√≥mo buscar `std::fmt`, "
#~ "que tiene las reglas del mini-lenguaje de formato. Es importante que los "
#~ "alumnos se familiaricen con la b√∫squeda en la biblioteca est√°ndar."

#~ msgid ""
#~ "In a shell `rustup doc std::fmt` will open a browser on the local std::"
#~ "fmt documentation"
#~ msgstr ""
#~ "En un shell, `rustup doc std::fmt` abrir√° un navegador en la "
#~ "documentaci√≥n local de std::fmt."

#~ msgid "Compile time memory safety."
#~ msgstr "Seguridad de la memoria en tiempo de compilaci√≥n."

#~ msgid "Lack of undefined runtime behavior."
#~ msgstr "Ausencia de comportamientos indefinidos en _runtime_."

#~ msgid "Modern language features."
#~ msgstr "Caracter√≠sticas de lenguajes modernos."

#~ msgid "Static memory management at compile time:"
#~ msgstr "Gesti√≥n est√°tica de la memoria en tiempo de compilaci√≥n:"

#~ msgid "No memory leaks (_mostly_, see notes)."
#~ msgstr "No hay p√©rdidas de memoria (_casi siempre_, consulta las notas)."

#~ msgid ""
#~ "It is possible to produce memory leaks in (safe) Rust. Some examples are:"
#~ msgstr ""
#~ "Es posible producir p√©rdidas de memoria en (_safe_) Rust. Estos son "
#~ "algunos ejemplos:"

#~ msgid ""
#~ "You can use [`Box::leak`](https://doc.rust-lang.org/std/boxed/struct.Box."
#~ "html#method.leak) to leak a pointer. A use of this could be to get "
#~ "runtime-initialized and runtime-sized static variables"
#~ msgstr ""
#~ "Puedes usar [`Box::leak`](https://doc.rust-lang.org/std/boxed/struct.Box."
#~ "html#method.leak) para perder un puntero. Esto podr√≠a usarse para obtener "
#~ "variables est√°ticas iniciadas y medidas en _runtime_."

#~ msgid ""
#~ "You can use [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn."
#~ "forget.html) to make the compiler \"forget\" about a value (meaning the "
#~ "destructor is never run)."
#~ msgstr ""
#~ "Puedes usar [`std::mem::forget`](https://doc.rust-lang.org/std/mem/fn."
#~ "forget.html) para que el compilador \"olvide\" un valor (lo que significa "
#~ "que el destructor nunca se ejecuta)."

#~ msgid ""
#~ "You can also accidentally create a [reference cycle](https://doc.rust-"
#~ "lang.org/book/ch15-06-reference-cycles.html) with `Rc` or `Arc`."
#~ msgstr ""
#~ "Tambi√©n puedes crear por accidente una [referencia circular](https://doc."
#~ "rust-lang.org/book/ch15-06-reference-cycles.html) con `Rc` o `Arc`."

#~ msgid ""
#~ "In fact, some will consider infinitely populating a collection a memory "
#~ "leak and Rust does not protect from those."
#~ msgstr ""
#~ "De hecho, algunos consideran que poblar de forma infinita una colecci√≥n "
#~ "es una fuga de memoria y Rust no protege de ellas."

#~ msgid ""
#~ "For the purpose of this course, \"No memory leaks\" should be understood "
#~ "as \"Pretty much no _accidental_ memory leaks\"."
#~ msgstr ""
#~ "En este curso, \"sin p√©rdidas de memoria\" debe entenderse como\n"
#~ " \"casi ninguna p√©rdida de memoria _accidental_\"."

#~ msgid ""
#~ "Integer overflow is defined via the [`overflow-checks`](https://doc.rust-"
#~ "lang.org/rustc/codegen-options/index.html#overflow-checks) compile-time "
#~ "flag. If enabled, the program will panic (a controlled crash of the "
#~ "program), otherwise you get wrap-around semantics. By default, you get "
#~ "panics in debug mode (`cargo build`) and wrap-around in release mode "
#~ "(`cargo build --release`)."
#~ msgstr ""
#~ "El overflow en Integer es definido v√≠a un _flag_ en tiempo de "
#~ "compilaci√≥n. Las opciones son alertas panic (un crash controlado del "
#~ "programa) o una sem√°ntica de _wrap-around_. Por defecto, obtienes el "
#~ "alerta en modo depuraci√≥n (`cargo build`) y _wrap-around_ en el modo "
#~ "release (`cargo build ‚Äî"

#~ msgid ""
#~ "Bounds checking cannot be disabled with a compiler flag. It can also not "
#~ "be disabled directly with the `unsafe` keyword. However, `unsafe` allows "
#~ "you to call functions such as `slice::get_unchecked` which does not do "
#~ "bounds checking."
#~ msgstr ""
#~ "La comprobaci√≥n de l√≠mites no se puede deshabilitar con una bandera de "
#~ "compilador. Tampoco se puede inhabilitar directamente con la palabra "
#~ "clave `unsafe`. Sin embargo, `unsafe` te permite llamar a funciones como "
#~ "`slice::get_unchecked`, que no realiza comprobaciones de l√≠mites."

#~ msgid "Rust is built with all the experience gained in the last decades."
#~ msgstr ""
#~ "Rust se ha creado a partir de toda la experiencia obtenida en las √∫ltimas "
#~ "d√©cadas."

#~ msgid "Language Features"
#~ msgstr "Caracter√≠sticas del Lenguaje"

#~ msgid "Tooling"
#~ msgstr "Herramientas"

#~ msgid ""
#~ "Zero-cost abstractions, similar to C++, means that you don't have to "
#~ "'pay' for higher-level programming constructs with memory or CPU. For "
#~ "example, writing a loop using `for` should result in roughly the same low "
#~ "level instructions as using the `.iter().fold()` construct."
#~ msgstr ""
#~ "Las abstracciones sin coste, similares a las de C++, significan que no "
#~ "tienes que 'pagar' por construcciones de programaci√≥n de alto nivel con "
#~ "memoria o CPU. Por ejemplo, escribir un bucle utilizando `for` deber√≠a "
#~ "dar como resultado pr√°cticamente las mismas instrucciones de bajo nivel "
#~ "que con la construcci√≥n `.iter().fold()`."

#~ msgid ""
#~ "It may be worth mentioning that Rust enums are 'Algebraic Data Types', "
#~ "also known as 'sum types', which allow the type system to express things "
#~ "like `Option<T>` and `Result<T, E>`."
#~ msgstr ""
#~ "Merece la pena mencionar que los enums de Rust son tipos de datos "
#~ "algebraicos, tambi√©n denominados 'tipos suma', que permiten al sistema de "
#~ "tipos expresar cosas como `Option<T>` y `Result<T, E>`."

#~ msgid ""
#~ "Remind people to read the errors --- many developers have gotten used to "
#~ "ignore lengthy compiler output. The Rust compiler is significantly more "
#~ "talkative than other compilers. It will often provide you with "
#~ "_actionable_ feedback, ready to copy-paste into your code."
#~ msgstr ""
#~ "Recuerda a los alumnos que lean los errores, ya que muchos "
#~ "desarrolladores se han acostumbrado a ignorar los largos resultados del "
#~ "compilador. El compilador de Rust es mucho m√°s comunicativo que otros. A "
#~ "menudo, te proporcionar√° sugerencias _pr√°cticas_, que puedes copiar y "
#~ "pegar en tu c√≥digo."

#~ msgid ""
#~ "The Rust standard library is small compared to languages like Java, "
#~ "Python, and Go. Rust does not come with several things you might consider "
#~ "standard and essential:"
#~ msgstr ""
#~ "La biblioteca est√°ndar de Rust es peque√±a en comparaci√≥n con la de "
#~ "lenguajes como Java, Python o Go. Rust no incluye elementos que se "
#~ "podr√≠an considerar est√°ndar o esenciales:"

#~ msgid "a random number generator, but see [rand](https://docs.rs/rand/)."
#~ msgstr ""
#~ "un generador de n√∫meros aleatorios, pero consulta [rand](https://docs.rs/"
#~ "rand/)."

#~ msgid "support for SSL or TLS, but see [rusttls](https://docs.rs/rustls/)."
#~ msgstr ""
#~ "compatibilidad con SSL o TLS, pero consulta [rusttls](https://docs.rs/"
#~ "rustls/)."

#~ msgid "support for JSON, but see [serde_json](https://docs.rs/serde_json/)."
#~ msgstr ""
#~ "Compatibilidad con JSON, pero consulta [serde_json](https://docs.rs/"
#~ "serde_json/)."

#~ msgid ""
#~ "The reasoning behind this is that functionality in the standard library "
#~ "cannot go away, so it has to be very stable. For the examples above, the "
#~ "Rust community is still working on finding the best solution --- and "
#~ "perhaps there isn't a single \"best solution\" for some of these things."
#~ msgstr ""
#~ "La raz√≥n es que la funcionalidad de la biblioteca est√°ndar no puede "
#~ "desaparecer, por lo que tiene que ser muy estable. En los ejemplos "
#~ "anteriores, la comunidad de Rust todav√≠a est√° trabajando para encontrar "
#~ "la mejor soluci√≥n, y puede que no exista una √∫nica \"mejor soluci√≥n\" "
#~ "para algunas de estas cuestiones."

#~ msgid ""
#~ "Rust comes with a built-in package manager in the form of Cargo and this "
#~ "makes it trivial to download and compile third-party crates. A "
#~ "consequence of this is that the standard library can be smaller."
#~ msgstr ""
#~ "Rust incluye un gestor de paquetes integrado con la forma de Cargo, lo "
#~ "que hace que resulte sencillo descargar y compilar crates de terceros. "
#~ "Como consecuencia, la biblioteca est√°ndar puede ser m√°s peque√±a."

#~ msgid ""
#~ "Discovering good third-party crates can be a problem. Sites like <https://"
#~ "lib.rs/> help with this by letting you compare health metrics for crates "
#~ "to find a good and trusted one."
#~ msgstr ""
#~ "Encontrar buenos crates de terceros puede ser un problema. Sitios como "
#~ "<https://lib.rs/> te ayudan a comparar m√©tricas de salud de crates para "
#~ "encontrar uno bueno y fiable."

#~ msgid ""
#~ "[rust-analyzer](https://rust-analyzer.github.io/) is a well supported LSP "
#~ "implementation used in major IDEs and text editors."
#~ msgstr ""
#~ "[rust-analyzer](https://rust-analyzer.github.io/) es una implementaci√≥n "
#~ "de LSP bien respaldada y utilizada en los principales IDE y editores de "
#~ "texto."

#~ msgid "Like C++, Rust has references:"
#~ msgstr "Al igual que C++, Rust tiene referencias:"

#~ msgid ""
#~ "We must dereference `ref_x` when assigning to it, similar to C and C++ "
#~ "pointers."
#~ msgstr ""
#~ "Debemos desreferenciar `ref_x` al asignarle un valor, de forma similar a "
#~ "los punteros de C y C++."

#~ msgid ""
#~ "References that are declared as `mut` can be bound to different values "
#~ "over their lifetime."
#~ msgstr ""
#~ "Las referencias que se declaran como `mut` se pueden vincular a distintos "
#~ "valores durante su tiempo de vida."

#~ msgid "A reference is said to \"borrow\" the value it refers to."
#~ msgstr ""
#~ "Se dice que una referencia \"toma prestado\" el valor al que hace "
#~ "referencia."

#~ msgid ""
#~ "Rust is tracking the lifetimes of all references to ensure they live long "
#~ "enough."
#~ msgstr ""
#~ "Rust hace un seguimiento del tiempo de vida de todas las referencias para "
#~ "asegurarse de que duran lo suficiente."

#~ msgid "`String` vs `str`"
#~ msgstr "`String` o `str`"

#~ msgid "We can now understand the two string types in Rust:"
#~ msgstr "Ahora podemos entender los dos tipos de cadenas de Rust:"

#~ msgid ""
#~ "You can borrow `&str` slices from `String` via `&` and optionally range "
#~ "selection."
#~ msgstr ""
#~ "Puedes tomar prestados slices `&str` desde `String` mediante `&` y, si "
#~ "quieres, puedes seleccionar rangos."

#~ msgid ""
#~ "A Rust version of the famous [FizzBuzz](https://en.wikipedia.org/wiki/"
#~ "Fizz_buzz) interview question:"
#~ msgstr ""
#~ "Una versi√≥n de Rust de la famosa pregunta de la entrevista de [FizzBuzz]"
#~ "(https://es.wikipedia.org/wiki/Fizz_buzz):"

#~ msgid ""
#~ "We refer in `main` to a function written below. Neither forward "
#~ "declarations nor headers are necessary. "
#~ msgstr ""
#~ "En `main` hacemos referencia a una funci√≥n escrita m√°s abajo. No se "
#~ "necesitan declaraciones de redirecci√≥n ni encabezados. "

#~ msgid ""
#~ "The range expression in the `for` loop in `print_fizzbuzz_to()` contains "
#~ "`=n`, which causes it to include the upper bound."
#~ msgstr ""
#~ "La expresi√≥n de rango del bucle `for` en `print_fizzbuzz_to()` contiene "
#~ "`=n`, lo que hace que incluya el l√≠mite superior."

#~ msgid ""
#~ "All language items in Rust can be documented using special `///` syntax."
#~ msgstr ""
#~ "Todos los elementos del lenguaje de Rust se pueden documentar con la "
#~ "sintaxis especial `///`."

#~ msgid ""
#~ "This course does not include rustdoc on slides, just to save space, but "
#~ "in real code they should be present."
#~ msgstr ""
#~ "Este curso no incluye diapositivas sobre rustdoc para ahorrar espacio, "
#~ "pero deben aparecer en el c√≥digo real."

#~ msgid ""
#~ "Inner doc comments are discussed later (in the page on modules) and need "
#~ "not be addressed here."
#~ msgstr ""
#~ "Los comentarios internos de los documentos se tratar√°n m√°s adelante (en "
#~ "la p√°gina de m√≥dulos), no es necesario tratarlos aqu√≠."

#~ msgid ""
#~ "Rustdoc comments can contain code snippets that we can run and test using "
#~ "`cargo test`. We will discuss these tests in the [Testing section](../"
#~ "testing/doc-tests.html)."
#~ msgstr ""
#~ "Los comentarios de rustdoc pueden contener fragmentos de c√≥digo que "
#~ "podemos ejecutar y probar utilizando `cargo test`. Hablaremos de esto en "
#~ "la [secci√≥n de pruebas](../testing/doc-tests.html)."

#~ msgid ""
#~ "Methods are functions associated with a type. The `self` argument of a "
#~ "method is an instance of the type it is associated with:"
#~ msgstr ""
#~ "Los m√©todos son funciones asociadas a un tipo. El argumento `self` de un "
#~ "m√©todo es una instancia del tipo al que est√° asociada:"

#~ msgid ""
#~ "We will look much more at methods in today's exercise and in tomorrow's "
#~ "class."
#~ msgstr ""
#~ "Abordaremos en mayor profundidad los m√©todos en el ejercicio de hoy y en "
#~ "la clase de ma√±ana."

#~ msgid ""
#~ "Add a static method called `Rectangle::new` and call this from `main`:"
#~ msgstr ""
#~ "A√±ade un m√©todo est√°tico denominado `Rectangle::new` y ll√°malo desde "
#~ "`main`:"

#~ msgid ""
#~ "```rust,editable,compile_fail\n"
#~ "fn new(width: u32, height: u32) -> Rectangle {\n"
#~ "    Rectangle { width, height }\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable,compile_fail\n"
#~ "fn new(width: u32, height: u32) -> Rectangle {\n"
#~ "    Rectangle { width, height }\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "While _technically_, Rust does not have custom constructors, static "
#~ "methods are commonly used to initialize structs (but don't have to). The "
#~ "actual constructor, `Rectangle { width, height }`, could be called "
#~ "directly. See the [Rustnomicon](https://doc.rust-lang.org/nomicon/"
#~ "constructors.html)."
#~ msgstr ""
#~ "Aunque _t√©cnicamente_ Rust no tiene constructores personalizados, los "
#~ "m√©todos est√°ticos se utilizan habitualmente para inicializar estructuras, "
#~ "pero no es obligatorio. El constructor real, `Rectangle { width, height }"
#~ "`, podr√≠a llamarse directamente. Consulta el [Rustnomicon](https://doc."
#~ "rust-lang.org/nomicon/constructors.html)."

#~ msgid ""
#~ "Add a `Rectangle::square(width: u32)` constructor to illustrate that such "
#~ "static methods can take arbitrary parameters."
#~ msgstr ""
#~ "A√±ade un constructor `Rectangle::square(width: u32)` para mostrar que "
#~ "esos m√©todos est√°ticos puede utilizar par√°metros arbitrarios."

#~ msgid "Function Overloading"
#~ msgstr "Sobrecarga de funciones"

#~ msgid "Overloading is not supported:"
#~ msgstr "No se admite la sobrecarga:"

#~ msgid "Always takes a fixed number of parameters."
#~ msgstr "Siempre se utiliza un n√∫mero fijo de par√°metros."

#~ msgid "Default values are not supported:"
#~ msgstr "No se admiten valores predeterminados:"

#~ msgid "All call sites have the same number of arguments."
#~ msgstr "Todos los sitios de llamada tienen el mismo n√∫mero de argumentos."

#~ msgid "Macros are sometimes used as an alternative."
#~ msgstr "A veces, se utilizan macros como alternativa."

#~ msgid "However, function parameters can be generic:"
#~ msgstr "Sin embargo, los par√°metros de funci√≥n pueden ser gen√©ricos:"

#~ msgid ""
#~ "When using generics, the standard library's `Into<T>` can provide a kind "
#~ "of limited polymorphism on argument types. We will see more details in a "
#~ "later section."
#~ msgstr ""
#~ "Cuando se utilizan gen√©ricos, el `Into<T>` de la biblioteca est√°ndar "
#~ "puede proporcionar una especie de polimorfismo limitado en los tipos de "
#~ "argumentos. Veremos m√°s informaci√≥n al respecto en una secci√≥n posterior."

#~ msgid "Day 1: Morning Exercises"
#~ msgstr "D√≠a 1: ejercicios de la ma√±ana"

#~ msgid "In these exercises, we will explore two parts of Rust:"
#~ msgstr "En estos ejercicios, estudiaremos dos partes de Rust:"

#~ msgid "Implicit conversions between types."
#~ msgstr "Conversiones impl√≠citas entre tipos."

#~ msgid "Arrays and `for` loops."
#~ msgstr "Arrays y bucles `for`."

#~ msgid "A few things to consider while solving the exercises:"
#~ msgstr "Ten en cuenta lo siguiente a la hora de resolver los ejercicios:"

#~ msgid ""
#~ "Use a local Rust installation, if possible. This way you can get auto-"
#~ "completion in your editor. See the page about [Using Cargo](../../cargo."
#~ "md) for details on installing Rust."
#~ msgstr ""
#~ "Si es posible, utiliza una instalaci√≥n local de Rust. De esta forma, "
#~ "podr√°s autocompletar datos en tu editor. Consulta la p√°gina sobre \\[c√≥mo "
#~ "usar Cargo\\] para obtener m√°s informaci√≥n sobre c√≥mo instalar Rust."

#~ msgid "Alternatively, use the Rust Playground."
#~ msgstr "Tambi√©n puedes usar el playground de Rust."

#~ msgid ""
#~ "The code snippets are not editable on purpose: the inline code snippets "
#~ "lose their state if you navigate away from the page."
#~ msgstr ""
#~ "Los fragmentos de c√≥digo no son editables a prop√≥sito: los que est√°n "
#~ "insertados pierden su estado si se sale de la p√°gina."

#~ msgid ""
#~ "Rust will not automatically apply _implicit conversions_ between types "
#~ "([unlike C++](https://en.cppreference.com/w/cpp/language/"
#~ "implicit_conversion)). You can see this in a program like this:"
#~ msgstr ""
#~ "Rust no aplicar√° autom√°ticamente _conversiones impl√≠citas_ entre tipos "
#~ "([a diferencia de C++](https://en.cppreference.com/w/cpp/language/"
#~ "implicit_conversion)). Puedes ver un ejemplo de esto en el siguiente "
#~ "programa:"

#~ msgid ""
#~ "The Rust integer types all implement the [`From<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.From.html) and [`Into<T>`](https://doc.rust-"
#~ "lang.org/std/convert/trait.Into.html) traits to let us convert between "
#~ "them. The `From<T>` trait has a single `from()` method and similarly, the "
#~ "`Into<T>` trait has a single `into()` method. Implementing these traits "
#~ "is how a type expresses that it can be converted into another type."
#~ msgstr ""
#~ "Todos los tipos de enteros de Rust implementan los traits [`From<T>`]"
#~ "(https://doc.rust-lang.org/std/convert/trait.From.html) y [`Into<T>`]"
#~ "(https://doc.rust-lang.org/std/convert/trait.Into.html) para permitirnos "
#~ "realizar conversiones entre ellos. El trait `From<T>` tiene un √∫nico "
#~ "m√©todo `from()` y, del mismo modo, el trait `Into<T>` tiene un √∫nico "
#~ "m√©todo `into()`. Un tipo expresa que se puede convertir en otro tipo "
#~ "implementando estos traits."

#~ msgid ""
#~ "The standard library has an implementation of `From<i8> for i16`, which "
#~ "means that we can convert a variable `x` of type `i8` to an `i16` by "
#~ "calling  `i16::from(x)`. Or, simpler, with `x.into()`, because `From<i8> "
#~ "for i16` implementation automatically create an implementation of "
#~ "`Into<i16> for i8`."
#~ msgstr ""
#~ "La biblioteca est√°ndar implementa `From<i8> for i16`, lo que significa "
#~ "que podemos convertir una variable `x` del tipo `i8` a `i16` llamando a  "
#~ "`i16::from(x)`. O, m√°s sencillo, con `x.into()`, ya que la implementaci√≥n "
#~ "de `From<i8> for i16` crea autom√°ticamente una implementaci√≥n de "
#~ "`Into<i16> for i8`."

#~ msgid ""
#~ "The same applies for your own `From` implementations for your own types, "
#~ "so it is sufficient to only implement `From` to get a respective `Into` "
#~ "implementation automatically."
#~ msgstr ""
#~ "Lo mismo se aplica a tus implementaciones `From` para tus propios tipos, "
#~ "por lo que basta con implementar `From` para obtener la respectiva "
#~ "implementaci√≥n `Into` de forma autom√°tica."

#~ msgid "Execute the above program and look at the compiler error."
#~ msgstr "Ejecuta el programa anterior y observa el error del compilador."

#~ msgid "Update the code above to use `into()` to do the conversion."
#~ msgstr ""
#~ "Actualiza el c√≥digo anterior para usar `into()` y realizar la conversi√≥n."

#~ msgid ""
#~ "Change the types of `x` and `y` to other things (such as `f32`, `bool`, "
#~ "`i128`) to see which types you can convert to which other types. Try "
#~ "converting small types to big types and the other way around. Check the "
#~ "[standard library documentation](https://doc.rust-lang.org/std/convert/"
#~ "trait.From.html) to see if `From<T>` is implemented for the pairs you "
#~ "check."
#~ msgstr ""
#~ "Cambia los tipos de `x` e `y` a otros elementos (por ejemplo, `f32`, "
#~ "`bool`, `i128`) para ver qu√© tipos puedes convertir. Prueba a convertir "
#~ "tipos peque√±os en tipos grandes y viceversa. Consulta la [documentaci√≥n "
#~ "de la biblioteca est√°ndar](https://doc.rust-lang.org/std/convert/trait."
#~ "From.html) para comprobar si se ha implementado `From<T>` en los pares "
#~ "que elijas."

#~ msgid "Arrays and `for` Loops"
#~ msgstr "Arrays y bucles`for`"

#~ msgid "We saw that an array can be declared like this:"
#~ msgstr "Hemos visto que un array se puede declarar de la siguiente manera:"

#~ msgid ""
#~ "You can print such an array by asking for its debug representation with "
#~ "`{:?}`:"
#~ msgstr ""
#~ "Puedes imprimir dicho array solicitando su representaci√≥n de depuraci√≥n "
#~ "con `{:?}`:"

#~ msgid ""
#~ "Rust lets you iterate over things like arrays and ranges using the `for` "
#~ "keyword:"
#~ msgstr ""
#~ "Rust te permite iterar sobre elementos como arrays y rangos usando la "
#~ "palabra clave `for`:"

#~ msgid "Bonus Question"
#~ msgstr "Pregunta Extra"

#~ msgid ""
#~ "Could you use `&[i32]` slices instead of hard-coded 3 √ó 3 matrices for "
#~ "your argument and return types? Something like `&[&[i32]]` for a two-"
#~ "dimensional slice-of-slices. Why or why not?"
#~ msgstr ""
#~ "¬øSe podr√≠an usar slices `&[i32]` en lugar de matrices de 3 √ó 3 "
#~ "predefinidas en el c√≥digo para tus argumentos y tipos de resultados "
#~ "devueltos? Por ejemplo, `&[&[i32]]` para un slice de slices de dos "
#~ "dimensiones. ¬øPor qu√©? ¬øPor qu√© no?"

#~ msgid ""
#~ "See the [`ndarray` crate](https://docs.rs/ndarray/) for a production "
#~ "quality implementation."
#~ msgstr ""
#~ "Consulta el [crate `ndarray`](https://docs.rs/ndarray/) para obtener una "
#~ "implementaci√≥n con calidad de producci√≥n."

#~ msgid ""
#~ "The solution and the answer to the bonus section are available in the  "
#~ "[Solution](solutions-morning.md#arrays-and-for-loops) section."
#~ msgstr ""
#~ "La soluci√≥n y la respuesta a la pregunta extra est√°n disponibles en la "
#~ "secci√≥n [soluciones](solutions-morning.md#arrays-and-for-loops)."

#~ msgid ""
#~ "The use of the reference `&array` within `for n in &array` is a subtle "
#~ "preview of issues of ownership that will come later in the afternoon."
#~ msgstr ""
#~ "El uso de la referencia `&array` dentro de `for n in &array` es una vista "
#~ "previa sutil de los problemas de propiedad que se tratar√°n m√°s tarde por "
#~ "la tarde."

#~ msgid "Without the `&`..."
#~ msgstr "Sin el `&`..."

#~ msgid ""
#~ "The loop would have been one that consumes the array.  This is a change "
#~ "[introduced in the 2021 Edition](https://doc.rust-lang.org/edition-guide/"
#~ "rust-2021/IntoIterator-for-arrays.html)."
#~ msgstr ""
#~ "El bucle habr√≠a sido uno que consume el array. Este es un cambio "
#~ "[introducido en la edici√≥n de 2021](https://doc.rust-lang.org/edition-"
#~ "guide/rust-2021/IntoIterator-for-arrays.html)."

#~ msgid ""
#~ "An implicit array copy would have occurred.  Since `i32` is a copy type, "
#~ "then `[i32; 3]` is also a copy type."
#~ msgstr ""
#~ "Se habr√≠a producido una copia impl√≠cita del array. Dado que `i32` es un "
#~ "tipo de copia, `[i32; 3]` tambi√©n es un tipo de copia."

#~ msgid ""
#~ "As we have seen, `if` is an expression in Rust. It is used to "
#~ "conditionally evaluate one of two blocks, but the blocks can have a value "
#~ "which then becomes the value of the `if` expression. Other control flow "
#~ "expressions work similarly in Rust."
#~ msgstr ""
#~ "Como hemos visto, `if` es una expresi√≥n de Rust. Se utiliza para realizar "
#~ "una evaluaci√≥n condicional de uno de los dos bloques, aunque estos pueden "
#~ "tener un valor que acaba convirti√©ndose en el valor de la expresi√≥n `if`. "
#~ "Otras expresiones del flujo de control funcionan de forma similar en Rust."

#~ msgid ""
#~ "The same rule is used for functions: the value of the function body is "
#~ "the return value:"
#~ msgstr ""
#~ "Se utiliza la misma regla para las funciones: el valor del cuerpo de la "
#~ "funci√≥n es el valor devuelto:"

#~ msgid ""
#~ "The point of this slide is to show that blocks have a type and value in "
#~ "Rust. "
#~ msgstr ""
#~ "El objetivo de esta diapositiva es mostrar que los bloques tienen un tipo "
#~ "y un valor en Rust. "

#~ msgid ""
#~ "The [`for` loop](https://doc.rust-lang.org/std/keyword.for.html) is "
#~ "closely related to the [`while let` loop](while-let-expressions.md). It "
#~ "will automatically call `into_iter()` on the expression and then iterate "
#~ "over it:"
#~ msgstr ""
#~ "El [bucle `for`](https://doc.rust-lang.org/std/keyword.for.html) est√° "
#~ "estrechamente relacionado con el [bucle `while let`](while-let-"
#~ "expressions.md). Llamar√° autom√°ticamente a `into_iter()` en la expresi√≥n "
#~ "y despu√©s iterar√° sobre ella:"

#~ msgid "You can use `break` and `continue` here as usual."
#~ msgstr "Aqu√≠ puedes usar `break` y `continue` como de costumbre."

#~ msgid "Index iteration is not a special syntax in Rust for just that case."
#~ msgstr ""
#~ "La iteraci√≥n de √≠ndices no es una sintaxis especial en Rust para ese caso."

#~ msgid "`(0..10)` is a range that implements an `Iterator` trait. "
#~ msgstr "`(0..10)` es un rango que implementa un `Iterator` trait."

#~ msgid ""
#~ "`step_by` is a method that returns another `Iterator` that skips every "
#~ "other element. "
#~ msgstr ""
#~ "`step_by` es un m√©todo que devuelve otro `Iterator` que salta cada otro "
#~ "elemento."

#~ msgid ""
#~ "Modify the elements in the vector and explain the compiler errors. Change "
#~ "vector `v` to be mutable and the for loop to `for x in v.iter_mut()`."
#~ msgstr ""
#~ "Modifica los elementos del vector y explica los errores del compilador. "
#~ "Cambia el vector `v` para que sea mutable y el bucle `for x in v."
#~ "iter_mut()`."

#~ msgid "`loop` expressions"
#~ msgstr "Expresiones `loop`"

#~ msgid ""
#~ "Finally, there is a [`loop` keyword](https://doc.rust-lang.org/reference/"
#~ "expressions/loop-expr.html#infinite-loops) which creates an endless loop."
#~ msgstr ""
#~ "Por √∫ltimo, la [palabra clave `loop`](https://doc.rust-lang.org/reference/"
#~ "expressions/loop-expr.html#infinite-loops) crea un bucle infinito."

#~ msgid "Here you must either `break` or `return` to stop the loop:"
#~ msgstr "Para detener el bucle, debes usar `break` o `return`:"

#~ msgid "Break the `loop` with a value (e.g. `break 8`) and print it out."
#~ msgstr ""
#~ "Interrumpe `loop` con un valor (por ejemplo, `break 8`) e impr√≠melo."

#~ msgid ""
#~ "Due to type inference the `i32` is optional. We will gradually show the "
#~ "types less and less as the course progresses."
#~ msgstr ""
#~ "Debido a la inferencia de tipos, `i32` es opcional. A medida que avance "
#~ "el curso, iremos mostrando cada vez menos los tipos."

#~ msgid ""
#~ "The following code tells the compiler to copy into a certain generic "
#~ "container without the code ever explicitly specifying the contained type, "
#~ "using `_` as a placeholder:"
#~ msgstr ""
#~ "El siguiente fragmento de c√≥digo le indica al compilador que copie en un "
#~ "determinado contenedor gen√©rico sin que el c√≥digo especifique "
#~ "expl√≠citamente el tipo contenido utilizando `_` como marcador de posici√≥n:"

#~ msgid ""
#~ "[`collect`](https://doc.rust-lang.org/stable/std/iter/trait.Iterator."
#~ "html#method.collect) relies on [`FromIterator`](https://doc.rust-lang.org/"
#~ "std/iter/trait.FromIterator.html), which [`HashSet`](https://doc.rust-"
#~ "lang.org/std/collections/struct.HashSet.html#impl-FromIterator%3CT%3E-for-"
#~ "HashSet%3CT,+S%3E) implements."
#~ msgstr ""
#~ "[`collect`](https://doc.rust-lang.org/stable/std/iter/trait.Iterator."
#~ "html#method.collect) se basa en [`FromIterator`](https://doc.rust-lang."
#~ "org/std/iter/trait.FromIterator.html), que implementa [`HashSet`](https://"
#~ "doc.rust-lang.org/std/collections/struct.HashSet.html#impl-"
#~ "FromIterator%3CT%3E-for-HashSet%3CT,+S%3E)."

#~ msgid "Static and Constant Variables"
#~ msgstr "Variables Est√°ticas y Constantes"

#~ msgid ""
#~ "The following code demonstrates why the compiler can't simply reuse "
#~ "memory locations when shadowing an immutable variable in a scope, even if "
#~ "the type does not change."
#~ msgstr ""
#~ "El siguiente fragmento de c√≥digo demuestra por qu√© el compilador no puede "
#~ "reutilizar ubicaciones de memoria cuando sombrea una variable inmutable "
#~ "en un √°mbito, incluso si el tipo no cambia."

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn generate_random_number() -> i32 {\n"
#~ "    // Implementation based on https://xkcd.com/221/\n"
#~ "    4  // Chosen by fair dice roll. Guaranteed to be random.\n"
#~ "}\n"
#~ "\n"
#~ "#[derive(Debug)]\n"
#~ "enum CoinFlip {\n"
#~ "    Heads,\n"
#~ "    Tails,\n"
#~ "}\n"
#~ "\n"
#~ "fn flip_coin() -> CoinFlip {\n"
#~ "    let random_number = generate_random_number();\n"
#~ "    if random_number % 2 == 0 {\n"
#~ "        return CoinFlip::Heads;\n"
#~ "    } else {\n"
#~ "        return CoinFlip::Tails;\n"
#~ "    }\n"
#~ "}\n"
#~ "\n"
#~ "fn main() {\n"
#~ "    println!(\"You got: {:?}\", flip_coin());\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn generate_random_number() -> i32 {\n"
#~ "    // Implementation based on https://xkcd.com/221/\n"
#~ "    4  // Chosen by fair dice roll. Guaranteed to be random.\n"
#~ "}\n"
#~ "\n"
#~ "#[derive(Debug)]\n"
#~ "enum CoinFlip {\n"
#~ "    Heads,\n"
#~ "    Tails,\n"
#~ "}\n"
#~ "\n"
#~ "fn flip_coin() -> CoinFlip {\n"
#~ "    let random_number = generate_random_number();\n"
#~ "    if random_number % 2 == 0 {\n"
#~ "        return CoinFlip::Heads;\n"
#~ "    } else {\n"
#~ "        return CoinFlip::Tails;\n"
#~ "    }\n"
#~ "}\n"
#~ "\n"
#~ "fn main() {\n"
#~ "    println!(\"You got: {:?}\", flip_coin());\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "This page offers an enum type `CoinFlip` with two variants `Heads` and "
#~ "`Tails`. You might note the namespace when using variants."
#~ msgstr ""
#~ "En esta p√°gina se ofrece el tipo de enumeraci√≥n `CoinFlip` (tirar moneda) "
#~ "con dos variantes: `Heads` (cara) y `Tails` (cruz). Puede que veas el "
#~ "espacio de nombres cuando utilices variantes."

#~ msgid "In both, associated functions are defined within an `impl` block."
#~ msgstr ""
#~ "En ambos casos, las funciones asociadas se definen en un bloque `impl`."

#~ msgid ""
#~ "You can define richer enums where the variants carry data. You can then "
#~ "use the `match` statement to extract the data from each variant:"
#~ msgstr ""
#~ "Puedes definir enumeraciones m√°s completas en las que las variantes "
#~ "contienen datos. Despu√©s, puedes usar la instrucci√≥n `match` para extraer "
#~ "los datos de cada variante:"

#~ msgid ""
#~ "The expression is matched against the patterns from top to bottom. There "
#~ "is no fall-through like in C or C++."
#~ msgstr ""
#~ "La expresi√≥n se coteja con los patrones de arriba abajo. No hay ning√∫n "
#~ "sistema de respaldo, como en C o C++."

#~ msgid ""
#~ "The match expression has a value. The value is the last expression in the "
#~ "match arm which was executed."
#~ msgstr ""
#~ "La expresi√≥n de coincidencia tiene un valor. El valor es la √∫ltima "
#~ "expresi√≥n en el brazo de coincidencia que se ha ejecutado."

#~ msgid ""
#~ "Starting from the top we look for what pattern matches the value then run "
#~ "the code following the arrow. Once we find a match, we stop. "
#~ msgstr ""
#~ "Empezando por la parte superior, buscaremos el patr√≥n que coincide con el "
#~ "valor y, a continuaci√≥n, ejecutaremos el fragmento de c√≥digo que sigue a "
#~ "la flecha. Cuando encontremos una coincidencia, pararemos. "

#~ msgid "`match` inspects a hidden discriminant field in the `enum`."
#~ msgstr "`match` inspecciona un campo discriminante oculto en `enum`."

#~ msgid ""
#~ "It is possible to retrieve the discriminant by calling `std::mem::"
#~ "discriminant()`"
#~ msgstr ""
#~ "Se puede obtener el discriminante llamando a `std::mem::discriminant()`."

#~ msgid ""
#~ "This is useful, for example, if implementing `PartialEq` for structs "
#~ "where comparing field values doesn't affect equality."
#~ msgstr ""
#~ "Esto resulta √∫til si, por ejemplo, se implementa `PartialEq` en "
#~ "estructuras en las que la comparaci√≥n de valores de campos no afecta a la "
#~ "igualdad."

#~ msgid ""
#~ "`WebEvent::Click { ... }` is not exactly the same as `WebEvent::"
#~ "Click(Click)` with a top level `struct Click { ... }`. The inlined "
#~ "version cannot implement traits, for example."
#~ msgstr ""
#~ "`WebEvent::Click { ... }` no es exactamente lo mismo que `WebEvent::"
#~ "Click(Click)` con un nivel superior `struct Click { ... }`. La versi√≥n "
#~ "insertada no puede implementar traits, por ejemplo."

#~ msgid ""
#~ "Rust enums are packed tightly, taking constraints due to alignment into "
#~ "account:"
#~ msgstr ""
#~ "Las enumeraciones de Rust son densamente empaquetadas, ya que tienen en "
#~ "cuenta las restricciones debidas a la alineaci√≥n:"

#~ msgid ""
#~ "Internally Rust is using a field (discriminant) to keep track of the enum "
#~ "variant."
#~ msgstr ""
#~ "Rust utiliza un campo (discriminante) de forma interna para hacer un "
#~ "seguimiento de la variante de enumeraci√≥n."

#~ msgid "Try out other types such as"
#~ msgstr "Prueba otros tipos, como"

#~ msgid "`dbg_size!(bool)`: size 1 bytes, align: 1 bytes,"
#~ msgstr "`dbg_size!(bool)`: tama√±o de 1 byte, alineaci√≥n de 1 byte,"

#~ msgid ""
#~ "`dbg_size!(Option<bool>)`: size 1 bytes, align: 1 bytes (niche "
#~ "optimization, see below),"
#~ msgstr ""
#~ "`dbg_size!(Option<bool>)`: tama√±o de 1 byte, alineaci√≥n de 1 byte "
#~ "(optimizaci√≥n de nichos, consulta m√°s abajo),"

#~ msgid ""
#~ "`dbg_size!(&i32)`: size 8 bytes, align: 8 bytes (on a 64-bit machine),"
#~ msgstr ""
#~ "`dbg_size!(&i32)`: tama√±o de 8 bytes, alineaci√≥n de 8 bytes (en una "
#~ "m√°quina de 64 bits),"

#~ msgid ""
#~ "`dbg_size!(Option<&i32>)`: size 8 bytes, align: 8 bytes (null pointer "
#~ "optimization, see below)."
#~ msgstr ""
#~ "`dbg_size!(Option<&i32>)`: tama√±o de 8 bytes, alineaci√≥n de 8 bytes "
#~ "(optimizaci√≥n del puntero nulo, consulta m√°s abajo)."

#~ msgid ""
#~ "Niche optimization: Rust will merge unused bit patterns for the enum "
#~ "discriminant."
#~ msgstr ""
#~ "Optimizaci√≥n de nichos: Rust combina los patrones de bits no utilizados "
#~ "para el discriminante de enumeraci√≥n."

#~ msgid ""
#~ "More complex example if you want to discuss what happens when we chain "
#~ "more than 256 `Option`s together."
#~ msgstr ""
#~ "Ejemplo m√°s complejo si quieres hablar de lo que pasa cuando encadenamos "
#~ "m√°s de 256 `Option`."

#~ msgid ""
#~ "Since 1.65, a similar [let-else](https://doc.rust-lang.org/rust-by-"
#~ "example/flow_control/let_else.html) construct allows to do a "
#~ "destructuring assignment, or if it fails, execute a block which is "
#~ "required to abort normal control flow (with `panic`/`return`/`break`/"
#~ "`continue`):"
#~ msgstr ""
#~ "A partir de la versi√≥n 1.65, una construcci√≥n [let-else](https://doc.rust-"
#~ "lang.org/rust-by-example/flow_control/let_else.html) similar permite "
#~ "realizar una tarea de desestructuraci√≥n o, si falla, ejecutar un bloque "
#~ "necesario para anular el flujo de control normal (con `panic`/`return`/"
#~ "`break`/`continue`)::"

#~ msgid ""
#~ "The [`match` keyword](https://doc.rust-lang.org/reference/expressions/"
#~ "match-expr.html) is used to match a value against one or more patterns. "
#~ "In that sense, it works like a series of `if let` expressions:"
#~ msgstr ""
#~ "La \\[palabra clave `match`\\][`match` keyword](https://doc.rust-lang.org/"
#~ "reference/expressions/match-expr.html) se usa para comparar un valor con "
#~ "uno o varios patrones. En ese sentido, funciona como una serie de "
#~ "expresiones `if let`:"

#~ msgid "Save the match expression to a variable and print it out."
#~ msgstr "Guarda la expresi√≥n de coincidencia en una variable e impr√≠mela."

#~ msgid "Remove `.as_deref()` and explain the error."
#~ msgstr "Elimina `.as_deref()` y explica el error."

#~ msgid ""
#~ "`std::env::args().next()` returns an `Option<String>`, but we cannot "
#~ "match against `String`."
#~ msgstr ""
#~ "`std::env::args().next()` devuelve `Option<String>`, pero no podemos "
#~ "encontrar coincidencias con `String`."

#~ msgid ""
#~ "`as_deref()` transforms an `Option<T>` to `Option<&T::Target>`. In our "
#~ "case, this turns `Option<String>` into `Option<&str>`."
#~ msgstr ""
#~ "`as_deref()` transforma `Option<T>` en `Option<&T::Target>`. En nuestro "
#~ "caso, esto convierte `Option<String>` en `Option<&str>`."

#~ msgid ""
#~ "We can now use pattern matching to match against the `&str` inside "
#~ "`Option`."
#~ msgstr ""
#~ "Ahora podemos usar la coincidencia de patrones para encontrar "
#~ "coincidencias con `&str` dentro de `Option`."

#~ msgid "The `_` pattern is a wildcard pattern which matches any value."
#~ msgstr "`_` es un patr√≥n comod√≠n que coincide con cualquier valor."

#~ msgid ""
#~ "It can be useful to show how binding works, by for instance replacing a "
#~ "wildcard character with a variable, or removing the quotes around `q`."
#~ msgstr ""
#~ "Puede ser √∫til para mostrar c√≥mo funciona un enlace, por ejemplo, "
#~ "cambiando un car√°cter comod√≠n por una variable o quitando las comillas "
#~ "alrededor de `q`. "

#~ msgid "You can demonstrate matching on a reference."
#~ msgstr "Puedes mostrar la coincidencia con una referencia."

#~ msgid ""
#~ "This might be a good time to bring up the concept of irrefutable "
#~ "patterns, as the term can show up in error messages."
#~ msgstr ""
#~ "Este puede ser un buen momento para mencionar el concepto de patrones "
#~ "irrefutables, ya que el t√©rmino puede aparecer en mensajes de error."

#~ msgid "You can also destructure `structs`:"
#~ msgstr "Tambi√©n puedes desestructurar `structs`:"

#~ msgid ""
#~ "Destructuring of slices of unknown length also works with patterns of "
#~ "fixed length."
#~ msgstr ""
#~ "La desestructuraci√≥n de slices de longitud desconocida tambi√©n funciona "
#~ "con patrones de longitud fija."

#~ msgid ""
#~ "When matching, you can add a _guard_ to a pattern. This is an arbitrary "
#~ "Boolean expression which will be executed if the pattern matches:"
#~ msgstr ""
#~ "Al establecer coincidencias, puedes a√±adir un _guardia_ a un patr√≥n. Se "
#~ "trata de una expresi√≥n booleana arbitraria que se ejecutar√° si el patr√≥n "
#~ "coincide:"

#~ msgid ""
#~ "You can use the variables defined in the pattern in your if expression."
#~ msgstr ""
#~ "Puedes usar las variables definidas en el patr√≥n en tu expresi√≥n if."

#~ msgid "Day 1: Afternoon Exercises"
#~ msgstr "D√≠a 1: Ejercicios de la Tarde"

#~ msgid "We will look at two things:"
#~ msgstr "Veremos todas estas cosas:"

#~ msgid "The Luhn algorithm,"
#~ msgstr "Algoritmo de Luhn"

#~ msgid "An exercise on pattern matching."
#~ msgstr "Un ejercicio sobre coincidencia de patrones."

#~ msgid ""
#~ "Copy the code below to <https://play.rust-lang.org/> and implement the "
#~ "function."
#~ msgstr ""
#~ "Copia el siguiente fragmento de c√≥digo en <https://play.rust-lang.org/> e "
#~ "implementa la funci√≥n:"

#~ msgid ""
#~ "Try to solve the problem the \"simple\" way first, using `for` loops and "
#~ "integers. Then, revisit the solution and try to implement it with "
#~ "iterators."
#~ msgstr ""
#~ "Intenta resolver el problema de la forma \"sencilla\" primero, usando "
#~ "bucles `for` e enteros. Luego, vuelve a la soluci√≥n e intenta "
#~ "implementarla con iteradores."

#~ msgid ""
#~ "Memory management: stack vs heap, manual memory management, scope-based "
#~ "memory management, and garbage collection."
#~ msgstr ""
#~ "Gesti√≥n de la memoria: _stack_ (pila) vs _heap_ (mont√≠culo), gesti√≥n "
#~ "manual de la memoria, gesti√≥n de la memoria basada en √°mbitos y _garbage "
#~ "collector_ (recolecci√≥n de memoria residual)."

#~ msgid ""
#~ "Ownership: move semantics, copying and cloning, borrowing, and lifetimes."
#~ msgstr ""
#~ "_Ownership_ (Propiedad): sem√°ntica de movimiento, copiar, clonar, "
#~ "_borrowing_ (pr√©stamos) y _lifetimes_ (tiempos de vida)."

#~ msgid "Structs and methods."
#~ msgstr "Estructuras (_Structs_) y m√©todos."

#~ msgid ""
#~ "The Standard Library: `String`, `Option` and `Result`, `Vec`, `HashMap`, "
#~ "`Rc` and `Arc`."
#~ msgstr ""
#~ "La Biblioteca Est√°ndar (_Standard Library_): `String`, `Option` y "
#~ "`Result`, `Vec`, `HashMap`, `Rc` y `Arc`."

#~ msgid "Modules: visibility, paths, and filesystem hierarchy."
#~ msgstr "M√≥dulos: visibilidad, rutas y jerarqu√≠a del sistema de archivos."

#~ msgid "First, let's refresh how memory management works."
#~ msgstr "En primer lugar, veamos c√≥mo funciona la gesti√≥n de la memoria."

#~ msgid "The Stack vs The Heap"
#~ msgstr "_Stack_ (Pila) vs _Heap_ (Mont√≠culo)"

#~ msgid "Stack and Heap Example"
#~ msgstr "Ejemplo de _Stack_ y de _Heap_"

#~ msgid "You allocate and deallocate heap memory yourself."
#~ msgstr "Eres t√∫ quien asigna y desasigna la memoria del _heap_."

#~ msgid ""
#~ "If not done with care, this can lead to crashes, bugs, security "
#~ "vulnerabilities, and memory leaks."
#~ msgstr ""
#~ "Si no lo haces con cuidado, podr√≠an producirse fallos, errores, "
#~ "vulnerabilidades de seguridad y p√©rdidas de memoria."

#~ msgid "C Example"
#~ msgstr "Ejemplo en C"

#~ msgid "You must call `free` on every pointer you allocate with `malloc`:"
#~ msgstr "Debes llamar a `free` en cada puntero que asignes con `malloc`:"

#~ msgid ""
#~ "Memory is leaked if the function returns early between `malloc` and "
#~ "`free`: the pointer is lost and we cannot deallocate the memory. Worse, "
#~ "freeing the pointer twice, or accessing a freed pointer can lead to "
#~ "exploitable security vulnerabilities."
#~ msgstr ""
#~ "La memoria se pierde si la funci√≥n devuelve un resultado antes de tiempo "
#~ "entre `malloc` y `free`: el puntero se pierde y no podemos anular la "
#~ "asignaci√≥n de la memoria. Peor a√∫n, si se libera el puntero dos veces o "
#~ "si se accede a uno liberado, pueden producirse vulnerabilidades de "
#~ "seguridad de las que otros podr√≠an aprovecharse."

#~ msgid ""
#~ "Constructors and destructors let you hook into the lifetime of an object."
#~ msgstr ""
#~ "Los constructores y destructores permiten acceder al tiempo de vida de un "
#~ "objeto."

#~ msgid ""
#~ "By wrapping a pointer in an object, you can free memory when the object "
#~ "is destroyed. The compiler guarantees that this happens, even if an "
#~ "exception is raised."
#~ msgstr ""
#~ "Al envolver un puntero en un objeto, puedes liberar memoria cuando el "
#~ "objeto se destruya. El compilador asegura que esto ocurra, aunque se "
#~ "genere una excepci√≥n."

#~ msgid ""
#~ "This is often called _resource acquisition is initialization_ (RAII) and "
#~ "gives you smart pointers."
#~ msgstr ""
#~ "A menudo, significa que la _adquisici√≥n de recursos es la inicializaci√≥n_ "
#~ "(RAII) y te proporciona punteros inteligentes."

#~ msgid ""
#~ "```c++\n"
#~ "void say_hello(std::unique_ptr<Person> person) {\n"
#~ "  std::cout << \"Hello \" << person->name << std::endl;\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```c++\n"
#~ "void say_hello(std::unique_ptr<Person> person) {\n"
#~ "  std::cout << \"Hola \" << person->name << std::endl;\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "The `std::unique_ptr` object is allocated on the stack, and points to "
#~ "memory allocated on the heap."
#~ msgstr ""
#~ "El objeto `std::unique_ptr` se reserva en el _stack_ y apunta a la "
#~ "memoria asignada en el _heap_."

#~ msgid ""
#~ "At the end of `say_hello`, the `std::unique_ptr` destructor will run."
#~ msgstr ""
#~ "Al final de `say_hello`, se ejecuta el destructor `std::unique_ptr`."

#~ msgid "The destructor frees the `Person` object it points to."
#~ msgstr "El destructor libera el objeto `Person` al que apunta."

#~ msgid ""
#~ "Special move constructors are used when passing ownership to a function:"
#~ msgstr ""
#~ "Los constructores de movimiento especiales se utilizan cuando se pasa el "
#~ "_ownership_ a una funci√≥n:"

#~ msgid ""
#~ "An alternative to manual and scope-based memory management is automatic "
#~ "memory management:"
#~ msgstr ""
#~ "Una alternativa a la gesti√≥n manual de la memoria basada en el √°mbito es "
#~ "la gesti√≥n autom√°tica de la memoria:"

#~ msgid "The programmer never allocates or deallocates memory explicitly."
#~ msgstr ""
#~ "El programador nunca asigna ni desasigna la memoria de forma expl√≠cita."

#~ msgid ""
#~ "A garbage collector finds unused memory and deallocates it for the "
#~ "programmer."
#~ msgstr ""
#~ "Un _garbage collector_ (recolector de memoria residual) encuentra la que "
#~ "no se utiliza y la desasigna para el programador."

#~ msgid "Java Example"
#~ msgstr "Ejemplo en Java"

#~ msgid "The `person` object is not deallocated after `sayHello` returns:"
#~ msgstr ""
#~ "El objeto `person` no se libera despu√©s de que `sayHello` devuelva el "
#~ "siguiente resultado:"

#~ msgid ""
#~ "```java\n"
#~ "void sayHello(Person person) {\n"
#~ "  System.out.println(\"Hello \" + person.getName());\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```java\n"
#~ "void sayHello(Person person) {\n"
#~ "  System.out.println(\"Hola \" + person.getName());\n"
#~ "}\n"
#~ "```"

#~ msgid "Memory Management in Rust"
#~ msgstr "Gesti√≥n de la Memoria en Rust"

#~ msgid "Memory management in Rust is a mix:"
#~ msgstr "La gesti√≥n de la memoria en Rust es una mezcla:"

#~ msgid "Safe and correct like Java, but without a garbage collector."
#~ msgstr "Segura y correcta como Java, pero sin _garbage collector_."

#~ msgid "Scope-based like C++, but the compiler enforces full adherence."
#~ msgstr ""
#~ "Est√° basada en el √°mbito, como C++, pero el compilador cumple con todas "
#~ "las normas."

#~ msgid ""
#~ "A Rust user can choose the right abstraction for the situation, some even "
#~ "have no cost at runtime like C."
#~ msgstr ""
#~ "Un usuario de Rust puede elegir la abstracci√≥n adecuada para cada "
#~ "situaci√≥n, algunas ni siquiera tienen coste en _runtime_, como C."

#~ msgid "Rust achieves this by modeling _ownership_ explicitly."
#~ msgstr "Rust lo consigue modelando expl√≠citamente el _ownership_."

#~ msgid ""
#~ "If asked how at this point, you can mention that in Rust this is usually "
#~ "handled by RAII wrapper types such as [Box](https://doc.rust-lang.org/std/"
#~ "boxed/struct.Box.html), [Vec](https://doc.rust-lang.org/std/vec/struct."
#~ "Vec.html), [Rc](https://doc.rust-lang.org/std/rc/struct.Rc.html), or [Arc]"
#~ "(https://doc.rust-lang.org/std/sync/struct.Arc.html). These encapsulate "
#~ "ownership and memory allocation via various means, and prevent the "
#~ "potential errors in C."
#~ msgstr ""
#~ "Si en este momento te preguntan c√≥mo, puedes mencionar que en Rust se "
#~ "suele gestionar con tipos de envoltorios RAII, como [Box](https://doc."
#~ "rust-lang.org/std/boxed/struct.Box.html), [Vec]https://doc.rust-lang.org/"
#~ "std/vec/struct.Vec.html), [Rc](https://doc.rust-lang.org/std/rc/struct.Rc."
#~ "html) o [Arc](https://doc.rust-lang.org/std/sync/struct.Arc.html). Estos "
#~ "encapsulan el _ownership_ y la asignaci√≥n de memoria a trav√©s de diversos "
#~ "medios, evitando as√≠ los posibles errores en C."

#~ msgid ""
#~ "You may be asked about destructors here, the [Drop](https://doc.rust-lang."
#~ "org/std/ops/trait.Drop.html) trait is the Rust equivalent."
#~ msgstr ""
#~ "Puede que aqu√≠ te pregunten por los destructores, as√≠ que debes saber que "
#~ "el trait [Drop](https://doc.rust-lang.org/std/ops/trait.Drop.html) es el "
#~ "equivalente en Rust."

#~ msgid "A destructor can run here to free up resources."
#~ msgstr "Se puede ejecutar un destructor para liberar recursos."

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    let s1: String = String::from(\"Hello!\");\n"
#~ "    let s2: String = s1;\n"
#~ "    println!(\"s2: {s2}\");\n"
#~ "    // println!(\"s1: {s1}\");\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    let s1: String = String::from(\"Hola!\");\n"
#~ "    let s2: String = s1;\n"
#~ "    println!(\"s2: {s2}\");\n"
#~ "    // println!(\"s1: {s1}\");\n"
#~ "}\n"
#~ "```"

#~ msgid "There is always _exactly_ one variable binding which owns a value."
#~ msgstr "Siempre hay _exactamente_ un enlace a variable que posee un valor."

#~ msgid "The heap data from `s1` is reused for `s2`."
#~ msgstr "Los datos del _heap_ de `s1` se reutilizan en `s2`."

#~ msgid ""
#~ "When `s1` goes out of scope, nothing happens (it has been moved from)."
#~ msgstr "Cuando `s1` sale del √°mbito, no ocurre nada (ha sido movida)."

#~ msgid ""
#~ "```c++\n"
#~ "std::string s1 = \"Cpp\";\n"
#~ "std::string s2 = s1;  // Duplicate the data in s1.\n"
#~ "```"
#~ msgstr ""
#~ "```c++\n"
#~ "std::string s1 = \"Cpp\";\n"
#~ "std::string s2 = s1;  // Duplicar datos en s1.\n"
#~ "```"

#~ msgid ""
#~ "```bob\n"
#~ " Stack                             Heap\n"
#~ ".- - - - - - - - - - - - - -.     .- - - - - - - - - - - -.\n"
#~ ":                           :     :                       :\n"
#~ ":    s1                     :     :                       :\n"
#~ ":   +-----------+-------+   :     :   +----+----+----+    :\n"
#~ ":   | ptr       |   o---+---+--+--+-->| C  | p  | p  |    :\n"
#~ ":   | len       |     3 |   :     :   +----+----+----+    :\n"
#~ ":   | capacity  |     3 |   :     :                       :\n"
#~ ":   +-----------+-------+   :     :                       :\n"
#~ ":                           :     `- - - - - - - - - - - -'\n"
#~ "`- - - - - - - - - - - - - -'\n"
#~ "```"
#~ msgstr ""
#~ "```bob\n"
#~ " _Stack_                          _Heap_\n"
#~ ".- - - - - - - - - - - - - -.     .- - - - - - - - - - - -.\n"
#~ ":                           :     :                       :\n"
#~ ":    s1                     :     :                       :\n"
#~ ":   +-----------+-------+   :     :   +----+----+----+    :\n"
#~ ":   | ptr       |   o---+---+--+--+-->| C  | p  | p  |    :\n"
#~ ":   | len       |     3 |   :     :   +----+----+----+    :\n"
#~ ":   | capacity  |     3 |   :     :                       :\n"
#~ ":   +-----------+-------+   :     :                       :\n"
#~ ":                           :     `- - - - - - - - - - - -'\n"
#~ "`- - - - - - - - - - - - - -'\n"
#~ "```"

#~ msgid ""
#~ "```bob\n"
#~ " Stack                             Heap\n"
#~ ".- - - - - - - - - - - - - -.     .- - - - - - - - - - - -.\n"
#~ ":                           :     :                       :\n"
#~ ":    s1                     :     :                       :\n"
#~ ":   +-----------+-------+   :     :   +----+----+----+    :\n"
#~ ":   | ptr       |   o---+---+--+--+-->| C  | p  | p  |    :\n"
#~ ":   | len       |     3 |   :     :   +----+----+----+    :\n"
#~ ":   | capacity  |     3 |   :     :                       :\n"
#~ ":   +-----------+-------+   :     :                       :\n"
#~ ":                           :     :                       :\n"
#~ ":    s2                     :     :                       :\n"
#~ ":   +-----------+-------+   :     :   +----+----+----+    :\n"
#~ ":   | ptr       |   o---+---+-----+-->| C  | p  | p  |    :\n"
#~ ":   | len       |     3 |   :     :   +----+----+----+    :\n"
#~ ":   | capacity  |     3 |   :     :                       :\n"
#~ ":   +-----------+-------+   :     :                       :\n"
#~ ":                           :     `- - - - - - - - - - - -'\n"
#~ "`- - - - - - - - - - - - - -'\n"
#~ "```"
#~ msgstr ""
#~ "```bob\n"
#~ " _Stack_                          _Heap_\n"
#~ ".- - - - - - - - - - - - - -.     .- - - - - - - - - - - -.\n"
#~ ":                           :     :                       :\n"
#~ ":    s1                     :     :                       :\n"
#~ ":   +-----------+-------+   :     :   +----+----+----+    :\n"
#~ ":   | ptr       |   o---+---+--+--+-->| C  | p  | p  |    :\n"
#~ ":   | len       |     3 |   :     :   +----+----+----+    :\n"
#~ ":   | capacity  |     3 |   :     :                       :\n"
#~ ":   +-----------+-------+   :     :                       :\n"
#~ ":                           :     :                       :\n"
#~ ":    s2                     :     :                       :\n"
#~ ":   +-----------+-------+   :     :   +----+----+----+    :\n"
#~ ":   | ptr       |   o---+---+-----+-->| C  | p  | p  |    :\n"
#~ ":   | len       |     3 |   :     :   +----+----+----+    :\n"
#~ ":   | capacity  |     3 |   :     :                       :\n"
#~ ":   +-----------+-------+   :     :                       :\n"
#~ ":                           :     `- - - - - - - - - - - -'\n"
#~ "`- - - - - - - - - - - - - -'\n"
#~ "```"

#~ msgid ""
#~ "If students ask about `derive`, it is sufficient to say that this is a "
#~ "way to generate code in Rust at compile time. In this case the default "
#~ "implementations of `Copy` and `Clone` traits are generated."
#~ msgstr ""
#~ "Si los alumnos preguntan por `derive`, basta con decir que se trata de "
#~ "una forma de generar c√≥digo en Rust durante el tiempo de compilaci√≥n. En "
#~ "este caso, se generan las implementaciones predeterminadas de los traits "
#~ "`Copy` y `Clone`."

#~ msgid "A borrowed value has a _lifetime_:"
#~ msgstr "Un valor que se toma prestado tiene un _tiempo de vida_:"

#~ msgid ""
#~ "The lifetime can be implicit: `add(p1: &Point, p2: &Point) -> Point`."
#~ msgstr ""
#~ "El tiempo de vida puede ser impl√≠cito: `add(p1: &Point, p2: &Point) -> "
#~ "Point`."

#~ msgid "Lifetimes can also be explicit: `&'a Point`, `&'document str`."
#~ msgstr ""
#~ "Tiempo de vida tambi√©n puede ser expl√≠cito: `&'a Point`, `&'document str`."

#~ msgid ""
#~ "Read `&'a Point` as \"a borrowed `Point` which is valid for at least the "
#~ "lifetime `a`\"."
#~ msgstr ""
#~ "Lee `&'a Point` como \"un `Point` prestado que es v√°lido al menos durante "
#~ "el tiempo de vida de `a`\"."

#~ msgid ""
#~ "Lifetimes are always inferred by the compiler: you cannot assign a "
#~ "lifetime yourself."
#~ msgstr ""
#~ "El compilador siempre infiere el tiempo de vida: no puedes asignarlos t√∫."

#~ msgid ""
#~ "In addition to borrowing its arguments, a function can return a borrowed "
#~ "value:"
#~ msgstr ""
#~ "Adem√°s de tomar prestados sus argumentos, una funci√≥n puede devolver un "
#~ "valor que se ha tomado prestado:"

#~ msgid "`'a` is a generic parameter, it is inferred by the compiler."
#~ msgstr "`'a` es un par√°metro gen√©rico que infiere el compilador."

#~ msgid "Lifetimes start with `'` and `'a` is a typical default name."
#~ msgstr ""
#~ "Los tiempos de vida comienzan por `'` y `'a` suele ser un nombre "
#~ "predeterminado habitual."

#~ msgid ""
#~ "The _at least_ part is important when parameters are in different scopes."
#~ msgstr ""
#~ "La parte _al menos_ es importante cuando los par√°metros est√°n en √°mbitos "
#~ "distintos."

#~ msgid ""
#~ "Move the declaration of `p2` and `p3` into a new scope (`{ ... }`), "
#~ "resulting in the following code:"
#~ msgstr ""
#~ "Mueve la declaraci√≥n de `p2` y `p3` a un nuevo √°mbito (`{ ... }`), lo que "
#~ "dar√° como resultado el siguiente c√≥digo:"

#~ msgid "Note how this does not compile since `p3` outlives `p2`."
#~ msgstr ""
#~ "Ten en cuenta que no se puede compilar, ya que `p3` dura m√°s tiempo que "
#~ "`p2`."

#~ msgid ""
#~ "Reset the workspace and change the function signature to `fn "
#~ "left_most<'a, 'b>(p1: &'a Point, p2: &'a Point) -> &'b Point`. This will "
#~ "not compile because the relationship between the lifetimes `'a` and `'b` "
#~ "is unclear."
#~ msgstr ""
#~ "Restablece el espacio de trabajo y cambia la firma de la funci√≥n a `fn "
#~ "left_most<'a, 'b>(p1: &'a Point, p2: &'a Point) -> &'b Point`. No se "
#~ "compilar√° porque la relaci√≥n entre los tiempos de vida de `'a` y `'b` no "
#~ "est√° clara."

#~ msgid "Another way to explain it:"
#~ msgstr "Otra forma de explicarlo:"

#~ msgid ""
#~ "Two references to two values are borrowed by a function and the function "
#~ "returns another reference."
#~ msgstr ""
#~ "Una funci√≥n toma prestadas dos referencias a dos valores y devuelve otra "
#~ "referencia."

#~ msgid ""
#~ "It must have come from one of those two inputs (or from a global "
#~ "variable)."
#~ msgstr ""
#~ "Esta debe proceder de una de esas dos entradas (o de una variable global)."

#~ msgid ""
#~ "Which one is it? The compiler needs to know, so at the call site the "
#~ "returned reference is not used for longer than a variable from where the "
#~ "reference came from."
#~ msgstr ""
#~ "¬øCu√°l de ellas es? El compilador debe saberlo para que, en el sitio de la "
#~ "llamada, la referencia devuelta no se use durante m√°s tiempo que una "
#~ "variable de la que procede la referencia."

#~ msgid ""
#~ "Methods are defined in an `impl` block, which we will see in following "
#~ "slides."
#~ msgstr ""
#~ "Los m√©todos est√°n definidos en un bloque `impl` que veremos en las "
#~ "siguientes diapositivas."

#~ msgid ""
#~ "The `new` function could be written using `Self` as a type, as it is "
#~ "interchangeable with the struct type name"
#~ msgstr ""
#~ "La funci√≥n `new` se podr√≠a escribir utilizando `Self` como tipo, ya que "
#~ "es intercambiable con el nombre de tipo de estructura."

#~ msgid ""
#~ "Implement the `Default` trait for the struct. Define some fields and use "
#~ "the default values for the other fields."
#~ msgstr ""
#~ "Implementa el trait `Default` en la estructura. Define algunos campos y "
#~ "usa los valores predeterminados para el resto de los campos."

#~ msgid "Methods are defined in the `impl` block."
#~ msgstr "Los m√©todos se definen en el bloque `impl`."

#~ msgid ""
#~ "Use struct update syntax to define a new structure using `peter`. Note "
#~ "that the variable `peter` will no longer be accessible afterwards."
#~ msgstr ""
#~ "Utiliza la sintaxis de actualizaci√≥n de estructuras para definir una "
#~ "estructura nueva con `peter`. Ten en cuenta que, despu√©s, ya no podr√°s "
#~ "acceder a la variable `peter`."

#~ msgid ""
#~ "Use `{:#?}` when printing structs to request the `Debug` representation."
#~ msgstr ""
#~ "Utiliza `{:#?}` al imprimir estructuras para solicitar la representaci√≥n "
#~ "de `Debug`."

#~ msgid "We describe the distinction between method receivers next."
#~ msgstr ""
#~ "A continuaci√≥n, se describe la diferencia entre receptores de m√©todos."

#~ msgid ""
#~ "Consider emphasizing \"shared and immutable\" and \"unique and mutable\". "
#~ "These constraints always come together in Rust due to borrow checker "
#~ "rules, and `self` is no exception. It isn't possible to reference a "
#~ "struct from multiple locations and call a mutating (`&mut self`) method "
#~ "on it."
#~ msgstr ""
#~ "Considera recalcar los conceptos \"compartido e inmutable\" y \"√∫nico y "
#~ "mutable\". Estas restricciones siempre vienen juntas en Rust debido a las "
#~ "reglas del _borrow checker_, y `self` no es una excepci√≥n. No es posible "
#~ "referenciar una estructura desde varias ubicaciones y llamar a un m√©todo "
#~ "mutable (`&mut self`) en ella."

#~ msgid "All four methods here use a different method receiver."
#~ msgstr ""
#~ "Cada uno de estos cuatro m√©todos utilizan un receptor de m√©todo distinto."

#~ msgid ""
#~ "You can point out how that changes what the function can do with the "
#~ "variable values and if/how it can be used again in `main`."
#~ msgstr ""
#~ "Puedes indicar c√≥mo eso cambia lo que la funci√≥n puede hacer con los "
#~ "valores de las variables y si se puede utilizar de nuevo en `main` y, en "
#~ "caso afirmativo, c√≥mo."

#~ msgid ""
#~ "You can showcase the error that appears when trying to call `finish` "
#~ "twice."
#~ msgstr ""
#~ "Puedes mostrar el error que aparece al intentar llamar a `finish` dos "
#~ "veces."

#~ msgid ""
#~ "Note that although the method receivers are different, the non-static "
#~ "functions are called the same way in the main body. Rust enables "
#~ "automatic referencing and dereferencing when calling methods. Rust "
#~ "automatically adds in the `&`, `*`, `muts` so that that object matches "
#~ "the method signature."
#~ msgstr ""
#~ "Ten en cuenta que, aunque los receptores de los m√©todos sean diferentes, "
#~ "las funciones no est√°ticas se llaman del mismo modo en el cuerpo "
#~ "principal. Rust habilita la referenciaci√≥n y desreferenciaci√≥n "
#~ "autom√°ticas al llamar a los m√©todos. Adem√°s, a√±ade autom√°ticamente los "
#~ "caracteres `&`, `*` y `muts` para que el objeto coincida con la firma del "
#~ "m√©todo."

#~ msgid ""
#~ "You might point out that `print_laps` is using a vector that is iterated "
#~ "over. We describe vectors in more detail in the afternoon. "
#~ msgstr ""
#~ "Podr√≠as mencionar que `print_laps` est√° usando un vector sobre el que se "
#~ "itera. Describiremos los vectores con m√°s detalle por la tarde. "

#~ msgid "Day 2: Morning Exercises"
#~ msgstr "D√≠a 2: Ejercicios de la Ma√±ana"

#~ msgid "We will look at implementing methods in two contexts:"
#~ msgstr "Veremos la implementaci√≥n de m√©todos en dos contextos:"

#~ msgid "Storing books and querying the collection"
#~ msgstr "Almacenar libros y consultar la colecci√≥n"

#~ msgid "Keeping track of health statistics for patients"
#~ msgstr "Hacer seguimiento de las estad√≠sticas de salud de pacientes"

#~ msgid ""
#~ "We will learn much more about structs and the `Vec<T>` type tomorrow. For "
#~ "now, you just need to know part of its API:"
#~ msgstr ""
#~ "Ma√±ana conoceremos mucho mejor _structs_ y el tipo `Vec<T>`. Por ahora, "
#~ "solo debes conocer parte de su API:"

#~ msgid ""
#~ "Use this to model a library's book collection. Copy the code below to "
#~ "<https://play.rust-lang.org/> and update the types to make it compile:"
#~ msgstr ""
#~ "Crea un modelo de la colecci√≥n de libros de una biblioteca con esta "
#~ "opci√≥n. Copia el c√≥digo que aparece abajo en <https://play.rust-lang.org/"
#~ "> y actualiza los tipos para que compile:"

#~ msgid "[Solution](solutions-afternoon.md#designing-a-library)"
#~ msgstr "[Soluciones](solutions-afternoon.md#designing-a-library)"

#~ msgid "The common vocabulary types include:"
#~ msgstr ""
#~ "Entre los tipos de vocabulario m√°s habituales se incluyen los siguientes:"

#~ msgid ""
#~ "[`Option` and `Result`](std/option-result.md) types: used for optional "
#~ "values and [error handling](error-handling.md)."
#~ msgstr ""
#~ "Tipos [`Option` y `Result`](std/option-result.md): se utilizan para "
#~ "valores opcionales y [gesti√≥n de errores](error-handling.md)."

#~ msgid ""
#~ "[`String`](std/string.md): the default string type used for owned data."
#~ msgstr ""
#~ "[`String`](std/string.md): el tipo de cadena predeterminado que se usa "
#~ "para los datos propios."

#~ msgid "[`Vec`](std/vec.md): a standard extensible vector."
#~ msgstr "[`Vec`](std/vec.md): un vector est√°ndar extensible."

#~ msgid ""
#~ "[`HashMap`](std/hashmap.md): a hash map type with a configurable hashing "
#~ "algorithm."
#~ msgstr ""
#~ "[`HashMap`](std/hashmap.md): un mapa hash con un algoritmo hash "
#~ "configurable."

#~ msgid "[`Box`](std/box.md): an owned pointer for heap-allocated data."
#~ msgstr ""
#~ "[`Box`](std/box.md): un puntero propio para datos ubicados en el _heap_."

#~ msgid ""
#~ "[`Rc`](std/rc.md): a shared reference-counted pointer for heap-allocated "
#~ "data."
#~ msgstr ""
#~ "[`Rc`](std/rc.md): un puntero compartido de conteo de referencias para "
#~ "datos asignados a _heap_."

#~ msgid "`Option` and `Result`"
#~ msgstr "`Option` y `Result`"

#~ msgid "The types represent optional data:"
#~ msgstr "Los tipos representan datos opcionales:"

#~ msgid "`Option<&T>` has zero space overhead compared to `&T`."
#~ msgstr "`Option<&T>` no usa espacio adicional en comparaci√≥n con `&T`."

#~ msgid "`binary_search` returns `Result<usize, usize>`."
#~ msgstr "`binary_search` devuelve `Result<usize, usize>`."

#~ msgid "If found, `Result::Ok` holds the index where the element is found."
#~ msgstr ""
#~ "Si se encuentra, `Result::Ok` contiene el √≠ndice donde se halla el "
#~ "elemento."

#~ msgid ""
#~ "Otherwise, `Result::Err` contains the index where such an element should "
#~ "be inserted."
#~ msgstr ""
#~ "De lo contrario, `Result::Err` contendr√° el √≠ndice donde se debe insertar "
#~ "dicho elemento."

#~ msgid ""
#~ "Show iterating over a vector and mutating the value: `for e in &mut v "
#~ "{ *e += 50; }`"
#~ msgstr ""
#~ "Muestra la iteraci√≥n sobre un vector y la mutaci√≥n del valor: `for e in "
#~ "&mut v { *e += 50; }`."

#~ msgid ""
#~ "```bob\n"
#~ " Stack                     Heap\n"
#~ ".- - - - - - -.     .- - - - - - -.\n"
#~ ":             :     :             :\n"
#~ ":    five     :     :             :\n"
#~ ":   +-----+   :     :   +-----+   :\n"
#~ ":   | o---|---+-----+-->|  5  |   :\n"
#~ ":   +-----+   :     :   +-----+   :\n"
#~ ":             :     :             :\n"
#~ ":             :     :             :\n"
#~ "`- - - - - - -'     `- - - - - - -'\n"
#~ "```"
#~ msgstr ""
#~ "```bob\n"
#~ " _Stack_            _Heap_\n"
#~ ".- - - - - - -.     .- - - - - - -.\n"
#~ ":             :     :             :\n"
#~ ":    five     :     :             :\n"
#~ ":   +-----+   :     :   +-----+   :\n"
#~ ":   | o---|---+-----+-->|  5  |   :\n"
#~ ":   +-----+   :     :   +-----+   :\n"
#~ ":             :     :             :\n"
#~ ":             :     :             :\n"
#~ "`- - - - - - -'     `- - - - - - -'\n"
#~ "```"

#~ msgid ""
#~ "In the above example, you can even leave out the `*` in the `println!` "
#~ "statement thanks to `Deref`. "
#~ msgstr ""
#~ "En el ejemplo anterior, incluso puedes omitir `*` en la instrucci√≥n "
#~ "`println!` gracias a `Deref`. "

#~ msgid "Box with Recursive Data Structures"
#~ msgstr "Box con Estructuras de Datos Recursivos"

#~ msgid "`Cell` and `RefCell`"
#~ msgstr "`Cell` y `RefCell`"

#~ msgid ""
#~ "[`Cell`](https://doc.rust-lang.org/std/cell/struct.Cell.html) and "
#~ "[`RefCell`](https://doc.rust-lang.org/std/cell/struct.RefCell.html) "
#~ "implement what Rust calls _interior mutability:_ mutation of values in an "
#~ "immutable context."
#~ msgstr ""
#~ "[`Cell`](https://doc.rust-lang.org/std/cell/struct.Cell.html) y "
#~ "[`RefCell`](https://doc.rust-lang.org/std/cell/struct.RefCell.html) "
#~ "implementan lo que Rust llama _mutabilidad interna_: mutaci√≥n de valores "
#~ "en un contexto inmutable."

#~ msgid ""
#~ "`Cell` is typically used for simple types, as it requires copying or "
#~ "moving values. More complex interior types typically use `RefCell`, which "
#~ "tracks shared and exclusive references at runtime and panics if they are "
#~ "misused."
#~ msgstr ""
#~ "Normalmente, `Cell` se utiliza para tipos simples, ya que requiere copiar "
#~ "o mover valores. Los tipos internos m√°s complejos normalmente utilizan "
#~ "`RefCell`, que realiza un seguimiento de las referencias compartidas y "
#~ "exclusivas en tiempo de ejecuci√≥n y entra en p√°nico si se utilizan de "
#~ "forma incorrecta."

#~ msgid ""
#~ "If we were using `Cell` instead of `RefCell` in this example, we would "
#~ "have to move the `Node` out of the `Rc` to push children, then move it "
#~ "back in. This is safe because there's always one, un-referenced value in "
#~ "the cell, but it's not ergonomic."
#~ msgstr ""
#~ "Si estuvi√©ramos utilizando `Cell` en lugar de `RefCell` en este ejemplo, "
#~ "tendr√≠amos que mover el `Node` fuera del `Rc` para insertar hijos y luego "
#~ "volver a moverlo. Esto es seguro porque siempre hay un valor sin "
#~ "referenciar en la celda, pero no es ergon√≥mico."

#~ msgid ""
#~ "To do anything with a Node, you must call a `RefCell` method, usually "
#~ "`borrow` or `borrow_mut`."
#~ msgstr ""
#~ "Para hacer cualquier cosa con un Node, debes llamar a un m√©todo de "
#~ "`RefCell`, normalmente `borrow` o `borrow_mut`."

#~ msgid "Day 2: Afternoon Exercises"
#~ msgstr "D√≠a 2: Ejercicios de la Tarde"

#~ msgid ""
#~ "The exercises for this afternoon will focus on strings and iterators."
#~ msgstr ""
#~ "Los ejercicios de esta tarde se centrar√°n en las cadenas y los iteradores."

#~ msgid ""
#~ "The ownership model of Rust affects many APIs. An example of this is the "
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) and "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) traits."
#~ msgstr ""
#~ "El modelo de _ownership_ de Rust afecta a muchas APIs. Un ejemplo ser√≠an "
#~ "los traits [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator."
#~ "html) y [`IntoIterator`](https://doc.rust-lang.org/std/iter/trait."
#~ "IntoIterator.html)."

#~ msgid ""
#~ "Traits are like interfaces: they describe behavior (methods) for a type. "
#~ "The `Iterator` trait simply says that you can call `next` until you get "
#~ "`None` back:"
#~ msgstr ""
#~ "Los _traits_ son como las interfaces: describen el comportamiento "
#~ "(m√©todos) de un tipo. El trait `Iterator` indica que se puede llamar a "
#~ "`next` hasta que se obtenga `None`:"

#~ msgid "You use this trait like this:"
#~ msgstr "Utiliza este trait de la siguiente forma:"

#~ msgid "What is the type returned by the iterator? Test your answer here:"
#~ msgstr "¬øQu√© tipo devuelve el iterador? Prueba tu respuesta aqu√≠:"

#~ msgid "Why is this type used?"
#~ msgstr "¬øPor qu√© se usa este tipo?"

#~ msgid "Like before, what  is the type returned by the iterator?"
#~ msgstr "Al igual que antes, ¬øqu√© tipo devuelve el iterador?"

#~ msgid ""
#~ "Now that we know both `Iterator` and `IntoIterator`, we can build `for` "
#~ "loops. They call `into_iter()` on an expression and iterates over the "
#~ "resulting iterator:"
#~ msgstr ""
#~ "Ahora que conocemos `Iterator` e `IntoIterator`, podemos crear bucles "
#~ "`for`. Llaman a `into_iter()` sobre una expresi√≥n e iteran sobre el "
#~ "iterador resultante:"

#~ msgid ""
#~ "Experiment with the code above and then consult the documentation for "
#~ "[`impl IntoIterator for &Vec<T>`](https://doc.rust-lang.org/std/vec/"
#~ "struct.Vec.html#impl-IntoIterator-for-%26'a+Vec%3CT,+A%3E) and [`impl "
#~ "IntoIterator for Vec<T>`](https://doc.rust-lang.org/std/vec/struct.Vec."
#~ "html#impl-IntoIterator-for-Vec%3CT,+A%3E) to check your answers."
#~ msgstr ""
#~ "Experimenta con el c√≥digo anterior y consulta la documentaci√≥n sobre "
#~ "[`impl IntoIterator for &Vec<T>`](https://doc.rust-lang.org/std/vec/"
#~ "struct.Vec.html#impl-IntoIterator-for-%26'a+Vec%3CT,+A%3E) y sobre [`impl "
#~ "IntoIterator for Vec<T>`](https://doc.rust-lang.org/std/vec/struct.Vec."
#~ "html#impl-IntoIterator-for-Vec%3CT,+A%3E) para comprobar las respuestas."

#~ msgid ""
#~ "In this exercise, you are implementing a routing component of a web "
#~ "server. The server is configured with a number of _path prefixes_ which "
#~ "are matched against _request paths_. The path prefixes can contain a "
#~ "wildcard character which matches a full segment. See the unit tests below."
#~ msgstr ""
#~ "En este ejercicio se va a implementar un componente de enrutamiento de un "
#~ "servidor web. El servidor est√° configurado con un n√∫mero de _prefijos de "
#~ "ruta_ que se comparan con las _rutas de solicitud_. Los prefijos de ruta "
#~ "pueden contener un car√°cter comod√≠n que coincida con un segmento "
#~ "completo. Consulta las pruebas unitarias m√°s abajo."

#~ msgid ""
#~ "Traits: deriving traits, default methods, and important standard library "
#~ "traits."
#~ msgstr ""
#~ "_Traits_: derivaci√≥n de _traits_, m√©todos predeterminados y _traits_ "
#~ "importantes de la _standard library_ (biblioteca est√°ndar)."

#~ msgid ""
#~ "Generics: generic data types, generic methods, monomorphization, and "
#~ "trait objects."
#~ msgstr ""
#~ "_Generics_ (Gen√©ricos): tipos de datos gen√©ricos, m√©todos gen√©ricos, "
#~ "monomorfizaci√≥n y objetos de _traits_."

#~ msgid "Testing: unit tests, documentation tests, and integration tests."
#~ msgstr ""
#~ "Pruebas: pruebas unitarias, pruebas de documentaci√≥n y pruebas de "
#~ "integraci√≥n."

#~ msgid ""
#~ "Unsafe Rust: raw pointers, static variables, unsafe functions, and extern "
#~ "functions."
#~ msgstr ""
#~ "Rust inseguro: punteros sin formato, variables est√°ticas, funciones no "
#~ "seguras y funciones externas."

#~ msgid "Try declaring a new variable `let p = Point { x: 5, y: 10.0 };`."
#~ msgstr ""
#~ "Prueba a declarar una nueva variable `let p = Point { x: 5, y: 10.0 };`."

#~ msgid "Fix the code to allow points that have elements of different types."
#~ msgstr ""
#~ "Corrige el c√≥digo para permitir puntos que tengan elementos de distintos "
#~ "tipos."

#~ msgid "You can declare a generic type on your `impl` block:"
#~ msgstr "Puedes declarar un tipo gen√©rico en tu bloque `impl`:"

#~ msgid ""
#~ "Generic code is turned into non-generic code based on the call sites:"
#~ msgstr ""
#~ "El c√≥digo gen√©rico se convierte en c√≥digo no gen√©rico en funci√≥n de los "
#~ "sitios de llamada:"

#~ msgid "behaves as if you wrote"
#~ msgstr "se comporta como si se hubiera escrito"

#~ msgid ""
#~ "Rust derive macros work by automatically generating code that implements "
#~ "the specified traits for a data structure."
#~ msgstr ""
#~ "Las macros de derivaci√≥n de Rust funcionan generando autom√°ticamente "
#~ "c√≥digo que implementa los _traits_ especificados para una estructura de "
#~ "datos."

#~ msgid "You can let the compiler derive a number of traits as follows:"
#~ msgstr ""
#~ "Puedes dejar que el compilador derive una serie de _traits_ de la "
#~ "siguiente manera:"

#~ msgid "Traits can implement behavior in terms of other trait methods:"
#~ msgstr ""
#~ "Los _traits_ pueden implementar comportamientos en funci√≥n de otros "
#~ "m√©todos de _traits_:"

#~ msgid "Move method `not_equals` to a new trait `NotEquals`."
#~ msgstr "Mueve el m√©todo `not_equals` a un nuevo trait `NotEquals`."

#~ msgid "Make `Equals` a super trait for `NotEquals`."
#~ msgstr "Haz que `Equals` sea un supertrait para `NotEquals`."

#~ msgid ""
#~ "```rust,editable,compile_fail\n"
#~ "trait NotEquals: Equals {\n"
#~ "    fn not_equals(&self, other: &Self) -> bool {\n"
#~ "        !self.equals(other)\n"
#~ "    }\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable,compile_fail\n"
#~ "trait NotEquals: Equals {\n"
#~ "    fn not_equals(&self, other: &Self) -> bool {\n"
#~ "        !self.equals(other)\n"
#~ "    }\n"
#~ "}\n"
#~ "```"

#~ msgid "Provide a blanket implementation of `NotEquals` for `Equals`."
#~ msgstr ""
#~ "Proporciona una implementaci√≥n general de `NotEquals` para `Equals`."

#~ msgid ""
#~ "With the blanket implementation, you no longer need `Equals` as a super "
#~ "trait for `NotEqual`."
#~ msgstr ""
#~ "Con la implementaci√≥n general, ya no necesitas `Equals` como supertrait "
#~ "para `NotEqual`."

#~ msgid "`impl Trait` allows you to work with types which you cannot name."
#~ msgstr ""
#~ "`impl Trait` permite trabajar con tipos a los que no se les puede asignar "
#~ "un nombre."

#~ msgid ""
#~ "This example is great, because it uses `impl Display` twice. It helps to "
#~ "explain that nothing here enforces that it is _the same_ `impl Display` "
#~ "type. If we used a single  `T: Display`, it would enforce the constraint "
#~ "that input `T` and return `T` type are the same type. It would not work "
#~ "for this particular function, as the type we expect as input is likely "
#~ "not what `format!` returns. If we wanted to do the same via `: Display` "
#~ "syntax, we'd need two independent generic parameters."
#~ msgstr ""
#~ "Este ejemplo es fant√°stico porque usa `impl Display` dos veces. Nos ayuda "
#~ "explicar que no hay nada que obligue a que sea _el mismo_ tipo `impl "
#~ "Display`. Si se utiliza un solo `T: Display`, se aplicar√≠a la restricci√≥n "
#~ "de que el tipo de entrada `T` y el tipo de retorno `T` son iguales. No "
#~ "funcionar√≠a para esta funci√≥n en concreto, ya que el tipo que esperamos "
#~ "como entrada probablemente no sea el que devuelve `format!`. Si "
#~ "quisi√©ramos hacer lo mismo a trav√©s de la sintaxis `: Display`, "
#~ "necesitar√≠amos dos par√°metros gen√©ricos independientes."

#~ msgid ""
#~ "We will now look at some of the most common traits of the Rust standard "
#~ "library:"
#~ msgstr ""
#~ "A continuaci√≥n, veremos algunos de los _traits_ m√°s comunes de la "
#~ "biblioteca est√°ndar de Rust:"

#~ msgid ""
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) and "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) used in `for` loops,"
#~ msgstr ""
#~ "[`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) y "
#~ "[`IntoIterator`](https://doc.rust-lang.org/std/iter/trait.IntoIterator."
#~ "html) se usan en los bucles `for`."

#~ msgid ""
#~ "[`From`](https://doc.rust-lang.org/std/convert/trait.From.html) and "
#~ "[`Into`](https://doc.rust-lang.org/std/convert/trait.Into.html) used to "
#~ "convert values,"
#~ msgstr ""
#~ "[`From`](https://doc.rust-lang.org/std/convert/trait.From.html) y [`Into`]"
#~ "(https://doc.rust-lang.org/std/convert/trait.Into.html) se usan para "
#~ "convertir valores."

#~ msgid ""
#~ "[`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) and [`Write`]"
#~ "(https://doc.rust-lang.org/std/io/trait.Write.html) used for IO,"
#~ msgstr ""
#~ "[`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) y [`Write`]"
#~ "(https://doc.rust-lang.org/std/io/trait.Write.html) se usan para E/S."

#~ msgid ""
#~ "[`Add`](https://doc.rust-lang.org/std/ops/trait.Add.html), [`Mul`]"
#~ "(https://doc.rust-lang.org/std/ops/trait.Mul.html), ... used for operator "
#~ "overloading, and"
#~ msgstr ""
#~ "[`Add`](https://doc.rust-lang.org/std/ops/trait.Add.html), [`Mul`]"
#~ "(https://doc.rust-lang.org/std/ops/trait.Mul.html), ... se usan para "
#~ "sobrecargar operadores, y"

#~ msgid ""
#~ "[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) "
#~ "used to construct a default instance of a type."
#~ msgstr ""
#~ "[`Default`](https://doc.rust-lang.org/std/default/trait.Default.html) se "
#~ "usa para construir una instancia predeterminada de un tipo."

#~ msgid ""
#~ "`Iterator` implements `fn collect<B>(self) -> B where B: "
#~ "FromIterator<Self::Item>, Self: Sized`"
#~ msgstr ""
#~ "`Iterator` implementa `fn collect<B>(self) -> B where B: "
#~ "FromIterator<Self::Item>, Self: Sized`."

#~ msgid "`Add`, `Mul`, ..."
#~ msgstr "`Add`, `Mul`, etc."

#~ msgid "Day 3: Morning Exercises"
#~ msgstr "D√≠a 3: Ejercicios de la Ma√±ana"

#~ msgid ""
#~ "We will design a classical GUI library using traits and trait objects."
#~ msgstr ""
#~ "Dise√±aremos una biblioteca GUI cl√°sica de _traits_ y objetos _trait_."

#~ msgid ""
#~ "We will also look at enum dispatch with an exercise involving points and "
#~ "polygons."
#~ msgstr ""
#~ "Tambi√©n veremos la asignaci√≥n de enumeraciones con un ejercicio que "
#~ "involucra puntos y pol√≠gonos."

#~ msgid ""
#~ "Let us design a classical GUI library using our new knowledge of traits "
#~ "and trait objects."
#~ msgstr ""
#~ "Vamos a dise√±ar una biblioteca GUI cl√°sica con nuestro reci√©n adquirido "
#~ "conocimiento sobre _traits_ y objetos trait."

#~ msgid "We will have a number of widgets in our library:"
#~ msgstr "Tendremos varios widgets en nuestra biblioteca:"

#~ msgid "`Window`: has a `title` and contains other widgets."
#~ msgstr "`Window`: tiene un `title` y contiene otros widgets."

#~ msgid ""
#~ "`Button`: has a `label` and a callback function which is invoked when the "
#~ "button is pressed."
#~ msgstr ""
#~ "`Button`: tiene una `label` y una funci√≥n de retrollamada que se invoca "
#~ "cuando se pulsa el bot√≥n."

#~ msgid "`Label`: has a `label`."
#~ msgstr "`Label`: tiene una `label`."

#~ msgid "The widgets will implement a `Widget` trait, see below."
#~ msgstr ""
#~ "Los widgets implementar√°n un trait `Widget`, como se indica m√°s abajo."

#~ msgid ""
#~ "Copy the code below to <https://play.rust-lang.org/>, fill in the missing "
#~ "`draw_into` methods so that you implement the `Widget` trait:"
#~ msgstr ""
#~ "Copia el siguiente fragmento de c√≥digo en la p√°gina <https://play.rust-"
#~ "lang.org/> y rellena los m√©todos `draw_into` que faltan para implementar "
#~ "el trait `Widget`:"

#~ msgid "The output of the above program can be something simple like this:"
#~ msgstr "La salida del programa anterior puede ser algo sencillo como esto:"

#~ msgid ""
#~ "If you want to draw aligned text, you can use the [fill/alignment]"
#~ "(https://doc.rust-lang.org/std/fmt/index.html#fillalignment) formatting "
#~ "operators. In particular, notice how you can pad with different "
#~ "characters (here a `'/'`) and how you can control alignment:"
#~ msgstr ""
#~ "Si quieres trazar texto alineado, puedes usar los operadores de formato "
#~ "[relleno/alineaci√≥n](https://doc.rust-lang.org/std/fmt/index."
#~ "html#fillalignment). En concreto, observa c√≥mo puedes rellenar con "
#~ "distintos caracteres (en este caso, `'/'`) y c√≥mo puedes controlar la "
#~ "alineaci√≥n:"

#~ msgid ""
#~ "Using such alignment tricks, you can for example produce output like this:"
#~ msgstr ""
#~ "Con estos trucos de alineaci√≥n puedes, por ejemplo, obtener resultados "
#~ "como el siguiente:"

#~ msgid "Polygon Struct"
#~ msgstr "Estructura de pol√≠gono"

#~ msgid ""
#~ "We will create a `Polygon` struct which contain some points. Copy the "
#~ "code below to <https://play.rust-lang.org/> and fill in the missing "
#~ "methods to make the tests pass:"
#~ msgstr ""
#~ "Crearemos una estructura `Polygon` que contenga algunos puntos. Copia el "
#~ "siguiente fragmento de c√≥digo en la p√°gina <https://play.rust-lang.org/> "
#~ "y rellena los m√©todos que faltan para pasar las pruebas:"

#~ msgid ""
#~ "Since the method signatures are missing from the problem statements, the "
#~ "key part of the exercise is to specify those correctly. You don't have to "
#~ "modify the tests."
#~ msgstr ""
#~ "Dado que faltan las firmas de los m√©todos en las instrucciones del "
#~ "problema, la parte clave del ejercicio consiste en especificarlas "
#~ "correctamente. No tienes que modificar las pruebas."

#~ msgid "Other interesting parts of the exercise:"
#~ msgstr "Otras partes interesantes del ejercicio:"

#~ msgid ""
#~ "Derive a `Copy` trait for some structs, as in tests the methods sometimes "
#~ "don't borrow their arguments."
#~ msgstr ""
#~ "Deriva un trait `Copy` en algunas estructuras, ya que, en las pruebas, "
#~ "los m√©todos a veces no toman prestados sus argumentos."

#~ msgid ""
#~ "Discover that `Add` trait must be implemented for two objects to be "
#~ "addable via \"+\". Note that we do not discuss generics until Day 3."
#~ msgstr ""
#~ "Descubrir que hay que implementar el trait `Add` para que se puedan "
#~ "a√±adir dos objetos mediante \"+\". Ten en cuenta que no hablaremos de los "
#~ "gen√©ricos hasta el d√≠a 3."

#~ msgid "Error handling in Rust is done using explicit control flow:"
#~ msgstr ""
#~ "La gesti√≥n de errores en Rust se realiza mediante un flujo de control "
#~ "expl√≠cito:"

#~ msgid "Functions that can have errors list this in their return type,"
#~ msgstr ""
#~ "Las funciones que pueden tener errores lo indican en su tipo de resultado "
#~ "devuelto."

#~ msgid "There are no exceptions."
#~ msgstr "No hay excepciones."

#~ msgid "Catching the Stack Unwinding"
#~ msgstr "Capturar el Desenrrollado de la _Stack_"

#~ msgid ""
#~ "We have already seen the `Result` enum. This is used pervasively when "
#~ "errors are expected as part of normal operation:"
#~ msgstr ""
#~ "Ya hemos visto la _enum_ `Result`. Se utiliza normalmente cuando se "
#~ "esperan errores como parte del funcionamiento normal:"

#~ msgid "Propagating Errors with `?`"
#~ msgstr "Propagar errores con `?`"

#~ msgid ""
#~ "The try-operator `?` is used to return errors to the caller. It lets you "
#~ "turn the common"
#~ msgstr ""
#~ "El operador try `?` se utiliza para devolver errores al llamador. Te "
#~ "permite convertir"

#~ msgid ""
#~ "The return type of the function has to be compatible with the nested "
#~ "functions it calls. For instance, a function returning a `Result<T, Err>` "
#~ "can only apply the `?` operator on a function returning a  `Result<AnyT, "
#~ "Err>`. It cannot apply the `?` operator on a function returning an "
#~ "`Option<AnyT>` or `Result<T, OtherErr>` unless `OtherErr` implements "
#~ "`From<Err>`. Reciprocally, a function returning an `Option<T>` can only "
#~ "apply the `?` operator  on a function returning an `Option<AnyT>`."
#~ msgstr ""
#~ "El tipo de resultado de la funci√≥n tiene que ser compatible con las "
#~ "funciones anidadas que llama. Por ejemplo, una funci√≥n que devuelve un "
#~ "`Result<T, Err>` solo puede aplicar el operador `?` a una funci√≥n que "
#~ "devuelve un `Result<AnyT, Err>`. No puede aplicar el operador `?` a una "
#~ "funci√≥n que devuelve un `Option<AnyT>` o `Result<T, OtherErr>` a menos "
#~ "que `OtherErr` implemente `From<Err>`. Rec√≠procamente, una funci√≥n que "
#~ "devuelve un `Option<T>` solo puede aplicar el operador `?` a una funci√≥n "
#~ "que devuelve un `Option<AnyT>`."

#~ msgid ""
#~ "You can convert incompatible types into one another with the different "
#~ "`Option` and `Result` methods  such as `Option::ok_or`, `Result::ok`, "
#~ "`Result::err`."
#~ msgstr ""
#~ "Puedes convertir tipos incompatibles entre s√≠ con los distintos m√©todos "
#~ "de `Option` y `Result` como `Option::ok_or`, `Result::ok`, `Result::err`."

#~ msgid ""
#~ "It is good practice for all error types that don't need to be `no_std` to "
#~ "implement `std::error::Error`, which requires `Debug` and `Display`. The "
#~ "`Error` crate for `core` is only available in [nightly](https://github."
#~ "com/rust-lang/rust/issues/103765), so not fully `no_std` compatible yet."
#~ msgstr ""
#~ "Se recomienda que todos los tipos de errores que no necesitan ser "
#~ "`no_std` implementen `std::error::Error`, que requiere `Debug` y "
#~ "`Display`. El crate `Error` para `core` solo est√° disponible en [nightly]"
#~ "(https://github.com/rust-lang/rust/issues/103765), por lo que a√∫n no es "
#~ "totalmente compatible con `no_std`."

#~ msgid ""
#~ "It's generally helpful for them to implement `Clone` and `Eq` too where "
#~ "possible, to make life easier for tests and consumers of your library. In "
#~ "this case we can't easily do so, because `io::Error` doesn't implement "
#~ "them."
#~ msgstr ""
#~ "Por lo general, es √∫til que tambi√©n implementen `Clone` y `Eq`, siempre "
#~ "que sea posible, para facilitar las cosas a las pruebas y a los "
#~ "consumidores de tu biblioteca. En este caso, no podemos hacerlo de forma "
#~ "sencilla porque `io::Error` no los implementa."

#~ msgid ""
#~ "`thiserror`'s derive macro automatically implements `std::error::Error`, "
#~ "and optionally `Display` (if the `#[error(...)]` attributes are provided) "
#~ "and `From` (if the `#[from]` attribute is added). It also works for "
#~ "structs."
#~ msgstr ""
#~ "La macro de derivaci√≥n de `thiserror` implementa autom√°ticamente `std::"
#~ "error::Error` y, de forma opcional, `Display` (si se proporcionan los "
#~ "atributos `#[error(...)]`) y `From` (si se a√±ade el atributo `#[from]`). "
#~ "Tambi√©n funciona con estructuras."

#~ msgid ""
#~ "It doesn't affect your public API, which makes it good for libraries."
#~ msgstr ""
#~ "No afecta a tu API p√∫blica, lo que la hace id√≥nea para las bibliotecas."

#~ msgid ""
#~ "The widely used [anyhow](https://docs.rs/anyhow/) crate can help you add "
#~ "contextual information to your errors and allows you to have fewer custom "
#~ "error types:"
#~ msgstr ""
#~ "El crate [anyhow](https://docs.rs/anyhow/), que se utiliza con "
#~ "frecuencia, puede ayudar a a√±adir informaci√≥n contextual a los errores y "
#~ "permite tener menos tipos de errores personalizados:"

#~ msgid "Mark unit tests with `#[test]`:"
#~ msgstr "Marca pruebas unitarias con `#[test]`:"

#~ msgid "Use `cargo test` to find and run the unit tests."
#~ msgstr "Busca y ejecuta las pruebas unitarias con `cargo test`."

#~ msgid ""
#~ "Unit tests are often put in a nested module (run tests on the [Playground]"
#~ "(https://play.rust-lang.org/)):"
#~ msgstr ""
#~ "Las pruebas unitarias se suelen incluir en un m√≥dulo anidado (ejecuta las "
#~ "pruebas en el [_Playground_](https://play.rust-lang.org/)):"

#~ msgid "Useful crates for writing tests"
#~ msgstr "Crates √∫tiles para escribir pruebas"

#~ msgid "Calling External Code"
#~ msgstr "Llamar a c√≥digo externo"

#~ msgid ""
#~ "Functions from other languages might violate the guarantees of Rust. "
#~ "Calling them is thus unsafe:"
#~ msgstr ""
#~ "Es posible que las funciones de otros lenguajes infrinjan las garant√≠as "
#~ "de Rust. Por lo tanto, no es seguro llamarlas:"

#~ msgid "Day 3: Afternoon Exercises"
#~ msgstr "D√≠a 3: ejercicios de la tarde"

#~ msgid "Let us build a safe wrapper for reading directory content!"
#~ msgstr ""
#~ "Vamos a crear un envoltorio seguro para leer el contenido del directorio."

#~ msgid ""
#~ "For this exercise, we suggest using a local dev environment instead of "
#~ "the Playground. This will allow you to run your binary on your own "
#~ "machine."
#~ msgstr ""
#~ "Para este ejercicio, recomendamos utilizar un entorno de desarrollo "
#~ "local, en lugar del playground. De este modo, podr√°s ejecutar tu binario "
#~ "en tu propia m√°quina."

#~ msgid ""
#~ "To get started, follow the [running locally](../../cargo/running-locally."
#~ "md) instructions."
#~ msgstr ""
#~ "Para empezar, sigue las instrucciones para [ejecutar a nivel local](../../"
#~ "cargo/running-locally.md)."

#~ msgid ""
#~ "After looking at the exercise, you can look at the [solution](solutions-"
#~ "afternoon.md) provided."
#~ msgstr ""
#~ "Despu√©s de realizar el ejercicio, puedes consultar la [soluci√≥n]"
#~ "(solutions-afternoon.md) proporcionada."

#~ msgid ""
#~ "```javascript\n"
#~ "rust_binary {\n"
#~ "    name: \"hello_rust_with_dep\",\n"
#~ "    crate_name: \"hello_rust_with_dep\",\n"
#~ "    srcs: [\"src/main.rs\"],\n"
#~ "    rustlibs: [\n"
#~ "        \"libgreetings\",\n"
#~ "        \"libtextwrap\",\n"
#~ "    ],\n"
#~ "    prefer_rlib: true,\n"
#~ "}\n"
#~ "\n"
#~ "rust_library {\n"
#~ "    name: \"libgreetings\",\n"
#~ "    crate_name: \"greetings\",\n"
#~ "    srcs: [\"src/lib.rs\"],\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```javascript\n"
#~ "rust_binary {\n"
#~ "    name: \"hello_rust_with_dep\",\n"
#~ "    crate_name: \"hello_rust_with_dep\",\n"
#~ "    srcs: [\"src/main.rs\"],\n"
#~ "    rustlibs: [\n"
#~ "        \"libgreetings\",\n"
#~ "        \"libtextwrap\",\n"
#~ "    ],\n"
#~ "    prefer_rlib: true,\n"
#~ "}\n"
#~ "\n"
#~ "rust_library {\n"
#~ "    name: \"libgreetings\",\n"
#~ "    crate_name: \"greetings\",\n"
#~ "    srcs: [\"src/lib.rs\"],\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```rust,ignore\n"
#~ "//! Rust demo.\n"
#~ "\n"
#~ "use greetings::greeting;\n"
#~ "use textwrap::fill;\n"
#~ "\n"
#~ "/// Prints a greeting to standard output.\n"
#~ "fn main() {\n"
#~ "    println!(\"{}\", fill(&greeting(\"Bob\"), 24));\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,ignore\n"
#~ "//! Rust demo.\n"
#~ "\n"
#~ "use greetings::greeting;\n"
#~ "use textwrap::fill;\n"
#~ "\n"
#~ "/// Imprime un saludo en una salida est√°ndar.\n"
#~ "fn main() {\n"
#~ "    println!(\"{}\", fill(&greeting(\"Bob\"), 24));\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```rust,ignore\n"
#~ "//! Greeting library.\n"
#~ "\n"
#~ "/// Greet `name`.\n"
#~ "pub fn greeting(name: &str) -> String {\n"
#~ "    format!(\"Hello {name}, it is very nice to meet you!\")\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,ignore\n"
#~ "//! Greeting library.\n"
#~ "\n"
#~ "/// Saludar a `name`.\n"
#~ "pub fn greeting(name: &str) -> String {\n"
#~ "    format!(\"Hello {name}, it is very nice to meet you!\")\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```java\n"
#~ "package com.example.birthdayservice;\n"
#~ "\n"
#~ "/** Birthday service interface. */\n"
#~ "interface IBirthdayService {\n"
#~ "    /** Generate a Happy Birthday message. */\n"
#~ "    String wishHappyBirthday(String name, int years);\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```java\n"
#~ "package com.example.birthdayservice;\n"
#~ "\n"
#~ "/** Birthday service interface. */\n"
#~ "interface IBirthdayService {\n"
#~ "    /** Generate a Happy Birthday message. */\n"
#~ "    String wishHappyBirthday(String name, int years);\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```javascript\n"
#~ "aidl_interface {\n"
#~ "    name: \"com.example.birthdayservice\",\n"
#~ "    srcs: [\"com/example/birthdayservice/*.aidl\"],\n"
#~ "    unstable: true,\n"
#~ "    backend: {\n"
#~ "        rust: { // Rust is not enabled by default\n"
#~ "            enabled: true,\n"
#~ "        },\n"
#~ "    },\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```javascript\n"
#~ "aidl_interface {\n"
#~ "    name: \"com.example.birthdayservice\",\n"
#~ "    srcs: [\"com/example/birthdayservice/*.aidl\"],\n"
#~ "    unstable: true,\n"
#~ "    backend: {\n"
#~ "        rust: { // Rust is not enabled by default\n"
#~ "            enabled: true,\n"
#~ "        },\n"
#~ "    },\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "At this point, the instructor should switch to the [CXX tutorial](https://"
#~ "cxx.rs/tutorial.html)."
#~ msgstr ""
#~ "En este punto, el instructor deber√≠a cambiar al [tutorial de CXX](https://"
#~ "cxx.rs/tutorial.html)."

#~ msgid "Walk the students through the tutorial step by step."
#~ msgstr "Gu√≠a a los estudiantes a trav√©s del tutorial paso a paso."

#~ msgid ""
#~ "Highlight how CXX presents a clean interface without unsafe code in _both "
#~ "languages_."
#~ msgstr ""
#~ "Destaca c√≥mo CXX presenta una interfaz limpia sin c√≥digo inseguro en "
#~ "_ambos lenguajes_."

#~ msgid ""
#~ "Explain how a Rust `String` cannot map to a C++ `std::string` (the latter "
#~ "does not uphold the UTF-8 invariant). Show that despite being different "
#~ "types, `rust::String` in C++ can be easily constructed from a C++ `std::"
#~ "string`, making it very ergonomic to use."
#~ msgstr ""
#~ "Explica que una `String` de Rust no puede asignarse a una `std::string` "
#~ "de C++ (esta √∫ltima no mantiene la invariante UTF-8). Muestra que, a "
#~ "pesar de ser tipos diferentes, `rust::String` en C++ se puede construir "
#~ "f√°cilmente a partir de una `std::string` de C++, lo que la hace muy "
#~ "ergon√≥mica de usar."

#~ msgid ""
#~ "Explain that a Rust function returning `Result<T, E>` becomes a function "
#~ "which throws a `E` exception in C++ (and vice versa)."
#~ msgstr ""
#~ "Explica que una funci√≥n de Rust que devuelve `Result<T, E>` se convierte "
#~ "en una funci√≥n que lanza una excepci√≥n `E` en C++ (y viceversa)."

#~ msgid ""
#~ "```bash\n"
#~ "sudo apt install gcc-aarch64-linux-gnu gdb-multiarch libudev-dev picocom "
#~ "pkg-config qemu-system-arm\n"
#~ "rustup update\n"
#~ "rustup target add aarch64-unknown-none thumbv7em-none-eabihf\n"
#~ "rustup component add llvm-tools-preview\n"
#~ "cargo install cargo-binutils cargo-embed\n"
#~ "```"
#~ msgstr ""
#~ "```bash\n"
#~ "sudo apt install gcc-aarch64-linux-gnu gdb-multiarch libudev-dev picocom "
#~ "pkg-config qemu-system-arm\n"
#~ "rustup update\n"
#~ "rustup target add aarch64-unknown-none thumbv7em-none-eabihf\n"
#~ "rustup component add llvm-tools-preview\n"
#~ "cargo install cargo-binutils cargo-embed\n"
#~ "```"

#~ msgid ""
#~ "```bash\n"
#~ "echo 'SUBSYSTEM==\"usb\", ATTR{idVendor}==\"0d28\", MODE=\"0664\", "
#~ "GROUP=\"plugdev\"' |\\\n"
#~ "  sudo tee /etc/udev/rules.d/50-microbit.rules\n"
#~ "sudo udevadm control --reload-rules\n"
#~ "```"
#~ msgstr ""
#~ "```bash\n"
#~ "echo 'SUBSYSTEM==\"usb\", ATTR{idVendor}==\"0d28\", MODE=\"0664\", "
#~ "GROUP=\"plugdev\"' |\\\n"
#~ "  sudo tee /etc/udev/rules.d/50-microbit.rules\n"
#~ "sudo udevadm control --reload-rules\n"
#~ "```"

#~ msgid ""
#~ "```bash\n"
#~ "xcode-select --install\n"
#~ "brew install gdb picocom qemu\n"
#~ "brew install --cask gcc-aarch64-embedded\n"
#~ "rustup update\n"
#~ "rustup target add aarch64-unknown-none thumbv7em-none-eabihf\n"
#~ "rustup component add llvm-tools-preview\n"
#~ "cargo install cargo-binutils cargo-embed\n"
#~ "```"
#~ msgstr ""
#~ "```bash\n"
#~ "xcode-select --install\n"
#~ "brew install gdb picocom qemu\n"
#~ "brew install --cask gcc-aarch64-embedded\n"
#~ "rustup update\n"
#~ "rustup target add aarch64-unknown-none thumbv7em-none-eabihf\n"
#~ "rustup component add llvm-tools-preview\n"
#~ "cargo install cargo-binutils cargo-embed\n"
#~ "```"

#~ msgid ""
#~ "```rust,editable,compile_fail\n"
#~ "#![no_main]\n"
#~ "#![no_std]\n"
#~ "\n"
#~ "use core::panic::PanicInfo;\n"
#~ "\n"
#~ "#[panic_handler]\n"
#~ "fn panic(_panic: &PanicInfo) -> ! {\n"
#~ "    loop {}\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable,compile_fail\n"
#~ "#![no_main]\n"
#~ "#![no_std]\n"
#~ "\n"
#~ "use core::panic::PanicInfo;\n"
#~ "\n"
#~ "#[panic_handler]\n"
#~ "fn panic(_panic: &PanicInfo) -> ! {\n"
#~ "    loop {}\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```rust,editable,compile_fail\n"
#~ "#![no_main]\n"
#~ "#![no_std]\n"
#~ "\n"
#~ "extern crate alloc;\n"
#~ "extern crate panic_halt as _;\n"
#~ "\n"
#~ "use alloc::string::ToString;\n"
#~ "use alloc::vec::Vec;\n"
#~ "use buddy_system_allocator::LockedHeap;\n"
#~ "\n"
#~ "#[global_allocator]\n"
#~ "static HEAP_ALLOCATOR: LockedHeap<32> = LockedHeap::<32>::new();\n"
#~ "\n"
#~ "static mut HEAP: [u8; 65536] = [0; 65536];\n"
#~ "\n"
#~ "pub fn entry() {\n"
#~ "    // Safe because `HEAP` is only used here and `entry` is only called "
#~ "once.\n"
#~ "    unsafe {\n"
#~ "        // Give the allocator some memory to allocate.\n"
#~ "        HEAP_ALLOCATOR\n"
#~ "            .lock()\n"
#~ "            .init(HEAP.as_mut_ptr() as usize, HEAP.len());\n"
#~ "    }\n"
#~ "\n"
#~ "    // Now we can do things that require heap allocation.\n"
#~ "    let mut v = Vec::new();\n"
#~ "    v.push(\"A string\".to_string());\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable,compile_fail\n"
#~ "#![no_main]\n"
#~ "#![no_std]\n"
#~ "\n"
#~ "extern crate alloc;\n"
#~ "extern crate panic_halt as _;\n"
#~ "\n"
#~ "use alloc::string::ToString;\n"
#~ "use alloc::vec::Vec;\n"
#~ "use buddy_system_allocator::LockedHeap;\n"
#~ "\n"
#~ "#[global_allocator]\n"
#~ "static HEAP_ALLOCATOR: LockedHeap<32> = LockedHeap::<32>::new();\n"
#~ "\n"
#~ "static mut HEAP: [u8; 65536] = [0; 65536];\n"
#~ "\n"
#~ "pub fn entry() {\n"
#~ "    // Safe because `HEAP` is only used here and `entry` is only called "
#~ "once.\n"
#~ "    unsafe {\n"
#~ "        // Give the allocator some memory to allocate.\n"
#~ "        HEAP_ALLOCATOR\n"
#~ "            .lock()\n"
#~ "            .init(HEAP.as_mut_ptr() as usize, HEAP.len());\n"
#~ "    }\n"
#~ "\n"
#~ "    // Ahora podemos hacer cosas que requieran asignaci√≥n de _heap_.\n"
#~ "    let mut v = Vec::new();\n"
#~ "    v.push(\"A string\".to_string());\n"
#~ "}\n"
#~ "```"

#~ msgid "SWD"
#~ msgstr "SWD"

#~ msgid "GDB stub and Microsoft "
#~ msgstr "GDB stub y el servidor "

#~ msgid "DAP"
#~ msgstr "DAP"

#~ msgid " server"
#~ msgstr " de Microsoft"

#~ msgid ""
#~ "`cargo-embed` is a cargo subcommand to build and flash binaries, log "
#~ msgstr ""
#~ "`cargo-embed` es un subcomando de Cargo para compilar e instalar "
#~ "binarios, registrar salidas "

#~ msgid "RTT"
#~ msgstr "TTR"

#~ msgid "HVC"
#~ msgstr "HVC"

#~ msgid " to tell the firmware to power off the system:"
#~ msgstr " para decirle al firmware que apague el sistema:"

#~ msgid ""
#~ "```shell\n"
#~ "cargo add thiserror\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "cargo add thiserror\n"
#~ "```"

#~ msgid ""
#~ "```rust,compile_fail\n"
#~ "use reqwest::{blocking::Client, Url};\n"
#~ "use scraper::{Html, Selector};\n"
#~ "use thiserror::Error;\n"
#~ "\n"
#~ "#[derive(Error, Debug)]\n"
#~ "enum Error {\n"
#~ "    #[error(\"request error: {0}\")]\n"
#~ "    ReqwestError(#[from] reqwest::Error),\n"
#~ "    #[error(\"bad http response: {0}\")]\n"
#~ "    BadResponse(String),\n"
#~ "}\n"
#~ "\n"
#~ "#[derive(Debug)]\n"
#~ "struct CrawlCommand {\n"
#~ "    url: Url,\n"
#~ "    extract_links: bool,\n"
#~ "}\n"
#~ "\n"
#~ "fn visit_page(client: &Client, command: &CrawlCommand) -> "
#~ "Result<Vec<Url>, Error> {\n"
#~ "    println!(\"Checking {:#}\", command.url);\n"
#~ "    let response = client.get(command.url.clone()).send()?;\n"
#~ "    if !response.status().is_success() {\n"
#~ "        return Err(Error::BadResponse(response.status().to_string()));\n"
#~ "    }\n"
#~ "\n"
#~ "    let mut link_urls = Vec::new();\n"
#~ "    if !command.extract_links {\n"
#~ "        return Ok(link_urls);\n"
#~ "    }\n"
#~ "\n"
#~ "    let base_url = response.url().to_owned();\n"
#~ "    let body_text = response.text()?;\n"
#~ "    let document = Html::parse_document(&body_text);\n"
#~ "\n"
#~ "    let selector = Selector::parse(\"a\").unwrap();\n"
#~ "    let href_values = document\n"
#~ "        .select(&selector)\n"
#~ "        .filter_map(|element| element.value().attr(\"href\"));\n"
#~ "    for href in href_values {\n"
#~ "        match base_url.join(href) {\n"
#~ "            Ok(link_url) => {\n"
#~ "                link_urls.push(link_url);\n"
#~ "            }\n"
#~ "            Err(err) => {\n"
#~ "                println!(\"On {base_url:#}: ignored unparsable {href:?}: "
#~ "{err}\");\n"
#~ "            }\n"
#~ "        }\n"
#~ "    }\n"
#~ "    Ok(link_urls)\n"
#~ "}\n"
#~ "\n"
#~ "fn main() {\n"
#~ "    let client = Client::new();\n"
#~ "    let start_url = Url::parse(\"https://www.google.org\").unwrap();\n"
#~ "    let crawl_command = CrawlCommand{ url: start_url, extract_links: "
#~ "true };\n"
#~ "    match visit_page(&client, &crawl_command) {\n"
#~ "        Ok(links) => println!(\"Links: {links:#?}\"),\n"
#~ "        Err(err) => println!(\"Could not extract links: {err:#}\"),\n"
#~ "    }\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,compile_fail\n"
#~ "use reqwest::{blocking::Client, Url};\n"
#~ "use scraper::{Html, Selector};\n"
#~ "use thiserror::Error;\n"
#~ "\n"
#~ "#[derive(Error, Debug)]\n"
#~ "enum Error {\n"
#~ "    #[error(\"request error: {0}\")]\n"
#~ "    ReqwestError(#[from] reqwest::Error),\n"
#~ "    #[error(\"bad http response: {0}\")]\n"
#~ "    BadResponse(String),\n"
#~ "}\n"
#~ "\n"
#~ "#[derive(Debug)]\n"
#~ "struct CrawlCommand {\n"
#~ "    url: Url,\n"
#~ "    extract_links: bool,\n"
#~ "}\n"
#~ "\n"
#~ "fn visit_page(client: &Client, command: &CrawlCommand) -> "
#~ "Result<Vec<Url>, Error> {\n"
#~ "    println!(\"Checking {:#}\", command.url);\n"
#~ "    let response = client.get(command.url.clone()).send()?;\n"
#~ "    if !response.status().is_success() {\n"
#~ "        return Err(Error::BadResponse(response.status().to_string()));\n"
#~ "    }\n"
#~ "\n"
#~ "    let mut link_urls = Vec::new();\n"
#~ "    if !command.extract_links {\n"
#~ "        return Ok(link_urls);\n"
#~ "    }\n"
#~ "\n"
#~ "    let base_url = response.url().to_owned();\n"
#~ "    let body_text = response.text()?;\n"
#~ "    let document = Html::parse_document(&body_text);\n"
#~ "\n"
#~ "    let selector = Selector::parse(\"a\").unwrap();\n"
#~ "    let href_values = document\n"
#~ "        .select(&selector)\n"
#~ "        .filter_map(|element| element.value().attr(\"href\"));\n"
#~ "    for href in href_values {\n"
#~ "        match base_url.join(href) {\n"
#~ "            Ok(link_url) => {\n"
#~ "                link_urls.push(link_url);\n"
#~ "            }\n"
#~ "            Err(err) => {\n"
#~ "                println!(\"On {base_url:#}: ignored unparsable {href:?}: "
#~ "{err}\");\n"
#~ "            }\n"
#~ "        }\n"
#~ "    }\n"
#~ "    Ok(link_urls)\n"
#~ "}\n"
#~ "\n"
#~ "fn main() {\n"
#~ "    let client = Client::new();\n"
#~ "    let start_url = Url::parse(\"https://www.google.org\").unwrap();\n"
#~ "    let crawl_command = CrawlCommand{ url: start_url, extract_links: "
#~ "true };\n"
#~ "    match visit_page(&client, &crawl_command) {\n"
#~ "        Ok(links) => println!(\"Links: {links:#?}\"),\n"
#~ "        Err(err) => println!(\"Could not extract links: {err:#}\"),\n"
#~ "    }\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```shell\n"
#~ "cargo run\n"
#~ "```"
#~ msgstr ""
#~ "```shell\n"
#~ "cargo run\n"
#~ "```"

#~ msgid ""
#~ "```rust,editable,compile_fail\n"
#~ "use futures::executor::block_on;\n"
#~ "\n"
#~ "async fn count_to(count: i32) {\n"
#~ "    for i in 1..=count {\n"
#~ "        println!(\"Count is: {i}!\");\n"
#~ "    }\n"
#~ "}\n"
#~ "\n"
#~ "async fn async_main(count: i32) {\n"
#~ "    count_to(count).await;\n"
#~ "}\n"
#~ "\n"
#~ "fn main() {\n"
#~ "    block_on(async_main(10));\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable,compile_fail\n"
#~ "use futures::executor::block_on;\n"
#~ "\n"
#~ "async fn count_to(count: i32) {\n"
#~ "    for i in 1..=count {\n"
#~ "        println!(\"Count is: {i}!\");\n"
#~ "    }\n"
#~ "}\n"
#~ "\n"
#~ "async fn async_main(count: i32) {\n"
#~ "    count_to(count).await;\n"
#~ "}\n"
#~ "\n"
#~ "fn main() {\n"
#~ "    block_on(async_main(10));\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "When you await a future, all local variables (that would ordinarily be "
#~ "stored on a stack frame) are instead stored in the Future for the current "
#~ "async block. If your future has pointers to data on the stack, those "
#~ "pointers might get invalidated. This is unsafe."
#~ msgstr ""
#~ "Cuando esperas un futuro, todas las variables locales (que normalmente se "
#~ "almacenar√≠an en un marco de pila) se almacenan en el futuro del bloque "
#~ "as√≠ncrono. Si tu futuro tiene punteros en datos de la pila, podr√≠an "
#~ "invalidarse. Es una acci√≥n insegura."

#~ msgid ""
#~ "Therefore, you must guarantee that the addresses your future points to "
#~ "don't change. That is why we need to `pin` futures. Using the same future "
#~ "repeatedly in a `select!` often leads to issues with pinned values."
#~ msgstr ""
#~ "Por lo tanto, debes asegurarte de que las direcciones a las que apunta el "
#~ "futuro no cambien. Por ese motivo debemos fijar (`pin`) los futuros. Si "
#~ "se usa el mismo futuro varias veces en un `select!`, se suelen producir "
#~ "problemas en los valores fijados."

#~ msgid "You will find solutions to the exercises on the following pages."
#~ msgstr ""
#~ "En las p√°ginas siguientes encontrar√°s las soluciones a los ejercicios."

#~ msgid ""
#~ "Feel free to ask questions about the solutions [on GitHub](https://github."
#~ "com/google/comprehensive-rust/discussions). Let us know if you have a "
#~ "different or better solution than what is presented here."
#~ msgstr ""
#~ "No dudes en hacer preguntas sobre las soluciones [en GitHub](https://"
#~ "github.com/google/comprehensive-rust/discussions). Ponte en contacto con "
#~ "nosotros si tienes una soluci√≥n distinta o mejor de la que se presenta "
#~ "aqu√≠."

#~ msgid ""
#~ "**Note:** Please ignore the `// ANCHOR: label` and `// ANCHOR_END: label` "
#~ "comments you see in the solutions. They are there to make it possible to "
#~ "re-use parts of the solutions as the exercises."
#~ msgstr ""
#~ "**Nota:** Ignora los comentarios `// ANCHOR: label` y `// ANCHOR_END: "
#~ "label` que aparecen en las soluciones. Est√°n ah√≠ para que sea posible "
#~ "reutilizar algunas partes de las soluciones de los ejercicios."

#~ msgid "Day 1 Morning Exercises"
#~ msgstr "D√≠a 1: Ejercicios de la Ma√±ana"

#~ msgid "([back to exercise](for-loops.md))"
#~ msgstr "([Volver al ejercicio](for-loops.md))"

#~ msgid "Bonus question"
#~ msgstr "Pregunta extra"

#~ msgid ""
#~ "It requires more advanced concepts. It might seem that we could use a "
#~ "slice-of-slices (`&[&[i32]]`) as the input type to transpose and thus "
#~ "make our function handle any size of matrix. However, this quickly breaks "
#~ "down: the return type cannot be `&[&[i32]]` since it needs to own the "
#~ "data you return."
#~ msgstr ""
#~ "Requiere conceptos m√°s avanzados. Es posible que parezca que se puede "
#~ "utilizar un slice de slices (`&[&[i32]]`) como tipo de entrada para hacer "
#~ "una trasposici√≥n y as√≠ lograr que nuestra funci√≥n controle cualquier "
#~ "tama√±o de matriz. Sin embargo, esto se viene abajo r√°pidamente: el tipo "
#~ "de resultado devuelto no puede ser `&[&[i32]]`, ya que necesita ser el "
#~ "propietario de los datos que devuelve."

#~ msgid ""
#~ "You can attempt to use something like `Vec<Vec<i32>>`, but this doesn't "
#~ "work out-of-the-box either: it's hard to convert from `Vec<Vec<i32>>` to "
#~ "`&[&[i32]]` so now you cannot easily use `pretty_print` either."
#~ msgstr ""
#~ "Puedes probar a utilizar algo como `Vec<Vec<i32>>`, pero esto tampoco "
#~ "funciona desde el principio: es dif√≠cil cambiar de `Vec<Vec<i32>>` a "
#~ "`&[&[i32]]`, por lo que tampoco puedes usar `pretty_print` de forma "
#~ "sencilla."

#~ msgid ""
#~ "Once we get to traits and generics, we'll be able to use the [`std::"
#~ "convert::AsRef`](https://doc.rust-lang.org/std/convert/trait.AsRef.html) "
#~ "trait to abstract over anything that can be referenced as a slice."
#~ msgstr ""
#~ "Una vez que veamos los traits y los gen√©ricos, podremos usar el trait "
#~ "[`std::convert::AsRef`](https://doc.rust-lang.org/std/convert/trait.AsRef."
#~ "html) para abstraer cualquier elemento que se pueda referenciar, como un "
#~ "slice."

#~ msgid ""
#~ "In addition, the type itself would not enforce that the child slices are "
#~ "of the same length, so such variable could contain an invalid matrix."
#~ msgstr ""
#~ "Adem√°s, el propio tipo no requerir√≠a que los slices secundarios fueran de "
#~ "la misma longitud, por lo que dicha variable podr√≠a contener una matriz "
#~ "no v√°lida."

#~ msgid "Day 1 Afternoon Exercises"
#~ msgstr "D√≠a 1: Ejercicios de la Tarde"

#~ msgid "([back to exercise](luhn.md))"
#~ msgstr "([volver al ejercicio](luhn.md))"

#~ msgid "Pattern matching"
#~ msgstr "Correspondencia de Patrones"

#~ msgid "Day 2 Morning Exercises"
#~ msgstr "D√≠a 2: Ejercicios de la Ma√±ana"

#~ msgid "Designing a Library"
#~ msgstr "Dise√±ando una Librer√≠a"

#~ msgid "([back to exercise](book-library.md))"
#~ msgstr "([volver al ejercicio](book-library.md))"

#~ msgid "([back to exercise](strings-iterators.md))"
#~ msgstr "([volver al ejercicio](strings-iterators.md))"

#~ msgid "Day 3 Morning Exercise"
#~ msgstr "D√≠a 3: Ejercicios de la ma√±ana"

#~ msgid "([back to exercise](simple-gui.md))"
#~ msgstr "([volver al ejercicio](simple-gui.md))"

#~ msgid "Day 3 Afternoon Exercises"
#~ msgstr "D√≠a 3: Ejercicios de la Tarde"

#~ msgid "([back to exercise](safe-ffi-wrapper.md))"
#~ msgstr "([volver al ejercicio](safe-ffi-wrapper.md))"

#~ msgid "Extra Work in Modern C++"
#~ msgstr "Trabajo adicional en C++ moderno"

#~ msgid ""
#~ "[WebsocketStream::next()](https://docs.rs/tokio-websockets/0.3.2/"
#~ "tokio_websockets/proto/struct.WebsocketStream.html#method.next): for "
#~ "asynchronously reading messages from a Websocket Stream."
#~ msgstr ""
#~ "[WebsocketStream::next()](https://docs.rs/tokio-websockets/0.3.2/"
#~ "tokio_websockets/proto/struct.WebsocketStream.html#method.next): para la "
#~ "lectura as√≠ncrona de mensajes de un flujo WebSocket."

#~ msgid "Comparison"
#~ msgstr "Comparaci√≥n"

#~ msgid "The course is fast paced and covers a lot of ground:"
#~ msgstr "El curso es r√°pido y abarca muchos temas:"

#~ msgid ""
#~ "Depending on which abstraction (or combination of abstractions) you "
#~ "choose, can be a single unique pointer, reference counted, or atomically "
#~ "reference counted."
#~ msgstr ""
#~ "Dependiendo de la abstracci√≥n (o combinaci√≥n de abstracciones) que "
#~ "elijas, puede ser un solo puntero √∫nico, de referencia contada, o de "
#~ "referencia at√≥mica contada."

#~ msgid "Here is a rough comparison of the memory management techniques."
#~ msgstr ""
#~ "A continuaci√≥n, se muestra una comparaci√≥n aproximada de las t√©cnicas de "
#~ "gesti√≥n de la memoria."

#~ msgid "Pros of Different Memory Management Techniques"
#~ msgstr "Ventajas de las diferentes t√©cnicas de gesti√≥n de la memoria"

#~ msgid "Manual like C:"
#~ msgstr "Manual, como en C:"

#~ msgid "No runtime overhead."
#~ msgstr "Sin sobrecarga en _runtime_."

#~ msgid "Automatic like Java:"
#~ msgstr "Autom√°tica, como en Java:"

#~ msgid "Fully automatic."
#~ msgstr "Totalmente autom√°tica."

#~ msgid "Safe and correct."
#~ msgstr "Segura y correcta."

#~ msgid "Scope-based like C++:"
#~ msgstr "Basada en el √°mbito, como en C++:"

#~ msgid "Partially automatic."
#~ msgstr "Parcialmente autom√°tica."

#~ msgid "Compiler-enforced scope-based like Rust:"
#~ msgstr "Basada en el √°mbito e implementada por el compilador, como en Rust:"

#~ msgid "Enforced by compiler."
#~ msgstr "Implementada por el compilador."

#~ msgid "Cons of Different Memory Management Techniques"
#~ msgstr "Inconvenientes de las diferentes t√©cnicas de gesti√≥n de la memoria"

#~ msgid "Use-after-free."
#~ msgstr "Errores use-after-free."

#~ msgid "Double-frees."
#~ msgstr "Errores double free."

#~ msgid "Memory leaks."
#~ msgstr "P√©rdidas de memoria."

#~ msgid "Garbage collection pauses."
#~ msgstr "Pausas en la recolecci√≥n de memoria residual."

#~ msgid "Destructor delays."
#~ msgstr "Retrasos del destructor."

#~ msgid "Complex, opt-in by programmer (on C++)."
#~ msgstr "Compleja, habilitada por el programador (en C++)."

#~ msgid "Circular references can lead to memory leaks"
#~ msgstr "Las referencias circulares pueden provocar p√©rdidas de memoria."

#~ msgid "Potential runtime overhead"
#~ msgstr "Posible sobrecarga en _runtime_ "

#~ msgid "Compiler-enforced and scope-based like Rust:"
#~ msgstr "Implementada por el compilador y basada en el √°mbito, como en Rust:"

#~ msgid "Some upfront complexity."
#~ msgstr "Cierta complejidad inicial."

#~ msgid "Can reject valid programs."
#~ msgstr "Puede rechazar programas v√°lidos."

#~ msgid "Simple struct which tracks health statistics."
#~ msgstr ""
#~ "Estructura simple que hace un seguimiento de las estad√≠sticas de salud."

#~ msgid "Multiple structs and enums for a drawing library."
#~ msgstr "Varias estructuras y enumeraciones para una biblioteca de planos."

#~ msgid "Day 4 Morning"
#~ msgstr "D√≠a 4 Ma√±ana"

#~ msgid "On Day 4, we will cover Android-specific things such as:"
#~ msgstr "En el D√≠a 4, cubriremos cosas espec√≠ficas a Android como:"

#~ msgid "AIDL servers and clients."
#~ msgstr "Clientes y servidores AIDL. "

#~ msgid "Interoperability with C, C++, and Java."
#~ msgstr "Interoperabilidad con C, C++, y Java."

#~ msgid ""
#~ "It is important to note that this course does not cover Android "
#~ "**application**  development in Rust, and that the Android-specific parts "
#~ "are specifically about writing code for Android itself, the operating "
#~ "system. "
#~ msgstr ""
#~ "Es importante destacar que este curso no cubre desarrollo de "
#~ "**aplicaciones**  Android en Rust, y que las partes espec√≠ficas a Android "
#~ "son acerca de escribir c√≥digo para Android en s√≠, el sistema operativo. "

#~ msgid ""
#~ "Learn how to use async Rust --- we'll only mention async Rust when "
#~ "covering traditional concurrency primitives. Please see [Asynchronous "
#~ "Programming in Rust](https://rust-lang.github.io/async-book/) instead for "
#~ "details on this topic."
#~ msgstr ""
#~ "Aprender  c√≥mo usar Rust asincr√≥nico ‚Äîsolo mencionaremos Rust async "
#~ "cuando cubramos las primitivas de concurrencia tradicional. Por favor ver "
#~ "[Asynchronous Programming in Rust](https://rust-lang.github.io/async-"
#~ "book/) para m√°s detalles."

#~ msgid "Day 1: Basic Rust, ownership and the borrow checker."
#~ msgstr "D√≠a 1: Rust B√°sico, propiedad y chequeo de pr√©stamos."

#~ msgid "Day 4: Concurrency in Rust and interoperability with other languages"
#~ msgstr ""
#~ "D√≠a 4: Concurrencia en Rust e interoperatiblidad con otros lenguajes"

#~ msgid ""
#~ "**Exercise for Day 4:** Do you interface with some C/C++ code in your "
#~ "project which we could attempt to move to Rust? The fewer dependencies "
#~ "the better. Parsing code would be ideal."
#~ msgstr ""
#~ "**Ejecicio del D√≠a 4:** Comunicarte con alegan c√≥digo C/C++ en tu "
#~ "proyecto que podr√≠as migrar a Rust? Con menos dependencias es lo mejor. "
#~ "Parsear el c√≥digo ser√≠a lo ideal."

#~ msgid "Rustup (Recommended)"
#~ msgstr "Rustup (Recomendado)"

#~ msgid ""
#~ "You can follow the instructions to install cargo and rust compiler, among "
#~ "other standard ecosystem tools with the [rustup](https://rustup.rs/) "
#~ "tool, which is maintained by the Rust Foundation."
#~ msgstr ""
#~ "Puedes seguir las instrucciones para instalar cargo y el compilador de "
#~ "Rust, adem√°s de otras herramientas est√°ndar con la herramienta [rustup]"
#~ "(https://rust-analyzer.github.io/), que es mantenida por la Fundaci√≥n "
#~ "Rust."

#~ msgid "Package Managers"
#~ msgstr "Package Managers"

#~ msgid "}"
#~ msgstr "}"

#~ msgid ""
#~ "```\n"
#~ "```"
#~ msgstr ""
#~ "```\n"
#~ "```"

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    fizzbuzz_to(20);   // Defined below, no forward declaration needed\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn main() {\n"
#~ "    fizzbuzz_to(20);   // Definida abajo, no necesitas declararla antes\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "fn fizzbuzz(n: u32) -> () {  // No return value means returning the unit "
#~ "type `()` match (is_divisible_by(n, 3), is_divisible_by(n, 5)) { (true,  "
#~ "true)  => println!(\"fizzbuzz\"), (true,  false) => println!(\"fizz\"), "
#~ "(false, true)  => println!(\"buzz\"), (false, false) => println!"
#~ "(\"{n}\"), } }"
#~ msgstr ""
#~ "fn fizzbuzz(n: u32) -> () {  // No devolver valor implica devolver un "
#~ "tipo unit `()` match (is_divisible_by(n, 3), is_divisible_by(n, 5)) "
#~ "{ (true,  true)  => println!(\"fizzbuzz\"), (true,  false) => println!"
#~ "(\"fizz\"), (false, true)  => println!(\"buzz\"), (false, false) => "
#~ "println!(\"{n}\"), } }"

#~ msgid ""
#~ "fn fizzbuzz_to(n: u32) {  // `-> ()` is normally omitted for i in 1..=n "
#~ "{ fizzbuzz(i); } }"
#~ msgstr ""
#~ "fn fizzbuzz_to(n: u32) {  // `-> ()` por lo general se omite for i in 1.."
#~ "=n { fizzbuzz(i); } }"

#~ msgid ""
#~ "The `match` expression in `fizzbuzz()` is doing a lot of work. It is "
#~ "expanded below to show what is happening."
#~ msgstr "Los `match` en `fizzbuzz()` hacen mucho. Se detalla debajo."

#~ msgid "(Type annotations added for clarity, but they can be elided.)"
#~ msgstr "(Las anotaciones dan claridad, pero se pueden omitir)"

#~ msgid ""
#~ "```rust,editable\n"
#~ "fn pick_one<T>(a: T, b: T) -> T {\n"
#~ "    if std::process::id() % 2 == 0 { a } else { b }\n"
#~ "}\n"
#~ "```"
#~ msgstr ""
#~ "```rust,editable\n"
#~ "fn elegir_uno<T>(a: T, b: T) -> T {\n"
#~ "    if std::process::id() % 2 == 0 { a } else { b }\n"
#~ "}\n"
#~ "```"

#~ msgid ""
#~ "```\n"
#~ "print!(\"Iterating over range:\");\n"
#~ "for i in 0..3 {\n"
#~ "    print!(\" {}\", array[i]);\n"
#~ "}\n"
#~ "println!();\n"
#~ "```"
#~ msgstr ""
#~ "```\n"
#~ "print!(\"Iterando sobre el rango:\");\n"
#~ "for i in 0..3 {\n"
#~ "    print!(\" {}\", array[i]);\n"
#~ "}\n"
#~ "println!();\n"
#~ "```"

#~ msgid ""
#~ "Note that since `println!` is a macro, `x` is not moved, even using the "
#~ "function like syntax of `println!(\"x: {}\", x)`"
#~ msgstr ""
#~ "Nota que a partir que `println!` es una macro, `x` no se mueve, incluso "
#~ "usando una funci√≥n como `println!(\"x: {}\", x)`"

#~ msgid "Global state is managed with static and constant variables."
#~ msgstr "El estado global es manejado con variables est√°ticas y constantes."

#~ msgid "You can declare compile-time constants:"
#~ msgstr "Puedes declarar constantes en tiempo de compilaci√≥n:"

#~ msgid ""
#~ "fn main() { let digest = compute_digest(\"Hello\"); println!(\"Digest: "
#~ "{digest:?}\"); }"
#~ msgstr ""
#~ "fn main() { let digest = compute_digest(\"Hola\"); println!(\"Digest: "
#~ "{digest:?}\"); }"

#~ msgid "You can also declare static variables:"
#~ msgstr "Tambi√©n puedes declarar variables est√°ticas:"

#~ msgid ""
#~ "We will look at mutating static data in the [chapter on Unsafe Rust](../"
#~ "unsafe.md)."
#~ msgstr ""
#~ "Veremos cambiar datos est√°ticos en el [cap√≠tulo Rust No Seguro](../unsafe."
#~ "md)."

#~ msgid "Potential for use-after-free."
#~ msgstr "Potencial de use-after-free."

#~ msgid "The data was _moved_ from `s1` and `s1` is no longer accessible."
#~ msgstr "Los datos se mueven de `s1` y `s2` si no se accede m√°s."

#~ msgid ""
#~ "fn main() { let p1 = Point(3, 4); let p2 = Point(10, 20); let p3 = "
#~ "add(&p1, &p2); println!(\"&p3.0: {:p}\", &p3.0); println!(\"{p1:?} + "
#~ "{p2:?} = {p3:?}\"); }"
#~ msgstr ""
#~ "fn main() { let p1 = Point(3, 4); let p2 = Point(10, 20); let p3 = "
#~ "add(&p1, &p2); println!(\"&p3.0: {:p}\", &p3.0); println!(\"{p1:?} + "
#~ "{p2:?} = {p3:?}\"); }"

#~ msgid ""
#~ "```rust,ignore\n"
#~ "#[derive(Debug)]\n"
#~ "struct Point(i32, i32);\n"
#~ "```"
#~ msgstr ""
#~ "```rust,ignore\n"
#~ "#[derive(Debug)]\n"
#~ "struct Point(i32, i32);\n"
#~ "```"

#~ msgid "A small book library,"
#~ msgstr "Un peque√±o libro de biblioteca,"

#~ msgid "Iterators and ownership (hard)."
#~ msgstr "Iteradores y propiedad (dif√≠cil)."

#~ msgid ""
#~ "impl Book { // This is a constructor, used below. fn new(title: &str, "
#~ "year: u16) -> Book { Book { title: String::from(title), year, } } }"
#~ msgstr ""
#~ "impl Book { // Este es el constructor, usado debajo. fn new(title: &str, "
#~ "year: u16) -> Book { Book { title: String::from(title), year, } } }"

#~ msgid ""
#~ "// This makes it possible to print Book values with {}. impl std::fmt::"
#~ "Display for Book { fn fmt(&self, f: &mut std::fmt::Formatter\\<'\\_\\>) -"
#~ "> std::fmt::Result { write!(f, \"{} ({})\", self.title, self.year) } }"
#~ msgstr ""
#~ "// Esto hace posible imprimir valores del libro con {}. impl std::fmt::"
#~ "Display for Book { fn fmt(&self, f: &mut std::fmt::Formatter\\<'\\_\\>) -"
#~ "> std::fmt::Result { write!(f, \"{} ({})\", self.title, self.year) } }"

#~ msgid ""
#~ "// This shows the desired behavior. Uncomment the code below and // "
#~ "implement the missing methods. You will need to update the // method "
#~ "signatures, including the \"self\" parameter! You may // also need to "
#~ "update the variable bindings within main. fn main() { let library = "
#~ "Library::new();"
#~ msgstr ""
#~ "// Esto muestra el estado deseado. Descomenta el c√≥digo debajo e // "
#~ "implementa el m√©todo que falta. Puedes necesitar actualizar el  // signo "
#~ "del m√©todo, incluyendo el par√°metro \"self\". Tambi√©n fn main() { let "
#~ "library = Library::new();"

#~ msgid ""
#~ "impl Person { fn say_hello(&self) { println!(\"Hello, my name is {}\", "
#~ "self.name); } }"
#~ msgstr ""
#~ "impl Person { fn say_hello(&self) { println!(\"Hola, mi nombre es {}\", "
#~ "self.name); } }"
